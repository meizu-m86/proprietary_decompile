LOAD:00000000                               ;
LOAD:00000000                               ; +-------------------------------------------------------------------------+
LOAD:00000000                               ; |      This file was generated by The Interactive Disassembler (IDA)      |
LOAD:00000000                               ; |           Copyright (c) 2022 Hex-Rays, <support@hex-rays.com>           |
LOAD:00000000                               ; +-------------------------------------------------------------------------+
LOAD:00000000                               ;
LOAD:00000000                               ; Input SHA256 : 3E70F3D519EB734828A1DFF3C794B794ADC375A8EE7B48845703A0914284342C
LOAD:00000000                               ; Input MD5    : 6FACB90DC873E784AE32525C82F07F98
LOAD:00000000                               ; Input CRC32  : 414B2528
LOAD:00000000
LOAD:00000000                               ; File Name   : Z:\work\LineageOS\vendor\meizu\m86\proprietary\lib\hw\audio.primary.m86.so
LOAD:00000000                               ; Format      : ELF for ARM (Shared object)
LOAD:00000000                               ; Interpreter '/system/bin/linker'
LOAD:00000000                               ; Needed Library 'liblog.so'
LOAD:00000000                               ; Needed Library 'libcutils.so'
LOAD:00000000                               ; Needed Library 'libtinyalsa.so'
LOAD:00000000                               ; Needed Library 'libaudioutils.so'
LOAD:00000000                               ; Needed Library 'libexpat.so'
LOAD:00000000                               ; Needed Library 'libhardware_legacy.so'
LOAD:00000000                               ; Needed Library 'libdl.so'
LOAD:00000000                               ; Needed Library 'libtfa9890.so'
LOAD:00000000                               ; Needed Library 'libsitril-audio.so'
LOAD:00000000                               ; Needed Library 'libc++.so'
LOAD:00000000                               ; Needed Library 'libc.so'
LOAD:00000000                               ; Needed Library 'libm.so'
LOAD:00000000                               ; Shared Name 'audio.primary.m86.so'
LOAD:00000000                               ;
LOAD:00000000                               ; Options     : EF_ARM_SOFT_FLOAT
LOAD:00000000                               ; EABI version: 5
LOAD:00000000                               ;
LOAD:00000000
LOAD:00000000                               ; Processor       : ARM
LOAD:00000000                               ; ARM architecture: ARMv7
LOAD:00000000                               ; Target assembler: Generic assembler for ARM
LOAD:00000000                               ; Byte sex        : Little endian
LOAD:00000000
LOAD:00000000                               ; ===========================================================================
LOAD:00000000
LOAD:00000000                               ; Segment type: Pure code
LOAD:00000000                               AREA LOAD, CODE, ALIGN=12
LOAD:00000000                               CODE32
LOAD:00000000 7F 45 4C 46                   dword_0 DCD 0x464C457F        ; CODE XREF: sub_2F34+C↓j
LOAD:00000000                                                             ; DATA XREF: LOAD:000001B0↓o
LOAD:00000000                                                             ; LOAD:000001C0↓o
LOAD:00000000                                                             ; LOAD:000001D0↓o
LOAD:00000000                                                             ; LOAD:000001E0↓o
LOAD:00000000                                                             ; LOAD:000001F0↓o
LOAD:00000000                                                             ; LOAD:stru_200↓o
LOAD:00000000                                                             ; LOAD:00000210↓o
LOAD:00000000                                                             ; LOAD:00000220↓o
LOAD:00000000                                                             ; LOAD:00000230↓o
LOAD:00000000                                                             ; LOAD:00000240↓o
LOAD:00000000                                                             ; LOAD:00000250↓o
LOAD:00000000                                                             ; LOAD:00000260↓o
LOAD:00000000                                                             ; LOAD:00000270↓o
LOAD:00000000                                                             ; LOAD:00000280↓o ...
LOAD:00000000                                                             ; File format: \x7FELF
LOAD:00000004 01                            byte_4 DCB 1                  ; File class: 32-bit
LOAD:00000005 01                            DCB 1                         ; Data encoding: little-endian
LOAD:00000006 01                            DCB 1                         ; File version
LOAD:00000007 00                            DCB 0                         ; OS/ABI: UNIX System V ABI
LOAD:00000008 00                            DCB 0                         ; ABI Version
LOAD:00000009 00 00 00 00 00 00 00          DCB 0, 0, 0, 0, 0, 0, 0       ; Padding
LOAD:00000010 03 00                         word_10 DCW 3                 ; File type: Shared object
LOAD:00000012 28 00                         DCW 0x28                      ; Machine: ARM
LOAD:00000014 01 00 00 00                   DCD 1                         ; File version
LOAD:00000018 00 00 00 00                   DCD 0                         ; Entry point
LOAD:0000001C 34 00 00 00                   DCD 0x34                      ; PHT file offset
LOAD:00000020 A0 08 01 00                   DCD 0x108A0                   ; SHT file offset
LOAD:00000024 00 02 00 05                   DCD 0x5000200                 ; Processor-specific flags
LOAD:00000028 34 00                         DCW 0x34                      ; ELF header size
LOAD:0000002A 20 00                         DCW 0x20                      ; PHT entry size
LOAD:0000002C 09 00                         DCW 9                         ; Number of entries in PHT
LOAD:0000002E 28 00                         DCW 0x28                      ; SHT entry size
LOAD:00000030 1B 00                         DCW 0x1B                      ; Number of entries in SHT
LOAD:00000032 1A 00                         DCW 0x1A                      ; SHT entry index for string table
LOAD:00000034                               ; ELF32 Program Header
LOAD:00000034                               ; PHT Entry 0
LOAD:00000034 06 00 00 00                   dword_34 DCD 6                ; DATA XREF: LOAD:0000003C↓o
LOAD:00000034                                                             ; Type: PHDR
LOAD:00000038 34 00 00 00                   DCD 0x34                      ; File offset
LOAD:0000003C 34 00 00 00                   DCD dword_34                  ; Virtual address
LOAD:00000040 34 00 00 00                   DCD 0x34                      ; Physical address
LOAD:00000044 20 01 00 00                   DCD 0x120                     ; Size in file image
LOAD:00000048 20 01 00 00                   DCD 0x120                     ; Size in memory image
LOAD:0000004C 04 00 00 00                   DCD 4                         ; Flags
LOAD:00000050 04 00 00 00                   DCD 4                         ; Alignment
LOAD:00000054                               ; PHT Entry 1
LOAD:00000054 03 00 00 00                   DCD 3                         ; Type: INTERP
LOAD:00000058 54 01 00 00                   DCD 0x154                     ; File offset
LOAD:0000005C 54 01 00 00                   off_5C DCD aSystemBinLinke    ; DATA XREF: .data:00011450↓o
LOAD:0000005C                                                             ; .data:00011534↓o
LOAD:0000005C                                                             ; Virtual address
LOAD:00000060 54 01 00 00                   DCD 0x154                     ; Physical address
LOAD:00000064 13 00 00 00                   DCD 0x13                      ; Size in file image
LOAD:00000068 13 00 00 00                   DCD 0x13                      ; Size in memory image
LOAD:0000006C 04 00 00 00                   DCD 4                         ; Flags
LOAD:00000070 01 00 00 00                   dword_70 DCD 1                ; DATA XREF: .data:00011264↓o
LOAD:00000070                                                             ; Alignment
LOAD:00000074                               ; PHT Entry 2
LOAD:00000074 01 00 00 00                   DCD 1                         ; Type: LOAD
LOAD:00000078 00 00 00 00                   DCD 0                         ; File offset
LOAD:0000007C 00 00 00 00                   DCD 0                         ; Virtual address
LOAD:00000080 00 00 00 00                   dword_80 DCD 0                ; DATA XREF: .data:000111E0↓o
LOAD:00000080                                                             ; .data:00011324↓o
LOAD:00000080                                                             ; .data:00011384↓o
LOAD:00000080                                                             ; .data:000113E4↓o
LOAD:00000080                                                             ; .data:000114C8↓o
LOAD:00000080                                                             ; .data:0001154C↓o
LOAD:00000080                                                             ; .data:00011618↓o
LOAD:00000080                                                             ; Physical address
LOAD:00000084 88 F0 00 00                   DCD 0xF088                    ; Size in file image
LOAD:00000088 88 F0 00 00                   DCD 0xF088                    ; Size in memory image
LOAD:0000008C 05 00 00 00                   DCD 5                         ; Flags
LOAD:00000090 00 10 00 00                   dword_90 DCD 0x1000           ; DATA XREF: .data:00011198↓o
LOAD:00000090                                                             ; .data:0001148C↓o
LOAD:00000090                                                             ; Alignment
LOAD:00000094                               ; PHT Entry 3
LOAD:00000094 01 00 00 00                   DCD 1                         ; Type: LOAD
LOAD:00000098 68 F9 00 00                   DCD 0xF968                    ; File offset
LOAD:0000009C 68 09 01 00                   DCD off_10968                 ; Virtual address
LOAD:000000A0 68 09 01 00                   DCD 0x10968                   ; Physical address
LOAD:000000A4 60 0D 00 00                   DCD 0xD60                     ; Size in file image
LOAD:000000A8 79 0D 00 00                   DCD 0xD79                     ; Size in memory image
LOAD:000000AC 06 00 00 00                   DCD 6                         ; Flags
LOAD:000000B0 00 10 00 00                   DCD 0x1000                    ; Alignment
LOAD:000000B4                               ; PHT Entry 4
LOAD:000000B4 02 00 00 00                   DCD 2                         ; Type: DYNAMIC
LOAD:000000B8 4C FC 00 00                   DCD 0xFC4C                    ; File offset
LOAD:000000BC 4C 0C 01 00                   DCD stru_10C4C                ; Virtual address
LOAD:000000C0 4C 0C 01 00                   DCD 0x10C4C                   ; Physical address
LOAD:000000C4 48 01 00 00                   DCD 0x148                     ; Size in file image
LOAD:000000C8 48 01 00 00                   DCD 0x148                     ; Size in memory image
LOAD:000000CC 06 00 00 00                   DCD 6                         ; Flags
LOAD:000000D0 04 00 00 00                   DCD 4                         ; Alignment
LOAD:000000D4                               ; PHT Entry 5
LOAD:000000D4 04 00 00 00                   DCD 4                         ; Type: NOTE
LOAD:000000D8 68 01 00 00                   DCD 0x168                     ; File offset
LOAD:000000DC 68 01 00 00                   DCD dword_168                 ; Virtual address
LOAD:000000E0 68 01 00 00                   DCD 0x168                     ; Physical address
LOAD:000000E4 38 00 00 00                   DCD 0x38                      ; Size in file image
LOAD:000000E8 38 00 00 00                   DCD 0x38                      ; Size in memory image
LOAD:000000EC 04 00 00 00                   DCD 4                         ; Flags
LOAD:000000F0 04 00 00 00                   DCD 4                         ; Alignment
LOAD:000000F4                               ; PHT Entry 6
LOAD:000000F4 51 E5 74 64                   DCD 0x6474E551                ; Type: STACK
LOAD:000000F8 00 00 00 00                   DCD 0                         ; File offset
LOAD:000000FC 00 00 00 00                   DCD 0                         ; Virtual address
LOAD:00000100 00 00 00 00                   DCD 0                         ; Physical address
LOAD:00000104 00 00 00 00                   DCD 0                         ; Size in file image
LOAD:00000108 00 00 00 00                   DCD 0                         ; Size in memory image
LOAD:0000010C 06 00 00 00                   DCD 6                         ; Flags
LOAD:00000110 00 00 00 00                   DCD 0                         ; Alignment
LOAD:00000114                               ; PHT Entry 7
LOAD:00000114 01 00 00 70                   DCD 0x70000001                ; Type: EXIDX
LOAD:00000118 90 B6 00 00                   DCD 0xB690                    ; File offset
LOAD:0000011C 90 B6 00 00                   DCD unk_B690                  ; Virtual address
LOAD:00000120 90 B6 00 00                   DCD 0xB690                    ; Physical address
LOAD:00000124 C0 03 00 00                   DCD 0x3C0                     ; Size in file image
LOAD:00000128 C0 03 00 00                   DCD 0x3C0                     ; Size in memory image
LOAD:0000012C 04 00 00 00                   DCD 4                         ; Flags
LOAD:00000130 04 00 00 00                   DCD 4                         ; Alignment
LOAD:00000134                               ; PHT Entry 8
LOAD:00000134 52 E5 74 64                   DCD 0x6474E552                ; Type: RO-AFTER
LOAD:00000138 68 F9 00 00                   DCD 0xF968                    ; File offset
LOAD:0000013C 68 09 01 00                   DCD off_10968                 ; Virtual address
LOAD:00000140 68 09 01 00                   DCD 0x10968                   ; Physical address
LOAD:00000144 98 06 00 00                   DCD 0x698                     ; Size in file image
LOAD:00000148 98 06 00 00                   DCD 0x698                     ; Size in memory image
LOAD:0000014C 06 00 00 00                   DCD 6                         ; Flags
LOAD:00000150 04 00 00 00                   DCD 4                         ; Alignment
LOAD:00000154 2F 73 79 73 74 65 6D 2F 62 69+aSystemBinLinke DCB "/system/bin/linker",0
LOAD:00000154 6E 2F 6C 69 6E 6B 65 72 00                                  ; DATA XREF: LOAD:off_5C↑o
LOAD:00000167 00                            DCB 0
LOAD:00000168                               ; ELF Note Entry
LOAD:00000168 08 00 00 00                   dword_168 DCD 8               ; DATA XREF: LOAD:000000DC↑o
LOAD:00000168                                                             ; Name Size
LOAD:0000016C 04 00 00 00                   DCD 4                         ; Desc Size
LOAD:00000170 01 00 00 00                   DCD 1                         ; Type
LOAD:00000174 41 6E 64 72 6F 69 64 00       aAndroid DCB "Android",0      ; Name
LOAD:0000017C 18 00 00 00                   DCB 0x18, 0, 0, 0             ; Desc
LOAD:00000180                               ; ELF Note Entry
LOAD:00000180 04 00 00 00                   DCD 4                         ; Name Size
LOAD:00000184 10 00 00 00                   DCD 0x10                      ; Desc Size
LOAD:00000188 03 00 00 00                   DCD 3                         ; Type: NT_GNU_BUILD_ID
LOAD:0000018C 47 4E 55 00                   aGnu DCB "GNU",0              ; Name
LOAD:00000190 BF BF 3F 74 51 AE F8 AD 2F B7+DCB 0xBF, 0xBF, 0x3F, 0x74, 0x51, 0xAE, 0xF8, 0xAD, 0x2F, 0xB7, 0x68, 0xD1, 0x88, 0x78, 0x52, 0xCC ; Desc
LOAD:000001A0                               ; ELF Symbol Table
LOAD:000001A0 00 00 00 00 00 00 00 00 00 00+Elf32_Sym <0>
LOAD:000001B0 01 00 00 00 00 00 00 00 00 00+Elf32_Sym <aCxaFinalize - byte_E00, dword_0, 0, 0x12, 0, 0> ; "__cxa_finalize"
LOAD:000001C0 32 00 00 00 00 00 00 00 00 00+Elf32_Sym <aCxaAtexit - byte_E00, dword_0, 0, 0x12, 0, 0> ; "__cxa_atexit"
LOAD:000001D0 3F 00 00 00 00 00 00 00 00 00+Elf32_Sym <aRegisterAtfork - byte_E00, dword_0, 0, 0x12, 0, 0> ; "__register_atfork"
LOAD:000001E0 55 00 00 00 00 00 00 00 00 00+Elf32_Sym <aDladdr - byte_E00, dword_0, 0, 0x12, 0, 0> ; "dladdr"
LOAD:000001F0 65 00 00 00 00 00 00 00 00 00+Elf32_Sym <aNxptfa98xxGets - byte_E00, dword_0, 0, 0x12, 0, 0> ; "NxpTfa98xx_GetSpeakerImpedance"
LOAD:00000200 84 00 00 00 00 00 00 00 00 00+stru_200 Elf32_Sym <aNxptfa98xxPowe - byte_E00, dword_0, 0, 0x12, 0, 0>
LOAD:00000200 00 00 12 00 00 00                                           ; DATA XREF: .data:00011060↓o
LOAD:00000200                                                             ; "NxpTfa98xx_PowerOff"
LOAD:00000210 98 00 00 00 00 00 00 00 00 00+Elf32_Sym <aNxptfa98xxPowe_0 - byte_E00, dword_0, 0, 0x12, 0, 0> ; "NxpTfa98xx_PowerOn"
LOAD:00000220 AB 00 00 00 00 00 00 00 00 00+Elf32_Sym <aNxptfa98xxReca - byte_E00, dword_0, 0, 0x12, 0, 0> ; "NxpTfa98xx_ReCalibrate"
LOAD:00000230 C2 00 00 00 00 00 00 00 00 00+Elf32_Sym <aGnuUnwindFindE - byte_E00, dword_0, 0, 0x12, 0, 0> ; "__gnu_Unwind_Find_exidx"
LOAD:00000240 E1 00 00 00 00 00 00 00 00 00+Elf32_Sym <aNxptfa98xxSetm - byte_E00, dword_0, 0, 0x12, 0, 0> ; "NxpTfa98xx_SetMute"
LOAD:00000250 F4 00 00 00 00 00 00 00 00 00+Elf32_Sym <aNxptfa98xxStar - byte_E00, dword_0, 0, 0x12, 0, 0> ; "NxpTfa98xx_StartUp"
LOAD:00000260 07 01 00 00 00 00 00 00 00 00+Elf32_Sym <aNxptfa98xxStop - byte_E00, dword_0, 0, 0x12, 0, 0> ; "NxpTfa98xx_Stop"
LOAD:00000270 17 01 00 00 00 00 00 00 00 00+Elf32_Sym <aOpen - byte_E00, dword_0, 0, 0x12, 0, 0> ; "Open"
LOAD:00000280 1C 01 00 00 00 00 00 00 00 00+Elf32_Sym <aSetaudioclock - byte_E00, dword_0, 0, 0x12, 0, 0> ; "SetAudioClock"
LOAD:00000290 2A 01 00 00 00 00 00 00 00 00+Elf32_Sym <aSetaudioloopba - byte_E00, dword_0, 0, 0x12, 0, 0> ; "SetAudioLoopback"
LOAD:000002A0 3B 01 00 00 00 00 00 00 00 00+Elf32_Sym <aSetaudiovolume - byte_E00, dword_0, 0, 0x12, 0, 0> ; "SetAudioVolume"
LOAD:000002B0 4A 01 00 00 00 00 00 00 00 00+Elf32_Sym <aAeabiMemclr - byte_E00, dword_0, 0, 0x12, 0, 0> ; "__aeabi_memclr"
LOAD:000002C0 59 01 00 00 00 00 00 00 00 00+Elf32_Sym <aAeabiMemclr8 - byte_E00, dword_0, 0, 0x12, 0, 0> ; "__aeabi_memclr8"
LOAD:000002D0 69 01 00 00 00 00 00 00 00 00+Elf32_Sym <aAeabiMemcpy - byte_E00, dword_0, 0, 0x12, 0, 0> ; "__aeabi_memcpy"
LOAD:000002E0 78 01 00 00 00 00 00 00 00 00+Elf32_Sym <aAndroidLogPrin - byte_E00, dword_0, 0, 0x12, 0, 0> ; "__android_log_print"
LOAD:000002F0 8C 01 00 00 00 00 00 00 00 00+Elf32_Sym <aErrno - byte_E00, dword_0, 0, 0x12, 0, 0> ; "__errno"
LOAD:00000300 94 01 00 00 00 00 00 00 00 00+Elf32_Sym <aFreadChk - byte_E00, dword_0, 0, 0x12, 0, 0> ; "__fread_chk"
LOAD:00000310 A0 01 00 00 00 00 00 00 00 00+Elf32_Sym <aFwriteChk - byte_E00, dword_0, 0, 0x12, 0, 0> ; "__fwrite_chk"
LOAD:00000320 AD 01 00 00 00 00 00 00 00 00+Elf32_Sym <aReadChk - byte_E00, dword_0, 0, 0x12, 0, 0> ; "__read_chk"
LOAD:00000330 B8 01 00 00 00 00 00 00 00 00+Elf32_Sym <aSnprintfChk - byte_E00, dword_0, 0, 0x12, 0, 0> ; "__snprintf_chk"
LOAD:00000340 C7 01 00 00 00 00 00 00 00 00+Elf32_Sym <aSprintfChk - byte_E00, dword_0, 0, 0x12, 0, 0> ; "__sprintf_chk"
LOAD:00000350 D5 01 00 00 00 00 00 00 00 00+Elf32_Sym <aStackChkFail - byte_E00, dword_0, 0, 0x12, 0, 0> ; "__stack_chk_fail"
LOAD:00000360 E6 01 00 00 00 00 00 00 00 00+Elf32_Sym <aStackChkGuard - byte_E00, dword_0, 0, 0x11, 0, 0> ; "__stack_chk_guard"
LOAD:00000370 F8 01 00 00 00 00 00 00 00 00+Elf32_Sym <aStrcatChk - byte_E00, dword_0, 0, 0x12, 0, 0> ; "__strcat_chk"
LOAD:00000380 05 02 00 00 00 00 00 00 00 00+Elf32_Sym <aAccess - byte_E00, dword_0, 0, 0x12, 0, 0> ; "access"
LOAD:00000390 38 02 00 00 00 00 00 00 00 00+Elf32_Sym <aAtoi - byte_E00, dword_0, 0, 0x12, 0, 0> ; "atoi"
LOAD:000003A0 C4 02 00 00 00 00 00 00 00 00+Elf32_Sym <aCalloc - byte_E00, dword_0, 0, 0x12, 0, 0> ; "calloc"
LOAD:000003B0 05 03 00 00 00 00 00 00 00 00+Elf32_Sym <aClose - byte_E00, dword_0, 0, 0x12, 0, 0> ; "close"
LOAD:000003C0 83 03 00 00 00 00 00 00 00 00+Elf32_Sym <aCreateResample - byte_E00, dword_0, 0, 0x12, 0, 0> ; "create_resampler"
LOAD:000003D0 AE 03 00 00 00 00 00 00 00 00+Elf32_Sym <aFclose - byte_E00, dword_0, 0, 0x12, 0, 0> ; "fclose"
LOAD:000003E0 B5 03 00 00 00 00 00 00 00 00+Elf32_Sym <aFopen - byte_E00, dword_0, 0, 0x12, 0, 0> ; "fopen"
LOAD:000003F0 BB 03 00 00 00 00 00 00 00 00+Elf32_Sym <aFree - byte_E00, dword_0, 0, 0x12, 0, 0> ; "free"
LOAD:00000400 C0 03 00 00 00 00 00 00 00 00+stru_400 Elf32_Sym <aFseek - byte_E00, dword_0, 0, 0x12, 0, 0>
LOAD:00000400 00 00 12 00 00 00                                           ; DATA XREF: sub_52F4+100↓o
LOAD:00000400                                                             ; sub_7F90+212↓o
LOAD:00000400                                                             ; sub_8BD4+26↓o
LOAD:00000400                                                             ; sub_8BD4+68↓o
LOAD:00000400                                                             ; sub_8BD4+98↓o
LOAD:00000400                                                             ; .data:off_11038↓o
LOAD:00000400                                                             ; .data:off_110D8↓o
LOAD:00000400                                                             ; "fseek"
LOAD:00000410 FF 03 00 00 00 00 00 00 00 00+Elf32_Sym <aLog10 - byte_E00, dword_0, 0, 0x12, 0, 0> ; "log10"
LOAD:00000420 0D 04 00 00 00 00 00 00 00 00+Elf32_Sym <aMalloc - byte_E00, dword_0, 0, 0x12, 0, 0> ; "malloc"
LOAD:00000430 10 05 00 00 00 00 00 00 00 00+Elf32_Sym <aMixerClose - byte_E00, dword_0, 0, 0x12, 0, 0> ; "mixer_close"
LOAD:00000440 1C 05 00 00 00 00 00 00 00 00+Elf32_Sym <aMixerCtlGetNum - byte_E00, dword_0, 0, 0x12, 0, 0> ; "mixer_ctl_get_num_values"
LOAD:00000450 35 05 00 00 00 00 00 00 00 00+Elf32_Sym <aMixerCtlSetEnu - byte_E00, dword_0, 0, 0x12, 0, 0> ; "mixer_ctl_set_enum_by_string"
LOAD:00000460 52 05 00 00 00 00 00 00 00 00+Elf32_Sym <aMixerCtlSetVal - byte_E00, dword_0, 0, 0x12, 0, 0> ; "mixer_ctl_set_value"
LOAD:00000470 66 05 00 00 00 00 00 00 00 00+Elf32_Sym <aMixerGetCtlByN - byte_E00, dword_0, 0, 0x12, 0, 0> ; "mixer_get_ctl_by_name"
LOAD:00000480 7C 05 00 00 00 00 00 00 00 00+Elf32_Sym <aMixerOpen - byte_E00, dword_0, 0, 0x12, 0, 0> ; "mixer_open"
LOAD:00000490 87 05 00 00 00 00 00 00 00 00+Elf32_Sym <aMkdir - byte_E00, dword_0, 0, 0x12, 0, 0> ; "mkdir"
LOAD:000004A0 8D 05 00 00 00 00 00 00 00 00+Elf32_Sym <aOpen_0 - byte_E00, dword_0, 0, 0x12, 0, 0> ; "open"
LOAD:000004B0 B2 05 00 00 00 00 00 00 00 00+Elf32_Sym <aPcmClose - byte_E00, dword_0, 0, 0x12, 0, 0> ; "pcm_close"
LOAD:000004C0 30 06 00 00 00 00 00 00 00 00+Elf32_Sym <aPcmFramesToByt - byte_E00, dword_0, 0, 0x12, 0, 0> ; "pcm_frames_to_bytes"
LOAD:000004D0 44 06 00 00 00 00 00 00 00 00+Elf32_Sym <aPcmGetBufferSi - byte_E00, dword_0, 0, 0x12, 0, 0> ; "pcm_get_buffer_size"
LOAD:000004E0 58 06 00 00 00 00 00 00 00 00+Elf32_Sym <aPcmGetError - byte_E00, dword_0, 0, 0x12, 0, 0> ; "pcm_get_error"
LOAD:000004F0 66 06 00 00 00 00 00 00 00 00+Elf32_Sym <aPcmGetHtimesta - byte_E00, dword_0, 0, 0x12, 0, 0> ; "pcm_get_htimestamp"
LOAD:00000500 79 06 00 00 00 00 00 00 00 00+Elf32_Sym <aPcmIsReady - byte_E00, dword_0, 0, 0x12, 0, 0> ; "pcm_is_ready"
LOAD:00000510 86 06 00 00 00 00 00 00 00 00+Elf32_Sym <aPcmOpen - byte_E00, dword_0, 0, 0x12, 0, 0> ; "pcm_open"
LOAD:00000520 8F 06 00 00 00 00 00 00 00 00+Elf32_Sym <aPcmParamsFree - byte_E00, dword_0, 0, 0x12, 0, 0> ; "pcm_params_free"
LOAD:00000530 9F 06 00 00 00 00 00 00 00 00+Elf32_Sym <aPcmParamsGet - byte_E00, dword_0, 0, 0x12, 0, 0> ; "pcm_params_get"
LOAD:00000540 AE 06 00 00 00 00 00 00 00 00+Elf32_Sym <aPcmParamsGetMa - byte_E00, dword_0, 0, 0x12, 0, 0> ; "pcm_params_get_max"
LOAD:00000550 C1 06 00 00 00 00 00 00 00 00+Elf32_Sym <aPcmParamsGetMi - byte_E00, dword_0, 0, 0x12, 0, 0> ; "pcm_params_get_min"
LOAD:00000560 D4 06 00 00 00 00 00 00 00 00+Elf32_Sym <aPcmPrepare - byte_E00, dword_0, 0, 0x12, 0, 0> ; "pcm_prepare"
LOAD:00000570 E0 06 00 00 00 00 00 00 00 00+Elf32_Sym <aPcmRead - byte_E00, dword_0, 0, 0x12, 0, 0> ; "pcm_read"
LOAD:00000580 E9 06 00 00 00 00 00 00 00 00+Elf32_Sym <aPcmStop - byte_E00, dword_0, 0, 0x12, 0, 0> ; "pcm_stop"
LOAD:00000590 F2 06 00 00 00 00 00 00 00 00+Elf32_Sym <aPcmWrite - byte_E00, dword_0, 0, 0x12, 0, 0> ; "pcm_write"
LOAD:000005A0 FC 06 00 00 00 00 00 00 00 00+Elf32_Sym <aPropertyGet - byte_E00, dword_0, 0, 0x12, 0, 0> ; "property_get"
LOAD:000005B0 09 07 00 00 00 00 00 00 00 00+Elf32_Sym <aPropertySet - byte_E00, dword_0, 0, 0x12, 0, 0> ; "property_set"
LOAD:000005C0 16 07 00 00 00 00 00 00 00 00+Elf32_Sym <aPthreadCreate - byte_E00, dword_0, 0, 0x12, 0, 0> ; "pthread_create"
LOAD:000005D0 25 07 00 00 00 00 00 00 00 00+Elf32_Sym <aPthreadJoin - byte_E00, dword_0, 0, 0x12, 0, 0> ; "pthread_join"
LOAD:000005E0 32 07 00 00 00 00 00 00 00 00+Elf32_Sym <aPthreadMutexLo - byte_E00, dword_0, 0, 0x12, 0, 0> ; "pthread_mutex_lock"
LOAD:000005F0 45 07 00 00 00 00 00 00 00 00+Elf32_Sym <aPthreadMutexUn - byte_E00, dword_0, 0, 0x12, 0, 0> ; "pthread_mutex_unlock"
LOAD:00000600 5A 07 00 00 00 00 00 00 00 00+Elf32_Sym <aReleaseResampl - byte_E00, dword_0, 0, 0x12, 0, 0> ; "release_resampler"
LOAD:00000610 6C 07 00 00 00 00 00 00 00 00+Elf32_Sym <aSignal - byte_E00, dword_0, 0, 0x12, 0, 0> ; "signal"
LOAD:00000620 9D 07 00 00 00 00 00 00 00 00+Elf32_Sym <aStrParmsAddStr - byte_E00, dword_0, 0, 0x12, 0, 0> ; "str_parms_add_str"
LOAD:00000630 AF 07 00 00 00 00 00 00 00 00+Elf32_Sym <aStrParmsCreate - byte_E00, dword_0, 0, 0x12, 0, 0> ; "str_parms_create"
LOAD:00000640 C0 07 00 00 00 00 00 00 00 00+Elf32_Sym <aStrParmsCreate_0 - byte_E00, dword_0, 0, 0x12, 0, 0> ; "str_parms_create_str"
LOAD:00000650 D5 07 00 00 00 00 00 00 00 00+Elf32_Sym <aStrParmsDestro - byte_E00, dword_0, 0, 0x12, 0, 0> ; "str_parms_destroy"
LOAD:00000660 E7 07 00 00 00 00 00 00 00 00+Elf32_Sym <aStrParmsGetStr - byte_E00, dword_0, 0, 0x12, 0, 0> ; "str_parms_get_str"
LOAD:00000670 F9 07 00 00 00 00 00 00 00 00+Elf32_Sym <aStrParmsToStr - byte_E00, dword_0, 0, 0x12, 0, 0> ; "str_parms_to_str"
LOAD:00000680 0A 08 00 00 00 00 00 00 00 00+Elf32_Sym <aStrcmp - byte_E00, dword_0, 0, 0x12, 0, 0> ; "strcmp"
LOAD:00000690 11 08 00 00 00 00 00 00 00 00+Elf32_Sym <aStrdup - byte_E00, dword_0, 0, 0x12, 0, 0> ; "strdup"
LOAD:000006A0 18 08 00 00 00 00 00 00 00 00+Elf32_Sym <aStrerror - byte_E00, dword_0, 0, 0x12, 0, 0> ; "strerror"
LOAD:000006B0 21 08 00 00 00 00 00 00 00 00+Elf32_Sym <aStrlen - byte_E00, dword_0, 0, 0x12, 0, 0> ; "strlen"
LOAD:000006C0 28 08 00 00 00 00 00 00 00 00+Elf32_Sym <aStrncmp - byte_E00, dword_0, 0, 0x12, 0, 0> ; "strncmp"
LOAD:000006D0 FC 08 00 00 00 00 00 00 00 00+Elf32_Sym <aUsleep - byte_E00, dword_0, 0, 0x12, 0, 0> ; "usleep"
LOAD:000006E0 98 0A 00 00 00 00 00 00 00 00+Elf32_Sym <aXmlGetbuffer - byte_E00, dword_0, 0, 0x12, 0, 0> ; "XML_GetBuffer"
LOAD:000006F0 A6 0A 00 00 00 00 00 00 00 00+Elf32_Sym <aXmlParsebuffer - byte_E00, dword_0, 0, 0x12, 0, 0> ; "XML_ParseBuffer"
LOAD:00000700 B6 0A 00 00 00 00 00 00 00 00+Elf32_Sym <aXmlParsercreat - byte_E00, dword_0, 0, 0x12, 0, 0> ; "XML_ParserCreate"
LOAD:00000710 C7 0A 00 00 00 00 00 00 00 00+Elf32_Sym <aXmlParserfree - byte_E00, dword_0, 0, 0x12, 0, 0> ; "XML_ParserFree"
LOAD:00000720 D6 0A 00 00 00 00 00 00 00 00+Elf32_Sym <aXmlSetelementh - byte_E00, dword_0, 0, 0x12, 0, 0> ; "XML_SetElementHandler"
LOAD:00000730 EC 0A 00 00 00 00 00 00 00 00+Elf32_Sym <aXmlSetuserdata - byte_E00, dword_0, 0, 0x12, 0, 0> ; "XML_SetUserData"
LOAD:00000740 FC 0A 00 00 00 00 00 00 00 00+Elf32_Sym <aAeabiMemcpy4 - byte_E00, dword_0, 0, 0x12, 0, 0> ; "__aeabi_memcpy4"
LOAD:00000750 23 0B 00 00 00 00 00 00 00 00+Elf32_Sym <aMixerCtlGetArr - byte_E00, dword_0, 0, 0x12, 0, 0> ; "mixer_ctl_get_array"
LOAD:00000760 37 0B 00 00 00 00 00 00 00 00+Elf32_Sym <aMixerCtlGetEnu - byte_E00, dword_0, 0, 0x12, 0, 0> ; "mixer_ctl_get_enum_string"
LOAD:00000770 51 0B 00 00 00 00 00 00 00 00+Elf32_Sym <aMixerCtlGetNam - byte_E00, dword_0, 0, 0x12, 0, 0> ; "mixer_ctl_get_name"
LOAD:00000780 64 0B 00 00 00 00 00 00 00 00+Elf32_Sym <aMixerCtlGetNum_0 - byte_E00, dword_0, 0, 0x12, 0, 0> ; "mixer_ctl_get_num_enums"
LOAD:00000790 7C 0B 00 00 00 00 00 00 00 00+Elf32_Sym <aMixerCtlGetTyp - byte_E00, dword_0, 0, 0x12, 0, 0> ; "mixer_ctl_get_type"
LOAD:000007A0 8F 0B 00 00 00 00 00 00 00 00+Elf32_Sym <aMixerCtlGetVal - byte_E00, dword_0, 0, 0x12, 0, 0> ; "mixer_ctl_get_value"
LOAD:000007B0 A3 0B 00 00 00 00 00 00 00 00+Elf32_Sym <aMixerCtlSetArr - byte_E00, dword_0, 0, 0x12, 0, 0> ; "mixer_ctl_set_array"
LOAD:000007C0 B7 0B 00 00 00 00 00 00 00 00+Elf32_Sym <aMixerGetCtl - byte_E00, dword_0, 0, 0x12, 0, 0> ; "mixer_get_ctl"
LOAD:000007D0 C5 0B 00 00 00 00 00 00 00 00+Elf32_Sym <aMixerGetNumCtl - byte_E00, dword_0, 0, 0x12, 0, 0> ; "mixer_get_num_ctls"
LOAD:000007E0 D8 0B 00 00 00 00 00 00 00 00+Elf32_Sym <aRealloc - byte_E00, dword_0, 0, 0x12, 0, 0> ; "realloc"
LOAD:000007F0 EA 0B 00 00 00 00 00 00 00 00+Elf32_Sym <aPrintf - byte_E00, dword_0, 0, 0x12, 0, 0> ; "printf"
LOAD:00000800 F1 0B 00 00 00 00 00 00 00 00+stru_800 Elf32_Sym <aPuts - byte_E00, dword_0, 0, 0x12, 0, 0>
LOAD:00000800 00 00 12 00 00 00                                           ; DATA XREF: .text:00006BC8↓o
LOAD:00000800                                                             ; "puts"
LOAD:00000810 00 0C 00 00 00 00 00 00 00 00+Elf32_Sym <aAeabiMemcpy8 - byte_E00, dword_0, 0, 0x12, 0, 0> ; "__aeabi_memcpy8"
LOAD:00000820 B8 0C 00 00 00 00 00 00 00 00+Elf32_Sym <aAbort - byte_E00, dword_0, 0, 0x12, 0, 0> ; "abort"
LOAD:00000830 BE 0C 00 00 00 00 00 00 00 00+Elf32_Sym <aFprintf - byte_E00, dword_0, 0, 0x12, 0, 0> ; "fprintf"
LOAD:00000840 C6 0C 00 00 00 00 00 00 00 00+Elf32_Sym <aStderr - byte_E00, dword_0, 0, 0x11, 0, 0> ; "stderr"
LOAD:00000850 88 02 00 00 9F 8C 00 00 86 00+Elf32_Sym <aAudioRouteUpda - byte_E00, audio_route_update_mixer+1, 0x86, 0x12, 0, 0xD> ; "audio_route_update_mixer"
LOAD:00000860 92 05 00 00 6C 09 01 00 18 00+Elf32_Sym <aOutChannelsNam - byte_E00, out_channels_name_to_enum_table, 0x18, 0x11, 0, 0x12> ; "out_channels_name_to_enum_table"
LOAD:00000870 FF 09 00 00 2C 0A 01 00 08 00+Elf32_Sym <aVoiceCallWbHea_0 - byte_E00, voice_call_wb_headset, 8, 0x11, 0, 0x12> ; "voice_call_wb_headset"
LOAD:00000880 65 02 00 00 91 8E 00 00 A0 02+Elf32_Sym <aAudioRouteInit - byte_E00, audio_route_init+1, 0x2A0, 0x12, 0, 0xD> ; "audio_route_init"
LOAD:00000890 10 0C 00 00 49 98 00 00 7C 00+Elf32_Sym <aCvqClose - byte_E00, cvq_close+1, 0x7C, 0x12, 0, 0xD> ; "cvq_close"
LOAD:000008A0 F6 0B 00 00 75 96 00 00 B4 00+Elf32_Sym <aSetValue - byte_E00, set_value+1, 0xB4, 0x12, 0, 0xD> ; "set_value"
LOAD:000008B0 03 09 00 00 0C 0A 01 00 08 00+Elf32_Sym <aVoiceCallBluet - byte_E00, voice_call_bluetooth_sco, 8, 0x11, 0, 0x12> ; "voice_call_bluetooth_sco"
LOAD:000008C0 3D 02 00 00 55 8D 00 00 90 00+Elf32_Sym <aAudioRouteAppl - byte_E00, audio_route_apply_path+1, 0x90, 0x12, 0, 0xD> ; "audio_route_apply_path"
LOAD:000008D0 14 04 00 00 9C 09 01 00 08 00+Elf32_Sym <aMediaEarpiece - byte_E00, media_earpiece, 8, 0x11, 0, 0x12> ; "media_earpiece"
LOAD:000008E0 E2 04 00 00 A4 09 01 00 08 00+Elf32_Sym <aMediaSpeakerMi - byte_E00, media_speaker_mic_nr_off, 8, 0x11, 0, 0x12> ; "media_speaker_mic_nr_off"
LOAD:000008F0 0C 06 00 00 58 10 01 00 28 00+Elf32_Sym <aPcmConfigVoice - byte_E00, pcm_config_voice_call, 0x28, 0x11, 0, 0x15> ; "pcm_config_voice_call"
LOAD:00000900 89 08 00 00 50 13 01 00 60 00+Elf32_Sym <aTestPriMic - byte_E00, test_pri_mic, 0x60, 0x11, 0, 0x15> ; "test_pri_mic"
LOAD:00000910 D0 08 00 00 09 39 00 00 5C 02+Elf32_Sym <aThreadRefreshA - byte_E00, thread_refresh_audio_route+1, 0x25C, 0x12, 0, 0xD> ; "thread_refresh_audio_route"
LOAD:00000920 3E 03 00 00 8C 0A 01 00 08 00+Elf32_Sym <aCommunicationH - byte_E00, communication_headphones, 8, 0x11, 0, 0x12> ; "communication_headphones"
LOAD:00000930 9D 03 00 00 F8 10 01 00 6C 00+Elf32_Sym <aDefaultSetting - byte_E00, default_settings, 0x6C, 0x11, 0, 0x15> ; "default_settings"
LOAD:00000940 51 00 00 00 48 16 01 00 80 00+Elf32_Sym <aHmi - byte_E00, HMI, 0x80, 0x11, 0, 0x15> ; "HMI"
LOAD:00000950 52 09 00 00 F4 09 01 00 08 00+Elf32_Sym <aVoiceCallHeadp - byte_E00, voice_call_headphones, 8, 0x11, 0, 0x12> ; "voice_call_headphones"
LOAD:00000960 53 0A 00 00 74 0A 01 00 08 00+Elf32_Sym <aVoiceRecHeadse - byte_E00, voice_rec_headset, 8, 0x11, 0, 0x12> ; "voice_rec_headset"
LOAD:00000970 6B 08 00 00 A8 15 01 00 9C 00+Elf32_Sym <aTestModemLoopb_0 - byte_E00, test_modem_loopback_headphone, 0x9C, 0x11, 0, 0x15> ; "test_modem_loopback_headphone"
LOAD:00000980 B6 08 00 00 90 12 01 00 C0 00+Elf32_Sym <aTestSpeaker - byte_E00, test_speaker, 0xC0, 0x11, 0, 0x15> ; "test_speaker"
LOAD:00000990 E6 09 00 00 24 0A 01 00 08 00+Elf32_Sym <aVoiceCallWbHea - byte_E00, voice_call_wb_headphones, 8, 0x11, 0, 0x12> ; "voice_call_wb_headphones"
LOAD:000009A0 FB 04 00 00 C4 09 01 00 08 00+Elf32_Sym <aMediaSpeakerXu - byte_E00, media_speaker_xunfei, 8, 0x11, 0, 0x12> ; "media_speaker_xunfei"
LOAD:000009B0 86 07 00 00 AC 0A 01 00 08 00+Elf32_Sym <aSpeakerAndHead - byte_E00, speaker_and_headphones, 8, 0x11, 0, 0x12> ; "speaker_and_headphones"
LOAD:000009C0 CF 09 00 00 34 0A 01 00 08 00+Elf32_Sym <aVoiceCallWbEar - byte_E00, voice_call_wb_earpiece, 8, 0x11, 0, 0x12> ; "voice_call_wb_earpiece"
LOAD:000009D0 80 04 00 00 CC 09 01 00 08 00+Elf32_Sym <aMediaHeadphone_1 - byte_E00, media_headphones_xunfei, 8, 0x11, 0, 0x12> ; "media_headphones_xunfei"
LOAD:000009E0 2C 0C 00 00 25 9C 00 00 50 00+Elf32_Sym <aCvqStart - byte_E00, cvq_start+1, 0x50, 0x12, 0, 0xD> ; "cvq_start"
LOAD:000009F0 0B 03 00 00 A4 0A 01 00 08 00+Elf32_Sym <aCommunicationB - byte_E00, communication_bluetooth_sco, 8, 0x11, 0, 0x12> ; "communication_bluetooth_sco"
LOAD:00000A00 3D 04 00 00 E4 09 01 00 08 00+Elf32_Sym <aMediaEarpieceX - byte_E00, media_earpiece_xunfei, 8, 0x11, 0, 0x12> ; "media_earpiece_xunfei"
LOAD:00000A10 EB 08 00 00 99 41 00 00 18 00+Elf32_Sym <aThreadTestHifi - byte_E00, thread_test_hifi+1, 0x18, 0x12, 0, 0xD> ; "thread_test_hifi"
LOAD:00000A20 EF 05 00 00 30 10 01 00 28 00+Elf32_Sym <aPcmConfigIn - byte_E00, pcm_config_in, 0x28, 0x11, 0, 0x15> ; "pcm_config_in"
LOAD:00000A30 CB 02 00 00 5C 0A 01 00 08 00+Elf32_Sym <aCamcorderEarpi - byte_E00, camcorder_earpiece, 8, 0x11, 0, 0x12> ; "camcorder_earpiece"
LOAD:00000A40 C3 08 00 00 40 14 01 00 E4 00+Elf32_Sym <aTestTerMic - byte_E00, test_ter_mic, 0xE4, 0x11, 0, 0x15> ; "test_ter_mic"
LOAD:00000A50 BF 04 00 00 D4 09 01 00 08 00+Elf32_Sym <aMediaHeadsetXu - byte_E00, media_headset_xunfei, 8, 0x11, 0, 0x12> ; "media_headset_xunfei"
LOAD:00000A60 23 04 00 00 BC 09 01 00 08 00+Elf32_Sym <aMediaEarpieceM - byte_E00, media_earpiece_mic_nr_off, 8, 0x11, 0, 0x12> ; "media_earpiece_mic_nr_off"
LOAD:00000A70 DC 05 00 00 80 10 01 00 28 00+Elf32_Sym <aPcmConfigBacke - byte_E00, pcm_config_backend, 0x28, 0x11, 0, 0x15> ; "pcm_config_backend"
LOAD:00000A80 4E 08 00 00 24 15 01 00 84 00+Elf32_Sym <aTestModemLoopb - byte_E00, test_modem_loopback_earphone, 0x84, 0x11, 0, 0x15> ; "test_modem_loopback_earphone"
LOAD:00000A90 24 02 00 00 F9 40 00 00 A0 00+Elf32_Sym <aAmplifierCalib - byte_E00, amplifier_calibrate+1, 0xA0, 0x12, 0, 0xD> ; "amplifier_calibrate"
LOAD:00000AA0 DE 02 00 00 54 0A 01 00 08 00+Elf32_Sym <aCamcorderHeadp - byte_E00, camcorder_headphones, 8, 0x11, 0, 0x12> ; "camcorder_headphones"
LOAD:00000AB0 F3 02 00 00 4C 0A 01 00 08 00+Elf32_Sym <aCamcorderSpeak - byte_E00, camcorder_speaker, 8, 0x11, 0, 0x12> ; "camcorder_speaker"
LOAD:00000AC0 C6 03 00 00 01 38 00 00 08 01+Elf32_Sym <aGetInputSource - byte_E00, get_input_source_id+1, 0x108, 0x12, 0, 0xD> ; "get_input_source_id"
LOAD:00000AD0 6D 03 00 00 84 0A 01 00 08 00+Elf32_Sym <aCommunicationS - byte_E00, communication_speaker, 8, 0x11, 0, 0x12> ; "communication_speaker"
LOAD:00000AE0 5E 0C 00 00 65 9A 00 00 EC 00+Elf32_Sym <aReadOnRawDataT - byte_E00, read_on_raw_data_thread+1, 0xEC, 0x12, 0, 0xD> ; "read_on_raw_data_thread"
LOAD:00000AF0 A6 04 00 00 B4 09 01 00 08 00+Elf32_Sym <aMediaHeadsetMi - byte_E00, media_headset_mic_nr_off, 8, 0x11, 0, 0x12> ; "media_headset_mic_nr_off"
LOAD:00000B00 AA 09 00 00 44 0A 01 00 08 00+Elf32_Sym <aVoiceCallWbBlu_0 - byte_E00, voice_call_wb_bluetooth_sco_nrec_off, 8, 0x11, 0, 0x12> ; "voice_call_wb_bluetooth_sco_nrec_off"
LOAD:00000B10 73 07 00 00 B4 0A 01 00 08 00+Elf32_Sym <aSpeakerAndBtSc - byte_E00, speaker_and_bt_sco, 8, 0x11, 0, 0x12> ; "speaker_and_bt_sco"
LOAD:00000B20 64 04 00 00 AC 09 01 00 08 00+Elf32_Sym <aMediaHeadphone_0 - byte_E00, media_headphones_mic_nr_off, 8, 0x11, 0, 0x12> ; "media_headphones_mic_nr_off"
LOAD:00000B30 1C 09 00 00 14 0A 01 00 08 00+Elf32_Sym <aVoiceCallBluet_0 - byte_E00, voice_call_bluetooth_sco_nrec_off, 8, 0x11, 0, 0x12> ; "voice_call_bluetooth_sco_nrec_off"
LOAD:00000B40 68 09 00 00 FC 09 01 00 08 00+Elf32_Sym <aVoiceCallHeads - byte_E00, voice_call_headset, 8, 0x11, 0, 0x12> ; "voice_call_headset"
LOAD:00000B50 AF 02 00 00 DC 09 01 00 08 00+Elf32_Sym <aBluetoothScoXu - byte_E00, bluetooth_sco_xunfei, 8, 0x11, 0, 0x12> ; "bluetooth_sco_xunfei"
LOAD:00000B60 A6 0C 00 00 75 9C 00 00 8C 00+Elf32_Sym <aUartReadWrappe - byte_E00, uart_read_wrapper+1, 0x8C, 0x12, 0, 0xD> ; "uart_read_wrapper"
LOAD:00000B70 15 0A 00 00 1C 0A 01 00 08 00+Elf32_Sym <aVoiceCallWbSpe - byte_E00, voice_call_wb_speaker, 8, 0x11, 0, 0x12> ; "voice_call_wb_speaker"
LOAD:00000B80 47 0C 00 00 01 9D 00 00 24 02+Elf32_Sym <aPcmReadUartCha - byte_E00, pcm_read_uart_char_dev+1, 0x224, 0x12, 0, 0xD> ; "pcm_read_uart_char_dev"
LOAD:00000B90 2B 0A 00 00 7C 0A 01 00 08 00+Elf32_Sym <aVoiceRecEarpie - byte_E00, voice_rec_earpiece, 8, 0x11, 0, 0x12> ; "voice_rec_earpiece"
LOAD:00000BA0 76 0C 00 00 6D 99 00 00 F8 00+Elf32_Sym <aReadOnThread - byte_E00, read_on_thread+1, 0xF8, 0x12, 0, 0xD> ; "read_on_thread"
LOAD:00000BB0 EF 03 00 00 89 40 00 00 70 00+Elf32_Sym <aIsHeadphoneOn - byte_E00, is_headphone_on+1, 0x70, 0x12, 0, 0xD> ; "is_headphone_on"
LOAD:00000BC0 65 0A 00 00 64 0A 01 00 08 00+Elf32_Sym <aVoiceRecSpeake - byte_E00, voice_rec_speaker, 8, 0x11, 0, 0x12> ; "voice_rec_speaker"
LOAD:00000BD0 1A 0C 00 00 29 97 00 00 20 01+Elf32_Sym <aCvqOpen - byte_E00, cvq_open+1, 0x120, 0x12, 0, 0xD> ; "cvq_open"
LOAD:00000BE0 22 06 00 00 E1 35 00 00 1C 01+Elf32_Sym <aPcmDataDump - byte_E00, pcm_data_dump+1, 0x11C, 0x12, 0, 0xD> ; "pcm_data_dump"
LOAD:00000BF0 DA 03 00 00 FD 36 00 00 04 01+Elf32_Sym <aGetOutputDevic - byte_E00, get_output_device_id+1, 0x104, 0x12, 0, 0xD> ; "get_output_device_id"
LOAD:00000C00 3F 08 00 00 0C 12 01 00 84 00+Elf32_Sym <aTestHeadphone - byte_E00, test_headphone, 0x84, 0x11, 0, 0x15> ; "test_headphone"
LOAD:00000C10 A1 02 00 00 BC 0A 01 00 08 00+Elf32_Sym <aBluetoothSco - byte_E00, bluetooth_sco, 8, 0x11, 0, 0x12> ; "bluetooth_sco"
LOAD:00000C20 27 03 00 00 9C 0A 01 00 08 00+Elf32_Sym <aCommunicationE - byte_E00, communication_earpiece, 8, 0x11, 0, 0x12> ; "communication_earpiece"
LOAD:00000C30 0C 02 00 00 B1 41 00 00 CC 00+Elf32_Sym <aAdevSetHeadset - byte_E00, adev_set_headset_volume+1, 0xCC, 0x12, 0, 0xD> ; "adev_set_headset_volume"
LOAD:00000C40 54 02 00 00 BB 95 00 00 18 00+Elf32_Sym <aAudioRouteFree - byte_E00, audio_route_free+1, 0x18, 0x12, 0, 0xD> ; "audio_route_free"
LOAD:00000C50 96 08 00 00 B0 13 01 00 90 00+Elf32_Sym <aTestSecMic - byte_E00, test_sec_mic, 0x90, 0x11, 0, 0x15> ; "test_sec_mic"
LOAD:00000C60 E0 0B 00 00 21 96 00 00 54 00+Elf32_Sym <aGetValue - byte_E00, get_value+1, 0x54, 0x12, 0, 0xD> ; "get_value"
LOAD:00000C70 DE 0C 00 00 C8 16 01 00 00 00+Elf32_Sym <aEdata - byte_E00, dword_116C8, 0, 0x10, 0, 0xFFF1> ; "_edata"
LOAD:00000C80 A3 08 00 00 65 3B 00 00 0C 00+Elf32_Sym <aTestSetHifiGai - byte_E00, test_set_hifi_gain+1, 0xC, 0x12, 0, 0xD> ; "test_set_hifi_gain"
LOAD:00000C90 30 08 00 00 64 11 01 00 A8 00+Elf32_Sym <aTestEarphones - byte_E00, test_earphones, 0xA8, 0x11, 0, 0x15> ; "test_earphones"
LOAD:00000CA0 85 0C 00 00 C5 98 00 00 14 00+Elf32_Sym <aReaddirect - byte_E00, readdirect+1, 0x14, 0x12, 0, 0xD> ; "readdirect"
LOAD:00000CB0 53 04 00 00 8C 09 01 00 08 00+Elf32_Sym <aMediaHeadphone - byte_E00, media_headphones, 8, 0x11, 0, 0x12> ; "media_headphones"
LOAD:00000CC0 8E 09 00 00 3C 0A 01 00 08 00+Elf32_Sym <aVoiceCallWbBlu - byte_E00, voice_call_wb_bluetooth_sco, 8, 0x11, 0, 0x12> ; "voice_call_wb_bluetooth_sco"
LOAD:00000CD0 3E 0A 00 00 6C 0A 01 00 08 00+Elf32_Sym <aVoiceRecHeadph - byte_E00, voice_rec_headphones, 8, 0x11, 0, 0x12> ; "voice_rec_headphones"
LOAD:00000CE0 23 0C 00 00 D9 98 00 00 94 00+Elf32_Sym <aCvqRead - byte_E00, cvq_read+1, 0x94, 0x12, 0, 0xD> ; "cvq_read"
LOAD:00000CF0 D9 0C 00 00 E1 16 01 00 00 00+Elf32_Sym <aEnd - byte_E00, 0x116E1, 0, 0x10, 0, 0xFFF1> ; "_end"
LOAD:00000D00 57 03 00 00 94 0A 01 00 08 00+Elf32_Sym <aCommunicationH_0 - byte_E00, communication_headset, 8, 0x11, 0, 0x12> ; "communication_headset"
LOAD:00000D10 D4 04 00 00 84 09 01 00 08 00+Elf32_Sym <aMediaSpeaker - byte_E00, media_speaker, 8, 0x11, 0, 0x12> ; "media_speaker"
LOAD:00000D20 98 04 00 00 94 09 01 00 08 00+Elf32_Sym <aMediaHeadset - byte_E00, media_headset, 8, 0x11, 0, 0x12> ; "media_headset"
LOAD:00000D30 FD 05 00 00 A8 10 01 00 28 00+Elf32_Sym <aPcmConfigSco - byte_E00, pcm_config_sco, 0x28, 0x11, 0, 0x15> ; "pcm_config_sco"
LOAD:00000D40 BC 05 00 00 08 10 01 00 28 00+Elf32_Sym <aPcmConfig - byte_E00, pcm_config, 0x28, 0x11, 0, 0x15> ; "pcm_config"
LOAD:00000D50 C7 05 00 00 D0 10 01 00 28 00+Elf32_Sym <aPcmConfigAmpli - byte_E00, pcm_config_amplifier, 0x28, 0x11, 0, 0x15> ; "pcm_config_amplifier"
LOAD:00000D60 77 0A 00 00 7D 3B 00 00 0C 05+Elf32_Sym <aWavPlayerStart - byte_E00, wav_player_start+1, 0x50C, 0x12, 0, 0xD> ; "wav_player_start"
LOAD:00000D70 94 03 00 00 25 9F 00 00 BC 00+Elf32_Sym <aCvqInit - byte_E00, cvq_init+1, 0xBC, 0x12, 0, 0xD> ; "cvq_init"
LOAD:00000D80 76 02 00 00 25 8D 00 00 2E 00+Elf32_Sym <aAudioRouteRese - byte_E00, audio_route_reset+1, 0x2E, 0x12, 0, 0xD> ; "audio_route_reset"
LOAD:00000D90 3E 09 00 00 04 0A 01 00 08 00+Elf32_Sym <aVoiceCallEarpi - byte_E00, voice_call_earpiece, 8, 0x11, 0, 0x12> ; "voice_call_earpiece"
LOAD:00000DA0 7B 09 00 00 EC 09 01 00 08 00+Elf32_Sym <aVoiceCallSpeak - byte_E00, voice_call_speaker, 8, 0x11, 0, 0x12> ; "voice_call_speaker"
LOAD:00000DB0 36 0C 00 00 D5 9B 00 00 50 00+Elf32_Sym <aCvqStartDecode - byte_E00, cvq_start_decode+1, 0x50, 0x12, 0, 0xD> ; "cvq_start_decode"
LOAD:00000DC0 0C 0B 00 00 0D 8E 00 00 84 00+Elf32_Sym <aAudioRouteRese_0 - byte_E00, audio_route_reset_path+1, 0x84, 0x12, 0, 0xD> ; "audio_route_reset_path"
LOAD:00000DD0 90 0C 00 00 51 9B 00 00 84 00+Elf32_Sym <aUartDevReadWra - byte_E00, uart_dev_read_wrapper+1, 0x84, 0x12, 0, 0xD> ; "uart_dev_read_wrapper"
LOAD:00000DE0 CD 0C 00 00 C8 16 01 00 00 00+Elf32_Sym <aBssStart - byte_E00, dword_116C8, 0, 0x10, 0, 0xFFF1> ; "__bss_start"
LOAD:00000DF0 88 0A 00 00 71 3B 00 00 0C 00+Elf32_Sym <aWavPlayerStop - byte_E00, wav_player_stop+1, 0xC, 0x12, 0, 0xD> ; "wav_player_stop"
LOAD:00000E00                               ; ELF String Table
LOAD:00000E00 00                            byte_E00 DCB 0                ; DATA XREF: LOAD:000001B0↑o
LOAD:00000E00                                                             ; LOAD:000001C0↑o
LOAD:00000E00                                                             ; LOAD:000001D0↑o
LOAD:00000E00                                                             ; LOAD:000001E0↑o
LOAD:00000E00                                                             ; LOAD:000001F0↑o
LOAD:00000E00                                                             ; LOAD:stru_200↑o
LOAD:00000E00                                                             ; LOAD:00000210↑o
LOAD:00000E00                                                             ; LOAD:00000220↑o
LOAD:00000E00                                                             ; LOAD:00000230↑o
LOAD:00000E00                                                             ; LOAD:00000240↑o
LOAD:00000E00                                                             ; LOAD:00000250↑o
LOAD:00000E00                                                             ; LOAD:00000260↑o
LOAD:00000E00                                                             ; LOAD:00000270↑o
LOAD:00000E00                                                             ; LOAD:00000280↑o
LOAD:00000E00                                                             ; LOAD:00000290↑o ...
LOAD:00000E01 5F 5F 63 78 61 5F 66 69 6E 61+aCxaFinalize DCB "__cxa_finalize",0
LOAD:00000E01 6C 69 7A 65 00                                              ; DATA XREF: LOAD:000001B0↑o
LOAD:00000E10 4C 49 42 43 00                aLibc DCB "LIBC",0            ; DATA XREF: LOAD:00001FEC↓o
LOAD:00000E10                                                             ; LOAD:0000201C↓o
LOAD:00000E10                                                             ; LOAD:0000203C↓o
LOAD:00000E15 6C 69 62 63 2E 73 6F 00       aLibcSo DCB "libc.so",0       ; DATA XREF: LOAD:00001FDC↓o
LOAD:00000E1D 61 75 64 69 6F 2E 70 72 69 6D+aAudioPrimaryM8 DCB "audio.primary.m86.so",0
LOAD:00000E1D 61 72 79 2E 6D 38 36 2E 73 6F+                              ; DATA XREF: LOAD:00001FD4↓o
LOAD:00000E32 5F 5F 63 78 61 5F 61 74 65 78+aCxaAtexit DCB "__cxa_atexit",0
LOAD:00000E32 69 74 00                                                    ; DATA XREF: LOAD:000001C0↑o
LOAD:00000E3F 5F 5F 72 65 67 69 73 74 65 72+aRegisterAtfork DCB "__register_atfork",0
LOAD:00000E3F 5F 61 74 66 6F 72 6B 00                                     ; DATA XREF: LOAD:000001D0↑o
LOAD:00000E51 48 4D 49 00                   aHmi DCB "HMI",0              ; DATA XREF: LOAD:00000940↑o
LOAD:00000E55 64 6C 61 64 64 72 00          aDladdr DCB "dladdr",0        ; DATA XREF: LOAD:000001E0↑o
LOAD:00000E5C 6C 69 62 64 6C 2E 73 6F 00    aLibdlSo DCB "libdl.so",0     ; DATA XREF: LOAD:0000200C↓o
LOAD:00000E65 4E 78 70 54 66 61 39 38 78 78+aNxptfa98xxGets DCB "NxpTfa98xx_GetSpeakerImpedance",0
LOAD:00000E65 5F 47 65 74 53 70 65 61 6B 65+                              ; DATA XREF: LOAD:000001F0↑o
LOAD:00000E84 4E 78 70 54 66 61 39 38 78 78+aNxptfa98xxPowe DCB "NxpTfa98xx_PowerOff",0
LOAD:00000E84 5F 50 6F 77 65 72 4F 66 66 00                               ; DATA XREF: LOAD:stru_200↑o
LOAD:00000E98 4E 78 70 54 66 61 39 38 78 78+aNxptfa98xxPowe_0 DCB "NxpTfa98xx_PowerOn",0
LOAD:00000E98 5F 50 6F 77 65 72 4F 6E 00                                  ; DATA XREF: LOAD:00000210↑o
LOAD:00000EAB 4E 78 70 54 66 61 39 38 78 78+aNxptfa98xxReca DCB "NxpTfa98xx_ReCalibrate",0
LOAD:00000EAB 5F 52 65 43 61 6C 69 62 72 61+                              ; DATA XREF: LOAD:00000220↑o
LOAD:00000EC2 5F 5F 67 6E 75 5F 55 6E 77 69+aGnuUnwindFindE DCB "__gnu_Unwind_Find_exidx",0
LOAD:00000EC2 6E 64 5F 46 69 6E 64 5F 65 78+                              ; DATA XREF: LOAD:00000230↑o
LOAD:00000EDA 4C 49 42 43 5F 4E 00          aLibcN DCB "LIBC_N",0         ; DATA XREF: LOAD:00001FFC↓o
LOAD:00000EE1 4E 78 70 54 66 61 39 38 78 78+aNxptfa98xxSetm DCB "NxpTfa98xx_SetMute",0
LOAD:00000EE1 5F 53 65 74 4D 75 74 65 00                                  ; DATA XREF: LOAD:00000240↑o
LOAD:00000EF4 4E 78 70 54 66 61 39 38 78 78+aNxptfa98xxStar DCB "NxpTfa98xx_StartUp",0
LOAD:00000EF4 5F 53 74 61 72 74 55 70 00                                  ; DATA XREF: LOAD:00000250↑o
LOAD:00000F07 4E 78 70 54 66 61 39 38 78 78+aNxptfa98xxStop DCB "NxpTfa98xx_Stop",0
LOAD:00000F07 5F 53 74 6F 70 00                                           ; DATA XREF: LOAD:00000260↑o
LOAD:00000F17 4F 70 65 6E 00                aOpen DCB "Open",0            ; DATA XREF: LOAD:00000270↑o
LOAD:00000F1C 53 65 74 41 75 64 69 6F 43 6C+aSetaudioclock DCB "SetAudioClock",0
LOAD:00000F1C 6F 63 6B 00                                                 ; DATA XREF: LOAD:00000280↑o
LOAD:00000F2A 53 65 74 41 75 64 69 6F 4C 6F+aSetaudioloopba DCB "SetAudioLoopback",0
LOAD:00000F2A 6F 70 62 61 63 6B 00                                        ; DATA XREF: LOAD:00000290↑o
LOAD:00000F3B 53 65 74 41 75 64 69 6F 56 6F+aSetaudiovolume DCB "SetAudioVolume",0
LOAD:00000F3B 6C 75 6D 65 00                                              ; DATA XREF: LOAD:000002A0↑o
LOAD:00000F4A 5F 5F 61 65 61 62 69 5F 6D 65+aAeabiMemclr DCB "__aeabi_memclr",0
LOAD:00000F4A 6D 63 6C 72 00                                              ; DATA XREF: LOAD:000002B0↑o
LOAD:00000F59 5F 5F 61 65 61 62 69 5F 6D 65+aAeabiMemclr8 DCB "__aeabi_memclr8",0
LOAD:00000F59 6D 63 6C 72 38 00                                           ; DATA XREF: LOAD:000002C0↑o
LOAD:00000F69 5F 5F 61 65 61 62 69 5F 6D 65+aAeabiMemcpy DCB "__aeabi_memcpy",0
LOAD:00000F69 6D 63 70 79 00                                              ; DATA XREF: LOAD:000002D0↑o
LOAD:00000F78 5F 5F 61 6E 64 72 6F 69 64 5F+aAndroidLogPrin DCB "__android_log_print",0
LOAD:00000F78 6C 6F 67 5F 70 72 69 6E 74 00                               ; DATA XREF: LOAD:000002E0↑o
LOAD:00000F8C 5F 5F 65 72 72 6E 6F 00       aErrno DCB "__errno",0        ; DATA XREF: LOAD:000002F0↑o
LOAD:00000F94 5F 5F 66 72 65 61 64 5F 63 68+aFreadChk DCB "__fread_chk",0 ; DATA XREF: LOAD:00000300↑o
LOAD:00000FA0 5F 5F 66 77 72 69 74 65 5F 63+aFwriteChk DCB "__fwrite_chk",0
LOAD:00000FA0 68 6B 00                                                    ; DATA XREF: LOAD:00000310↑o
LOAD:00000FAD 5F 5F 72 65 61 64 5F 63 68 6B+aReadChk DCB "__read_chk",0   ; DATA XREF: LOAD:00000320↑o
LOAD:00000FB8 5F 5F 73 6E 70 72 69 6E 74 66+aSnprintfChk DCB "__snprintf_chk",0
LOAD:00000FB8 5F 63 68 6B 00                                              ; DATA XREF: LOAD:00000330↑o
LOAD:00000FC7 5F 5F 73 70 72 69 6E 74 66 5F+aSprintfChk DCB "__sprintf_chk",0
LOAD:00000FC7 63 68 6B 00                                                 ; DATA XREF: LOAD:00000340↑o
LOAD:00000FD5 5F 5F 73 74 61 63 6B 5F 63 68+aStackChkFail DCB "__stack_chk_fail",0
LOAD:00000FD5 6B 5F 66 61 69 6C 00                                        ; DATA XREF: LOAD:00000350↑o
LOAD:00000FE6 5F 5F 73 74 61 63 6B 5F 63 68+aStackChkGuard DCB "__stack_chk_guard",0
LOAD:00000FE6 6B 5F 67 75 61 72 64 00                                     ; DATA XREF: LOAD:00000360↑o
LOAD:00000FF8 5F 5F 73 74 72 63 61 74 5F 63+aStrcatChk DCB "__strcat_chk",0
LOAD:00000FF8 68 6B 00                                                    ; DATA XREF: LOAD:00000370↑o
LOAD:00000FF8                                                             ; .data:off_11010↓o
LOAD:00001005 61 63 63 65 73 73 00          aAccess DCB "access",0        ; DATA XREF: LOAD:00000380↑o
LOAD:0000100C 61 64 65 76 5F 73 65 74 5F 68+aAdevSetHeadset DCB "adev_set_headset_volume",0
LOAD:0000100C 65 61 64 73 65 74 5F 76 6F 6C+                              ; DATA XREF: LOAD:00000C30↑o
LOAD:00001024 61 6D 70 6C 69 66 69 65 72 5F+aAmplifierCalib DCB "amplifier_calibrate",0
LOAD:00001024 63 61 6C 69 62 72 61 74 65 00                               ; DATA XREF: LOAD:00000A90↑o
LOAD:00001038 61 74 6F 69 00                aAtoi DCB "atoi",0            ; DATA XREF: LOAD:00000390↑o
LOAD:0000103D 61 75 64 69 6F 5F 72 6F 75 74+aAudioRouteAppl DCB "audio_route_apply_path",0
LOAD:0000103D 65 5F 61 70 70 6C 79 5F 70 61+                              ; DATA XREF: LOAD:000008C0↑o
LOAD:00001054 61 75 64 69 6F 5F 72 6F 75 74+aAudioRouteFree DCB "audio_route_free",0
LOAD:00001054 65 5F 66 72 65 65 00                                        ; DATA XREF: LOAD:00000C40↑o
LOAD:00001065 61 75 64 69 6F 5F 72 6F 75 74+aAudioRouteInit DCB "audio_route_init",0
LOAD:00001065 65 5F 69 6E 69 74 00                                        ; DATA XREF: LOAD:00000880↑o
LOAD:00001076 61 75 64 69 6F 5F 72 6F 75 74+aAudioRouteRese DCB "audio_route_reset",0
LOAD:00001076 65 5F 72 65 73 65 74 00                                     ; DATA XREF: LOAD:00000D80↑o
LOAD:00001088 61 75 64 69 6F 5F 72 6F 75 74+aAudioRouteUpda DCB "audio_route_update_mixer",0
LOAD:00001088 65 5F 75 70 64 61 74 65 5F 6D+                              ; DATA XREF: LOAD:00000850↑o
LOAD:000010A1 62 6C 75 65 74 6F 6F 74 68 5F+aBluetoothSco DCB "bluetooth_sco",0
LOAD:000010A1 73 63 6F 00                                                 ; DATA XREF: LOAD:00000C10↑o
LOAD:000010AF 62 6C 75 65 74 6F 6F 74 68 5F+aBluetoothScoXu DCB "bluetooth_sco_xunfei",0
LOAD:000010AF 73 63 6F 5F 78 75 6E 66 65 69+                              ; DATA XREF: LOAD:00000B50↑o
LOAD:000010C4 63 61 6C 6C 6F 63 00          aCalloc DCB "calloc",0        ; DATA XREF: LOAD:000003A0↑o
LOAD:000010CB 63 61 6D 63 6F 72 64 65 72 5F+aCamcorderEarpi DCB "camcorder_earpiece",0
LOAD:000010CB 65 61 72 70 69 65 63 65 00                                  ; DATA XREF: LOAD:00000A30↑o
LOAD:000010DE 63 61 6D 63 6F 72 64 65 72 5F+aCamcorderHeadp DCB "camcorder_headphones",0
LOAD:000010DE 68 65 61 64 70 68 6F 6E 65 73+                              ; DATA XREF: LOAD:00000AA0↑o
LOAD:000010F3 63 61 6D 63 6F 72 64 65 72 5F+aCamcorderSpeak DCB "camcorder_speaker",0
LOAD:000010F3 73 70 65 61 6B 65 72 00                                     ; DATA XREF: LOAD:00000AB0↑o
LOAD:00001105 63 6C 6F 73 65 00             aClose DCB "close",0          ; DATA XREF: LOAD:000003B0↑o
LOAD:0000110B 63 6F 6D 6D 75 6E 69 63 61 74+aCommunicationB DCB "communication_bluetooth_sco",0
LOAD:0000110B 69 6F 6E 5F 62 6C 75 65 74 6F+                              ; DATA XREF: LOAD:000009F0↑o
LOAD:00001127 63 6F 6D 6D 75 6E 69 63 61 74+aCommunicationE DCB "communication_earpiece",0
LOAD:00001127 69 6F 6E 5F 65 61 72 70 69 65+                              ; DATA XREF: LOAD:00000C20↑o
LOAD:0000113E 63 6F 6D 6D 75 6E 69 63 61 74+aCommunicationH DCB "communication_headphones",0
LOAD:0000113E 69 6F 6E 5F 68 65 61 64 70 68+                              ; DATA XREF: LOAD:00000920↑o
LOAD:00001157 63 6F 6D 6D 75 6E 69 63 61 74+aCommunicationH_0 DCB "communication_headset",0
LOAD:00001157 69 6F 6E 5F 68 65 61 64 73 65+                              ; DATA XREF: LOAD:00000D00↑o
LOAD:0000116D 63 6F 6D 6D 75 6E 69 63 61 74+aCommunicationS DCB "communication_speaker",0
LOAD:0000116D 69 6F 6E 5F 73 70 65 61 6B 65+                              ; DATA XREF: LOAD:00000AD0↑o
LOAD:00001183 63 72 65 61 74 65 5F 72 65 73+aCreateResample DCB "create_resampler",0
LOAD:00001183 61 6D 70 6C 65 72 00                                        ; DATA XREF: LOAD:000003C0↑o
LOAD:00001194 63 76 71 5F 69 6E 69 74 00    aCvqInit DCB "cvq_init",0     ; DATA XREF: LOAD:00000D70↑o
LOAD:0000119D 64 65 66 61 75 6C 74 5F 73 65+aDefaultSetting DCB "default_settings",0
LOAD:0000119D 74 74 69 6E 67 73 00                                        ; DATA XREF: LOAD:00000930↑o
LOAD:000011AE 66 63 6C 6F 73 65 00          aFclose DCB "fclose",0        ; DATA XREF: LOAD:000003D0↑o
LOAD:000011B5 66 6F 70 65 6E 00             aFopen DCB "fopen",0          ; DATA XREF: LOAD:000003E0↑o
LOAD:000011BB 66 72 65 65 00                aFree DCB "free",0            ; DATA XREF: LOAD:000003F0↑o
LOAD:000011C0 66 73 65 65 6B 00             aFseek DCB "fseek",0          ; DATA XREF: LOAD:stru_400↑o
LOAD:000011C6 67 65 74 5F 69 6E 70 75 74 5F+aGetInputSource DCB "get_input_source_id",0
LOAD:000011C6 73 6F 75 72 63 65 5F 69 64 00                               ; DATA XREF: LOAD:00000AC0↑o
LOAD:000011DA 67 65 74 5F 6F 75 74 70 75 74+aGetOutputDevic DCB "get_output_device_id",0
LOAD:000011DA 5F 64 65 76 69 63 65 5F 69 64+                              ; DATA XREF: LOAD:00000BF0↑o
LOAD:000011EF 69 73 5F 68 65 61 64 70 68 6F+aIsHeadphoneOn DCB "is_headphone_on",0
LOAD:000011EF 6E 65 5F 6F 6E 00                                           ; DATA XREF: LOAD:00000BB0↑o
LOAD:000011FF 6C 6F 67 31 30 00             aLog10 DCB "log10",0          ; DATA XREF: LOAD:00000410↑o
LOAD:00001205 6C 69 62 6D 2E 73 6F 00       aLibmSo DCB "libm.so",0       ; DATA XREF: LOAD:0000202C↓o
LOAD:0000120D 6D 61 6C 6C 6F 63 00          aMalloc DCB "malloc",0        ; DATA XREF: LOAD:00000420↑o
LOAD:00001214 6D 65 64 69 61 5F 65 61 72 70+aMediaEarpiece DCB "media_earpiece",0
LOAD:00001214 69 65 63 65 00                                              ; DATA XREF: LOAD:000008D0↑o
LOAD:00001223 6D 65 64 69 61 5F 65 61 72 70+aMediaEarpieceM DCB "media_earpiece_mic_nr_off",0
LOAD:00001223 69 65 63 65 5F 6D 69 63 5F 6E+                              ; DATA XREF: LOAD:00000A60↑o
LOAD:0000123D 6D 65 64 69 61 5F 65 61 72 70+aMediaEarpieceX DCB "media_earpiece_xunfei",0
LOAD:0000123D 69 65 63 65 5F 78 75 6E 66 65+                              ; DATA XREF: LOAD:00000A00↑o
LOAD:00001253 6D 65 64 69 61 5F 68 65 61 64+aMediaHeadphone DCB "media_headphones",0
LOAD:00001253 70 68 6F 6E 65 73 00                                        ; DATA XREF: LOAD:00000CB0↑o
LOAD:00001264 6D 65 64 69 61 5F 68 65 61 64+aMediaHeadphone_0 DCB "media_headphones_mic_nr_off",0
LOAD:00001264 70 68 6F 6E 65 73 5F 6D 69 63+                              ; DATA XREF: LOAD:00000B20↑o
LOAD:00001280 6D 65 64 69 61 5F 68 65 61 64+aMediaHeadphone_1 DCB "media_headphones_xunfei",0
LOAD:00001280 70 68 6F 6E 65 73 5F 78 75 6E+                              ; DATA XREF: LOAD:000009D0↑o
LOAD:00001298 6D 65 64 69 61 5F 68 65 61 64+aMediaHeadset DCB "media_headset",0
LOAD:00001298 73 65 74 00                                                 ; DATA XREF: LOAD:00000D20↑o
LOAD:000012A6 6D 65 64 69 61 5F 68 65 61 64+aMediaHeadsetMi DCB "media_headset_mic_nr_off",0
LOAD:000012A6 73 65 74 5F 6D 69 63 5F 6E 72+                              ; DATA XREF: LOAD:00000AF0↑o
LOAD:000012BF 6D 65 64 69 61 5F 68 65 61 64+aMediaHeadsetXu DCB "media_headset_xunfei",0
LOAD:000012BF 73 65 74 5F 78 75 6E 66 65 69+                              ; DATA XREF: LOAD:00000A50↑o
LOAD:000012D4 6D 65 64 69 61 5F 73 70 65 61+aMediaSpeaker DCB "media_speaker",0
LOAD:000012D4 6B 65 72 00                                                 ; DATA XREF: LOAD:00000D10↑o
LOAD:000012E2 6D 65 64 69 61 5F 73 70 65 61+aMediaSpeakerMi DCB "media_speaker_mic_nr_off",0
LOAD:000012E2 6B 65 72 5F 6D 69 63 5F 6E 72+                              ; DATA XREF: LOAD:000008E0↑o
LOAD:000012FB 6D 65 64 69 61 5F 73 70 65 61+aMediaSpeakerXu DCB "media_speaker_xunfei",0
LOAD:000012FB 6B 65 72 5F 78 75 6E 66 65 69+                              ; DATA XREF: LOAD:000009A0↑o
LOAD:00001310 6D 69 78 65 72 5F 63 6C 6F 73+aMixerClose DCB "mixer_close",0
LOAD:00001310 65 00                                                       ; DATA XREF: LOAD:00000430↑o
LOAD:0000131C 6D 69 78 65 72 5F 63 74 6C 5F+aMixerCtlGetNum DCB "mixer_ctl_get_num_values",0
LOAD:0000131C 67 65 74 5F 6E 75 6D 5F 76 61+                              ; DATA XREF: LOAD:00000440↑o
LOAD:00001335 6D 69 78 65 72 5F 63 74 6C 5F+aMixerCtlSetEnu DCB "mixer_ctl_set_enum_by_string",0
LOAD:00001335 73 65 74 5F 65 6E 75 6D 5F 62+                              ; DATA XREF: LOAD:00000450↑o
LOAD:00001352 6D 69 78 65 72 5F 63 74 6C 5F+aMixerCtlSetVal DCB "mixer_ctl_set_value",0
LOAD:00001352 73 65 74 5F 76 61 6C 75 65 00                               ; DATA XREF: LOAD:00000460↑o
LOAD:00001366 6D 69 78 65 72 5F 67 65 74 5F+aMixerGetCtlByN DCB "mixer_get_ctl_by_name",0
LOAD:00001366 63 74 6C 5F 62 79 5F 6E 61 6D+                              ; DATA XREF: LOAD:00000470↑o
LOAD:0000137C 6D 69 78 65 72 5F 6F 70 65 6E+aMixerOpen DCB "mixer_open",0 ; DATA XREF: LOAD:00000480↑o
LOAD:00001387 6D 6B 64 69 72 00             aMkdir DCB "mkdir",0          ; DATA XREF: LOAD:00000490↑o
LOAD:0000138D 6F 70 65 6E 00                aOpen_0 DCB "open",0          ; DATA XREF: LOAD:000004A0↑o
LOAD:00001392 6F 75 74 5F 63 68 61 6E 6E 65+aOutChannelsNam DCB "out_channels_name_to_enum_table",0
LOAD:00001392 6C 73 5F 6E 61 6D 65 5F 74 6F+                              ; DATA XREF: LOAD:00000860↑o
LOAD:000013B2 70 63 6D 5F 63 6C 6F 73 65 00 aPcmClose DCB "pcm_close",0   ; DATA XREF: LOAD:000004B0↑o
LOAD:000013BC 70 63 6D 5F 63 6F 6E 66 69 67+aPcmConfig DCB "pcm_config",0 ; DATA XREF: LOAD:00000D40↑o
LOAD:000013C7 70 63 6D 5F 63 6F 6E 66 69 67+aPcmConfigAmpli DCB "pcm_config_amplifier",0
LOAD:000013C7 5F 61 6D 70 6C 69 66 69 65 72+                              ; DATA XREF: LOAD:00000D50↑o
LOAD:000013DC 70 63 6D 5F 63 6F 6E 66 69 67+aPcmConfigBacke DCB "pcm_config_backend",0
LOAD:000013DC 5F 62 61 63 6B 65 6E 64 00                                  ; DATA XREF: LOAD:00000A70↑o
LOAD:000013EF 70 63 6D 5F 63 6F 6E 66 69 67+aPcmConfigIn DCB "pcm_config_in",0
LOAD:000013EF 5F 69 6E 00                                                 ; DATA XREF: LOAD:00000A20↑o
LOAD:000013FD 70 63 6D 5F 63 6F 6E 66 69 67+aPcmConfigSco DCB "pcm_config_sco",0
LOAD:000013FD 5F 73 63 6F 00                                              ; DATA XREF: LOAD:00000D30↑o
LOAD:0000140C 70 63 6D 5F 63 6F 6E 66 69 67+aPcmConfigVoice DCB "pcm_config_voice_call",0
LOAD:0000140C 5F 76 6F 69 63 65 5F 63 61 6C+                              ; DATA XREF: LOAD:000008F0↑o
LOAD:00001422 70 63 6D 5F 64 61 74 61 5F 64+aPcmDataDump DCB "pcm_data_dump",0
LOAD:00001422 75 6D 70 00                                                 ; DATA XREF: LOAD:00000BE0↑o
LOAD:00001430 70 63 6D 5F 66 72 61 6D 65 73+aPcmFramesToByt DCB "pcm_frames_to_bytes",0
LOAD:00001430 5F 74 6F 5F 62 79 74 65 73 00                               ; DATA XREF: LOAD:000004C0↑o
LOAD:00001444 70 63 6D 5F 67 65 74 5F 62 75+aPcmGetBufferSi DCB "pcm_get_buffer_size",0
LOAD:00001444 66 66 65 72 5F 73 69 7A 65 00                               ; DATA XREF: LOAD:000004D0↑o
LOAD:00001458 70 63 6D 5F 67 65 74 5F 65 72+aPcmGetError DCB "pcm_get_error",0
LOAD:00001458 72 6F 72 00                                                 ; DATA XREF: LOAD:000004E0↑o
LOAD:00001466 70 63 6D 5F 67 65 74 5F 68 74+aPcmGetHtimesta DCB "pcm_get_htimestamp",0
LOAD:00001466 69 6D 65 73 74 61 6D 70 00                                  ; DATA XREF: LOAD:000004F0↑o
LOAD:00001479 70 63 6D 5F 69 73 5F 72 65 61+aPcmIsReady DCB "pcm_is_ready",0
LOAD:00001479 64 79 00                                                    ; DATA XREF: LOAD:00000500↑o
LOAD:00001486 70 63 6D 5F 6F 70 65 6E 00    aPcmOpen DCB "pcm_open",0     ; DATA XREF: LOAD:00000510↑o
LOAD:0000148F 70 63 6D 5F 70 61 72 61 6D 73+aPcmParamsFree DCB "pcm_params_free",0
LOAD:0000148F 5F 66 72 65 65 00                                           ; DATA XREF: LOAD:00000520↑o
LOAD:0000149F 70 63 6D 5F 70 61 72 61 6D 73+aPcmParamsGet DCB "pcm_params_get",0
LOAD:0000149F 5F 67 65 74 00                                              ; DATA XREF: LOAD:00000530↑o
LOAD:000014AE 70 63 6D 5F 70 61 72 61 6D 73+aPcmParamsGetMa DCB "pcm_params_get_max",0
LOAD:000014AE 5F 67 65 74 5F 6D 61 78 00                                  ; DATA XREF: LOAD:00000540↑o
LOAD:000014C1 70 63 6D 5F 70 61 72 61 6D 73+aPcmParamsGetMi DCB "pcm_params_get_min",0
LOAD:000014C1 5F 67 65 74 5F 6D 69 6E 00                                  ; DATA XREF: LOAD:00000550↑o
LOAD:000014D4 70 63 6D 5F 70 72 65 70 61 72+aPcmPrepare DCB "pcm_prepare",0
LOAD:000014D4 65 00                                                       ; DATA XREF: LOAD:00000560↑o
LOAD:000014E0 70 63 6D 5F 72 65 61 64 00    aPcmRead DCB "pcm_read",0     ; DATA XREF: LOAD:00000570↑o
LOAD:000014E9 70 63 6D 5F 73 74 6F 70 00    aPcmStop DCB "pcm_stop",0     ; DATA XREF: LOAD:00000580↑o
LOAD:000014F2 70 63 6D 5F 77 72 69 74 65 00 aPcmWrite DCB "pcm_write",0   ; DATA XREF: LOAD:00000590↑o
LOAD:000014FC 70 72 6F 70 65 72 74 79 5F 67+aPropertyGet DCB "property_get",0
LOAD:000014FC 65 74 00                                                    ; DATA XREF: LOAD:000005A0↑o
LOAD:00001509 70 72 6F 70 65 72 74 79 5F 73+aPropertySet DCB "property_set",0
LOAD:00001509 65 74 00                                                    ; DATA XREF: LOAD:000005B0↑o
LOAD:00001516 70 74 68 72 65 61 64 5F 63 72+aPthreadCreate DCB "pthread_create",0
LOAD:00001516 65 61 74 65 00                                              ; DATA XREF: LOAD:000005C0↑o
LOAD:00001525 70 74 68 72 65 61 64 5F 6A 6F+aPthreadJoin DCB "pthread_join",0
LOAD:00001525 69 6E 00                                                    ; DATA XREF: LOAD:000005D0↑o
LOAD:00001532 70 74 68 72 65 61 64 5F 6D 75+aPthreadMutexLo DCB "pthread_mutex_lock",0
LOAD:00001532 74 65 78 5F 6C 6F 63 6B 00                                  ; DATA XREF: LOAD:000005E0↑o
LOAD:00001545 70 74 68 72 65 61 64 5F 6D 75+aPthreadMutexUn DCB "pthread_mutex_unlock",0
LOAD:00001545 74 65 78 5F 75 6E 6C 6F 63 6B+                              ; DATA XREF: LOAD:000005F0↑o
LOAD:0000155A 72 65 6C 65 61 73 65 5F 72 65+aReleaseResampl DCB "release_resampler",0
LOAD:0000155A 73 61 6D 70 6C 65 72 00                                     ; DATA XREF: LOAD:00000600↑o
LOAD:0000156C 73 69 67 6E 61 6C 00          aSignal DCB "signal",0        ; DATA XREF: LOAD:00000610↑o
LOAD:00001573 73 70 65 61 6B 65 72 5F 61 6E+aSpeakerAndBtSc DCB "speaker_and_bt_sco",0
LOAD:00001573 64 5F 62 74 5F 73 63 6F 00                                  ; DATA XREF: LOAD:00000B10↑o
LOAD:00001586 73 70 65 61 6B 65 72 5F 61 6E+aSpeakerAndHead DCB "speaker_and_headphones",0
LOAD:00001586 64 5F 68 65 61 64 70 68 6F 6E+                              ; DATA XREF: LOAD:000009B0↑o
LOAD:0000159D 73 74 72 5F 70 61 72 6D 73 5F+aStrParmsAddStr DCB "str_parms_add_str",0
LOAD:0000159D 61 64 64 5F 73 74 72 00                                     ; DATA XREF: LOAD:00000620↑o
LOAD:000015AF 73 74 72 5F 70 61 72 6D 73 5F+aStrParmsCreate DCB "str_parms_create",0
LOAD:000015AF 63 72 65 61 74 65 00                                        ; DATA XREF: LOAD:00000630↑o
LOAD:000015C0 73 74 72 5F 70 61 72 6D 73 5F+aStrParmsCreate_0 DCB "str_parms_create_str",0
LOAD:000015C0 63 72 65 61 74 65 5F 73 74 72+                              ; DATA XREF: LOAD:00000640↑o
LOAD:000015D5 73 74 72 5F 70 61 72 6D 73 5F+aStrParmsDestro DCB "str_parms_destroy",0
LOAD:000015D5 64 65 73 74 72 6F 79 00                                     ; DATA XREF: LOAD:00000650↑o
LOAD:000015E7 73 74 72 5F 70 61 72 6D 73 5F+aStrParmsGetStr DCB "str_parms_get_str",0
LOAD:000015E7 67 65 74 5F 73 74 72 00                                     ; DATA XREF: LOAD:00000660↑o
LOAD:000015F9 73 74 72 5F 70 61 72 6D 73 5F+aStrParmsToStr DCB "str_parms_to_str",0
LOAD:000015F9 74 6F 5F 73 74 72 00                                        ; DATA XREF: LOAD:00000670↑o
LOAD:0000160A 73 74 72 63 6D 70 00          aStrcmp DCB "strcmp",0        ; DATA XREF: LOAD:00000680↑o
LOAD:00001611 73 74 72 64 75 70 00          aStrdup DCB "strdup",0        ; DATA XREF: LOAD:00000690↑o
LOAD:00001618 73 74 72 65 72 72 6F 72 00    aStrerror DCB "strerror",0    ; DATA XREF: LOAD:000006A0↑o
LOAD:00001621 73 74 72 6C 65 6E 00          aStrlen DCB "strlen",0        ; DATA XREF: LOAD:000006B0↑o
LOAD:00001628 73 74 72 6E 63 6D 70 00       aStrncmp DCB "strncmp",0      ; DATA XREF: LOAD:000006C0↑o
LOAD:00001630 74 65 73 74 5F 65 61 72 70 68+aTestEarphones DCB "test_earphones",0
LOAD:00001630 6F 6E 65 73 00                                              ; DATA XREF: LOAD:00000C90↑o
LOAD:0000163F 74 65 73 74 5F 68 65 61 64 70+aTestHeadphone DCB "test_headphone",0
LOAD:0000163F 68 6F 6E 65 00                                              ; DATA XREF: LOAD:00000C00↑o
LOAD:0000164E 74 65 73 74 5F 6D 6F 64 65 6D+aTestModemLoopb DCB "test_modem_loopback_earphone",0
LOAD:0000164E 5F 6C 6F 6F 70 62 61 63 6B 5F+                              ; DATA XREF: LOAD:00000A80↑o
LOAD:0000166B 74 65 73 74 5F 6D 6F 64 65 6D+aTestModemLoopb_0 DCB "test_modem_loopback_headphone",0
LOAD:0000166B 5F 6C 6F 6F 70 62 61 63 6B 5F+                              ; DATA XREF: LOAD:00000970↑o
LOAD:00001689 74 65 73 74 5F 70 72 69 5F 6D+aTestPriMic DCB "test_pri_mic",0
LOAD:00001689 69 63 00                                                    ; DATA XREF: LOAD:00000900↑o
LOAD:00001696 74 65 73 74 5F 73 65 63 5F 6D+aTestSecMic DCB "test_sec_mic",0
LOAD:00001696 69 63 00                                                    ; DATA XREF: LOAD:00000C50↑o
LOAD:000016A3 74 65 73 74 5F 73 65 74 5F 68+aTestSetHifiGai DCB "test_set_hifi_gain",0
LOAD:000016A3 69 66 69 5F 67 61 69 6E 00                                  ; DATA XREF: LOAD:00000C80↑o
LOAD:000016B6 74 65 73 74 5F 73 70 65 61 6B+aTestSpeaker DCB "test_speaker",0
LOAD:000016B6 65 72 00                                                    ; DATA XREF: LOAD:00000980↑o
LOAD:000016C3 74 65 73 74 5F 74 65 72 5F 6D+aTestTerMic DCB "test_ter_mic",0
LOAD:000016C3 69 63 00                                                    ; DATA XREF: LOAD:00000A40↑o
LOAD:000016D0 74 68 72 65 61 64 5F 72 65 66+aThreadRefreshA DCB "thread_refresh_audio_route",0
LOAD:000016D0 72 65 73 68 5F 61 75 64 69 6F+                              ; DATA XREF: LOAD:00000910↑o
LOAD:000016EB 74 68 72 65 61 64 5F 74 65 73+aThreadTestHifi DCB "thread_test_hifi",0
LOAD:000016EB 74 5F 68 69 66 69 00                                        ; DATA XREF: LOAD:00000A10↑o
LOAD:000016FC 75 73 6C 65 65 70 00          aUsleep DCB "usleep",0        ; DATA XREF: LOAD:000006D0↑o
LOAD:00001703 76 6F 69 63 65 5F 63 61 6C 6C+aVoiceCallBluet DCB "voice_call_bluetooth_sco",0
LOAD:00001703 5F 62 6C 75 65 74 6F 6F 74 68+                              ; DATA XREF: LOAD:000008B0↑o
LOAD:0000171C 76 6F 69 63 65 5F 63 61 6C 6C+aVoiceCallBluet_0 DCB "voice_call_bluetooth_sco_nrec_off",0
LOAD:0000171C 5F 62 6C 75 65 74 6F 6F 74 68+                              ; DATA XREF: LOAD:00000B30↑o
LOAD:0000173E 76 6F 69 63 65 5F 63 61 6C 6C+aVoiceCallEarpi DCB "voice_call_earpiece",0
LOAD:0000173E 5F 65 61 72 70 69 65 63 65 00                               ; DATA XREF: LOAD:00000D90↑o
LOAD:00001752 76 6F 69 63 65 5F 63 61 6C 6C+aVoiceCallHeadp DCB "voice_call_headphones",0
LOAD:00001752 5F 68 65 61 64 70 68 6F 6E 65+                              ; DATA XREF: LOAD:00000950↑o
LOAD:00001768 76 6F 69 63 65 5F 63 61 6C 6C+aVoiceCallHeads DCB "voice_call_headset",0
LOAD:00001768 5F 68 65 61 64 73 65 74 00                                  ; DATA XREF: LOAD:00000B40↑o
LOAD:0000177B 76 6F 69 63 65 5F 63 61 6C 6C+aVoiceCallSpeak DCB "voice_call_speaker",0
LOAD:0000177B 5F 73 70 65 61 6B 65 72 00                                  ; DATA XREF: LOAD:00000DA0↑o
LOAD:0000178E 76 6F 69 63 65 5F 63 61 6C 6C+aVoiceCallWbBlu DCB "voice_call_wb_bluetooth_sco",0
LOAD:0000178E 5F 77 62 5F 62 6C 75 65 74 6F+                              ; DATA XREF: LOAD:00000CC0↑o
LOAD:000017AA 76 6F 69 63 65 5F 63 61 6C 6C+aVoiceCallWbBlu_0 DCB "voice_call_wb_bluetooth_sco_nrec_off",0
LOAD:000017AA 5F 77 62 5F 62 6C 75 65 74 6F+                              ; DATA XREF: LOAD:00000B00↑o
LOAD:000017CF 76 6F 69 63 65 5F 63 61 6C 6C+aVoiceCallWbEar DCB "voice_call_wb_earpiece",0
LOAD:000017CF 5F 77 62 5F 65 61 72 70 69 65+                              ; DATA XREF: LOAD:000009C0↑o
LOAD:000017E6 76 6F 69 63 65 5F 63 61 6C 6C+aVoiceCallWbHea DCB "voice_call_wb_headphones",0
LOAD:000017E6 5F 77 62 5F 68 65 61 64 70 68+                              ; DATA XREF: LOAD:00000990↑o
LOAD:000017FF 76 6F 69 63 65 5F 63 61 6C 6C+aVoiceCallWbHea_0 DCB "voice_call_wb_headset",0
LOAD:000017FF 5F 77 62 5F 68 65 61 64 73 65+                              ; DATA XREF: LOAD:00000870↑o
LOAD:00001815 76 6F 69 63 65 5F 63 61 6C 6C+aVoiceCallWbSpe DCB "voice_call_wb_speaker",0
LOAD:00001815 5F 77 62 5F 73 70 65 61 6B 65+                              ; DATA XREF: LOAD:00000B70↑o
LOAD:0000182B 76 6F 69 63 65 5F 72 65 63 5F+aVoiceRecEarpie DCB "voice_rec_earpiece",0
LOAD:0000182B 65 61 72 70 69 65 63 65 00                                  ; DATA XREF: LOAD:00000B90↑o
LOAD:0000183E 76 6F 69 63 65 5F 72 65 63 5F+aVoiceRecHeadph DCB "voice_rec_headphones",0
LOAD:0000183E 68 65 61 64 70 68 6F 6E 65 73+                              ; DATA XREF: LOAD:00000CD0↑o
LOAD:00001853 76 6F 69 63 65 5F 72 65 63 5F+aVoiceRecHeadse DCB "voice_rec_headset",0
LOAD:00001853 68 65 61 64 73 65 74 00                                     ; DATA XREF: LOAD:00000960↑o
LOAD:00001865 76 6F 69 63 65 5F 72 65 63 5F+aVoiceRecSpeake DCB "voice_rec_speaker",0
LOAD:00001865 73 70 65 61 6B 65 72 00                                     ; DATA XREF: LOAD:00000BC0↑o
LOAD:00001877 77 61 76 5F 70 6C 61 79 65 72+aWavPlayerStart DCB "wav_player_start",0
LOAD:00001877 5F 73 74 61 72 74 00                                        ; DATA XREF: LOAD:00000D60↑o
LOAD:00001888 77 61 76 5F 70 6C 61 79 65 72+aWavPlayerStop DCB "wav_player_stop",0
LOAD:00001888 5F 73 74 6F 70 00                                           ; DATA XREF: LOAD:00000DF0↑o
LOAD:00001898 58 4D 4C 5F 47 65 74 42 75 66+aXmlGetbuffer DCB "XML_GetBuffer",0
LOAD:00001898 66 65 72 00                                                 ; DATA XREF: LOAD:000006E0↑o
LOAD:000018A6 58 4D 4C 5F 50 61 72 73 65 42+aXmlParsebuffer DCB "XML_ParseBuffer",0
LOAD:000018A6 75 66 66 65 72 00                                           ; DATA XREF: LOAD:000006F0↑o
LOAD:000018B6 58 4D 4C 5F 50 61 72 73 65 72+aXmlParsercreat DCB "XML_ParserCreate",0
LOAD:000018B6 43 72 65 61 74 65 00                                        ; DATA XREF: LOAD:00000700↑o
LOAD:000018C7 58 4D 4C 5F 50 61 72 73 65 72+aXmlParserfree DCB "XML_ParserFree",0
LOAD:000018C7 46 72 65 65 00                                              ; DATA XREF: LOAD:00000710↑o
LOAD:000018D6 58 4D 4C 5F 53 65 74 45 6C 65+aXmlSetelementh DCB "XML_SetElementHandler",0
LOAD:000018D6 6D 65 6E 74 48 61 6E 64 6C 65+                              ; DATA XREF: LOAD:00000720↑o
LOAD:000018EC 58 4D 4C 5F 53 65 74 55 73 65+aXmlSetuserdata DCB "XML_SetUserData",0
LOAD:000018EC 72 44 61 74 61 00                                           ; DATA XREF: LOAD:00000730↑o
LOAD:000018FC 5F 5F 61 65 61 62 69 5F 6D 65+aAeabiMemcpy4 DCB "__aeabi_memcpy4",0
LOAD:000018FC 6D 63 70 79 34 00                                           ; DATA XREF: LOAD:00000740↑o
LOAD:0000190C 61 75 64 69 6F 5F 72 6F 75 74+aAudioRouteRese_0 DCB "audio_route_reset_path",0
LOAD:0000190C 65 5F 72 65 73 65 74 5F 70 61+                              ; DATA XREF: LOAD:00000DC0↑o
LOAD:00001923 6D 69 78 65 72 5F 63 74 6C 5F+aMixerCtlGetArr DCB "mixer_ctl_get_array",0
LOAD:00001923 67 65 74 5F 61 72 72 61 79 00                               ; DATA XREF: LOAD:00000750↑o
LOAD:00001937 6D 69 78 65 72 5F 63 74 6C 5F+aMixerCtlGetEnu DCB "mixer_ctl_get_enum_string",0
LOAD:00001937 67 65 74 5F 65 6E 75 6D 5F 73+                              ; DATA XREF: LOAD:00000760↑o
LOAD:00001951 6D 69 78 65 72 5F 63 74 6C 5F+aMixerCtlGetNam DCB "mixer_ctl_get_name",0
LOAD:00001951 67 65 74 5F 6E 61 6D 65 00                                  ; DATA XREF: LOAD:00000770↑o
LOAD:00001964 6D 69 78 65 72 5F 63 74 6C 5F+aMixerCtlGetNum_0 DCB "mixer_ctl_get_num_enums",0
LOAD:00001964 67 65 74 5F 6E 75 6D 5F 65 6E+                              ; DATA XREF: LOAD:00000780↑o
LOAD:0000197C 6D 69 78 65 72 5F 63 74 6C 5F+aMixerCtlGetTyp DCB "mixer_ctl_get_type",0
LOAD:0000197C 67 65 74 5F 74 79 70 65 00                                  ; DATA XREF: LOAD:00000790↑o
LOAD:0000198F 6D 69 78 65 72 5F 63 74 6C 5F+aMixerCtlGetVal DCB "mixer_ctl_get_value",0
LOAD:0000198F 67 65 74 5F 76 61 6C 75 65 00                               ; DATA XREF: LOAD:000007A0↑o
LOAD:000019A3 6D 69 78 65 72 5F 63 74 6C 5F+aMixerCtlSetArr DCB "mixer_ctl_set_array",0
LOAD:000019A3 73 65 74 5F 61 72 72 61 79 00                               ; DATA XREF: LOAD:000007B0↑o
LOAD:000019B7 6D 69 78 65 72 5F 67 65 74 5F+aMixerGetCtl DCB "mixer_get_ctl",0
LOAD:000019B7 63 74 6C 00                                                 ; DATA XREF: LOAD:000007C0↑o
LOAD:000019C5 6D 69 78 65 72 5F 67 65 74 5F+aMixerGetNumCtl DCB "mixer_get_num_ctls",0
LOAD:000019C5 6E 75 6D 5F 63 74 6C 73 00                                  ; DATA XREF: LOAD:000007D0↑o
LOAD:000019D8 72 65 61 6C 6C 6F 63 00       aRealloc DCB "realloc",0      ; DATA XREF: LOAD:000007E0↑o
LOAD:000019E0 67 65 74 5F 76 61 6C 75 65 00 aGetValue DCB "get_value",0   ; DATA XREF: LOAD:00000C60↑o
LOAD:000019EA 70 72 69 6E 74 66 00          aPrintf DCB "printf",0        ; DATA XREF: LOAD:000007F0↑o
LOAD:000019F1 70 75 74 73 00                aPuts DCB "puts",0            ; DATA XREF: LOAD:stru_800↑o
LOAD:000019F6 73 65 74 5F 76 61 6C 75 65 00 aSetValue DCB "set_value",0   ; DATA XREF: LOAD:000008A0↑o
LOAD:00001A00 5F 5F 61 65 61 62 69 5F 6D 65+aAeabiMemcpy8 DCB "__aeabi_memcpy8",0
LOAD:00001A00 6D 63 70 79 38 00                                           ; DATA XREF: LOAD:00000810↑o
LOAD:00001A10 63 76 71 5F 63 6C 6F 73 65 00 aCvqClose DCB "cvq_close",0   ; DATA XREF: LOAD:00000890↑o
LOAD:00001A1A 63 76 71 5F 6F 70 65 6E 00    aCvqOpen DCB "cvq_open",0     ; DATA XREF: LOAD:00000BD0↑o
LOAD:00001A23 63 76 71 5F 72 65 61 64 00    aCvqRead DCB "cvq_read",0     ; DATA XREF: LOAD:00000CE0↑o
LOAD:00001A2C 63 76 71 5F 73 74 61 72 74 00 aCvqStart DCB "cvq_start",0   ; DATA XREF: LOAD:000009E0↑o
LOAD:00001A36 63 76 71 5F 73 74 61 72 74 5F+aCvqStartDecode DCB "cvq_start_decode",0
LOAD:00001A36 64 65 63 6F 64 65 00                                        ; DATA XREF: LOAD:00000DB0↑o
LOAD:00001A47 70 63 6D 5F 72 65 61 64 5F 75+aPcmReadUartCha DCB "pcm_read_uart_char_dev",0
LOAD:00001A47 61 72 74 5F 63 68 61 72 5F 64+                              ; DATA XREF: LOAD:00000B80↑o
LOAD:00001A5E 72 65 61 64 5F 6F 6E 5F 72 61+aReadOnRawDataT DCB "read_on_raw_data_thread",0
LOAD:00001A5E 77 5F 64 61 74 61 5F 74 68 72+                              ; DATA XREF: LOAD:00000AE0↑o
LOAD:00001A76 72 65 61 64 5F 6F 6E 5F 74 68+aReadOnThread DCB "read_on_thread",0
LOAD:00001A76 72 65 61 64 00                                              ; DATA XREF: LOAD:00000BA0↑o
LOAD:00001A85 72 65 61 64 64 69 72 65 63 74+aReaddirect DCB "readdirect",0
LOAD:00001A85 00                                                          ; DATA XREF: LOAD:00000CA0↑o
LOAD:00001A90 75 61 72 74 5F 64 65 76 5F 72+aUartDevReadWra DCB "uart_dev_read_wrapper",0
LOAD:00001A90 65 61 64 5F 77 72 61 70 70 65+                              ; DATA XREF: LOAD:00000DD0↑o
LOAD:00001AA6 75 61 72 74 5F 72 65 61 64 5F+aUartReadWrappe DCB "uart_read_wrapper",0
LOAD:00001AA6 77 72 61 70 70 65 72 00                                     ; DATA XREF: LOAD:00000B60↑o
LOAD:00001AB8 61 62 6F 72 74 00             aAbort DCB "abort",0          ; DATA XREF: LOAD:00000820↑o
LOAD:00001ABE 66 70 72 69 6E 74 66 00       aFprintf DCB "fprintf",0      ; DATA XREF: LOAD:00000830↑o
LOAD:00001AC6 73 74 64 65 72 72 00          aStderr DCB "stderr",0        ; DATA XREF: LOAD:00000840↑o
LOAD:00001ACD 5F 5F 62 73 73 5F 73 74 61 72+aBssStart DCB "__bss_start",0 ; DATA XREF: LOAD:00000DE0↑o
LOAD:00001AD9 5F 65 6E 64 00                aEnd DCB "_end",0             ; DATA XREF: LOAD:00000CF0↑o
LOAD:00001ADE 5F 65 64 61 74 61 00          aEdata DCB "_edata",0         ; DATA XREF: LOAD:00000C70↑o
LOAD:00001AE5 6C 69 62 6C 6F 67 2E 73 6F 00 aLiblogSo DCB "liblog.so",0
LOAD:00001AEF 6C 69 62 63 75 74 69 6C 73 2E+aLibcutilsSo DCB "libcutils.so",0
LOAD:00001AFC 6C 69 62 74 69 6E 79 61 6C 73+aLibtinyalsaSo DCB "libtinyalsa.so",0
LOAD:00001B0B 6C 69 62 61 75 64 69 6F 75 74+aLibaudioutilsS DCB "libaudioutils.so",0
LOAD:00001B1C 6C 69 62 65 78 70 61 74 2E 73+aLibexpatSo DCB "libexpat.so",0
LOAD:00001B28 6C 69 62 68 61 72 64 77 61 72+aLibhardwareLeg DCB "libhardware_legacy.so",0
LOAD:00001B3E 6C 69 62 74 66 61 39 38 39 30+aLibtfa9890So DCB "libtfa9890.so",0
LOAD:00001B4C 6C 69 62 73 69 74 72 69 6C 2D+aLibsitrilAudio DCB "libsitril-audio.so",0
LOAD:00001B5F 6C 69 62 63 2B 2B 2E 73 6F 00 aLibcSo_0 DCB "libc++.so",0
LOAD:00001B69 00 00 00                      DCB 0, 0, 0
LOAD:00001B6C                               ; ELF GNU Hash Table
LOAD:00001B6C 43 00 00 00                   elf_gnu_hash_nbuckets DCD 0x43
LOAD:00001B70 6B 00 00 00                   elf_gnu_hash_symbias DCD 0x6B
LOAD:00001B74 10 00 00 00                   elf_gnu_hash_bitmask_nwords DCD 0x10
LOAD:00001B78 09 00 00 00                   elf_gnu_hash_shift DCD 9
LOAD:00001B7C 20 12 0B 04 80 20 56 44 44 80+elf_gnu_hash_indexes DCD 0x40B1220, 0x44562080, 0x90028044, 0xD459008, 0x8390ACE4, 0x20222C04, 0x381268, 0x3685891, 0x178000
LOAD:00001B7C 02 90 08 90 45 0D E4 AC 90 83+DCD 0xC506A512, 0x5403F, 0x8A0418, 0xE068098A, 0x4D470887, 0x1D5A2A41, 0x12812104
LOAD:00001BBC 6B 00 00 00 6D 00 00 00 6E 00+elf_gnu_hash_bucket DCD 0x6B, 0x6D, 0x6E, 0x70, 0x71, 0, 0x72, 0x78, 0x7A, 0x7D, 0x80, 0x82, 0, 0x83, 0x84, 0, 0x85, 0x88
LOAD:00001BBC 00 00 70 00 00 00 71 00 00 00+DCD 0x89, 0x8B, 0x8C, 0x8D, 0x8F, 0x93, 0x95, 0, 0, 0, 0x96, 0x97, 0, 0x98, 0x9B, 0x9C, 0x9D, 0x9E, 0
LOAD:00001BBC 00 00 00 00 72 00 00 00 78 00+DCD 0, 0x9F, 0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5, 0, 0xA7, 0, 0xA8, 0xA9, 0xAD, 0, 0, 0xAE, 0xAF, 0, 0xB1
LOAD:00001BBC 00 00 7A 00 00 00 7D 00 00 00+DCD 0xB6, 0xB8, 0xBA, 0, 0xBC, 0, 0xBD, 0xBE, 0xC2, 0xC5
LOAD:00001CC8 CA CD A9 4A C5 6A CC 59 AB 0F+elf_gnu_hash_chain DCD 0x4AA9CDCA, 0x59CC6AC5, 0xE9B80FAB, 0x844132F8, 0xC3DFDCE5, 0x43883D2D, 0x1803F66F, 0x5B1F3476, 0x9E5F2242
LOAD:00001CC8 B8 E9 F8 32 41 84 E5 DC DF C3+DCD 0x2E7F29C0, 0x389DA8A, 0x2915AB86, 0xB948DF2B, 0x58C11E98, 0xE4F5913B, 0xB87EF62, 0xC956F5D4, 0xBBFD2431
LOAD:00001CC8 2D 3D 88 43 6F F6 03 18 76 34+DCD 0xBEE6AAAA, 0xB12BE4E, 0x308566ED, 0x880022BC, 0xB85131A1, 0x5086EE8B, 0xE1011211, 0xC5058C5D, 0x7D892514
LOAD:00001CC8 1F 5B 42 22 5F 9E C0 29 7F 2E+DCD 0x36089F10, 0x1AA483BB, 0xE2D71811, 0xAC93A152, 0x3F4E6AE7, 0x58491D51, 0x6A439793, 0x3069CB40, 0xEFC59B31
LOAD:00001CC8 8A DA 89 03 86 AB 15 29 2B DF+DCD 0x57528144, 0xC289E772, 0x64B5FB9E, 0xD534F3F1, 0x37461484, 0x579B7437, 0x991935D3, 0xAC6B6D89, 0xFC21B5DB
LOAD:00001CC8 48 B9 98 1E C1 58 3B 91 F5 E4+DCD 0xF24FA314, 0xAC229870, 0xF851C793, 0x83F56DCD, 0x3077B3FD, 0x526805B9, 0x8D7061B7, 0x6B6E93D1, 0x91230C95
LOAD:00001CC8 62 EF 87 0B D4 F5 56 C9 31 24+DCD 0xDA002FE9, 0x24AD1A3F, 0x630D6CE1, 0x2D374A13, 0xE9379F10, 0xC60135B1, 0xB127BB9F, 0xD126D6F9, 0x18895564
LOAD:00001CC8 FD BB AA AA E6 BE 4E BE 12 0B+DCD 0x843F9E46, 0xF144BE96, 0xCDB2F121, 0xECD54543, 0x6C7C85ED, 0xEF938CC8, 0x7F1CA3DD, 0x55396462, 0x9675F086
LOAD:00001CC8 ED 66 85 30 BC 22 00 88 A1 31+DCD 0xA3EB75B2, 0x630EE2AA, 0x7C92E3BB, 0xCE961E78, 0xB99D1E8F, 0x50ED2882, 0x3DBA439F, 0x1E56A83A, 0x7BF18933
LOAD:00001CC8 51 B8 8B EE 86 50 11 12 01 E1+DCD 0xB43BE8CD, 0x630A1AA3, 0xD05A826, 0x3257A372, 0x6101BDA0, 0xB6F4D13F, 0x3CBE06D2, 0xD38EF41A, 0x1C5871D9
LOAD:00001CC8 5D 8C 05 C5 14 25 89 7D 10 9F+DCD 0xFDB43F25
LOAD:00001E34                               ; ELF GNU Symbol Version Table
LOAD:00001E34 00 00                         DCW 0
LOAD:00001E36 02 00                         DCW 2                         ; __cxa_finalize@@LIBC
LOAD:00001E38 02 00                         DCW 2                         ; __cxa_atexit@@LIBC
LOAD:00001E3A 02 00                         DCW 2                         ; __register_atfork@@LIBC
LOAD:00001E3C 04 00                         DCW 4                         ; dladdr@@LIBC
LOAD:00001E3E 00 00                         DCW 0                         ; local  symbol: NxpTfa98xx_GetSpeakerImpedance
LOAD:00001E40 00 00                         DCW 0                         ; local  symbol: NxpTfa98xx_PowerOff
LOAD:00001E42 00 00                         DCW 0                         ; local  symbol: NxpTfa98xx_PowerOn
LOAD:00001E44 00 00                         DCW 0                         ; local  symbol: NxpTfa98xx_ReCalibrate
LOAD:00001E46 03 00                         DCW 3                         ; __gnu_Unwind_Find_exidx@@LIBC_N
LOAD:00001E48 00 00                         DCW 0                         ; local  symbol: NxpTfa98xx_SetMute
LOAD:00001E4A 00 00                         DCW 0                         ; local  symbol: NxpTfa98xx_StartUp
LOAD:00001E4C 00 00                         DCW 0                         ; local  symbol: NxpTfa98xx_Stop
LOAD:00001E4E 00 00                         DCW 0                         ; local  symbol: Open
LOAD:00001E50 00 00                         DCW 0                         ; local  symbol: SetAudioClock
LOAD:00001E52 00 00                         DCW 0                         ; local  symbol: SetAudioLoopback
LOAD:00001E54 00 00                         DCW 0                         ; local  symbol: SetAudioVolume
LOAD:00001E56 03 00                         DCW 3                         ; __aeabi_memclr@@LIBC_N
LOAD:00001E58 03 00                         DCW 3                         ; __aeabi_memclr8@@LIBC_N
LOAD:00001E5A 03 00                         DCW 3                         ; __aeabi_memcpy@@LIBC_N
LOAD:00001E5C 00 00                         DCW 0                         ; local  symbol: __android_log_print
LOAD:00001E5E 02 00                         DCW 2                         ; __errno@@LIBC
LOAD:00001E60 03 00                         DCW 3                         ; __fread_chk@@LIBC_N
LOAD:00001E62 03 00                         DCW 3                         ; __fwrite_chk@@LIBC_N
LOAD:00001E64 02 00                         DCW 2                         ; __read_chk@@LIBC
LOAD:00001E66 02 00                         DCW 2                         ; __snprintf_chk@@LIBC
LOAD:00001E68 02 00                         DCW 2                         ; __sprintf_chk@@LIBC
LOAD:00001E6A 02 00                         DCW 2                         ; __stack_chk_fail@@LIBC
LOAD:00001E6C 02 00                         DCW 2                         ; __stack_chk_guard@@LIBC
LOAD:00001E6E 02 00                         DCW 2                         ; __strcat_chk@@LIBC
LOAD:00001E70 02 00                         DCW 2                         ; access@@LIBC
LOAD:00001E72 02 00                         DCW 2                         ; atoi@@LIBC
LOAD:00001E74 02 00                         DCW 2                         ; calloc@@LIBC
LOAD:00001E76 02 00                         DCW 2                         ; close@@LIBC
LOAD:00001E78 00 00                         DCW 0                         ; local  symbol: create_resampler
LOAD:00001E7A 02 00                         DCW 2                         ; fclose@@LIBC
LOAD:00001E7C 02 00                         DCW 2                         ; fopen@@LIBC
LOAD:00001E7E 02 00                         DCW 2                         ; free@@LIBC
LOAD:00001E80 02 00                         DCW 2                         ; fseek@@LIBC
LOAD:00001E82 05 00                         DCW 5                         ; log10@@LIBC
LOAD:00001E84 02 00                         DCW 2                         ; malloc@@LIBC
LOAD:00001E86 00 00                         DCW 0                         ; local  symbol: mixer_close
LOAD:00001E88 00 00                         DCW 0                         ; local  symbol: mixer_ctl_get_num_values
LOAD:00001E8A 00 00                         DCW 0                         ; local  symbol: mixer_ctl_set_enum_by_string
LOAD:00001E8C 00 00                         DCW 0                         ; local  symbol: mixer_ctl_set_value
LOAD:00001E8E 00 00                         DCW 0                         ; local  symbol: mixer_get_ctl_by_name
LOAD:00001E90 00 00                         DCW 0                         ; local  symbol: mixer_open
LOAD:00001E92 02 00                         DCW 2                         ; mkdir@@LIBC
LOAD:00001E94 02 00                         DCW 2                         ; open@@LIBC
LOAD:00001E96 00 00                         DCW 0                         ; local  symbol: pcm_close
LOAD:00001E98 00 00                         DCW 0                         ; local  symbol: pcm_frames_to_bytes
LOAD:00001E9A 00 00                         DCW 0                         ; local  symbol: pcm_get_buffer_size
LOAD:00001E9C 00 00                         DCW 0                         ; local  symbol: pcm_get_error
LOAD:00001E9E 00 00                         DCW 0                         ; local  symbol: pcm_get_htimestamp
LOAD:00001EA0 00 00                         DCW 0                         ; local  symbol: pcm_is_ready
LOAD:00001EA2 00 00                         DCW 0                         ; local  symbol: pcm_open
LOAD:00001EA4 00 00                         DCW 0                         ; local  symbol: pcm_params_free
LOAD:00001EA6 00 00                         DCW 0                         ; local  symbol: pcm_params_get
LOAD:00001EA8 00 00                         DCW 0                         ; local  symbol: pcm_params_get_max
LOAD:00001EAA 00 00                         DCW 0                         ; local  symbol: pcm_params_get_min
LOAD:00001EAC 00 00                         DCW 0                         ; local  symbol: pcm_prepare
LOAD:00001EAE 00 00                         DCW 0                         ; local  symbol: pcm_read
LOAD:00001EB0 00 00                         DCW 0                         ; local  symbol: pcm_stop
LOAD:00001EB2 00 00                         DCW 0                         ; local  symbol: pcm_write
LOAD:00001EB4 00 00                         DCW 0                         ; local  symbol: property_get
LOAD:00001EB6 00 00                         DCW 0                         ; local  symbol: property_set
LOAD:00001EB8 02 00                         DCW 2                         ; pthread_create@@LIBC
LOAD:00001EBA 02 00                         DCW 2                         ; pthread_join@@LIBC
LOAD:00001EBC 02 00                         DCW 2                         ; pthread_mutex_lock@@LIBC
LOAD:00001EBE 02 00                         DCW 2                         ; pthread_mutex_unlock@@LIBC
LOAD:00001EC0 00 00                         DCW 0                         ; local  symbol: release_resampler
LOAD:00001EC2 02 00                         DCW 2                         ; signal@@LIBC
LOAD:00001EC4 00 00                         DCW 0                         ; local  symbol: str_parms_add_str
LOAD:00001EC6 00 00                         DCW 0                         ; local  symbol: str_parms_create
LOAD:00001EC8 00 00                         DCW 0                         ; local  symbol: str_parms_create_str
LOAD:00001ECA 00 00                         DCW 0                         ; local  symbol: str_parms_destroy
LOAD:00001ECC 00 00                         DCW 0                         ; local  symbol: str_parms_get_str
LOAD:00001ECE 00 00                         DCW 0                         ; local  symbol: str_parms_to_str
LOAD:00001ED0 02 00                         DCW 2                         ; strcmp@@LIBC
LOAD:00001ED2 02 00                         DCW 2                         ; strdup@@LIBC
LOAD:00001ED4 02 00                         DCW 2                         ; strerror@@LIBC
LOAD:00001ED6 02 00                         DCW 2                         ; strlen@@LIBC
LOAD:00001ED8 02 00                         DCW 2                         ; strncmp@@LIBC
LOAD:00001EDA 02 00                         DCW 2                         ; usleep@@LIBC
LOAD:00001EDC 00 00                         DCW 0                         ; local  symbol: XML_GetBuffer
LOAD:00001EDE 00 00                         DCW 0                         ; local  symbol: XML_ParseBuffer
LOAD:00001EE0 00 00                         DCW 0                         ; local  symbol: XML_ParserCreate
LOAD:00001EE2 00 00                         DCW 0                         ; local  symbol: XML_ParserFree
LOAD:00001EE4 00 00                         DCW 0                         ; local  symbol: XML_SetElementHandler
LOAD:00001EE6 00 00                         DCW 0                         ; local  symbol: XML_SetUserData
LOAD:00001EE8 03 00                         DCW 3                         ; __aeabi_memcpy4@@LIBC_N
LOAD:00001EEA 00 00                         DCW 0                         ; local  symbol: mixer_ctl_get_array
LOAD:00001EEC 00 00                         DCW 0                         ; local  symbol: mixer_ctl_get_enum_string
LOAD:00001EEE 00 00                         DCW 0                         ; local  symbol: mixer_ctl_get_name
LOAD:00001EF0 00 00                         DCW 0                         ; local  symbol: mixer_ctl_get_num_enums
LOAD:00001EF2 00 00                         DCW 0                         ; local  symbol: mixer_ctl_get_type
LOAD:00001EF4 00 00                         DCW 0                         ; local  symbol: mixer_ctl_get_value
LOAD:00001EF6 00 00                         DCW 0                         ; local  symbol: mixer_ctl_set_array
LOAD:00001EF8 00 00                         DCW 0                         ; local  symbol: mixer_get_ctl
LOAD:00001EFA 00 00                         DCW 0                         ; local  symbol: mixer_get_num_ctls
LOAD:00001EFC 02 00                         DCW 2                         ; realloc@@LIBC
LOAD:00001EFE 02 00                         DCW 2                         ; printf@@LIBC
LOAD:00001F00 02 00                         DCW 2                         ; puts@@LIBC
LOAD:00001F02 03 00                         DCW 3                         ; __aeabi_memcpy8@@LIBC_N
LOAD:00001F04 02 00                         DCW 2                         ; abort@@LIBC
LOAD:00001F06 02 00                         DCW 2                         ; fprintf@@LIBC
LOAD:00001F08 02 00                         DCW 2                         ; stderr@@LIBC
LOAD:00001F0A 01 00                         DCW 1                         ; global symbol: audio_route_update_mixer
LOAD:00001F0C 01 00                         DCW 1                         ; global symbol: out_channels_name_to_enum_table
LOAD:00001F0E 01 00                         DCW 1                         ; global symbol: voice_call_wb_headset
LOAD:00001F10 01 00                         DCW 1                         ; global symbol: audio_route_init
LOAD:00001F12 01 00                         DCW 1                         ; global symbol: cvq_close
LOAD:00001F14 01 00                         DCW 1                         ; global symbol: set_value
LOAD:00001F16 01 00                         DCW 1                         ; global symbol: voice_call_bluetooth_sco
LOAD:00001F18 01 00                         DCW 1                         ; global symbol: audio_route_apply_path
LOAD:00001F1A 01 00                         DCW 1                         ; global symbol: media_earpiece
LOAD:00001F1C 01 00                         DCW 1                         ; global symbol: media_speaker_mic_nr_off
LOAD:00001F1E 01 00                         DCW 1                         ; global symbol: pcm_config_voice_call
LOAD:00001F20 01 00                         DCW 1                         ; global symbol: test_pri_mic
LOAD:00001F22 01 00                         DCW 1                         ; global symbol: thread_refresh_audio_route
LOAD:00001F24 01 00                         DCW 1                         ; global symbol: communication_headphones
LOAD:00001F26 01 00                         DCW 1                         ; global symbol: default_settings
LOAD:00001F28 01 00                         DCW 1                         ; global symbol: HMI
LOAD:00001F2A 01 00                         DCW 1                         ; global symbol: voice_call_headphones
LOAD:00001F2C 01 00                         DCW 1                         ; global symbol: voice_rec_headset
LOAD:00001F2E 01 00                         DCW 1                         ; global symbol: test_modem_loopback_headphone
LOAD:00001F30 01 00                         DCW 1                         ; global symbol: test_speaker
LOAD:00001F32 01 00                         DCW 1                         ; global symbol: voice_call_wb_headphones
LOAD:00001F34 01 00                         DCW 1                         ; global symbol: media_speaker_xunfei
LOAD:00001F36 01 00                         DCW 1                         ; global symbol: speaker_and_headphones
LOAD:00001F38 01 00                         DCW 1                         ; global symbol: voice_call_wb_earpiece
LOAD:00001F3A 01 00                         DCW 1                         ; global symbol: media_headphones_xunfei
LOAD:00001F3C 01 00                         DCW 1                         ; global symbol: cvq_start
LOAD:00001F3E 01 00                         DCW 1                         ; global symbol: communication_bluetooth_sco
LOAD:00001F40 01 00                         word_1F40 DCW 1               ; DATA XREF: .rodata:off_ED40↓o
LOAD:00001F40                                                             ; global symbol: media_earpiece_xunfei
LOAD:00001F42 01 00                         DCW 1                         ; global symbol: thread_test_hifi
LOAD:00001F44 01 00                         DCW 1                         ; global symbol: pcm_config_in
LOAD:00001F46 01 00                         DCW 1                         ; global symbol: camcorder_earpiece
LOAD:00001F48 01 00                         DCW 1                         ; global symbol: test_ter_mic
LOAD:00001F4A 01 00                         DCW 1                         ; global symbol: media_headset_xunfei
LOAD:00001F4C 01 00                         DCW 1                         ; global symbol: media_earpiece_mic_nr_off
LOAD:00001F4E 01 00                         DCW 1                         ; global symbol: pcm_config_backend
LOAD:00001F50 01 00                         DCW 1                         ; global symbol: test_modem_loopback_earphone
LOAD:00001F52 01 00                         DCW 1                         ; global symbol: amplifier_calibrate
LOAD:00001F54 01 00                         DCW 1                         ; global symbol: camcorder_headphones
LOAD:00001F56 01 00                         DCW 1                         ; global symbol: camcorder_speaker
LOAD:00001F58 01 00                         DCW 1                         ; global symbol: get_input_source_id
LOAD:00001F5A 01 00                         DCW 1                         ; global symbol: communication_speaker
LOAD:00001F5C 01 00                         DCW 1                         ; global symbol: read_on_raw_data_thread
LOAD:00001F5E 01 00                         DCW 1                         ; global symbol: media_headset_mic_nr_off
LOAD:00001F60 01 00                         DCW 1                         ; global symbol: voice_call_wb_bluetooth_sco_nrec_off
LOAD:00001F62 01 00                         DCW 1                         ; global symbol: speaker_and_bt_sco
LOAD:00001F64 01 00                         DCW 1                         ; global symbol: media_headphones_mic_nr_off
LOAD:00001F66 01 00                         DCW 1                         ; global symbol: voice_call_bluetooth_sco_nrec_off
LOAD:00001F68 01 00                         DCW 1                         ; global symbol: voice_call_headset
LOAD:00001F6A 01 00                         DCW 1                         ; global symbol: bluetooth_sco_xunfei
LOAD:00001F6C 01 00                         DCW 1                         ; global symbol: uart_read_wrapper
LOAD:00001F6E 01 00                         DCW 1                         ; global symbol: voice_call_wb_speaker
LOAD:00001F70 01 00                         DCW 1                         ; global symbol: pcm_read_uart_char_dev
LOAD:00001F72 01 00                         DCW 1                         ; global symbol: voice_rec_earpiece
LOAD:00001F74 01 00                         DCW 1                         ; global symbol: read_on_thread
LOAD:00001F76 01 00                         DCW 1                         ; global symbol: is_headphone_on
LOAD:00001F78 01 00                         DCW 1                         ; global symbol: voice_rec_speaker
LOAD:00001F7A 01 00                         DCW 1                         ; global symbol: cvq_open
LOAD:00001F7C 01 00                         DCW 1                         ; global symbol: pcm_data_dump
LOAD:00001F7E 01 00                         DCW 1                         ; global symbol: get_output_device_id
LOAD:00001F80 01 00                         DCW 1                         ; global symbol: test_headphone
LOAD:00001F82 01 00                         DCW 1                         ; global symbol: bluetooth_sco
LOAD:00001F84 01 00                         DCW 1                         ; global symbol: communication_earpiece
LOAD:00001F86 01 00                         DCW 1                         ; global symbol: adev_set_headset_volume
LOAD:00001F88 01 00                         DCW 1                         ; global symbol: audio_route_free
LOAD:00001F8A 01 00                         DCW 1                         ; global symbol: test_sec_mic
LOAD:00001F8C 01 00                         DCW 1                         ; global symbol: get_value
LOAD:00001F8E 01 00                         DCW 1                         ; global symbol: _edata
LOAD:00001F90 01 00                         DCW 1                         ; global symbol: test_set_hifi_gain
LOAD:00001F92 01 00                         DCW 1                         ; global symbol: test_earphones
LOAD:00001F94 01 00                         DCW 1                         ; global symbol: readdirect
LOAD:00001F96 01 00                         DCW 1                         ; global symbol: media_headphones
LOAD:00001F98 01 00                         DCW 1                         ; global symbol: voice_call_wb_bluetooth_sco
LOAD:00001F9A 01 00                         DCW 1                         ; global symbol: voice_rec_headphones
LOAD:00001F9C 01 00                         DCW 1                         ; global symbol: cvq_read
LOAD:00001F9E 01 00                         DCW 1                         ; global symbol: _end
LOAD:00001FA0 01 00                         DCW 1                         ; global symbol: communication_headset
LOAD:00001FA2 01 00                         DCW 1                         ; global symbol: media_speaker
LOAD:00001FA4 01 00                         DCW 1                         ; global symbol: media_headset
LOAD:00001FA6 01 00                         DCW 1                         ; global symbol: pcm_config_sco
LOAD:00001FA8 01 00                         DCW 1                         ; global symbol: pcm_config
LOAD:00001FAA 01 00                         DCW 1                         ; global symbol: pcm_config_amplifier
LOAD:00001FAC 01 00                         DCW 1                         ; global symbol: wav_player_start
LOAD:00001FAE 01 00                         DCW 1                         ; global symbol: cvq_init
LOAD:00001FB0 01 00                         DCW 1                         ; global symbol: audio_route_reset
LOAD:00001FB2 01 00                         DCW 1                         ; global symbol: voice_call_earpiece
LOAD:00001FB4 01 00                         DCW 1                         ; global symbol: voice_call_speaker
LOAD:00001FB6 01 00                         DCW 1                         ; global symbol: cvq_start_decode
LOAD:00001FB8 01 00                         DCW 1                         ; global symbol: audio_route_reset_path
LOAD:00001FBA 01 00                         DCW 1                         ; global symbol: uart_dev_read_wrapper
LOAD:00001FBC 01 00                         DCW 1                         ; global symbol: __bss_start
LOAD:00001FBE 01 00                         DCW 1                         ; global symbol: wav_player_stop
LOAD:00001FC0                               ; ELF GNU Symbol Version Definitions
LOAD:00001FC0 01 00 01 00 01 00 01 00 CF 3F+Elf32_Verdef <1, 1, 1, 1, 0x8583FCF, 0x14, 0>
LOAD:00001FD4 1D 00 00 00 00 00 00 00       Elf32_Verdaux <aAudioPrimaryM8 - byte_E00, 0> ; "audio.primary.m86.so"
LOAD:00001FDC                               ; ELF GNU Symbol Version Requirements
LOAD:00001FDC 01 00 02 00 15 00 00 00 10 00+Elf32_Verneed <1, 2, aLibcSo - byte_E00, 0x10, 0x30> ; "libc.so"
LOAD:00001FEC 63 0D 05 00 00 00 02 00 10 00+Elf32_Vernaux <0x50D63, 0, 2, aLibc - byte_E00, 0x10> ; "LIBC"
LOAD:00001FFC 3E 69 0D 05 00 00 03 00 DA 00+Elf32_Vernaux <0x50D693E, 0, 3, aLibcN - byte_E00, 0> ; "LIBC_N"
LOAD:0000200C 01 00 01 00 5C 00 00 00 10 00+Elf32_Verneed <1, 1, aLibdlSo - byte_E00, 0x10, 0x20> ; "libdl.so"
LOAD:0000201C 63 0D 05 00 00 00 04 00 10 00+Elf32_Vernaux <0x50D63, 0, 4, aLibc - byte_E00, 0> ; "LIBC"
LOAD:0000202C 01 00 01 00 05 04 00 00 10 00+Elf32_Verneed <1, 1, aLibmSo - byte_E00, 0x10, 0> ; "libm.so"
LOAD:0000203C 63 0D 05 00 00 00 05 00 10 00+Elf32_Vernaux <0x50D63, 0, 5, aLibc - byte_E00, 0> ; "LIBC"
LOAD:0000204C                               ; ELF REL Relocation Table
LOAD:0000204C 68 09 01 00 17 00 00 00       Elf32_Rel <0x10968, 0x17>     ; R_ARM_RELATIVE
LOAD:00002054 6C 09 01 00 17 00 00 00       Elf32_Rel <0x1096C, 0x17>     ; R_ARM_RELATIVE
LOAD:0000205C 74 09 01 00 17 00 00 00       Elf32_Rel <0x10974, 0x17>     ; R_ARM_RELATIVE
LOAD:00002064 7C 09 01 00 17 00 00 00       Elf32_Rel <0x1097C, 0x17>     ; R_ARM_RELATIVE
LOAD:0000206C 84 09 01 00 17 00 00 00       Elf32_Rel <0x10984, 0x17>     ; R_ARM_RELATIVE
LOAD:00002074 88 09 01 00 17 00 00 00       Elf32_Rel <0x10988, 0x17>     ; R_ARM_RELATIVE
LOAD:0000207C 8C 09 01 00 17 00 00 00       Elf32_Rel <0x1098C, 0x17>     ; R_ARM_RELATIVE
LOAD:00002084 90 09 01 00 17 00 00 00       Elf32_Rel <0x10990, 0x17>     ; R_ARM_RELATIVE
LOAD:0000208C 94 09 01 00 17 00 00 00       Elf32_Rel <0x10994, 0x17>     ; R_ARM_RELATIVE
LOAD:00002094 98 09 01 00 17 00 00 00       Elf32_Rel <0x10998, 0x17>     ; R_ARM_RELATIVE
LOAD:0000209C 9C 09 01 00 17 00 00 00       Elf32_Rel <0x1099C, 0x17>     ; R_ARM_RELATIVE
LOAD:000020A4 A0 09 01 00 17 00 00 00       Elf32_Rel <0x109A0, 0x17>     ; R_ARM_RELATIVE
LOAD:000020AC A4 09 01 00 17 00 00 00       Elf32_Rel <0x109A4, 0x17>     ; R_ARM_RELATIVE
LOAD:000020B4 A8 09 01 00 17 00 00 00       Elf32_Rel <0x109A8, 0x17>     ; R_ARM_RELATIVE
LOAD:000020BC AC 09 01 00 17 00 00 00       Elf32_Rel <0x109AC, 0x17>     ; R_ARM_RELATIVE
LOAD:000020C4 B0 09 01 00 17 00 00 00       Elf32_Rel <0x109B0, 0x17>     ; R_ARM_RELATIVE
LOAD:000020CC B4 09 01 00 17 00 00 00       Elf32_Rel <0x109B4, 0x17>     ; R_ARM_RELATIVE
LOAD:000020D4 B8 09 01 00 17 00 00 00       Elf32_Rel <0x109B8, 0x17>     ; R_ARM_RELATIVE
LOAD:000020DC BC 09 01 00 17 00 00 00       Elf32_Rel <0x109BC, 0x17>     ; R_ARM_RELATIVE
LOAD:000020E4 C0 09 01 00 17 00 00 00       Elf32_Rel <0x109C0, 0x17>     ; R_ARM_RELATIVE
LOAD:000020EC C4 09 01 00 17 00 00 00       Elf32_Rel <0x109C4, 0x17>     ; R_ARM_RELATIVE
LOAD:000020F4 C8 09 01 00 17 00 00 00       Elf32_Rel <0x109C8, 0x17>     ; R_ARM_RELATIVE
LOAD:000020FC CC 09 01 00 17 00 00 00       Elf32_Rel <0x109CC, 0x17>     ; R_ARM_RELATIVE
LOAD:00002104 D0 09 01 00 17 00 00 00       Elf32_Rel <0x109D0, 0x17>     ; R_ARM_RELATIVE
LOAD:0000210C D4 09 01 00 17 00 00 00       Elf32_Rel <0x109D4, 0x17>     ; R_ARM_RELATIVE
LOAD:00002114 D8 09 01 00 17 00 00 00       Elf32_Rel <0x109D8, 0x17>     ; R_ARM_RELATIVE
LOAD:0000211C DC 09 01 00 17 00 00 00       Elf32_Rel <0x109DC, 0x17>     ; R_ARM_RELATIVE
LOAD:00002124 E0 09 01 00 17 00 00 00       Elf32_Rel <0x109E0, 0x17>     ; R_ARM_RELATIVE
LOAD:0000212C E4 09 01 00 17 00 00 00       Elf32_Rel <0x109E4, 0x17>     ; R_ARM_RELATIVE
LOAD:00002134 E8 09 01 00 17 00 00 00       Elf32_Rel <0x109E8, 0x17>     ; R_ARM_RELATIVE
LOAD:0000213C EC 09 01 00 17 00 00 00       Elf32_Rel <0x109EC, 0x17>     ; R_ARM_RELATIVE
LOAD:00002144 F0 09 01 00 17 00 00 00       Elf32_Rel <0x109F0, 0x17>     ; R_ARM_RELATIVE
LOAD:0000214C F4 09 01 00 17 00 00 00       Elf32_Rel <0x109F4, 0x17>     ; R_ARM_RELATIVE
LOAD:00002154 F8 09 01 00 17 00 00 00       Elf32_Rel <0x109F8, 0x17>     ; R_ARM_RELATIVE
LOAD:0000215C FC 09 01 00 17 00 00 00       Elf32_Rel <0x109FC, 0x17>     ; R_ARM_RELATIVE
LOAD:00002164 00 0A 01 00 17 00 00 00       Elf32_Rel <0x10A00, 0x17>     ; R_ARM_RELATIVE
LOAD:0000216C 04 0A 01 00 17 00 00 00       Elf32_Rel <0x10A04, 0x17>     ; R_ARM_RELATIVE
LOAD:00002174 08 0A 01 00 17 00 00 00       Elf32_Rel <0x10A08, 0x17>     ; R_ARM_RELATIVE
LOAD:0000217C 0C 0A 01 00 17 00 00 00       Elf32_Rel <0x10A0C, 0x17>     ; R_ARM_RELATIVE
LOAD:00002184 10 0A 01 00 17 00 00 00       Elf32_Rel <0x10A10, 0x17>     ; R_ARM_RELATIVE
LOAD:0000218C 14 0A 01 00 17 00 00 00       Elf32_Rel <0x10A14, 0x17>     ; R_ARM_RELATIVE
LOAD:00002194 18 0A 01 00 17 00 00 00       Elf32_Rel <0x10A18, 0x17>     ; R_ARM_RELATIVE
LOAD:0000219C 1C 0A 01 00 17 00 00 00       Elf32_Rel <0x10A1C, 0x17>     ; R_ARM_RELATIVE
LOAD:000021A4 20 0A 01 00 17 00 00 00       Elf32_Rel <0x10A20, 0x17>     ; R_ARM_RELATIVE
LOAD:000021AC 24 0A 01 00 17 00 00 00       Elf32_Rel <0x10A24, 0x17>     ; R_ARM_RELATIVE
LOAD:000021B4 28 0A 01 00 17 00 00 00       Elf32_Rel <0x10A28, 0x17>     ; R_ARM_RELATIVE
LOAD:000021BC 2C 0A 01 00 17 00 00 00       Elf32_Rel <0x10A2C, 0x17>     ; R_ARM_RELATIVE
LOAD:000021C4 30 0A 01 00 17 00 00 00       Elf32_Rel <0x10A30, 0x17>     ; R_ARM_RELATIVE
LOAD:000021CC 34 0A 01 00 17 00 00 00       Elf32_Rel <0x10A34, 0x17>     ; R_ARM_RELATIVE
LOAD:000021D4 38 0A 01 00 17 00 00 00       Elf32_Rel <0x10A38, 0x17>     ; R_ARM_RELATIVE
LOAD:000021DC 3C 0A 01 00 17 00 00 00       Elf32_Rel <0x10A3C, 0x17>     ; R_ARM_RELATIVE
LOAD:000021E4 40 0A 01 00 17 00 00 00       Elf32_Rel <0x10A40, 0x17>     ; R_ARM_RELATIVE
LOAD:000021EC 44 0A 01 00 17 00 00 00       Elf32_Rel <0x10A44, 0x17>     ; R_ARM_RELATIVE
LOAD:000021F4 48 0A 01 00 17 00 00 00       Elf32_Rel <0x10A48, 0x17>     ; R_ARM_RELATIVE
LOAD:000021FC 4C 0A 01 00 17 00 00 00       Elf32_Rel <0x10A4C, 0x17>     ; R_ARM_RELATIVE
LOAD:00002204 50 0A 01 00 17 00 00 00       Elf32_Rel <0x10A50, 0x17>     ; R_ARM_RELATIVE
LOAD:0000220C 54 0A 01 00 17 00 00 00       Elf32_Rel <0x10A54, 0x17>     ; R_ARM_RELATIVE
LOAD:00002214 58 0A 01 00 17 00 00 00       Elf32_Rel <0x10A58, 0x17>     ; R_ARM_RELATIVE
LOAD:0000221C 5C 0A 01 00 17 00 00 00       Elf32_Rel <0x10A5C, 0x17>     ; R_ARM_RELATIVE
LOAD:00002224 60 0A 01 00 17 00 00 00       Elf32_Rel <0x10A60, 0x17>     ; R_ARM_RELATIVE
LOAD:0000222C 64 0A 01 00 17 00 00 00       Elf32_Rel <0x10A64, 0x17>     ; R_ARM_RELATIVE
LOAD:00002234 68 0A 01 00 17 00 00 00       Elf32_Rel <0x10A68, 0x17>     ; R_ARM_RELATIVE
LOAD:0000223C 6C 0A 01 00 17 00 00 00       Elf32_Rel <0x10A6C, 0x17>     ; R_ARM_RELATIVE
LOAD:00002244 70 0A 01 00 17 00 00 00       Elf32_Rel <0x10A70, 0x17>     ; R_ARM_RELATIVE
LOAD:0000224C 74 0A 01 00 17 00 00 00       Elf32_Rel <0x10A74, 0x17>     ; R_ARM_RELATIVE
LOAD:00002254 78 0A 01 00 17 00 00 00       Elf32_Rel <0x10A78, 0x17>     ; R_ARM_RELATIVE
LOAD:0000225C 7C 0A 01 00 17 00 00 00       Elf32_Rel <0x10A7C, 0x17>     ; R_ARM_RELATIVE
LOAD:00002264 80 0A 01 00 17 00 00 00       Elf32_Rel <0x10A80, 0x17>     ; R_ARM_RELATIVE
LOAD:0000226C 84 0A 01 00 17 00 00 00       Elf32_Rel <0x10A84, 0x17>     ; R_ARM_RELATIVE
LOAD:00002274 88 0A 01 00 17 00 00 00       Elf32_Rel <0x10A88, 0x17>     ; R_ARM_RELATIVE
LOAD:0000227C 8C 0A 01 00 17 00 00 00       Elf32_Rel <0x10A8C, 0x17>     ; R_ARM_RELATIVE
LOAD:00002284 90 0A 01 00 17 00 00 00       Elf32_Rel <0x10A90, 0x17>     ; R_ARM_RELATIVE
LOAD:0000228C 94 0A 01 00 17 00 00 00       Elf32_Rel <0x10A94, 0x17>     ; R_ARM_RELATIVE
LOAD:00002294 98 0A 01 00 17 00 00 00       Elf32_Rel <0x10A98, 0x17>     ; R_ARM_RELATIVE
LOAD:0000229C 9C 0A 01 00 17 00 00 00       Elf32_Rel <0x10A9C, 0x17>     ; R_ARM_RELATIVE
LOAD:000022A4 A0 0A 01 00 17 00 00 00       Elf32_Rel <0x10AA0, 0x17>     ; R_ARM_RELATIVE
LOAD:000022AC A4 0A 01 00 17 00 00 00       Elf32_Rel <0x10AA4, 0x17>     ; R_ARM_RELATIVE
LOAD:000022B4 A8 0A 01 00 17 00 00 00       Elf32_Rel <0x10AA8, 0x17>     ; R_ARM_RELATIVE
LOAD:000022BC AC 0A 01 00 17 00 00 00       Elf32_Rel <0x10AAC, 0x17>     ; R_ARM_RELATIVE
LOAD:000022C4 B0 0A 01 00 17 00 00 00       Elf32_Rel <0x10AB0, 0x17>     ; R_ARM_RELATIVE
LOAD:000022CC B4 0A 01 00 17 00 00 00       Elf32_Rel <0x10AB4, 0x17>     ; R_ARM_RELATIVE
LOAD:000022D4 B8 0A 01 00 17 00 00 00       Elf32_Rel <0x10AB8, 0x17>     ; R_ARM_RELATIVE
LOAD:000022DC BC 0A 01 00 17 00 00 00       Elf32_Rel <0x10ABC, 0x17>     ; R_ARM_RELATIVE
LOAD:000022E4 C0 0A 01 00 17 00 00 00       Elf32_Rel <0x10AC0, 0x17>     ; R_ARM_RELATIVE
LOAD:000022EC DC 0B 01 00 17 00 00 00       Elf32_Rel <0x10BDC, 0x17>     ; R_ARM_RELATIVE
LOAD:000022F4 E0 0B 01 00 17 00 00 00       Elf32_Rel <0x10BE0, 0x17>     ; R_ARM_RELATIVE
LOAD:000022FC E4 0B 01 00 17 00 00 00       Elf32_Rel <0x10BE4, 0x17>     ; R_ARM_RELATIVE
LOAD:00002304 E8 0B 01 00 17 00 00 00       Elf32_Rel <0x10BE8, 0x17>     ; R_ARM_RELATIVE
LOAD:0000230C EC 0B 01 00 17 00 00 00       Elf32_Rel <0x10BEC, 0x17>     ; R_ARM_RELATIVE
LOAD:00002314 F0 0B 01 00 17 00 00 00       Elf32_Rel <0x10BF0, 0x17>     ; R_ARM_RELATIVE
LOAD:0000231C F4 0B 01 00 17 00 00 00       Elf32_Rel <0x10BF4, 0x17>     ; R_ARM_RELATIVE
LOAD:00002324 F8 0B 01 00 17 00 00 00       Elf32_Rel <0x10BF8, 0x17>     ; R_ARM_RELATIVE
LOAD:0000232C FC 0B 01 00 17 00 00 00       Elf32_Rel <0x10BFC, 0x17>     ; R_ARM_RELATIVE
LOAD:00002334 00 0C 01 00 17 00 00 00       Elf32_Rel <0x10C00, 0x17>     ; R_ARM_RELATIVE
LOAD:0000233C 0C 0C 01 00 17 00 00 00       Elf32_Rel <0x10C0C, 0x17>     ; R_ARM_RELATIVE
LOAD:00002344 10 0C 01 00 17 00 00 00       Elf32_Rel <0x10C10, 0x17>     ; R_ARM_RELATIVE
LOAD:0000234C 14 0C 01 00 17 00 00 00       Elf32_Rel <0x10C14, 0x17>     ; R_ARM_RELATIVE
LOAD:00002354 18 0C 01 00 17 00 00 00       Elf32_Rel <0x10C18, 0x17>     ; R_ARM_RELATIVE
LOAD:0000235C 1C 0C 01 00 17 00 00 00       Elf32_Rel <0x10C1C, 0x17>     ; R_ARM_RELATIVE
LOAD:00002364 20 0C 01 00 17 00 00 00       Elf32_Rel <0x10C20, 0x17>     ; R_ARM_RELATIVE
LOAD:0000236C 24 0C 01 00 17 00 00 00       Elf32_Rel <0x10C24, 0x17>     ; R_ARM_RELATIVE
LOAD:00002374 28 0C 01 00 17 00 00 00       Elf32_Rel <0x10C28, 0x17>     ; R_ARM_RELATIVE
LOAD:0000237C 2C 0C 01 00 17 00 00 00       Elf32_Rel <0x10C2C, 0x17>     ; R_ARM_RELATIVE
LOAD:00002384 30 0C 01 00 17 00 00 00       Elf32_Rel <0x10C30, 0x17>     ; R_ARM_RELATIVE
LOAD:0000238C 34 0C 01 00 17 00 00 00       Elf32_Rel <0x10C34, 0x17>     ; R_ARM_RELATIVE
LOAD:00002394 38 0C 01 00 17 00 00 00       Elf32_Rel <0x10C38, 0x17>     ; R_ARM_RELATIVE
LOAD:0000239C 3C 0C 01 00 17 00 00 00       Elf32_Rel <0x10C3C, 0x17>     ; R_ARM_RELATIVE
LOAD:000023A4 40 0C 01 00 17 00 00 00       Elf32_Rel <0x10C40, 0x17>     ; R_ARM_RELATIVE
LOAD:000023AC 44 0C 01 00 17 00 00 00       Elf32_Rel <0x10C44, 0x17>     ; R_ARM_RELATIVE
LOAD:000023B4 48 0C 01 00 17 00 00 00       Elf32_Rel <0x10C48, 0x17>     ; R_ARM_RELATIVE
LOAD:000023BC 04 0E 01 00 17 00 00 00       Elf32_Rel <0x10E04, 0x17>     ; R_ARM_RELATIVE
LOAD:000023C4 08 0E 01 00 17 00 00 00       Elf32_Rel <0x10E08, 0x17>     ; R_ARM_RELATIVE
LOAD:000023CC 0C 0E 01 00 17 00 00 00       Elf32_Rel <0x10E0C, 0x17>     ; R_ARM_RELATIVE
LOAD:000023D4 00 10 01 00 17 00 00 00       Elf32_Rel <0x11000, 0x17>     ; R_ARM_RELATIVE
LOAD:000023DC F8 10 01 00 17 00 00 00       Elf32_Rel <0x110F8, 0x17>     ; R_ARM_RELATIVE
LOAD:000023E4 04 11 01 00 17 00 00 00       Elf32_Rel <0x11104, 0x17>     ; R_ARM_RELATIVE
LOAD:000023EC 10 11 01 00 17 00 00 00       Elf32_Rel <0x11110, 0x17>     ; R_ARM_RELATIVE
LOAD:000023F4 1C 11 01 00 17 00 00 00       Elf32_Rel <0x1111C, 0x17>     ; R_ARM_RELATIVE
LOAD:000023FC 28 11 01 00 17 00 00 00       Elf32_Rel <0x11128, 0x17>     ; R_ARM_RELATIVE
LOAD:00002404 34 11 01 00 17 00 00 00       Elf32_Rel <0x11134, 0x17>     ; R_ARM_RELATIVE
LOAD:0000240C 40 11 01 00 17 00 00 00       Elf32_Rel <0x11140, 0x17>     ; R_ARM_RELATIVE
LOAD:00002414 4C 11 01 00 17 00 00 00       Elf32_Rel <0x1114C, 0x17>     ; R_ARM_RELATIVE
LOAD:0000241C 64 11 01 00 17 00 00 00       Elf32_Rel <0x11164, 0x17>     ; R_ARM_RELATIVE
LOAD:00002424 6C 11 01 00 17 00 00 00       Elf32_Rel <0x1116C, 0x17>     ; R_ARM_RELATIVE
LOAD:0000242C 70 11 01 00 17 00 00 00       Elf32_Rel <0x11170, 0x17>     ; R_ARM_RELATIVE
LOAD:00002434 7C 11 01 00 17 00 00 00       Elf32_Rel <0x1117C, 0x17>     ; R_ARM_RELATIVE
LOAD:0000243C 88 11 01 00 17 00 00 00       Elf32_Rel <0x11188, 0x17>     ; R_ARM_RELATIVE
LOAD:00002444 90 11 01 00 17 00 00 00       Elf32_Rel <0x11190, 0x17>     ; R_ARM_RELATIVE
LOAD:0000244C 94 11 01 00 17 00 00 00       Elf32_Rel <0x11194, 0x17>     ; R_ARM_RELATIVE
LOAD:00002454 A0 11 01 00 17 00 00 00       Elf32_Rel <0x111A0, 0x17>     ; R_ARM_RELATIVE
LOAD:0000245C AC 11 01 00 17 00 00 00       Elf32_Rel <0x111AC, 0x17>     ; R_ARM_RELATIVE
LOAD:00002464 B8 11 01 00 17 00 00 00       Elf32_Rel <0x111B8, 0x17>     ; R_ARM_RELATIVE
LOAD:0000246C C4 11 01 00 17 00 00 00       Elf32_Rel <0x111C4, 0x17>     ; R_ARM_RELATIVE
LOAD:00002474 D0 11 01 00 17 00 00 00       Elf32_Rel <0x111D0, 0x17>     ; R_ARM_RELATIVE
LOAD:0000247C D8 11 01 00 17 00 00 00       Elf32_Rel <0x111D8, 0x17>     ; R_ARM_RELATIVE
LOAD:00002484 DC 11 01 00 17 00 00 00       Elf32_Rel <0x111DC, 0x17>     ; R_ARM_RELATIVE
LOAD:0000248C E8 11 01 00 17 00 00 00       Elf32_Rel <0x111E8, 0x17>     ; R_ARM_RELATIVE
LOAD:00002494 F4 11 01 00 17 00 00 00       Elf32_Rel <0x111F4, 0x17>     ; R_ARM_RELATIVE
LOAD:0000249C 0C 12 01 00 17 00 00 00       Elf32_Rel <0x1120C, 0x17>     ; R_ARM_RELATIVE
LOAD:000024A4 18 12 01 00 17 00 00 00       Elf32_Rel <0x11218, 0x17>     ; R_ARM_RELATIVE
LOAD:000024AC 24 12 01 00 17 00 00 00       Elf32_Rel <0x11224, 0x17>     ; R_ARM_RELATIVE
LOAD:000024B4 2C 12 01 00 17 00 00 00       Elf32_Rel <0x1122C, 0x17>     ; R_ARM_RELATIVE
LOAD:000024BC 30 12 01 00 17 00 00 00       Elf32_Rel <0x11230, 0x17>     ; R_ARM_RELATIVE
LOAD:000024C4 3C 12 01 00 17 00 00 00       Elf32_Rel <0x1123C, 0x17>     ; R_ARM_RELATIVE
LOAD:000024CC 48 12 01 00 17 00 00 00       Elf32_Rel <0x11248, 0x17>     ; R_ARM_RELATIVE
LOAD:000024D4 50 12 01 00 17 00 00 00       Elf32_Rel <0x11250, 0x17>     ; R_ARM_RELATIVE
LOAD:000024DC 54 12 01 00 17 00 00 00       Elf32_Rel <0x11254, 0x17>     ; R_ARM_RELATIVE
LOAD:000024E4 5C 12 01 00 17 00 00 00       Elf32_Rel <0x1125C, 0x17>     ; R_ARM_RELATIVE
LOAD:000024EC 60 12 01 00 17 00 00 00       Elf32_Rel <0x11260, 0x17>     ; R_ARM_RELATIVE
LOAD:000024F4 6C 12 01 00 17 00 00 00       Elf32_Rel <0x1126C, 0x17>     ; R_ARM_RELATIVE
LOAD:000024FC 78 12 01 00 17 00 00 00       Elf32_Rel <0x11278, 0x17>     ; R_ARM_RELATIVE
LOAD:00002504 90 12 01 00 17 00 00 00       Elf32_Rel <0x11290, 0x17>     ; R_ARM_RELATIVE
LOAD:0000250C 98 12 01 00 17 00 00 00       Elf32_Rel <0x11298, 0x17>     ; R_ARM_RELATIVE
LOAD:00002514 9C 12 01 00 17 00 00 00       Elf32_Rel <0x1129C, 0x17>     ; R_ARM_RELATIVE
LOAD:0000251C A8 12 01 00 17 00 00 00       Elf32_Rel <0x112A8, 0x17>     ; R_ARM_RELATIVE
LOAD:00002524 B4 12 01 00 17 00 00 00       Elf32_Rel <0x112B4, 0x17>     ; R_ARM_RELATIVE
LOAD:0000252C BC 12 01 00 17 00 00 00       Elf32_Rel <0x112BC, 0x17>     ; R_ARM_RELATIVE
LOAD:00002534 C0 12 01 00 17 00 00 00       Elf32_Rel <0x112C0, 0x17>     ; R_ARM_RELATIVE
LOAD:0000253C C8 12 01 00 17 00 00 00       Elf32_Rel <0x112C8, 0x17>     ; R_ARM_RELATIVE
LOAD:00002544 CC 12 01 00 17 00 00 00       Elf32_Rel <0x112CC, 0x17>     ; R_ARM_RELATIVE
LOAD:0000254C D4 12 01 00 17 00 00 00       Elf32_Rel <0x112D4, 0x17>     ; R_ARM_RELATIVE
LOAD:00002554 D8 12 01 00 17 00 00 00       Elf32_Rel <0x112D8, 0x17>     ; R_ARM_RELATIVE
LOAD:0000255C E0 12 01 00 17 00 00 00       Elf32_Rel <0x112E0, 0x17>     ; R_ARM_RELATIVE
LOAD:00002564 E4 12 01 00 17 00 00 00       Elf32_Rel <0x112E4, 0x17>     ; R_ARM_RELATIVE
LOAD:0000256C F0 12 01 00 17 00 00 00       Elf32_Rel <0x112F0, 0x17>     ; R_ARM_RELATIVE
LOAD:00002574 FC 12 01 00 17 00 00 00       Elf32_Rel <0x112FC, 0x17>     ; R_ARM_RELATIVE
LOAD:0000257C 08 13 01 00 17 00 00 00       Elf32_Rel <0x11308, 0x17>     ; R_ARM_RELATIVE
LOAD:00002584 14 13 01 00 17 00 00 00       Elf32_Rel <0x11314, 0x17>     ; R_ARM_RELATIVE
LOAD:0000258C 1C 13 01 00 17 00 00 00       Elf32_Rel <0x1131C, 0x17>     ; R_ARM_RELATIVE
LOAD:00002594 20 13 01 00 17 00 00 00       Elf32_Rel <0x11320, 0x17>     ; R_ARM_RELATIVE
LOAD:0000259C 2C 13 01 00 17 00 00 00       Elf32_Rel <0x1132C, 0x17>     ; R_ARM_RELATIVE
LOAD:000025A4 38 13 01 00 17 00 00 00       Elf32_Rel <0x11338, 0x17>     ; R_ARM_RELATIVE
LOAD:000025AC 50 13 01 00 17 00 00 00       Elf32_Rel <0x11350, 0x17>     ; R_ARM_RELATIVE
LOAD:000025B4 5C 13 01 00 17 00 00 00       Elf32_Rel <0x1135C, 0x17>     ; R_ARM_RELATIVE
LOAD:000025BC 68 13 01 00 17 00 00 00       Elf32_Rel <0x11368, 0x17>     ; R_ARM_RELATIVE
LOAD:000025C4 70 13 01 00 17 00 00 00       Elf32_Rel <0x11370, 0x17>     ; R_ARM_RELATIVE
LOAD:000025CC 74 13 01 00 17 00 00 00       Elf32_Rel <0x11374, 0x17>     ; R_ARM_RELATIVE
LOAD:000025D4 7C 13 01 00 17 00 00 00       Elf32_Rel <0x1137C, 0x17>     ; R_ARM_RELATIVE
LOAD:000025DC 80 13 01 00 17 00 00 00       Elf32_Rel <0x11380, 0x17>     ; R_ARM_RELATIVE
LOAD:000025E4 8C 13 01 00 17 00 00 00       Elf32_Rel <0x1138C, 0x17>     ; R_ARM_RELATIVE
LOAD:000025EC 98 13 01 00 17 00 00 00       Elf32_Rel <0x11398, 0x17>     ; R_ARM_RELATIVE
LOAD:000025F4 B0 13 01 00 17 00 00 00       Elf32_Rel <0x113B0, 0x17>     ; R_ARM_RELATIVE
LOAD:000025FC BC 13 01 00 17 00 00 00       Elf32_Rel <0x113BC, 0x17>     ; R_ARM_RELATIVE
LOAD:00002604 C8 13 01 00 17 00 00 00       Elf32_Rel <0x113C8, 0x17>     ; R_ARM_RELATIVE
LOAD:0000260C D0 13 01 00 17 00 00 00       Elf32_Rel <0x113D0, 0x17>     ; R_ARM_RELATIVE
LOAD:00002614 D4 13 01 00 17 00 00 00       Elf32_Rel <0x113D4, 0x17>     ; R_ARM_RELATIVE
LOAD:0000261C DC 13 01 00 17 00 00 00       Elf32_Rel <0x113DC, 0x17>     ; R_ARM_RELATIVE
LOAD:00002624 E0 13 01 00 17 00 00 00       Elf32_Rel <0x113E0, 0x17>     ; R_ARM_RELATIVE
LOAD:0000262C EC 13 01 00 17 00 00 00       Elf32_Rel <0x113EC, 0x17>     ; R_ARM_RELATIVE
LOAD:00002634 F8 13 01 00 17 00 00 00       Elf32_Rel <0x113F8, 0x17>     ; R_ARM_RELATIVE
LOAD:0000263C 04 14 01 00 17 00 00 00       Elf32_Rel <0x11404, 0x17>     ; R_ARM_RELATIVE
LOAD:00002644 0C 14 01 00 17 00 00 00       Elf32_Rel <0x1140C, 0x17>     ; R_ARM_RELATIVE
LOAD:0000264C 10 14 01 00 17 00 00 00       Elf32_Rel <0x11410, 0x17>     ; R_ARM_RELATIVE
LOAD:00002654 18 14 01 00 17 00 00 00       Elf32_Rel <0x11418, 0x17>     ; R_ARM_RELATIVE
LOAD:0000265C 1C 14 01 00 17 00 00 00       Elf32_Rel <0x1141C, 0x17>     ; R_ARM_RELATIVE
LOAD:00002664 24 14 01 00 17 00 00 00       Elf32_Rel <0x11424, 0x17>     ; R_ARM_RELATIVE
LOAD:0000266C 28 14 01 00 17 00 00 00       Elf32_Rel <0x11428, 0x17>     ; R_ARM_RELATIVE
LOAD:00002674 40 14 01 00 17 00 00 00       Elf32_Rel <0x11440, 0x17>     ; R_ARM_RELATIVE
LOAD:0000267C 4C 14 01 00 17 00 00 00       Elf32_Rel <0x1144C, 0x17>     ; R_ARM_RELATIVE
LOAD:00002684 58 14 01 00 17 00 00 00       Elf32_Rel <0x11458, 0x17>     ; R_ARM_RELATIVE
LOAD:0000268C 60 14 01 00 17 00 00 00       Elf32_Rel <0x11460, 0x17>     ; R_ARM_RELATIVE
LOAD:00002694 64 14 01 00 17 00 00 00       Elf32_Rel <0x11464, 0x17>     ; R_ARM_RELATIVE
LOAD:0000269C 70 14 01 00 17 00 00 00       Elf32_Rel <0x11470, 0x17>     ; R_ARM_RELATIVE
LOAD:000026A4 7C 14 01 00 17 00 00 00       Elf32_Rel <0x1147C, 0x17>     ; R_ARM_RELATIVE
LOAD:000026AC 84 14 01 00 17 00 00 00       Elf32_Rel <0x11484, 0x17>     ; R_ARM_RELATIVE
LOAD:000026B4 88 14 01 00 17 00 00 00       Elf32_Rel <0x11488, 0x17>     ; R_ARM_RELATIVE
LOAD:000026BC 94 14 01 00 17 00 00 00       Elf32_Rel <0x11494, 0x17>     ; R_ARM_RELATIVE
LOAD:000026C4 A0 14 01 00 17 00 00 00       Elf32_Rel <0x114A0, 0x17>     ; R_ARM_RELATIVE
LOAD:000026CC AC 14 01 00 17 00 00 00       Elf32_Rel <0x114AC, 0x17>     ; R_ARM_RELATIVE
LOAD:000026D4 B4 14 01 00 17 00 00 00       Elf32_Rel <0x114B4, 0x17>     ; R_ARM_RELATIVE
LOAD:000026DC B8 14 01 00 17 00 00 00       Elf32_Rel <0x114B8, 0x17>     ; R_ARM_RELATIVE
LOAD:000026E4 C0 14 01 00 17 00 00 00       Elf32_Rel <0x114C0, 0x17>     ; R_ARM_RELATIVE
LOAD:000026EC C4 14 01 00 17 00 00 00       Elf32_Rel <0x114C4, 0x17>     ; R_ARM_RELATIVE
LOAD:000026F4 D0 14 01 00 17 00 00 00       Elf32_Rel <0x114D0, 0x17>     ; R_ARM_RELATIVE
LOAD:000026FC DC 14 01 00 17 00 00 00       Elf32_Rel <0x114DC, 0x17>     ; R_ARM_RELATIVE
LOAD:00002704 E8 14 01 00 17 00 00 00       Elf32_Rel <0x114E8, 0x17>     ; R_ARM_RELATIVE
LOAD:0000270C F0 14 01 00 17 00 00 00       Elf32_Rel <0x114F0, 0x17>     ; R_ARM_RELATIVE
LOAD:00002714 F4 14 01 00 17 00 00 00       Elf32_Rel <0x114F4, 0x17>     ; R_ARM_RELATIVE
LOAD:0000271C FC 14 01 00 17 00 00 00       Elf32_Rel <0x114FC, 0x17>     ; R_ARM_RELATIVE
LOAD:00002724 00 15 01 00 17 00 00 00       Elf32_Rel <0x11500, 0x17>     ; R_ARM_RELATIVE
LOAD:0000272C 08 15 01 00 17 00 00 00       Elf32_Rel <0x11508, 0x17>     ; R_ARM_RELATIVE
LOAD:00002734 0C 15 01 00 17 00 00 00       Elf32_Rel <0x1150C, 0x17>     ; R_ARM_RELATIVE
LOAD:0000273C 24 15 01 00 17 00 00 00       Elf32_Rel <0x11524, 0x17>     ; R_ARM_RELATIVE
LOAD:00002744 30 15 01 00 17 00 00 00       Elf32_Rel <0x11530, 0x17>     ; R_ARM_RELATIVE
LOAD:0000274C 3C 15 01 00 17 00 00 00       Elf32_Rel <0x1153C, 0x17>     ; R_ARM_RELATIVE
LOAD:00002754 44 15 01 00 17 00 00 00       Elf32_Rel <0x11544, 0x17>     ; R_ARM_RELATIVE
LOAD:0000275C 48 15 01 00 17 00 00 00       Elf32_Rel <0x11548, 0x17>     ; R_ARM_RELATIVE
LOAD:00002764 54 15 01 00 17 00 00 00       Elf32_Rel <0x11554, 0x17>     ; R_ARM_RELATIVE
LOAD:0000276C 60 15 01 00 17 00 00 00       Elf32_Rel <0x11560, 0x17>     ; R_ARM_RELATIVE
LOAD:00002774 6C 15 01 00 17 00 00 00       Elf32_Rel <0x1156C, 0x17>     ; R_ARM_RELATIVE
LOAD:0000277C 74 15 01 00 17 00 00 00       Elf32_Rel <0x11574, 0x17>     ; R_ARM_RELATIVE
LOAD:00002784 78 15 01 00 17 00 00 00       Elf32_Rel <0x11578, 0x17>     ; R_ARM_RELATIVE
LOAD:0000278C 80 15 01 00 17 00 00 00       Elf32_Rel <0x11580, 0x17>     ; R_ARM_RELATIVE
LOAD:00002794 84 15 01 00 17 00 00 00       Elf32_Rel <0x11584, 0x17>     ; R_ARM_RELATIVE
LOAD:0000279C 8C 15 01 00 17 00 00 00       Elf32_Rel <0x1158C, 0x17>     ; R_ARM_RELATIVE
LOAD:000027A4 90 15 01 00 17 00 00 00       Elf32_Rel <0x11590, 0x17>     ; R_ARM_RELATIVE
LOAD:000027AC A8 15 01 00 17 00 00 00       Elf32_Rel <0x115A8, 0x17>     ; R_ARM_RELATIVE
LOAD:000027B4 B4 15 01 00 17 00 00 00       Elf32_Rel <0x115B4, 0x17>     ; R_ARM_RELATIVE
LOAD:000027BC C0 15 01 00 17 00 00 00       Elf32_Rel <0x115C0, 0x17>     ; R_ARM_RELATIVE
LOAD:000027C4 C8 15 01 00 17 00 00 00       Elf32_Rel <0x115C8, 0x17>     ; R_ARM_RELATIVE
LOAD:000027CC CC 15 01 00 17 00 00 00       Elf32_Rel <0x115CC, 0x17>     ; R_ARM_RELATIVE
LOAD:000027D4 D8 15 01 00 17 00 00 00       Elf32_Rel <0x115D8, 0x17>     ; R_ARM_RELATIVE
LOAD:000027DC E4 15 01 00 17 00 00 00       Elf32_Rel <0x115E4, 0x17>     ; R_ARM_RELATIVE
LOAD:000027E4 EC 15 01 00 17 00 00 00       Elf32_Rel <0x115EC, 0x17>     ; R_ARM_RELATIVE
LOAD:000027EC F0 15 01 00 17 00 00 00       Elf32_Rel <0x115F0, 0x17>     ; R_ARM_RELATIVE
LOAD:000027F4 F8 15 01 00 17 00 00 00       Elf32_Rel <0x115F8, 0x17>     ; R_ARM_RELATIVE
LOAD:000027FC FC 15 01 00 17 00 00 00       Elf32_Rel <0x115FC, 0x17>     ; R_ARM_RELATIVE
LOAD:00002804 04 16 01 00 17 00 00 00       Elf32_Rel <0x11604, 0x17>     ; R_ARM_RELATIVE
LOAD:0000280C 08 16 01 00 17 00 00 00       Elf32_Rel <0x11608, 0x17>     ; R_ARM_RELATIVE
LOAD:00002814 10 16 01 00 17 00 00 00       Elf32_Rel <0x11610, 0x17>     ; R_ARM_RELATIVE
LOAD:0000281C 14 16 01 00 17 00 00 00       Elf32_Rel <0x11614, 0x17>     ; R_ARM_RELATIVE
LOAD:00002824 20 16 01 00 17 00 00 00       Elf32_Rel <0x11620, 0x17>     ; R_ARM_RELATIVE
LOAD:0000282C 2C 16 01 00 17 00 00 00       Elf32_Rel <0x1162C, 0x17>     ; R_ARM_RELATIVE
LOAD:00002834 44 16 01 00 17 00 00 00       Elf32_Rel <0x11644, 0x17>     ; R_ARM_RELATIVE
LOAD:0000283C 50 16 01 00 17 00 00 00       Elf32_Rel <0x11650, 0x17>     ; R_ARM_RELATIVE
LOAD:00002844 54 16 01 00 17 00 00 00       Elf32_Rel <0x11654, 0x17>     ; R_ARM_RELATIVE
LOAD:0000284C 58 16 01 00 17 00 00 00       Elf32_Rel <0x11658, 0x17>     ; R_ARM_RELATIVE
LOAD:00002854 5C 16 01 00 17 00 00 00       Elf32_Rel <0x1165C, 0x17>     ; R_ARM_RELATIVE
LOAD:0000285C 94 0D 01 00 15 1C 00 00       Elf32_Rel <0x10D94, 0x1C15>   ; R_ARM_GLOB_DAT __stack_chk_guard
LOAD:00002864 00 0E 01 00 15 6A 00 00       Elf32_Rel <0x10E00, 0x6A15>   ; R_ARM_GLOB_DAT stderr
LOAD:0000286C DC 0D 01 00 15 6C 00 00       Elf32_Rel <0x10DDC, 0x6C15>   ; R_ARM_GLOB_DAT out_channels_name_to_enum_table
LOAD:00002874 54 0B 01 00 02 6D 00 00       Elf32_Rel <0x10B54, 0x6D02>   ; R_ARM_ABS32 voice_call_wb_headset
LOAD:0000287C 70 0B 01 00 02 6D 00 00       Elf32_Rel <0x10B70, 0x6D02>   ; R_ARM_ABS32 voice_call_wb_headset
LOAD:00002884 F8 0D 01 00 15 6F 00 00       Elf32_Rel <0x10DF8, 0x6F15>   ; R_ARM_GLOB_DAT cvq_close
LOAD:0000288C 24 0B 01 00 02 71 00 00       Elf32_Rel <0x10B24, 0x7102>   ; R_ARM_ABS32 voice_call_bluetooth_sco
LOAD:00002894 D8 0A 01 00 02 73 00 00       Elf32_Rel <0x10AD8, 0x7302>   ; R_ARM_ABS32 media_earpiece
LOAD:0000289C E0 0A 01 00 02 74 00 00       Elf32_Rel <0x10AE0, 0x7402>   ; R_ARM_ABS32 media_speaker_mic_nr_off
LOAD:000028A4 A4 0D 01 00 15 75 00 00       Elf32_Rel <0x10DA4, 0x7515>   ; R_ARM_GLOB_DAT pcm_config_voice_call
LOAD:000028AC C0 0D 01 00 15 76 00 00       Elf32_Rel <0x10DC0, 0x7615>   ; R_ARM_GLOB_DAT test_pri_mic
LOAD:000028B4 C8 0B 01 00 02 78 00 00       Elf32_Rel <0x10BC8, 0x7802>   ; R_ARM_ABS32 communication_headphones
LOAD:000028BC CC 0D 01 00 15 79 00 00       Elf32_Rel <0x10DCC, 0x7915>   ; R_ARM_GLOB_DAT default_settings
LOAD:000028C4 20 0B 01 00 02 7B 00 00       Elf32_Rel <0x10B20, 0x7B02>   ; R_ARM_ABS32 voice_call_headphones
LOAD:000028CC 3C 0B 01 00 02 7B 00 00       Elf32_Rel <0x10B3C, 0x7B02>   ; R_ARM_ABS32 voice_call_headphones
LOAD:000028D4 A8 0B 01 00 02 7C 00 00       Elf32_Rel <0x10BA8, 0x7C02>   ; R_ARM_ABS32 voice_rec_headset
LOAD:000028DC D4 0D 01 00 15 7D 00 00       Elf32_Rel <0x10DD4, 0x7D15>   ; R_ARM_GLOB_DAT test_modem_loopback_headphone
LOAD:000028E4 BC 0D 01 00 15 7E 00 00       Elf32_Rel <0x10DBC, 0x7E15>   ; R_ARM_GLOB_DAT test_speaker
LOAD:000028EC 58 0B 01 00 02 7F 00 00       Elf32_Rel <0x10B58, 0x7F02>   ; R_ARM_ABS32 voice_call_wb_headphones
LOAD:000028F4 74 0B 01 00 02 7F 00 00       Elf32_Rel <0x10B74, 0x7F02>   ; R_ARM_ABS32 voice_call_wb_headphones
LOAD:000028FC FC 0A 01 00 02 80 00 00       Elf32_Rel <0x10AFC, 0x8002>   ; R_ARM_ABS32 media_speaker_xunfei
LOAD:00002904 D4 0A 01 00 02 81 00 00       Elf32_Rel <0x10AD4, 0x8102>   ; R_ARM_ABS32 speaker_and_headphones
LOAD:0000290C F0 0A 01 00 02 81 00 00       Elf32_Rel <0x10AF0, 0x8102>   ; R_ARM_ABS32 speaker_and_headphones
LOAD:00002914 0C 0B 01 00 02 81 00 00       Elf32_Rel <0x10B0C, 0x8102>   ; R_ARM_ABS32 speaker_and_headphones
LOAD:0000291C 28 0B 01 00 02 81 00 00       Elf32_Rel <0x10B28, 0x8102>   ; R_ARM_ABS32 speaker_and_headphones
LOAD:00002924 44 0B 01 00 02 81 00 00       Elf32_Rel <0x10B44, 0x8102>   ; R_ARM_ABS32 speaker_and_headphones
LOAD:0000292C 60 0B 01 00 02 81 00 00       Elf32_Rel <0x10B60, 0x8102>   ; R_ARM_ABS32 speaker_and_headphones
LOAD:00002934 7C 0B 01 00 02 81 00 00       Elf32_Rel <0x10B7C, 0x8102>   ; R_ARM_ABS32 speaker_and_headphones
LOAD:0000293C 98 0B 01 00 02 81 00 00       Elf32_Rel <0x10B98, 0x8102>   ; R_ARM_ABS32 speaker_and_headphones
LOAD:00002944 B4 0B 01 00 02 81 00 00       Elf32_Rel <0x10BB4, 0x8102>   ; R_ARM_ABS32 speaker_and_headphones
LOAD:0000294C D0 0B 01 00 02 81 00 00       Elf32_Rel <0x10BD0, 0x8102>   ; R_ARM_ABS32 speaker_and_headphones
LOAD:00002954 64 0B 01 00 02 82 00 00       Elf32_Rel <0x10B64, 0x8202>   ; R_ARM_ABS32 voice_call_wb_earpiece
LOAD:0000295C 80 0B 01 00 02 82 00 00       Elf32_Rel <0x10B80, 0x8202>   ; R_ARM_ABS32 voice_call_wb_earpiece
LOAD:00002964 04 0B 01 00 02 83 00 00       Elf32_Rel <0x10B04, 0x8302>   ; R_ARM_ABS32 media_headphones_xunfei
LOAD:0000296C F4 0D 01 00 15 84 00 00       Elf32_Rel <0x10DF4, 0x8415>   ; R_ARM_GLOB_DAT cvq_start
LOAD:00002974 CC 0B 01 00 02 85 00 00       Elf32_Rel <0x10BCC, 0x8502>   ; R_ARM_ABS32 communication_bluetooth_sco
LOAD:0000297C 10 0B 01 00 02 86 00 00       Elf32_Rel <0x10B10, 0x8602>   ; R_ARM_ABS32 media_earpiece_xunfei
LOAD:00002984 D8 0D 01 00 15 87 00 00       Elf32_Rel <0x10DD8, 0x8715>   ; R_ARM_GLOB_DAT thread_test_hifi
LOAD:0000298C 98 0D 01 00 15 88 00 00       Elf32_Rel <0x10D98, 0x8815>   ; R_ARM_GLOB_DAT pcm_config_in
LOAD:00002994 9C 0B 01 00 02 89 00 00       Elf32_Rel <0x10B9C, 0x8902>   ; R_ARM_ABS32 camcorder_earpiece
LOAD:0000299C C8 0D 01 00 15 8A 00 00       Elf32_Rel <0x10DC8, 0x8A15>   ; R_ARM_GLOB_DAT test_ter_mic
LOAD:000029A4 00 0B 01 00 02 8B 00 00       Elf32_Rel <0x10B00, 0x8B02>   ; R_ARM_ABS32 media_headset_xunfei
LOAD:000029AC F4 0A 01 00 02 8C 00 00       Elf32_Rel <0x10AF4, 0x8C02>   ; R_ARM_ABS32 media_earpiece_mic_nr_off
LOAD:000029B4 AC 0D 01 00 15 8D 00 00       Elf32_Rel <0x10DAC, 0x8D15>   ; R_ARM_GLOB_DAT pcm_config_backend
LOAD:000029BC D0 0D 01 00 15 8E 00 00       Elf32_Rel <0x10DD0, 0x8E15>   ; R_ARM_GLOB_DAT test_modem_loopback_earphone
LOAD:000029C4 8C 0B 01 00 02 90 00 00       Elf32_Rel <0x10B8C, 0x9002>   ; R_ARM_ABS32 camcorder_headphones
LOAD:000029CC 90 0B 01 00 02 90 00 00       Elf32_Rel <0x10B90, 0x9002>   ; R_ARM_ABS32 camcorder_headphones
LOAD:000029D4 88 0B 01 00 02 91 00 00       Elf32_Rel <0x10B88, 0x9102>   ; R_ARM_ABS32 camcorder_speaker
LOAD:000029DC C0 0B 01 00 02 93 00 00       Elf32_Rel <0x10BC0, 0x9302>   ; R_ARM_ABS32 communication_speaker
LOAD:000029E4 E4 0D 01 00 15 94 00 00       Elf32_Rel <0x10DE4, 0x9415>   ; R_ARM_GLOB_DAT read_on_raw_data_thread
LOAD:000029EC E4 0A 01 00 02 95 00 00       Elf32_Rel <0x10AE4, 0x9502>   ; R_ARM_ABS32 media_headset_mic_nr_off
LOAD:000029F4 78 0B 01 00 02 96 00 00       Elf32_Rel <0x10B78, 0x9602>   ; R_ARM_ABS32 voice_call_wb_bluetooth_sco_nrec_off
LOAD:000029FC DC 0A 01 00 02 97 00 00       Elf32_Rel <0x10ADC, 0x9702>   ; R_ARM_ABS32 speaker_and_bt_sco
LOAD:00002A04 F8 0A 01 00 02 97 00 00       Elf32_Rel <0x10AF8, 0x9702>   ; R_ARM_ABS32 speaker_and_bt_sco
LOAD:00002A0C 14 0B 01 00 02 97 00 00       Elf32_Rel <0x10B14, 0x9702>   ; R_ARM_ABS32 speaker_and_bt_sco
LOAD:00002A14 30 0B 01 00 02 97 00 00       Elf32_Rel <0x10B30, 0x9702>   ; R_ARM_ABS32 speaker_and_bt_sco
LOAD:00002A1C 4C 0B 01 00 02 97 00 00       Elf32_Rel <0x10B4C, 0x9702>   ; R_ARM_ABS32 speaker_and_bt_sco
LOAD:00002A24 68 0B 01 00 02 97 00 00       Elf32_Rel <0x10B68, 0x9702>   ; R_ARM_ABS32 speaker_and_bt_sco
LOAD:00002A2C 84 0B 01 00 02 97 00 00       Elf32_Rel <0x10B84, 0x9702>   ; R_ARM_ABS32 speaker_and_bt_sco
LOAD:00002A34 A0 0B 01 00 02 97 00 00       Elf32_Rel <0x10BA0, 0x9702>   ; R_ARM_ABS32 speaker_and_bt_sco
LOAD:00002A3C BC 0B 01 00 02 97 00 00       Elf32_Rel <0x10BBC, 0x9702>   ; R_ARM_ABS32 speaker_and_bt_sco
LOAD:00002A44 D8 0B 01 00 02 97 00 00       Elf32_Rel <0x10BD8, 0x9702>   ; R_ARM_ABS32 speaker_and_bt_sco
LOAD:00002A4C E8 0A 01 00 02 98 00 00       Elf32_Rel <0x10AE8, 0x9802>   ; R_ARM_ABS32 media_headphones_mic_nr_off
LOAD:00002A54 40 0B 01 00 02 99 00 00       Elf32_Rel <0x10B40, 0x9902>   ; R_ARM_ABS32 voice_call_bluetooth_sco_nrec_off
LOAD:00002A5C 1C 0B 01 00 02 9A 00 00       Elf32_Rel <0x10B1C, 0x9A02>   ; R_ARM_ABS32 voice_call_headset
LOAD:00002A64 38 0B 01 00 02 9A 00 00       Elf32_Rel <0x10B38, 0x9A02>   ; R_ARM_ABS32 voice_call_headset
LOAD:00002A6C 08 0B 01 00 02 9B 00 00       Elf32_Rel <0x10B08, 0x9B02>   ; R_ARM_ABS32 bluetooth_sco_xunfei
LOAD:00002A74 50 0B 01 00 02 9D 00 00       Elf32_Rel <0x10B50, 0x9D02>   ; R_ARM_ABS32 voice_call_wb_speaker
LOAD:00002A7C 6C 0B 01 00 02 9D 00 00       Elf32_Rel <0x10B6C, 0x9D02>   ; R_ARM_ABS32 voice_call_wb_speaker
LOAD:00002A84 EC 0D 01 00 15 9E 00 00       Elf32_Rel <0x10DEC, 0x9E15>   ; R_ARM_GLOB_DAT pcm_read_uart_char_dev
LOAD:00002A8C B8 0B 01 00 02 9F 00 00       Elf32_Rel <0x10BB8, 0x9F02>   ; R_ARM_ABS32 voice_rec_earpiece
LOAD:00002A94 E0 0D 01 00 15 A0 00 00       Elf32_Rel <0x10DE0, 0xA015>   ; R_ARM_GLOB_DAT read_on_thread
LOAD:00002A9C A4 0B 01 00 02 A2 00 00       Elf32_Rel <0x10BA4, 0xA202>   ; R_ARM_ABS32 voice_rec_speaker
LOAD:00002AA4 FC 0D 01 00 15 A3 00 00       Elf32_Rel <0x10DFC, 0xA315>   ; R_ARM_GLOB_DAT cvq_open
LOAD:00002AAC B8 0D 01 00 15 A6 00 00       Elf32_Rel <0x10DB8, 0xA615>   ; R_ARM_GLOB_DAT test_headphone
LOAD:00002AB4 D0 0A 01 00 02 A7 00 00       Elf32_Rel <0x10AD0, 0xA702>   ; R_ARM_ABS32 bluetooth_sco
LOAD:00002ABC EC 0A 01 00 02 A7 00 00       Elf32_Rel <0x10AEC, 0xA702>   ; R_ARM_ABS32 bluetooth_sco
LOAD:00002AC4 94 0B 01 00 02 A7 00 00       Elf32_Rel <0x10B94, 0xA702>   ; R_ARM_ABS32 bluetooth_sco
LOAD:00002ACC B0 0B 01 00 02 A7 00 00       Elf32_Rel <0x10BB0, 0xA702>   ; R_ARM_ABS32 bluetooth_sco
LOAD:00002AD4 D4 0B 01 00 02 A8 00 00       Elf32_Rel <0x10BD4, 0xA802>   ; R_ARM_ABS32 communication_earpiece
LOAD:00002ADC A0 0D 01 00 15 A9 00 00       Elf32_Rel <0x10DA0, 0xA915>   ; R_ARM_GLOB_DAT adev_set_headset_volume
LOAD:00002AE4 C4 0D 01 00 15 AB 00 00       Elf32_Rel <0x10DC4, 0xAB15>   ; R_ARM_GLOB_DAT test_sec_mic
LOAD:00002AEC B4 0D 01 00 15 AF 00 00       Elf32_Rel <0x10DB4, 0xAF15>   ; R_ARM_GLOB_DAT test_earphones
LOAD:00002AF4 F0 0D 01 00 15 B0 00 00       Elf32_Rel <0x10DF0, 0xB015>   ; R_ARM_GLOB_DAT readdirect
LOAD:00002AFC CC 0A 01 00 02 B1 00 00       Elf32_Rel <0x10ACC, 0xB102>   ; R_ARM_ABS32 media_headphones
LOAD:00002B04 5C 0B 01 00 02 B2 00 00       Elf32_Rel <0x10B5C, 0xB202>   ; R_ARM_ABS32 voice_call_wb_bluetooth_sco
LOAD:00002B0C AC 0B 01 00 02 B3 00 00       Elf32_Rel <0x10BAC, 0xB302>   ; R_ARM_ABS32 voice_rec_headphones
LOAD:00002B14 E8 0D 01 00 15 B4 00 00       Elf32_Rel <0x10DE8, 0xB415>   ; R_ARM_GLOB_DAT cvq_read
LOAD:00002B1C C4 0B 01 00 02 B6 00 00       Elf32_Rel <0x10BC4, 0xB602>   ; R_ARM_ABS32 communication_headset
LOAD:00002B24 C4 0A 01 00 02 B7 00 00       Elf32_Rel <0x10AC4, 0xB702>   ; R_ARM_ABS32 media_speaker
LOAD:00002B2C C8 0A 01 00 02 B8 00 00       Elf32_Rel <0x10AC8, 0xB802>   ; R_ARM_ABS32 media_headset
LOAD:00002B34 B0 0D 01 00 15 B9 00 00       Elf32_Rel <0x10DB0, 0xB915>   ; R_ARM_GLOB_DAT pcm_config_sco
LOAD:00002B3C A8 0D 01 00 15 BA 00 00       Elf32_Rel <0x10DA8, 0xBA15>   ; R_ARM_GLOB_DAT pcm_config
LOAD:00002B44 9C 0D 01 00 15 BB 00 00       Elf32_Rel <0x10D9C, 0xBB15>   ; R_ARM_GLOB_DAT pcm_config_amplifier
LOAD:00002B4C 2C 0B 01 00 02 BF 00 00       Elf32_Rel <0x10B2C, 0xBF02>   ; R_ARM_ABS32 voice_call_earpiece
LOAD:00002B54 48 0B 01 00 02 BF 00 00       Elf32_Rel <0x10B48, 0xBF02>   ; R_ARM_ABS32 voice_call_earpiece
LOAD:00002B5C 18 0B 01 00 02 C0 00 00       Elf32_Rel <0x10B18, 0xC002>   ; R_ARM_ABS32 voice_call_speaker
LOAD:00002B64 34 0B 01 00 02 C0 00 00       Elf32_Rel <0x10B34, 0xC002>   ; R_ARM_ABS32 voice_call_speaker
LOAD:00002B6C                               ; ELF JMPREL Relocation Table
LOAD:00002B6C 1C 0E 01 00 16 01 00 00       Elf32_Rel <0x10E1C, 0x116>    ; R_ARM_JUMP_SLOT __cxa_finalize
LOAD:00002B74 20 0E 01 00 16 02 00 00       Elf32_Rel <0x10E20, 0x216>    ; R_ARM_JUMP_SLOT __cxa_atexit
LOAD:00002B7C 24 0E 01 00 16 03 00 00       Elf32_Rel <0x10E24, 0x316>    ; R_ARM_JUMP_SLOT __register_atfork
LOAD:00002B84 28 0E 01 00 16 40 00 00       Elf32_Rel <0x10E28, 0x4016>   ; R_ARM_JUMP_SLOT property_get
LOAD:00002B8C 2C 0E 01 00 16 1F 00 00       Elf32_Rel <0x10E2C, 0x1F16>   ; R_ARM_JUMP_SLOT atoi
LOAD:00002B94 30 0E 01 00 16 1E 00 00       Elf32_Rel <0x10E30, 0x1E16>   ; R_ARM_JUMP_SLOT access
LOAD:00002B9C 34 0E 01 00 16 2F 00 00       Elf32_Rel <0x10E34, 0x2F16>   ; R_ARM_JUMP_SLOT mkdir
LOAD:00002BA4 38 0E 01 00 16 24 00 00       Elf32_Rel <0x10E38, 0x2416>   ; R_ARM_JUMP_SLOT fopen
LOAD:00002BAC 3C 0E 01 00 16 17 00 00       Elf32_Rel <0x10E3C, 0x1716>   ; R_ARM_JUMP_SLOT __fwrite_chk
LOAD:00002BB4 40 0E 01 00 16 23 00 00       Elf32_Rel <0x10E40, 0x2316>   ; R_ARM_JUMP_SLOT fclose
LOAD:00002BBC 44 0E 01 00 16 15 00 00       Elf32_Rel <0x10E44, 0x1516>   ; R_ARM_JUMP_SLOT __errno
LOAD:00002BC4 48 0E 01 00 16 50 00 00       Elf32_Rel <0x10E48, 0x5016>   ; R_ARM_JUMP_SLOT strerror
LOAD:00002BCC 4C 0E 01 00 16 14 00 00       Elf32_Rel <0x10E4C, 0x1416>   ; R_ARM_JUMP_SLOT __android_log_print
LOAD:00002BD4 50 0E 01 00 16 1B 00 00       Elf32_Rel <0x10E50, 0x1B16>   ; R_ARM_JUMP_SLOT __stack_chk_fail
LOAD:00002BDC 54 0E 01 00 16 2E 00 00       Elf32_Rel <0x10E54, 0x2E16>   ; R_ARM_JUMP_SLOT mixer_open
LOAD:00002BE4 58 0E 01 00 16 2D 00 00       Elf32_Rel <0x10E58, 0x2D16>   ; R_ARM_JUMP_SLOT mixer_get_ctl_by_name
LOAD:00002BEC 5C 0E 01 00 16 29 00 00       Elf32_Rel <0x10E5C, 0x2916>   ; R_ARM_JUMP_SLOT mixer_close
LOAD:00002BF4 60 0E 01 00 16 53 00 00       Elf32_Rel <0x10E60, 0x5316>   ; R_ARM_JUMP_SLOT usleep
LOAD:00002BFC 64 0E 01 00 16 44 00 00       Elf32_Rel <0x10E64, 0x4416>   ; R_ARM_JUMP_SLOT pthread_mutex_lock
LOAD:00002C04 68 0E 01 00 16 AA 00 00       Elf32_Rel <0x10E68, 0xAA16>   ; R_ARM_JUMP_SLOT audio_route_free
LOAD:00002C0C 6C 0E 01 00 16 6E 00 00       Elf32_Rel <0x10E6C, 0x6E16>   ; R_ARM_JUMP_SLOT audio_route_init
LOAD:00002C14 70 0E 01 00 16 45 00 00       Elf32_Rel <0x10E70, 0x4516>   ; R_ARM_JUMP_SLOT pthread_mutex_unlock
LOAD:00002C1C 74 0E 01 00 16 37 00 00       Elf32_Rel <0x10E74, 0x3716>   ; R_ARM_JUMP_SLOT pcm_open
LOAD:00002C24 78 0E 01 00 16 36 00 00       Elf32_Rel <0x10E78, 0x3616>   ; R_ARM_JUMP_SLOT pcm_is_ready
LOAD:00002C2C 7C 0E 01 00 16 3C 00 00       Elf32_Rel <0x10E7C, 0x3C16>   ; R_ARM_JUMP_SLOT pcm_prepare
LOAD:00002C34 80 0E 01 00 16 BE 00 00       Elf32_Rel <0x10E80, 0xBE16>   ; R_ARM_JUMP_SLOT audio_route_reset
LOAD:00002C3C 84 0E 01 00 16 72 00 00       Elf32_Rel <0x10E84, 0x7216>   ; R_ARM_JUMP_SLOT audio_route_apply_path
LOAD:00002C44 88 0E 01 00 16 6B 00 00       Elf32_Rel <0x10E88, 0x6B16>   ; R_ARM_JUMP_SLOT audio_route_update_mixer
LOAD:00002C4C 8C 0E 01 00 16 0B 00 00       Elf32_Rel <0x10E8C, 0xB16>    ; R_ARM_JUMP_SLOT NxpTfa98xx_StartUp
LOAD:00002C54 90 0E 01 00 16 34 00 00       Elf32_Rel <0x10E90, 0x3416>   ; R_ARM_JUMP_SLOT pcm_get_error
LOAD:00002C5C 94 0E 01 00 16 31 00 00       Elf32_Rel <0x10E94, 0x3116>   ; R_ARM_JUMP_SLOT pcm_close
LOAD:00002C64 98 0E 01 00 16 41 00 00       Elf32_Rel <0x10E98, 0x4116>   ; R_ARM_JUMP_SLOT property_set
LOAD:00002C6C 9C 0E 01 00 16 16 00 00       Elf32_Rel <0x10E9C, 0x1616>   ; R_ARM_JUMP_SLOT __fread_chk
LOAD:00002C74 A0 0E 01 00 16 26 00 00       Elf32_Rel <0x10EA0, 0x2616>   ; R_ARM_JUMP_SLOT fseek
LOAD:00002C7C A4 0E 01 00 16 39 00 00       Elf32_Rel <0x10EA4, 0x3916>   ; R_ARM_JUMP_SLOT pcm_params_get
LOAD:00002C84 A8 0E 01 00 16 38 00 00       Elf32_Rel <0x10EA8, 0x3816>   ; R_ARM_JUMP_SLOT pcm_params_free
LOAD:00002C8C AC 0E 01 00 16 33 00 00       Elf32_Rel <0x10EAC, 0x3316>   ; R_ARM_JUMP_SLOT pcm_get_buffer_size
LOAD:00002C94 B0 0E 01 00 16 32 00 00       Elf32_Rel <0x10EB0, 0x3216>   ; R_ARM_JUMP_SLOT pcm_frames_to_bytes
LOAD:00002C9C B4 0E 01 00 16 28 00 00       Elf32_Rel <0x10EB4, 0x2816>   ; R_ARM_JUMP_SLOT malloc
LOAD:00002CA4 B8 0E 01 00 16 47 00 00       Elf32_Rel <0x10EB8, 0x4716>   ; R_ARM_JUMP_SLOT signal
LOAD:00002CAC BC 0E 01 00 16 25 00 00       Elf32_Rel <0x10EBC, 0x2516>   ; R_ARM_JUMP_SLOT free
LOAD:00002CB4 C0 0E 01 00 16 3F 00 00       Elf32_Rel <0x10EC0, 0x3F16>   ; R_ARM_JUMP_SLOT pcm_write
LOAD:00002CBC C4 0E 01 00 16 08 00 00       Elf32_Rel <0x10EC4, 0x816>    ; R_ARM_JUMP_SLOT NxpTfa98xx_ReCalibrate
LOAD:00002CC4 C8 0E 01 00 16 BC 00 00       Elf32_Rel <0x10EC8, 0xBC16>   ; R_ARM_JUMP_SLOT wav_player_start
LOAD:00002CCC CC 0E 01 00 16 19 00 00       Elf32_Rel <0x10ECC, 0x1916>   ; R_ARM_JUMP_SLOT __snprintf_chk
LOAD:00002CD4 D0 0E 01 00 16 52 00 00       Elf32_Rel <0x10ED0, 0x5216>   ; R_ARM_JUMP_SLOT strncmp
LOAD:00002CDC D4 0E 01 00 16 2A 00 00       Elf32_Rel <0x10ED4, 0x2A16>   ; R_ARM_JUMP_SLOT mixer_ctl_get_num_values
LOAD:00002CE4 D8 0E 01 00 16 2C 00 00       Elf32_Rel <0x10ED8, 0x2C16>   ; R_ARM_JUMP_SLOT mixer_ctl_set_value
LOAD:00002CEC DC 0E 01 00 16 3B 00 00       Elf32_Rel <0x10EDC, 0x3B16>   ; R_ARM_JUMP_SLOT pcm_params_get_min
LOAD:00002CF4 E0 0E 01 00 16 3A 00 00       Elf32_Rel <0x10EE0, 0x3A16>   ; R_ARM_JUMP_SLOT pcm_params_get_max
LOAD:00002CFC E4 0E 01 00 16 4E 00 00       Elf32_Rel <0x10EE4, 0x4E16>   ; R_ARM_JUMP_SLOT strcmp
LOAD:00002D04 E8 0E 01 00 16 20 00 00       Elf32_Rel <0x10EE8, 0x2016>   ; R_ARM_JUMP_SLOT calloc
LOAD:00002D0C EC 0E 01 00 16 0D 00 00       Elf32_Rel <0x10EEC, 0xD16>    ; R_ARM_JUMP_SLOT Open
LOAD:00002D14 F0 0E 01 00 16 77 00 00       Elf32_Rel <0x10EF0, 0x7716>   ; R_ARM_JUMP_SLOT thread_refresh_audio_route
LOAD:00002D1C F4 0E 01 00 16 0C 00 00       Elf32_Rel <0x10EF4, 0xC16>    ; R_ARM_JUMP_SLOT NxpTfa98xx_Stop
LOAD:00002D24 F8 0E 01 00 16 3E 00 00       Elf32_Rel <0x10EF8, 0x3E16>   ; R_ARM_JUMP_SLOT pcm_stop
LOAD:00002D2C FC 0E 01 00 16 0E 00 00       Elf32_Rel <0x10EFC, 0xE16>    ; R_ARM_JUMP_SLOT SetAudioClock
LOAD:00002D34 00 0F 01 00 16 4A 00 00       Elf32_Rel <0x10F00, 0x4A16>   ; R_ARM_JUMP_SLOT str_parms_create_str
LOAD:00002D3C 04 0F 01 00 16 4C 00 00       Elf32_Rel <0x10F04, 0x4C16>   ; R_ARM_JUMP_SLOT str_parms_get_str
LOAD:00002D44 08 0F 01 00 16 4B 00 00       Elf32_Rel <0x10F08, 0x4B16>   ; R_ARM_JUMP_SLOT str_parms_destroy
LOAD:00002D4C 0C 0F 01 00 16 4D 00 00       Elf32_Rel <0x10F0C, 0x4D16>   ; R_ARM_JUMP_SLOT str_parms_to_str
LOAD:00002D54 10 0F 01 00 16 4F 00 00       Elf32_Rel <0x10F10, 0x4F16>   ; R_ARM_JUMP_SLOT strdup
LOAD:00002D5C 14 0F 01 00 16 05 00 00       Elf32_Rel <0x10F14, 0x516>    ; R_ARM_JUMP_SLOT NxpTfa98xx_GetSpeakerImpedance
LOAD:00002D64 18 0F 01 00 16 1A 00 00       Elf32_Rel <0x10F18, 0x1A16>   ; R_ARM_JUMP_SLOT __sprintf_chk
LOAD:00002D6C 1C 0F 01 00 16 BD 00 00       Elf32_Rel <0x10F1C, 0xBD16>   ; R_ARM_JUMP_SLOT cvq_init
LOAD:00002D74 20 0F 01 00 16 10 00 00       Elf32_Rel <0x10F20, 0x1016>   ; R_ARM_JUMP_SLOT SetAudioVolume
LOAD:00002D7C 24 0F 01 00 16 A5 00 00       Elf32_Rel <0x10F24, 0xA516>   ; R_ARM_JUMP_SLOT get_output_device_id
LOAD:00002D84 28 0F 01 00 16 92 00 00       Elf32_Rel <0x10F28, 0x9216>   ; R_ARM_JUMP_SLOT get_input_source_id
LOAD:00002D8C 2C 0F 01 00 16 12 00 00       Elf32_Rel <0x10F2C, 0x1216>   ; R_ARM_JUMP_SLOT __aeabi_memclr8
LOAD:00002D94 30 0F 01 00 16 0A 00 00       Elf32_Rel <0x10F30, 0xA16>    ; R_ARM_JUMP_SLOT NxpTfa98xx_SetMute
LOAD:00002D9C 34 0F 01 00 16 07 00 00       Elf32_Rel <0x10F34, 0x716>    ; R_ARM_JUMP_SLOT NxpTfa98xx_PowerOn
LOAD:00002DA4 38 0F 01 00 16 43 00 00       Elf32_Rel <0x10F38, 0x4316>   ; R_ARM_JUMP_SLOT pthread_join
LOAD:00002DAC 3C 0F 01 00 16 46 00 00       Elf32_Rel <0x10F3C, 0x4616>   ; R_ARM_JUMP_SLOT release_resampler
LOAD:00002DB4 40 0F 01 00 16 06 00 00       Elf32_Rel <0x10F40, 0x616>    ; R_ARM_JUMP_SLOT NxpTfa98xx_PowerOff
LOAD:00002DBC 44 0F 01 00 16 30 00 00       Elf32_Rel <0x10F44, 0x3016>   ; R_ARM_JUMP_SLOT open
LOAD:00002DC4 48 0F 01 00 16 18 00 00       Elf32_Rel <0x10F48, 0x1816>   ; R_ARM_JUMP_SLOT __read_chk
LOAD:00002DCC 4C 0F 01 00 16 21 00 00       Elf32_Rel <0x10F4C, 0x2116>   ; R_ARM_JUMP_SLOT close
LOAD:00002DD4 50 0F 01 00 16 27 00 00       Elf32_Rel <0x10F50, 0x2716>   ; R_ARM_JUMP_SLOT log10
LOAD:00002DDC 54 0F 01 00 16 A1 00 00       Elf32_Rel <0x10F54, 0xA116>   ; R_ARM_JUMP_SLOT is_headphone_on
LOAD:00002DE4 58 0F 01 00 16 42 00 00       Elf32_Rel <0x10F58, 0x4216>   ; R_ARM_JUMP_SLOT pthread_create
LOAD:00002DEC 5C 0F 01 00 16 8F 00 00       Elf32_Rel <0x10F5C, 0x8F16>   ; R_ARM_JUMP_SLOT amplifier_calibrate
LOAD:00002DF4 60 0F 01 00 16 0F 00 00       Elf32_Rel <0x10F60, 0xF16>    ; R_ARM_JUMP_SLOT SetAudioLoopback
LOAD:00002DFC 64 0F 01 00 16 2B 00 00       Elf32_Rel <0x10F64, 0x2B16>   ; R_ARM_JUMP_SLOT mixer_ctl_set_enum_by_string
LOAD:00002E04 68 0F 01 00 16 49 00 00       Elf32_Rel <0x10F68, 0x4916>   ; R_ARM_JUMP_SLOT str_parms_create
LOAD:00002E0C 6C 0F 01 00 16 51 00 00       Elf32_Rel <0x10F6C, 0x5116>   ; R_ARM_JUMP_SLOT strlen
LOAD:00002E14 70 0F 01 00 16 1D 00 00       Elf32_Rel <0x10F70, 0x1D16>   ; R_ARM_JUMP_SLOT __strcat_chk
LOAD:00002E1C 74 0F 01 00 16 48 00 00       Elf32_Rel <0x10F74, 0x4816>   ; R_ARM_JUMP_SLOT str_parms_add_str
LOAD:00002E24 78 0F 01 00 16 11 00 00       Elf32_Rel <0x10F78, 0x1116>   ; R_ARM_JUMP_SLOT __aeabi_memclr
LOAD:00002E2C 7C 0F 01 00 16 22 00 00       Elf32_Rel <0x10F7C, 0x2216>   ; R_ARM_JUMP_SLOT create_resampler
LOAD:00002E34 80 0F 01 00 16 A4 00 00       Elf32_Rel <0x10F80, 0xA416>   ; R_ARM_JUMP_SLOT pcm_data_dump
LOAD:00002E3C 84 0F 01 00 16 35 00 00       Elf32_Rel <0x10F84, 0x3516>   ; R_ARM_JUMP_SLOT pcm_get_htimestamp
LOAD:00002E44 88 0F 01 00 16 3D 00 00       Elf32_Rel <0x10F88, 0x3D16>   ; R_ARM_JUMP_SLOT pcm_read
LOAD:00002E4C 8C 0F 01 00 16 13 00 00       Elf32_Rel <0x10F8C, 0x1316>   ; R_ARM_JUMP_SLOT __aeabi_memcpy
LOAD:00002E54 90 0F 01 00 16 61 00 00       Elf32_Rel <0x10F90, 0x6116>   ; R_ARM_JUMP_SLOT mixer_ctl_set_array
LOAD:00002E5C 94 0F 01 00 16 5A 00 00       Elf32_Rel <0x10F94, 0x5A16>   ; R_ARM_JUMP_SLOT __aeabi_memcpy4
LOAD:00002E64 98 0F 01 00 16 63 00 00       Elf32_Rel <0x10F98, 0x6316>   ; R_ARM_JUMP_SLOT mixer_get_num_ctls
LOAD:00002E6C 9C 0F 01 00 16 62 00 00       Elf32_Rel <0x10F9C, 0x6216>   ; R_ARM_JUMP_SLOT mixer_get_ctl
LOAD:00002E74 A0 0F 01 00 16 5F 00 00       Elf32_Rel <0x10FA0, 0x5F16>   ; R_ARM_JUMP_SLOT mixer_ctl_get_type
LOAD:00002E7C A4 0F 01 00 16 60 00 00       Elf32_Rel <0x10FA4, 0x6016>   ; R_ARM_JUMP_SLOT mixer_ctl_get_value
LOAD:00002E84 A8 0F 01 00 16 5B 00 00       Elf32_Rel <0x10FA8, 0x5B16>   ; R_ARM_JUMP_SLOT mixer_ctl_get_array
LOAD:00002E8C AC 0F 01 00 16 56 00 00       Elf32_Rel <0x10FAC, 0x5616>   ; R_ARM_JUMP_SLOT XML_ParserCreate
LOAD:00002E94 B0 0F 01 00 16 59 00 00       Elf32_Rel <0x10FB0, 0x5916>   ; R_ARM_JUMP_SLOT XML_SetUserData
LOAD:00002E9C B4 0F 01 00 16 58 00 00       Elf32_Rel <0x10FB4, 0x5816>   ; R_ARM_JUMP_SLOT XML_SetElementHandler
LOAD:00002EA4 B8 0F 01 00 16 54 00 00       Elf32_Rel <0x10FB8, 0x5416>   ; R_ARM_JUMP_SLOT XML_GetBuffer
LOAD:00002EAC BC 0F 01 00 16 55 00 00       Elf32_Rel <0x10FBC, 0x5516>   ; R_ARM_JUMP_SLOT XML_ParseBuffer
LOAD:00002EB4 C0 0F 01 00 16 57 00 00       Elf32_Rel <0x10FC0, 0x5716>   ; R_ARM_JUMP_SLOT XML_ParserFree
LOAD:00002EBC C4 0F 01 00 16 5E 00 00       Elf32_Rel <0x10FC4, 0x5E16>   ; R_ARM_JUMP_SLOT mixer_ctl_get_num_enums
LOAD:00002EC4 C8 0F 01 00 16 5C 00 00       Elf32_Rel <0x10FC8, 0x5C16>   ; R_ARM_JUMP_SLOT mixer_ctl_get_enum_string
LOAD:00002ECC CC 0F 01 00 16 64 00 00       Elf32_Rel <0x10FCC, 0x6416>   ; R_ARM_JUMP_SLOT realloc
LOAD:00002ED4 D0 0F 01 00 16 5D 00 00       Elf32_Rel <0x10FD0, 0x5D16>   ; R_ARM_JUMP_SLOT mixer_ctl_get_name
LOAD:00002EDC D4 0F 01 00 16 65 00 00       Elf32_Rel <0x10FD4, 0x6516>   ; R_ARM_JUMP_SLOT printf
LOAD:00002EE4 D8 0F 01 00 16 66 00 00       Elf32_Rel <0x10FD8, 0x6616>   ; R_ARM_JUMP_SLOT puts
LOAD:00002EEC DC 0F 01 00 16 67 00 00       Elf32_Rel <0x10FDC, 0x6716>   ; R_ARM_JUMP_SLOT __aeabi_memcpy8
LOAD:00002EF4 E0 0F 01 00 16 70 00 00       Elf32_Rel <0x10FE0, 0x7016>   ; R_ARM_JUMP_SLOT set_value
LOAD:00002EFC E4 0F 01 00 16 C3 00 00       Elf32_Rel <0x10FE4, 0xC316>   ; R_ARM_JUMP_SLOT uart_dev_read_wrapper
LOAD:00002F04 E8 0F 01 00 16 C1 00 00       Elf32_Rel <0x10FE8, 0xC116>   ; R_ARM_JUMP_SLOT cvq_start_decode
LOAD:00002F0C EC 0F 01 00 16 9C 00 00       Elf32_Rel <0x10FEC, 0x9C16>   ; R_ARM_JUMP_SLOT uart_read_wrapper
LOAD:00002F14 F0 0F 01 00 16 68 00 00       Elf32_Rel <0x10FF0, 0x6816>   ; R_ARM_JUMP_SLOT abort
LOAD:00002F1C F4 0F 01 00 16 69 00 00       Elf32_Rel <0x10FF4, 0x6916>   ; R_ARM_JUMP_SLOT fprintf
LOAD:00002F24 F8 0F 01 00 16 04 00 00       Elf32_Rel <0x10FF8, 0x416>    ; R_ARM_JUMP_SLOT dladdr
LOAD:00002F2C FC 0F 01 00 16 09 00 00       Elf32_Rel <0x10FFC, 0x916>    ; R_ARM_JUMP_SLOT __gnu_Unwind_Find_exidx
LOAD:00002F2C                               ; LOAD ends
LOAD:00002F2C
.plt:00002F34                               ; ===========================================================================
.plt:00002F34
.plt:00002F34                               ; Segment type: Pure code
.plt:00002F34                               AREA .plt, CODE
.plt:00002F34                               CODE32
.plt:00002F34
.plt:00002F34                               ; =============== S U B R O U T I N E =======================================
.plt:00002F34
.plt:00002F34
.plt:00002F34                               ; void sub_2F34()
.plt:00002F34                               sub_2F34
.plt:00002F34 04 E0 2D E5                   PUSH            {LR}
.plt:00002F38 04 E0 9F E5                   LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x2F44)
.plt:00002F3C 0E E0 8F E0                   ADD             LR, PC, LR    ; _GLOBAL_OFFSET_TABLE_
.plt:00002F40 08 F0 BE E5                   LDR             PC, [LR,#(off_10E18 - 0x10E10)]! ; dword_0
.plt:00002F40
.plt:00002F40                               ; End of function sub_2F34
.plt:00002F40
.plt:00002F40                               ; ---------------------------------------------------------------------------
.plt:00002F44 CC DE 00 00                   off_2F44 DCD _GLOBAL_OFFSET_TABLE_ - 0x2F44
.plt:00002F44                                                             ; DATA XREF: sub_2F34+4↑r
.plt:00002F48                               ; [0000000C BYTES: COLLAPSED FUNCTION __cxa_finalize. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00002F54                               ; [0000000C BYTES: COLLAPSED FUNCTION __cxa_atexit. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00002F60                               ; [0000000C BYTES: COLLAPSED FUNCTION __register_atfork. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00002F6C                               ; [0000000C BYTES: COLLAPSED FUNCTION property_get. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00002F78                               ; [0000000C BYTES: COLLAPSED FUNCTION atoi. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00002F84                               ; [0000000C BYTES: COLLAPSED FUNCTION access. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00002F90                               ; [0000000C BYTES: COLLAPSED FUNCTION mkdir. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00002F9C                               ; [0000000C BYTES: COLLAPSED FUNCTION fopen. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00002FA8                               ; [0000000C BYTES: COLLAPSED FUNCTION __fwrite_chk. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00002FB4                               ; [0000000C BYTES: COLLAPSED FUNCTION fclose. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00002FC0                               ; [0000000C BYTES: COLLAPSED FUNCTION __errno. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00002FCC                               ; [0000000C BYTES: COLLAPSED FUNCTION strerror. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00002FD8                               ; [0000000C BYTES: COLLAPSED FUNCTION __android_log_print. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00002FE4                               ; [0000000C BYTES: COLLAPSED FUNCTION __stack_chk_fail. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00002FF0                               ; [0000000C BYTES: COLLAPSED FUNCTION mixer_open. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00002FFC                               ; [0000000C BYTES: COLLAPSED FUNCTION mixer_get_ctl_by_name. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003008                               ; [0000000C BYTES: COLLAPSED FUNCTION mixer_close. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003014                               ; [0000000C BYTES: COLLAPSED FUNCTION usleep. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003020                               ; [0000000C BYTES: COLLAPSED FUNCTION pthread_mutex_lock. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000302C                               ; [0000000C BYTES: COLLAPSED FUNCTION j_audio_route_free. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003038                               ; [0000000C BYTES: COLLAPSED FUNCTION j_audio_route_init. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003044                               ; [0000000C BYTES: COLLAPSED FUNCTION pthread_mutex_unlock. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003050                               ; [0000000C BYTES: COLLAPSED FUNCTION pcm_open. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000305C                               ; [0000000C BYTES: COLLAPSED FUNCTION pcm_is_ready. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003068                               ; [0000000C BYTES: COLLAPSED FUNCTION pcm_prepare. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003074                               ; [0000000C BYTES: COLLAPSED FUNCTION j_audio_route_reset. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003080                               ; [0000000C BYTES: COLLAPSED FUNCTION j_audio_route_apply_path. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000308C                               ; [0000000C BYTES: COLLAPSED FUNCTION j_audio_route_update_mixer. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003098                               ; [0000000C BYTES: COLLAPSED FUNCTION NxpTfa98xx_StartUp. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000030A4                               ; [0000000C BYTES: COLLAPSED FUNCTION pcm_get_error. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000030B0                               ; [0000000C BYTES: COLLAPSED FUNCTION pcm_close. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000030BC                               ; [0000000C BYTES: COLLAPSED FUNCTION property_set. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000030C8                               ; [0000000C BYTES: COLLAPSED FUNCTION __fread_chk. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000030D4                               ; [0000000C BYTES: COLLAPSED FUNCTION fseek. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000030E0                               ; [0000000C BYTES: COLLAPSED FUNCTION pcm_params_get. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000030EC                               ; [0000000C BYTES: COLLAPSED FUNCTION pcm_params_free. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000030F8                               ; [0000000C BYTES: COLLAPSED FUNCTION pcm_get_buffer_size. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003104                               ; [0000000C BYTES: COLLAPSED FUNCTION pcm_frames_to_bytes. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003110                               ; [0000000C BYTES: COLLAPSED FUNCTION malloc. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000311C                               ; [0000000C BYTES: COLLAPSED FUNCTION signal. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003128                               ; [0000000C BYTES: COLLAPSED FUNCTION free. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003134                               ; [0000000C BYTES: COLLAPSED FUNCTION pcm_write. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003140                               ; [0000000C BYTES: COLLAPSED FUNCTION NxpTfa98xx_ReCalibrate. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000314C                               ; [0000000C BYTES: COLLAPSED FUNCTION j_wav_player_start. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003158                               ; [0000000C BYTES: COLLAPSED FUNCTION __snprintf_chk. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003164                               ; [0000000C BYTES: COLLAPSED FUNCTION strncmp. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003170                               ; [0000000C BYTES: COLLAPSED FUNCTION mixer_ctl_get_num_values. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000317C                               ; [0000000C BYTES: COLLAPSED FUNCTION mixer_ctl_set_value. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003188                               ; [0000000C BYTES: COLLAPSED FUNCTION pcm_params_get_min. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003194                               ; [0000000C BYTES: COLLAPSED FUNCTION pcm_params_get_max. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000031A0                               ; [0000000C BYTES: COLLAPSED FUNCTION strcmp. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000031AC                               ; [0000000C BYTES: COLLAPSED FUNCTION calloc. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000031B8                               ; [0000000C BYTES: COLLAPSED FUNCTION Open. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000031C4                               ; [0000000C BYTES: COLLAPSED FUNCTION j_thread_refresh_audio_route. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000031D0                               ; [0000000C BYTES: COLLAPSED FUNCTION NxpTfa98xx_Stop. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000031DC                               ; [0000000C BYTES: COLLAPSED FUNCTION pcm_stop. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000031E8                               ; [0000000C BYTES: COLLAPSED FUNCTION SetAudioClock. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000031F4                               ; [0000000C BYTES: COLLAPSED FUNCTION str_parms_create_str. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003200                               ; [0000000C BYTES: COLLAPSED FUNCTION str_parms_get_str. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000320C                               ; [0000000C BYTES: COLLAPSED FUNCTION str_parms_destroy. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003218                               ; [0000000C BYTES: COLLAPSED FUNCTION str_parms_to_str. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003224                               ; [0000000C BYTES: COLLAPSED FUNCTION strdup. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003230                               ; [0000000C BYTES: COLLAPSED FUNCTION NxpTfa98xx_GetSpeakerImpedance. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000323C                               ; [0000000C BYTES: COLLAPSED FUNCTION __sprintf_chk. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003248                               ; [0000000C BYTES: COLLAPSED FUNCTION j_cvq_init. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003254                               ; [0000000C BYTES: COLLAPSED FUNCTION SetAudioVolume. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003260                               ; [0000000C BYTES: COLLAPSED FUNCTION j_get_output_device_id. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000326C                               ; [0000000C BYTES: COLLAPSED FUNCTION j_get_input_source_id. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003278                               ; [0000000C BYTES: COLLAPSED FUNCTION __aeabi_memclr8. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003284                               ; [0000000C BYTES: COLLAPSED FUNCTION NxpTfa98xx_SetMute. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003290                               ; [0000000C BYTES: COLLAPSED FUNCTION NxpTfa98xx_PowerOn. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000329C                               ; [0000000C BYTES: COLLAPSED FUNCTION pthread_join. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000032A8                               ; [0000000C BYTES: COLLAPSED FUNCTION release_resampler. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000032B4                               ; [0000000C BYTES: COLLAPSED FUNCTION NxpTfa98xx_PowerOff. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000032C0                               ; [0000000C BYTES: COLLAPSED FUNCTION open. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000032CC                               ; [0000000C BYTES: COLLAPSED FUNCTION __read_chk. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000032D8                               ; [0000000C BYTES: COLLAPSED FUNCTION close. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000032E4                               ; [0000000C BYTES: COLLAPSED FUNCTION log10. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000032F0                               ; [0000000C BYTES: COLLAPSED FUNCTION j_is_headphone_on. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000032FC                               ; [0000000C BYTES: COLLAPSED FUNCTION pthread_create. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003308                               ; [0000000C BYTES: COLLAPSED FUNCTION j_amplifier_calibrate. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003314                               ; [0000000C BYTES: COLLAPSED FUNCTION SetAudioLoopback. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003320                               ; [0000000C BYTES: COLLAPSED FUNCTION mixer_ctl_set_enum_by_string. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000332C                               ; [0000000C BYTES: COLLAPSED FUNCTION str_parms_create. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003338                               ; [0000000C BYTES: COLLAPSED FUNCTION strlen. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003344                               ; [0000000C BYTES: COLLAPSED FUNCTION __strcat_chk. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003350                               ; [0000000C BYTES: COLLAPSED FUNCTION str_parms_add_str. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000335C                               ; [0000000C BYTES: COLLAPSED FUNCTION __aeabi_memclr. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003368                               ; [0000000C BYTES: COLLAPSED FUNCTION create_resampler. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003374                               ; [0000000C BYTES: COLLAPSED FUNCTION j_pcm_data_dump. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003380                               ; [0000000C BYTES: COLLAPSED FUNCTION pcm_get_htimestamp. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000338C                               ; [0000000C BYTES: COLLAPSED FUNCTION pcm_read. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003398                               ; [0000000C BYTES: COLLAPSED FUNCTION __aeabi_memcpy. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000033A4                               ; [0000000C BYTES: COLLAPSED FUNCTION mixer_ctl_set_array. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000033B0                               ; [0000000C BYTES: COLLAPSED FUNCTION __aeabi_memcpy4. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000033BC                               ; [0000000C BYTES: COLLAPSED FUNCTION mixer_get_num_ctls. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000033C8                               ; [0000000C BYTES: COLLAPSED FUNCTION mixer_get_ctl. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000033D4                               ; [0000000C BYTES: COLLAPSED FUNCTION mixer_ctl_get_type. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000033E0                               ; [0000000C BYTES: COLLAPSED FUNCTION mixer_ctl_get_value. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000033EC                               ; [0000000C BYTES: COLLAPSED FUNCTION mixer_ctl_get_array. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000033F8                               ; [0000000C BYTES: COLLAPSED FUNCTION XML_ParserCreate. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003404                               ; [0000000C BYTES: COLLAPSED FUNCTION XML_SetUserData. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003410                               ; [0000000C BYTES: COLLAPSED FUNCTION XML_SetElementHandler. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000341C                               ; [0000000C BYTES: COLLAPSED FUNCTION XML_GetBuffer. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003428                               ; [0000000C BYTES: COLLAPSED FUNCTION XML_ParseBuffer. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003434                               ; [0000000C BYTES: COLLAPSED FUNCTION XML_ParserFree. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003440                               ; [0000000C BYTES: COLLAPSED FUNCTION mixer_ctl_get_num_enums. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000344C                               ; [0000000C BYTES: COLLAPSED FUNCTION mixer_ctl_get_enum_string. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003458                               ; [0000000C BYTES: COLLAPSED FUNCTION realloc. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003464                               ; [0000000C BYTES: COLLAPSED FUNCTION mixer_ctl_get_name. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003470                               ; [0000000C BYTES: COLLAPSED FUNCTION printf. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000347C                               ; [0000000C BYTES: COLLAPSED FUNCTION puts. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003488                               ; [0000000C BYTES: COLLAPSED FUNCTION __aeabi_memcpy8. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00003494                               ; [0000000C BYTES: COLLAPSED FUNCTION j_set_value. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000034A0                               ; [0000000C BYTES: COLLAPSED FUNCTION j_uart_dev_read_wrapper. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000034AC                               ; [0000000C BYTES: COLLAPSED FUNCTION j_cvq_start_decode. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000034B8                               ; [0000000C BYTES: COLLAPSED FUNCTION j_uart_read_wrapper. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000034C4                               ; [0000000C BYTES: COLLAPSED FUNCTION abort. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000034D0                               ; [0000000C BYTES: COLLAPSED FUNCTION fprintf. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000034DC                               ; [0000000C BYTES: COLLAPSED FUNCTION dladdr. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000034E8                               ; [0000000C BYTES: COLLAPSED FUNCTION __gnu_Unwind_Find_exidx. PRESS CTRL-NUMPAD+ TO EXPAND]
LOAD:000034F4                               ; ===========================================================================
LOAD:000034F4
LOAD:000034F4                               ; Segment type: Pure code
LOAD:000034F4                               AREA LOAD, CODE, ALIGN=12
LOAD:000034F4                               CODE32
LOAD:000034F4 00 00 00 00 00 00 00 00 00 00+ALIGN 0x10
LOAD:000034F4 00 00                         ; LOAD ends
LOAD:000034F4
.text:00003500                               ; ===========================================================================
.text:00003500
.text:00003500                               ; Segment type: Pure code
.text:00003500                               AREA .text, CODE, ALIGN=4
.text:00003500                               CODE32
.text:00003500
.text:00003500                               ; =============== S U B R O U T I N E =======================================
.text:00003500
.text:00003500                               ; Attributes: bp-based frame
.text:00003500
.text:00003500                               ; int sub_3500()
.text:00003500                               sub_3500                      ; DATA XREF: .fini_array:off_10968↓o
.text:00003500 00 48 2D E9                   PUSH            {R11,LR}
.text:00003504 04 B0 8D E2                   ADD             R11, SP, #4
.text:00003508 0C 30 9F E5                   LDR             R3, =(off_11000 - 0x3514)
.text:0000350C 03 30 8F E0                   ADD             R3, PC, R3    ; off_11000
.text:00003510 03 00 A0 E1                   MOV             R0, R3        ; void *
.text:00003514 8B FE FF EB                   BL              __cxa_finalize
.text:00003514
.text:00003518 00 88 BD E8                   POP             {R11,PC}
.text:00003518
.text:00003518                               ; End of function sub_3500
.text:00003518
.text:00003518                               ; ---------------------------------------------------------------------------
.text:0000351C EC DA 00 00                   off_351C DCD off_11000 - 0x3514
.text:0000351C                                                             ; DATA XREF: sub_3500+8↑r
.text:00003520
.text:00003520                               ; =============== S U B R O U T I N E =======================================
.text:00003520
.text:00003520                               ; Attributes: bp-based frame
.text:00003520
.text:00003520                               ; int (*__fastcall sub_3520(int (*result)(void)))(void)
.text:00003520                               sub_3520                      ; DATA XREF: sub_354C+10↓o
.text:00003520                                                             ; sub_354C+14↓o
.text:00003520                                                             ; .text:off_3590↓o
.text:00003520
.text:00003520                               var_8= -8
.text:00003520
.text:00003520 00 48 2D E9                   PUSH            {R11,LR}
.text:00003524 04 B0 8D E2                   ADD             R11, SP, #4
.text:00003528 08 D0 4D E2                   SUB             SP, SP, #8
.text:0000352C 08 00 0B E5                   STR             R0, [R11,#var_8]
.text:00003530 08 30 1B E5                   LDR             R3, [R11,#var_8]
.text:00003534 00 00 53 E3                   CMP             R3, #0
.text:00003538 01 00 00 0A                   BEQ             loc_3544
.text:00003538
.text:0000353C 08 30 1B E5                   LDR             R3, [R11,#var_8]
.text:00003540 33 FF 2F E1                   BLX             R3
.text:00003540
.text:00003544
.text:00003544                               loc_3544                      ; CODE XREF: sub_3520+18↑j
.text:00003544 04 D0 4B E2                   SUB             SP, R11, #4
.text:00003548 00 88 BD E8                   POP             {R11,PC}
.text:00003548
.text:00003548                               ; End of function sub_3520
.text:00003548
.text:0000354C
.text:0000354C                               ; =============== S U B R O U T I N E =======================================
.text:0000354C
.text:0000354C                               ; Attributes: bp-based frame
.text:0000354C
.text:0000354C                               ; int __fastcall sub_354C(void *)
.text:0000354C                               sub_354C
.text:0000354C
.text:0000354C                               obj= -8
.text:0000354C
.text:0000354C 00 48 2D E9                   PUSH            {R11,LR}
.text:00003550 04 B0 8D E2                   ADD             R11, SP, #4
.text:00003554 08 D0 4D E2                   SUB             SP, SP, #8
.text:00003558 08 00 0B E5                   STR             R0, [R11,#obj]
.text:0000355C 2C 30 9F E5                   LDR             R3, =(sub_3520 - 0x3568)
.text:00003560 03 30 8F E0                   ADD             R3, PC, R3    ; sub_3520
.text:00003564 03 00 A0 E1                   MOV             R0, R3        ; lpfunc
.text:00003568 08 10 1B E5                   LDR             R1, [R11,#obj] ; obj
.text:0000356C 20 30 9F E5                   LDR             R3, =(off_11000 - 0x3578)
.text:00003570 03 30 8F E0                   ADD             R3, PC, R3    ; off_11000
.text:00003574 03 20 A0 E1                   MOV             R2, R3        ; lpdso_handle
.text:00003578 75 FE FF EB                   BL              __cxa_atexit
.text:00003578
.text:0000357C 00 30 A0 E1                   MOV             R3, R0
.text:00003580 00 00 A0 E1                   NOP
.text:00003584 03 00 A0 E1                   MOV             R0, R3
.text:00003588 04 D0 4B E2                   SUB             SP, R11, #4
.text:0000358C 00 88 BD E8                   POP             {R11,PC}
.text:0000358C
.text:0000358C                               ; End of function sub_354C
.text:0000358C
.text:0000358C                               ; ---------------------------------------------------------------------------
.text:00003590 B8 FF FF FF                   off_3590 DCD sub_3520 - 0x3568
.text:00003590                                                             ; DATA XREF: sub_354C+10↑r
.text:00003594 88 DA 00 00                   off_3594 DCD off_11000 - 0x3578
.text:00003594                                                             ; DATA XREF: sub_354C+20↑r
.text:00003598
.text:00003598                               ; =============== S U B R O U T I N E =======================================
.text:00003598
.text:00003598                               ; Attributes: bp-based frame
.text:00003598
.text:00003598                               ; int __fastcall sub_3598(int, int, int)
.text:00003598                               sub_3598
.text:00003598
.text:00003598                               var_10= -0x10
.text:00003598                               var_C= -0xC
.text:00003598                               var_8= -8
.text:00003598
.text:00003598 00 48 2D E9                   PUSH            {R11,LR}
.text:0000359C 04 B0 8D E2                   ADD             R11, SP, #4
.text:000035A0 10 D0 4D E2                   SUB             SP, SP, #0x10
.text:000035A4 08 00 0B E5                   STR             R0, [R11,#var_8]
.text:000035A8 0C 10 0B E5                   STR             R1, [R11,#var_C]
.text:000035AC 10 20 0B E5                   STR             R2, [R11,#var_10]
.text:000035B0 08 00 1B E5                   LDR             R0, [R11,#var_8]
.text:000035B4 0C 10 1B E5                   LDR             R1, [R11,#var_C]
.text:000035B8 10 20 1B E5                   LDR             R2, [R11,#var_10]
.text:000035BC 18 30 9F E5                   LDR             R3, =(off_11000 - 0x35C8)
.text:000035C0 03 30 8F E0                   ADD             R3, PC, R3    ; off_11000
.text:000035C4 65 FE FF EB                   BL              __register_atfork
.text:000035C4
.text:000035C8 00 30 A0 E1                   MOV             R3, R0
.text:000035CC 00 00 A0 E1                   NOP
.text:000035D0 03 00 A0 E1                   MOV             R0, R3
.text:000035D4 04 D0 4B E2                   SUB             SP, R11, #4
.text:000035D8 00 88 BD E8                   POP             {R11,PC}
.text:000035D8
.text:000035D8                               ; End of function sub_3598
.text:000035D8
.text:000035D8                               ; ---------------------------------------------------------------------------
.text:000035DC 38 DA 00 00                   off_35DC DCD off_11000 - 0x35C8
.text:000035DC                                                             ; DATA XREF: sub_3598+24↑r
.text:000035E0                               CODE16
.text:000035E0
.text:000035E0                               ; =============== S U B R O U T I N E =======================================
.text:000035E0
.text:000035E0                               ; Attributes: bp-based frame fpd=0x1060
.text:000035E0
.text:000035E0                               ; int __fastcall pcm_data_dump(const char *, int, int, int)
.text:000035E0                               EXPORT pcm_data_dump
.text:000035E0                               pcm_data_dump                 ; CODE XREF: j_pcm_data_dump+8↑j
.text:000035E0                                                             ; DATA XREF: LOAD:00000BE0↑o
.text:000035E0                                                             ; .got:pcm_data_dump_ptr↓o
.text:000035E0
.text:000035E0                               var_106C= -0x106C
.text:000035E0                               var_1064= -0x1064
.text:000035E0
.text:000035E0                               ; __unwind {
.text:000035E0 2D E9 F0 4F                   PUSH.W          {R4-R11,LR}
.text:000035E4 AD F5 83 5D                   SUB.W           SP, SP, #0x1060
.text:000035E8 83 B0                         SUB             SP, SP, #0xC
.text:000035EA 06 46                         MOV             R6, R0
.text:000035EC 3A 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x35F6)
.text:000035EE 91 46                         MOV             R9, R2
.text:000035F0 3A 4A                         LDR             R2, =(a0 - 0x3602) ; "0"
.text:000035F2 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:000035F4 0D F1 08 08                   ADD.W           R8, SP, #0x106C+var_1064
.text:000035F8 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:000035FA 03 AF                         ADD             R7, SP, #0xC
.text:000035FC 8A 46                         MOV             R10, R1
.text:000035FE 7A 44                         ADD             R2, PC        ; "0"
.text:00003600 39 46                         MOV             R1, R7
.text:00003602 00 68                         LDR             R0, [R0]
.text:00003604 C8 F8 00 00                   STR.W           R0, [R8]
.text:00003608 18 46                         MOV             R0, R3
.text:0000360A FF F7 B0 EC                   BLX             property_get
.text:0000360A
.text:0000360E 38 46                         MOV             R0, R7        ; nptr
.text:00003610 FF F7 B2 EC                   BLX             atoi
.text:00003610
.text:00003614 00 28                         CMP             R0, #0
.text:00003616 4F D0                         BEQ             loc_36B8
.text:00003616
.text:00003618 30 78                         LDRB            R0, [R6]
.text:0000361A 00 28                         CMP             R0, #0
.text:0000361C 1E D0                         BEQ             loc_365C
.text:0000361C
.text:0000361E 4F F0 00 0B                   MOV.W           R11, #0
.text:00003622 1A AF                         ADD             R7, SP, #0x68 ; 'h'
.text:00003624 2F 25                         MOVS            R5, #0x2F ; '/'
.text:00003626 00 24                         MOVS            R4, #0
.text:00003626
.text:00003628
.text:00003628                               loc_3628                      ; CODE XREF: pcm_data_dump+7A↓j
.text:00003628 38 55                         STRB            R0, [R7,R4]
.text:0000362A 94 B1                         CBZ             R4, loc_3652
.text:0000362A
.text:0000362C 30 5D                         LDRB            R0, [R6,R4]
.text:0000362E 2F 28                         CMP             R0, #0x2F ; '/'
.text:00003630 0F D1                         BNE             loc_3652
.text:00003630
.text:00003632 38 46                         MOV             R0, R7        ; name
.text:00003634 00 21                         MOVS            R1, #0        ; type
.text:00003636 07 F8 04 B0                   STRB.W          R11, [R7,R4]
.text:0000363A FF F7 A4 EC                   BLX             access
.text:0000363A
.text:0000363E 38 B1                         CBZ             R0, loc_3650
.text:0000363E
.text:00003640 38 46                         MOV             R0, R7        ; path
.text:00003642 4F F4 FC 71                   MOV.W           R1, #0x1F8    ; mode
.text:00003646 FF F7 A4 EC                   BLX             mkdir
.text:00003646
.text:0000364A B0 F1 FF 3F                   CMP.W           R0, #0xFFFFFFFF
.text:0000364E 1F D0                         BEQ             loc_3690
.text:0000364E
.text:00003650
.text:00003650                               loc_3650                      ; CODE XREF: pcm_data_dump+5E↑j
.text:00003650 3D 55                         STRB            R5, [R7,R4]
.text:00003650
.text:00003652
.text:00003652                               loc_3652                      ; CODE XREF: pcm_data_dump+4A↑j
.text:00003652                                                             ; pcm_data_dump+50↑j
.text:00003652 30 19                         ADDS            R0, R6, R4
.text:00003654 01 34                         ADDS            R4, #1
.text:00003656 40 78                         LDRB            R0, [R0,#1]
.text:00003658 00 28                         CMP             R0, #0
.text:0000365A E5 D1                         BNE             loc_3628
.text:0000365A
.text:0000365C
.text:0000365C                               loc_365C                      ; CODE XREF: pcm_data_dump+3C↑j
.text:0000365C 23 49                         LDR             R1, =(aAb - 0x3664) ; "ab+"
.text:0000365E 30 46                         MOV             R0, R6        ; filename
.text:00003660 79 44                         ADD             R1, PC        ; "ab+"
.text:00003662 FF F7 9C EC                   BLX             fopen
.text:00003662
.text:00003666 06 46                         MOV             R6, R0
.text:00003668 66 B1                         CBZ             R6, loc_3684
.text:00003668
.text:0000366A 4F F0 FF 30                   MOV.W           R0, #0xFFFFFFFF
.text:0000366E 01 21                         MOVS            R1, #1
.text:00003670 00 90                         STR             R0, [SP,#0x106C+var_106C]
.text:00003672 50 46                         MOV             R0, R10
.text:00003674 4A 46                         MOV             R2, R9
.text:00003676 33 46                         MOV             R3, R6
.text:00003678 FF F7 96 EC                   BLX             __fwrite_chk
.text:00003678
.text:0000367C 30 46                         MOV             R0, R6        ; stream
.text:0000367E FF F7 9A EC                   BLX             fclose
.text:0000367E
.text:00003682 19 E0                         B               loc_36B8
.text:00003682
.text:00003684                               ; ---------------------------------------------------------------------------
.text:00003684
.text:00003684                               loc_3684                      ; CODE XREF: pcm_data_dump+88↑j
.text:00003684 1A 49                         LDR             R1, =(aAudioHwPrimary - 0x368E) ; "audio_hw_primary"
.text:00003686 06 20                         MOVS            R0, #6
.text:00003688 1A 4A                         LDR             R2, =(aFailedToOpenTh - 0x3690) ; "Failed to open the file"
.text:0000368A 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000368C 7A 44                         ADD             R2, PC        ; "Failed to open the file"
.text:0000368E 11 E0                         B               loc_36B4
.text:0000368E
.text:00003690                               ; ---------------------------------------------------------------------------
.text:00003690
.text:00003690                               loc_3690                      ; CODE XREF: pcm_data_dump+6E↑j
.text:00003690 FF F7 96 EC                   BLX             __errno
.text:00003690
.text:00003694 00 68                         LDR             R0, [R0]      ; errnum
.text:00003696 FF F7 9A EC                   BLX             strerror
.text:00003696
.text:0000369A 11 4C                         LDR             R4, =(aAudioHwPrimary - 0x36A6) ; "audio_hw_primary"
.text:0000369C 03 46                         MOV             R3, R0
.text:0000369E 11 4A                         LDR             R2, =(aFailedToCreate - 0x36A8) ; "Failed to create directory: %s"
.text:000036A0 06 20                         MOVS            R0, #6
.text:000036A2 7C 44                         ADD             R4, PC        ; "audio_hw_primary"
.text:000036A4 7A 44                         ADD             R2, PC        ; "Failed to create directory: %s"
.text:000036A6 21 46                         MOV             R1, R4
.text:000036A8 FF F7 96 EC                   BLX             __android_log_print
.text:000036A8
.text:000036AC 0E 4A                         LDR             R2, =(aTheFilePathIsn - 0x36B6) ; "The file path isn't valid"
.text:000036AE 06 20                         MOVS            R0, #6
.text:000036B0 21 46                         MOV             R1, R4
.text:000036B2 7A 44                         ADD             R2, PC        ; "The file path isn't valid"
.text:000036B2
.text:000036B4
.text:000036B4                               loc_36B4                      ; CODE XREF: pcm_data_dump+AE↑j
.text:000036B4 FF F7 90 EC                   BLX             __android_log_print
.text:000036B4
.text:000036B8
.text:000036B8                               loc_36B8                      ; CODE XREF: pcm_data_dump+36↑j
.text:000036B8                                                             ; pcm_data_dump+A2↑j
.text:000036B8 0F 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x36C2)
.text:000036BA D8 F8 00 10                   LDR.W           R1, [R8]
.text:000036BE 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:000036C0 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:000036C2 00 68                         LDR             R0, [R0]
.text:000036C4 40 1A                         SUBS            R0, R0, R1
.text:000036C6 02 BF                         ITTT EQ
.text:000036C8 0D F5 83 5D                   ADDEQ.W         SP, SP, #0x1060
.text:000036CC 03 B0                         ADDEQ           SP, SP, #0xC
.text:000036CE BD E8 F0 8F                   POPEQ.W         {R4-R11,PC}
.text:000036CE
.text:000036D2 FF F7 88 EC                   BLX             __stack_chk_fail
.text:000036D2
.text:000036D2                               ; End of function pcm_data_dump
.text:000036D2
.text:000036D2                               ; ---------------------------------------------------------------------------
.text:000036D6 00 BF                         ALIGN 4
.text:000036D8 9E D7 00 00                   off_36D8 DCD __stack_chk_guard_ptr - 0x35F6
.text:000036D8                                                             ; DATA XREF: pcm_data_dump+C↑r
.text:000036DC 9B 84 00 00                   off_36DC DCD a0 - 0x3602      ; DATA XREF: pcm_data_dump+10↑r
.text:000036DC                                                             ; "0"
.text:000036E0 F9 83 00 00                   off_36E0 DCD aAudioHwPrimary - 0x36A6
.text:000036E0                                                             ; DATA XREF: pcm_data_dump+BA↑r
.text:000036E0                                                             ; "audio_hw_primary"
.text:000036E4 10 8D 00 00                   off_36E4 DCD aFailedToCreate - 0x36A8
.text:000036E4                                                             ; DATA XREF: pcm_data_dump+BE↑r
.text:000036E4                                                             ; "Failed to create directory: %s"
.text:000036E8 FA 83 00 00                   off_36E8 DCD aTheFilePathIsn - 0x36B6
.text:000036E8                                                             ; DATA XREF: pcm_data_dump+CC↑r
.text:000036E8                                                             ; "The file path isn't valid"
.text:000036EC 66 84 00 00                   off_36EC DCD aAb - 0x3664     ; DATA XREF: pcm_data_dump:loc_365C↑r
.text:000036EC                                                             ; "ab+"
.text:000036F0 11 84 00 00                   off_36F0 DCD aAudioHwPrimary - 0x368E
.text:000036F0                                                             ; DATA XREF: pcm_data_dump:loc_3684↑r
.text:000036F0                                                             ; "audio_hw_primary"
.text:000036F4 3E 84 00 00                   off_36F4 DCD aFailedToOpenTh - 0x3690
.text:000036F4                                                             ; DATA XREF: pcm_data_dump+A8↑r
.text:000036F4                                                             ; "Failed to open the file"
.text:000036F8 D2 D6 00 00                   off_36F8 DCD __stack_chk_guard_ptr - 0x36C2
.text:000036F8                                                             ; DATA XREF: pcm_data_dump:loc_36B8↑r
.text:000036F8                               ; } // starts at 35E0
.text:000036FC
.text:000036FC                               ; =============== S U B R O U T I N E =======================================
.text:000036FC
.text:000036FC
.text:000036FC                               ; int __fastcall get_output_device_id(int, unsigned int)
.text:000036FC                               EXPORT get_output_device_id
.text:000036FC                               get_output_device_id          ; CODE XREF: j_get_output_device_id+8↑j
.text:000036FC                                                             ; DATA XREF: LOAD:00000BF0↑o
.text:000036FC                                                             ; .got:get_output_device_id_ptr↓o
.text:000036FC
.text:000036FC                               var_28= -0x28
.text:000036FC
.text:000036FC                               ; __unwind {
.text:000036FC 2D E9 F0 47                   PUSH.W          {R4-R10,LR}
.text:00003700 82 B0                         SUB             SP, SP, #8
.text:00003702 0C 46                         MOV             R4, R1
.text:00003704 05 46                         MOV             R5, R0
.text:00003706 00 2C                         CMP             R4, #0
.text:00003708 69 D0                         BEQ             def_37BE      ; jumptable 000037BE default case, cases 3,5-7
.text:00003708
.text:0000370A 4F F0 55 3A                   MOV.W           R10, #0x55555555
.text:0000370E 4F F0 33 37                   MOV.W           R7, #0x33333333
.text:00003712 0A EA 54 00                   AND.W           R0, R10, R4,LSR#1
.text:00003716 4F F0 01 36                   MOV.W           R6, #0x1010101
.text:0000371A 20 1A                         SUBS            R0, R4, R0
.text:0000371C 07 EA 90 01                   AND.W           R1, R7, R0,LSR#2
.text:00003720 20 F0 CC 30                   BIC.W           R0, R0, #0xCCCCCCCC
.text:00003724 08 44                         ADD             R0, R1
.text:00003726 02 21                         MOVS            R1, #2
.text:00003728 00 EB 10 10                   ADD.W           R0, R0, R0,LSR#4
.text:0000372C 20 F0 F0 30                   BIC.W           R0, R0, #0xF0F0F0F0
.text:00003730 06 FB 00 F0                   MUL.W           R0, R6, R0
.text:00003734 B1 EB 10 6F                   CMP.W           R1, R0,LSR#24
.text:00003738 29 D1                         BNE             loc_378E
.text:00003738
.text:0000373A 04 20                         MOVS            R0, #4
.text:0000373C 06 2C                         CMP             R4, #6
.text:0000373E 18 BF                         IT NE
.text:00003740 0A 2C                         CMPNE           R4, #0xA
.text:00003742 4D D0                         BEQ             loc_37E0      ; jumptable 000037BE case 2
.text:00003742
.text:00003744 D5 F8 A8 00                   LDR.W           R0, [R5,#0xA8]
.text:00003748 01 28                         CMP             R0, #1
.text:0000374A 06 D1                         BNE             loc_375A
.text:0000374A
.text:0000374C 06 20                         MOVS            R0, #6
.text:0000374E 12 2C                         CMP             R4, #0x12
.text:00003750 46 D0                         BEQ             loc_37E0      ; jumptable 000037BE case 2
.text:00003750
.text:00003752 22 2C                         CMP             R4, #0x22 ; '"'
.text:00003754 18 BF                         IT NE
.text:00003756 42 2C                         CMPNE           R4, #0x42 ; 'B'
.text:00003758 42 D0                         BEQ             loc_37E0      ; jumptable 000037BE case 2
.text:00003758
.text:0000375A
.text:0000375A                               loc_375A                      ; CODE XREF: get_output_device_id+4E↑j
.text:0000375A DF F8 94 80                   LDR.W           R8, =(aAudioHwPrimary - 0x376E) ; "audio_hw_primary"
.text:0000375E 24 F0 02 04                   BIC.W           R4, R4, #2
.text:00003762 DF F8 94 90                   LDR.W           R9, =(aGetOutputDevic_0 - 0x3770) ; "get_output_device_id"
.text:00003766 02 20                         MOVS            R0, #2
.text:00003768 22 4A                         LDR             R2, =(aSChangeTwoOutp - 0x3774) ; "%s(): change two output devices to one:"...
.text:0000376A F8 44                         ADD             R8, PC        ; "audio_hw_primary"
.text:0000376C F9 44                         ADD             R9, PC        ; "get_output_device_id"
.text:0000376E 41 46                         MOV             R1, R8
.text:00003770 7A 44                         ADD             R2, PC        ; "%s(): change two output devices to one:"...
.text:00003772 4B 46                         MOV             R3, R9
.text:00003774 00 94                         STR             R4, [SP,#0x28+var_28]
.text:00003776 FF F7 30 EC                   BLX             __android_log_print
.text:00003776
.text:0000377A 20 4A                         LDR             R2, =(aSAdevOutDevice - 0x3786) ; "%s(): adev->out_device=%x"
.text:0000377C 03 20                         MOVS            R0, #3
.text:0000377E 41 46                         MOV             R1, R8
.text:00003780 4B 46                         MOV             R3, R9
.text:00003782 7A 44                         ADD             R2, PC        ; "%s(): adev->out_device=%x"
.text:00003784 C5 F8 AC 40                   STR.W           R4, [R5,#0xAC]
.text:00003788 00 94                         STR             R4, [SP,#0x28+var_28]
.text:0000378A FF F7 26 EC                   BLX             __android_log_print
.text:0000378A
.text:0000378E
.text:0000378E                               loc_378E                      ; CODE XREF: get_output_device_id+3C↑j
.text:0000378E 0A EA 54 00                   AND.W           R0, R10, R4,LSR#1
.text:00003792 20 1A                         SUBS            R0, R4, R0
.text:00003794 07 EA 90 01                   AND.W           R1, R7, R0,LSR#2
.text:00003798 20 F0 CC 30                   BIC.W           R0, R0, #0xCCCCCCCC
.text:0000379C 08 44                         ADD             R0, R1
.text:0000379E 01 21                         MOVS            R1, #1
.text:000037A0 00 EB 10 10                   ADD.W           R0, R0, R0,LSR#4
.text:000037A4 20 F0 F0 30                   BIC.W           R0, R0, #0xF0F0F0F0
.text:000037A8 06 FB 00 F0                   MUL.W           R0, R6, R0
.text:000037AC B1 EB 10 6F                   CMP.W           R1, R0,LSR#24
.text:000037B0 15 D1                         BNE             def_37BE      ; jumptable 000037BE default case, cases 3,5-7
.text:000037B0
.text:000037B2 0F 2C                         CMP             R4, #0xF
.text:000037B4 0B DC                         BGT             loc_37CE
.text:000037B4
.text:000037B6 61 1E                         SUBS            R1, R4, #1    ; switch 8 cases
.text:000037B8 07 29                         CMP             R1, #7
.text:000037BA 10 D8                         BHI             def_37BE      ; jumptable 000037BE default case, cases 3,5-7
.text:000037BA
.text:000037BC 00 20                         MOVS            R0, #0
.text:000037BE DF E8 01 F0                   TBB.W           [PC,R1]       ; switch jump
.text:000037BE
.text:000037BE                               ; ---------------------------------------------------------------------------
.text:000037C2 04                            jpt_37BE DCB 4                ; jump table for switch statement
.text:000037C3 0F                            DCB 0xF
.text:000037C4 0E                            DCB 0xE
.text:000037C5 12                            DCB 0x12
.text:000037C6 0E                            DCB 0xE
.text:000037C7 0E                            DCB 0xE
.text:000037C8 0E                            DCB 0xE
.text:000037C9 14                            DCB 0x14
.text:000037CA                               ; ---------------------------------------------------------------------------
.text:000037CA
.text:000037CA                               loc_37CA                      ; CODE XREF: get_output_device_id+C2↑j
.text:000037CA 05 20                         MOVS            R0, #5        ; jumptable 000037BE case 1
.text:000037CC 08 E0                         B               loc_37E0      ; jumptable 000037BE case 2
.text:000037CC
.text:000037CE                               ; ---------------------------------------------------------------------------
.text:000037CE
.text:000037CE                               loc_37CE                      ; CODE XREF: get_output_device_id+B8↑j
.text:000037CE 10 2C                         CMP             R4, #0x10
.text:000037D0 18 BF                         IT NE
.text:000037D2 20 2C                         CMPNE           R4, #0x20 ; ' '
.text:000037D4 01 D0                         BEQ             loc_37DA
.text:000037D4
.text:000037D6 40 2C                         CMP             R4, #0x40 ; '@'
.text:000037D8 01 D1                         BNE             def_37BE      ; jumptable 000037BE default case, cases 3,5-7
.text:000037D8
.text:000037DA
.text:000037DA                               loc_37DA                      ; CODE XREF: get_output_device_id+D8↑j
.text:000037DA 03 20                         MOVS            R0, #3
.text:000037DC 00 E0                         B               loc_37E0      ; jumptable 000037BE case 2
.text:000037DC
.text:000037DE                               ; ---------------------------------------------------------------------------
.text:000037DE
.text:000037DE                               def_37BE                      ; CODE XREF: get_output_device_id+C↑j
.text:000037DE                                                             ; get_output_device_id+B4↑j
.text:000037DE                                                             ; get_output_device_id+BE↑j
.text:000037DE                                                             ; get_output_device_id+C2↑j
.text:000037DE                                                             ; get_output_device_id+DC↑j
.text:000037DE 08 20                         MOVS            R0, #8        ; jumptable 000037BE default case, cases 3,5-7
.text:000037DE
.text:000037E0
.text:000037E0                               loc_37E0                      ; CODE XREF: get_output_device_id+46↑j
.text:000037E0                                                             ; get_output_device_id+54↑j
.text:000037E0                                                             ; get_output_device_id+5C↑j
.text:000037E0                                                             ; get_output_device_id+C2↑j
.text:000037E0                                                             ; get_output_device_id+D0↑j
.text:000037E0                                                             ; get_output_device_id+E0↑j
.text:000037E0                                                             ; get_output_device_id+EC↓j
.text:000037E0                                                             ; get_output_device_id+F0↓j
.text:000037E0 02 B0                         ADD             SP, SP, #8    ; jumptable 000037BE case 2
.text:000037E2 BD E8 F0 87                   POP.W           {R4-R10,PC}
.text:000037E2
.text:000037E6                               ; ---------------------------------------------------------------------------
.text:000037E6
.text:000037E6                               loc_37E6                      ; CODE XREF: get_output_device_id+C2↑j
.text:000037E6 01 20                         MOVS            R0, #1        ; jumptable 000037BE case 4
.text:000037E8 FA E7                         B               loc_37E0      ; jumptable 000037BE case 2
.text:000037E8
.text:000037EA                               ; ---------------------------------------------------------------------------
.text:000037EA
.text:000037EA                               loc_37EA                      ; CODE XREF: get_output_device_id+C2↑j
.text:000037EA 02 20                         MOVS            R0, #2        ; jumptable 000037BE case 8
.text:000037EC F8 E7                         B               loc_37E0      ; jumptable 000037BE case 2
.text:000037EC
.text:000037EC                               ; End of function get_output_device_id
.text:000037EC
.text:000037EC                               ; ---------------------------------------------------------------------------
.text:000037EE 00 BF                         ALIGN 0x10
.text:000037F0 31 83 00 00                   off_37F0 DCD aAudioHwPrimary - 0x376E
.text:000037F0                                                             ; DATA XREF: get_output_device_id:loc_375A↑r
.text:000037F0                                                             ; "audio_hw_primary"
.text:000037F4 72 83 00 00                   off_37F4 DCD aSChangeTwoOutp - 0x3774
.text:000037F4                                                             ; DATA XREF: get_output_device_id+6C↑r
.text:000037F4                                                             ; "%s(): change two output devices to one:"...
.text:000037F8 A1 83 00 00                   off_37F8 DCD aGetOutputDevic_0 - 0x3770
.text:000037F8                                                             ; DATA XREF: get_output_device_id+66↑r
.text:000037F8                                                             ; "get_output_device_id"
.text:000037FC A0 83 00 00                   off_37FC DCD aSAdevOutDevice - 0x3786
.text:000037FC                                                             ; DATA XREF: get_output_device_id+7E↑r
.text:000037FC                               ; } // starts at 36FC         ; "%s(): adev->out_device=%x"
.text:00003800
.text:00003800                               ; =============== S U B R O U T I N E =======================================
.text:00003800
.text:00003800
.text:00003800                               ; int __fastcall get_input_source_id(int, int)
.text:00003800                               EXPORT get_input_source_id
.text:00003800                               get_input_source_id           ; CODE XREF: j_get_input_source_id+8↑j
.text:00003800                                                             ; DATA XREF: LOAD:00000AC0↑o
.text:00003800                                                             ; .got:get_input_source_id_ptr↓o
.text:00003800
.text:00003800                               var_18= -0x18
.text:00003800
.text:00003800                               ; __unwind {
.text:00003800 B0 B5                         PUSH            {R4,R5,R7,LR}
.text:00003802 82 B0                         SUB             SP, SP, #8
.text:00003804 04 46                         MOV             R4, R0
.text:00003806 01 39                         SUBS            R1, #1        ; switch 7 cases
.text:00003808 D4 F8 A8 00                   LDR.W           R0, [R4,#0xA8]
.text:0000380C D4 F8 FC 50                   LDR.W           R5, [R4,#0xFC]
.text:00003810 20 F0 01 00                   BIC.W           R0, R0, #1
.text:00003814 02 28                         CMP             R0, #2
.text:00003816 04 BF                         ITT EQ
.text:00003818 00 20                         MOVEQ           R0, #0
.text:0000381A 84 F8 39 01                   STRBEQ.W        R0, [R4,#0x139]
.text:0000381E 0B 20                         MOVS            R0, #0xB
.text:00003820 06 29                         CMP             R1, #6
.text:00003822 58 D8                         BHI             def_3824      ; jumptable 00003824 default case, cases 2,3
.text:00003822
.text:00003824 DF E8 01 F0                   TBB.W           [PC,R1]       ; switch jump
.text:00003824
.text:00003824                               ; ---------------------------------------------------------------------------
.text:00003828 04                            jpt_3824 DCB 4                ; jump table for switch statement
.text:00003829 57                            DCB 0x57
.text:0000382A 57                            DCB 0x57
.text:0000382B 13                            DCB 0x13
.text:0000382C 2C                            DCB 0x2C
.text:0000382D 2E                            DCB 0x2E
.text:0000382E 4B                            DCB 0x4B
.text:0000382F 00                            ALIGN 2
.text:00003830
.text:00003830                               loc_3830                      ; CODE XREF: get_input_source_id+24↑j
.text:00003830 94 F8 B8 00                   LDRB.W          R0, [R4,#0xB8] ; jumptable 00003824 case 1
.text:00003834 31 49                         LDR             R1, =(aAudioHwPrimary - 0x383E) ; "audio_hw_primary"
.text:00003836 32 4A                         LDR             R2, =(aSMicNrOffD - 0x3842) ; "%s(): mic_nr_off=%d"
.text:00003838 32 4B                         LDR             R3, =(aGetInputSource_0 - 0x3844) ; "get_input_source_id"
.text:0000383A 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000383C 00 90                         STR             R0, [SP,#0x18+var_18]
.text:0000383E 7A 44                         ADD             R2, PC        ; "%s(): mic_nr_off=%d"
.text:00003840 7B 44                         ADD             R3, PC        ; "get_input_source_id"
.text:00003842 02 20                         MOVS            R0, #2
.text:00003844 FF F7 C8 EB                   BLX             __android_log_print
.text:00003844
.text:00003848 94 F8 B8 00                   LDRB.W          R0, [R4,#0xB8]
.text:0000384C 43 E0                         B               def_3824      ; jumptable 00003824 default case, cases 2,3
.text:0000384C
.text:0000384E                               ; ---------------------------------------------------------------------------
.text:0000384E
.text:0000384E                               loc_384E                      ; CODE XREF: get_input_source_id+24↑j
.text:0000384E 94 F8 B6 00                   LDRB.W          R0, [R4,#0xB6] ; jumptable 00003824 case 4
.text:00003852 94 F8 B7 10                   LDRB.W          R1, [R4,#0xB7]
.text:00003856 27 4A                         LDR             R2, =(aSVoiceCallWbDB - 0x3862) ; "%s(): voice_call_wb=%d, bluetooth_nrec="...
.text:00003858 27 4B                         LDR             R3, =(aGetInputSource_0 - 0x3864) ; "get_input_source_id"
.text:0000385A CD E9 00 10                   STRD.W          R1, R0, [SP,#0x18+var_18]
.text:0000385E 7A 44                         ADD             R2, PC        ; "%s(): voice_call_wb=%d, bluetooth_nrec="...
.text:00003860 7B 44                         ADD             R3, PC        ; "get_input_source_id"
.text:00003862 02 20                         MOVS            R0, #2
.text:00003864 22 49                         LDR             R1, =(aAudioHwPrimary - 0x386A) ; "audio_hw_primary"
.text:00003866 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00003868 FF F7 B6 EB                   BLX             __android_log_print
.text:00003868
.text:0000386C 94 F8 B6 10                   LDRB.W          R1, [R4,#0xB6]
.text:00003870 94 F8 B7 00                   LDRB.W          R0, [R4,#0xB7]
.text:00003874 58 B3                         CBZ             R0, loc_38CE
.text:00003874
.text:00003876 06 20                         MOVS            R0, #6
.text:00003878 00 29                         CMP             R1, #0
.text:0000387A 18 BF                         IT NE
.text:0000387C 05 20                         MOVNE           R0, #5
.text:0000387E 2A E0                         B               def_3824      ; jumptable 00003824 default case, cases 2,3
.text:0000387E
.text:00003880                               ; ---------------------------------------------------------------------------
.text:00003880
.text:00003880                               loc_3880                      ; CODE XREF: get_input_source_id+24↑j
.text:00003880 07 20                         MOVS            R0, #7        ; jumptable 00003824 case 5
.text:00003882 28 E0                         B               def_3824      ; jumptable 00003824 default case, cases 2,3
.text:00003882
.text:00003884                               ; ---------------------------------------------------------------------------
.text:00003884
.text:00003884                               loc_3884                      ; CODE XREF: get_input_source_id+24↑j
.text:00003884 15 48                         LDR             R0, =(pcm_config_in_ptr - 0x388E) ; jumptable 00003824 case 6
.text:00003886 94 F8 39 11                   LDRB.W          R1, [R4,#0x139]
.text:0000388A 78 44                         ADD             R0, PC        ; pcm_config_in_ptr
.text:0000388C 00 68                         LDR             R0, [R0]      ; pcm_config_in
.text:0000388E 15 4A                         LDR             R2, =(aSVoiceRecognit - 0x3898) ; "%s(): voice recognition: rate=%d, asr_r"...
.text:00003890 15 4B                         LDR             R3, =(aGetInputSource_0 - 0x389A) ; "get_input_source_id"
.text:00003892 40 68                         LDR             R0, [R0,#(off_11034 - 0x11030)] ; "bluetooth_nrec=%d"
.text:00003894 7A 44                         ADD             R2, PC        ; "%s(): voice recognition: rate=%d, asr_r"...
.text:00003896 7B 44                         ADD             R3, PC        ; "get_input_source_id"
.text:00003898 CD E9 00 01                   STRD.W          R0, R1, [SP,#0x18+var_18]
.text:0000389C 02 20                         MOVS            R0, #2
.text:0000389E 10 49                         LDR             R1, =(aAudioHwPrimary - 0x38A4) ; "audio_hw_primary"
.text:000038A0 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000038A2 FF F7 9A EB                   BLX             __android_log_print
.text:000038A2
.text:000038A6 65 B1                         CBZ             R5, loc_38C2
.text:000038A6
.text:000038A8 A8 6C                         LDR             R0, [R5,#0x48]
.text:000038AA 50 B1                         CBZ             R0, loc_38C2
.text:000038AA
.text:000038AC 0F 48                         LDR             R0, =(pcm_config_in_ptr - 0x38B2)
.text:000038AE 78 44                         ADD             R0, PC        ; pcm_config_in_ptr
.text:000038B0 00 68                         LDR             R0, [R0]      ; pcm_config_in
.text:000038B2 40 68                         LDR             R0, [R0,#(off_11034 - 0x11030)] ; "bluetooth_nrec=%d"
.text:000038B4 B0 F5 7A 5F                   CMP.W           R0, #0x3E80
.text:000038B8 03 D1                         BNE             loc_38C2
.text:000038B8
.text:000038BA 08 20                         MOVS            R0, #8
.text:000038BC 0B E0                         B               def_3824      ; jumptable 00003824 default case, cases 2,3
.text:000038BC
.text:000038BE                               ; ---------------------------------------------------------------------------
.text:000038BE
.text:000038BE                               loc_38BE                      ; CODE XREF: get_input_source_id+24↑j
.text:000038BE 09 20                         MOVS            R0, #9        ; jumptable 00003824 case 7
.text:000038C0 09 E0                         B               def_3824      ; jumptable 00003824 default case, cases 2,3
.text:000038C0
.text:000038C2                               ; ---------------------------------------------------------------------------
.text:000038C2
.text:000038C2                               loc_38C2                      ; CODE XREF: get_input_source_id+A6↑j
.text:000038C2                                                             ; get_input_source_id+AA↑j
.text:000038C2                                                             ; get_input_source_id+B8↑j
.text:000038C2 94 F8 39 01                   LDRB.W          R0, [R4,#0x139]
.text:000038C6 00 28                         CMP             R0, #0
.text:000038C8 18 BF                         IT NE
.text:000038CA 02 20                         MOVNE           R0, #2
.text:000038CC 03 E0                         B               def_3824      ; jumptable 00003824 default case, cases 2,3
.text:000038CC
.text:000038CE                               ; ---------------------------------------------------------------------------
.text:000038CE
.text:000038CE                               loc_38CE                      ; CODE XREF: get_input_source_id+74↑j
.text:000038CE 04 20                         MOVS            R0, #4
.text:000038D0 00 29                         CMP             R1, #0
.text:000038D2 18 BF                         IT NE
.text:000038D4 03 20                         MOVNE           R0, #3
.text:000038D4
.text:000038D6
.text:000038D6                               def_3824                      ; CODE XREF: get_input_source_id+22↑j
.text:000038D6                                                             ; get_input_source_id+24↑j
.text:000038D6                                                             ; get_input_source_id+4C↑j
.text:000038D6                                                             ; get_input_source_id+7E↑j
.text:000038D6                                                             ; get_input_source_id+82↑j
.text:000038D6                                                             ; get_input_source_id+BC↑j
.text:000038D6                                                             ; get_input_source_id+C0↑j
.text:000038D6                                                             ; get_input_source_id+CC↑j
.text:000038D6 02 B0                         ADD             SP, SP, #8    ; jumptable 00003824 default case, cases 2,3
.text:000038D8 B0 BD                         POP             {R4,R5,R7,PC}
.text:000038D8
.text:000038D8                               ; End of function get_input_source_id
.text:000038D8
.text:000038D8                               ; ---------------------------------------------------------------------------
.text:000038DA 00 BF                         ALIGN 4
.text:000038DC 0A D5 00 00                   off_38DC DCD pcm_config_in_ptr - 0x388E
.text:000038DC                                                             ; DATA XREF: get_input_source_id:loc_3884↑r
.text:000038E0 FB 81 00 00                   off_38E0 DCD aAudioHwPrimary - 0x38A4
.text:000038E0                                                             ; DATA XREF: get_input_source_id+9E↑r
.text:000038E0                                                             ; "audio_hw_primary"
.text:000038E4 FA 82 00 00                   off_38E4 DCD aSVoiceRecognit - 0x3898
.text:000038E4                                                             ; DATA XREF: get_input_source_id+8E↑r
.text:000038E4                                                             ; "%s(): voice recognition: rate=%d, asr_r"...
.text:000038E8 BA 82 00 00                   off_38E8 DCD aGetInputSource_0 - 0x389A
.text:000038E8                                                             ; DATA XREF: get_input_source_id+90↑r
.text:000038E8                                                             ; "get_input_source_id"
.text:000038EC E6 D4 00 00                   off_38EC DCD pcm_config_in_ptr - 0x38B2
.text:000038EC                                                             ; DATA XREF: get_input_source_id+AC↑r
.text:000038F0 35 82 00 00                   off_38F0 DCD aAudioHwPrimary - 0x386A
.text:000038F0                                                             ; DATA XREF: get_input_source_id+64↑r
.text:000038F0                                                             ; "audio_hw_primary"
.text:000038F4 06 83 00 00                   off_38F4 DCD aSVoiceCallWbDB - 0x3862
.text:000038F4                                                             ; DATA XREF: get_input_source_id+56↑r
.text:000038F4                                                             ; "%s(): voice_call_wb=%d, bluetooth_nrec="...
.text:000038F8 F0 82 00 00                   off_38F8 DCD aGetInputSource_0 - 0x3864
.text:000038F8                                                             ; DATA XREF: get_input_source_id+58↑r
.text:000038F8                                                             ; "get_input_source_id"
.text:000038FC 61 82 00 00                   off_38FC DCD aAudioHwPrimary - 0x383E
.text:000038FC                                                             ; DATA XREF: get_input_source_id+34↑r
.text:000038FC                                                             ; "audio_hw_primary"
.text:00003900 FE 82 00 00                   off_3900 DCD aSMicNrOffD - 0x3842
.text:00003900                                                             ; DATA XREF: get_input_source_id+36↑r
.text:00003900                                                             ; "%s(): mic_nr_off=%d"
.text:00003904 10 83 00 00                   off_3904 DCD aGetInputSource_0 - 0x3844
.text:00003904                                                             ; DATA XREF: get_input_source_id+38↑r
.text:00003904                               ; } // starts at 3800         ; "get_input_source_id"
.text:00003908
.text:00003908                               ; =============== S U B R O U T I N E =======================================
.text:00003908
.text:00003908
.text:00003908                               ; int __fastcall thread_refresh_audio_route(int)
.text:00003908                               EXPORT thread_refresh_audio_route
.text:00003908                               thread_refresh_audio_route    ; CODE XREF: j_thread_refresh_audio_route+8↑j
.text:00003908                                                             ; DATA XREF: LOAD:00000910↑o
.text:00003908                                                             ; .got:thread_refresh_audio_route_ptr↓o
.text:00003908
.text:00003908                               var_20= -0x20
.text:00003908
.text:00003908                               ; __unwind {
.text:00003908 2D E9 F0 41                   PUSH.W          {R4-R8,LR}
.text:0000390C 82 B0                         SUB             SP, SP, #8
.text:0000390E 72 49                         LDR             R1, =(aAudioHwPrimary - 0x391C) ; "audio_hw_primary"
.text:00003910 80 46                         MOV             R8, R0
.text:00003912 72 4A                         LDR             R2, =(aSEnter - 0x391E) ; "%s(): enter"
.text:00003914 03 20                         MOVS            R0, #3
.text:00003916 72 4B                         LDR             R3, =(aThreadRefreshA_0 - 0x3920) ; "thread_refresh_audio_route"
.text:00003918 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000391A 7A 44                         ADD             R2, PC        ; "%s(): enter"
.text:0000391C 7B 44                         ADD             R3, PC        ; "thread_refresh_audio_route"
.text:0000391E FF F7 5C EB                   BLX             __android_log_print
.text:0000391E
.text:00003922 70 4C                         LDR             R4, =(aInternalRoute - 0x392A) ; "Internal Route"
.text:00003924 00 25                         MOVS            R5, #0
.text:00003926 7C 44                         ADD             R4, PC        ; "Internal Route"
.text:00003926
.text:00003928
.text:00003928                               loc_3928                      ; CODE XREF: thread_refresh_audio_route+4A↓j
.text:00003928 00 20                         MOVS            R0, #0
.text:0000392A FF F7 62 EB                   BLX             mixer_open
.text:0000392A
.text:0000392E 06 46                         MOV             R6, R0
.text:00003930 BE B1                         CBZ             R6, loc_3962
.text:00003930
.text:00003932 30 46                         MOV             R0, R6
.text:00003934 21 46                         MOV             R1, R4
.text:00003936 FF F7 62 EB                   BLX             mixer_get_ctl_by_name
.text:00003936
.text:0000393A 07 46                         MOV             R7, R0
.text:0000393C 30 46                         MOV             R0, R6
.text:0000393E FF F7 64 EB                   BLX             mixer_close
.text:0000393E
.text:00003942 B7 B9                         CBNZ            R7, loc_3972
.text:00003942
.text:00003944 4C F2 50 30                   MOVW            R0, #0xC350   ; useconds
.text:00003948 FF F7 64 EB                   BLX             usleep
.text:00003948
.text:0000394C 01 35                         ADDS            R5, #1
.text:0000394E B5 F5 FA 7F                   CMP.W           R5, #0x1F4
.text:00003952 E9 DB                         BLT             loc_3928
.text:00003952
.text:00003954 7D 49                         LDR             R1, =(aAudioHwPrimary - 0x395E) ; "audio_hw_primary"
.text:00003956 7E 4A                         LDR             R2, =(aSWaitingForEsc - 0x3960) ; "%s(): Waiting for escore being ready ti"...
.text:00003958 7E 4B                         LDR             R3, =(aThreadRefreshA_0 - 0x3962) ; "thread_refresh_audio_route"
.text:0000395A 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000395C 7A 44                         ADD             R2, PC        ; "%s(): Waiting for escore being ready ti"...
.text:0000395E 7B 44                         ADD             R3, PC        ; "thread_refresh_audio_route"
.text:00003960 05 E0                         B               loc_396E
.text:00003960
.text:00003962                               ; ---------------------------------------------------------------------------
.text:00003962
.text:00003962                               loc_3962                      ; CODE XREF: thread_refresh_audio_route+28↑j
.text:00003962 7D 49                         LDR             R1, =(aAudioHwPrimary - 0x396C) ; "audio_hw_primary"
.text:00003964 7D 4A                         LDR             R2, =(aSUnableToOpenM - 0x396E) ; "%s(): Unable to open mixer"
.text:00003966 7E 4B                         LDR             R3, =(aThreadRefreshA_0 - 0x3970) ; "thread_refresh_audio_route"
.text:00003968 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000396A 7A 44                         ADD             R2, PC        ; "%s(): Unable to open mixer"
.text:0000396C 7B 44                         ADD             R3, PC        ; "thread_refresh_audio_route"
.text:0000396C
.text:0000396E
.text:0000396E                               loc_396E                      ; CODE XREF: thread_refresh_audio_route+58↑j
.text:0000396E 06 20                         MOVS            R0, #6
.text:00003970 AC E0                         B               loc_3ACC
.text:00003970
.text:00003972                               ; ---------------------------------------------------------------------------
.text:00003972
.text:00003972                               loc_3972                      ; CODE XREF: thread_refresh_audio_route+3A↑j
.text:00003972 08 F1 A4 04                   ADD.W           R4, R8, #0xA4
.text:00003976 20 46                         MOV             R0, R4        ; mutex
.text:00003978 FF F7 52 EB                   BLX             pthread_mutex_lock
.text:00003978
.text:0000397C D8 F8 BC 00                   LDR.W           R0, [R8,#0xBC]
.text:00003980 FF F7 54 EB                   BLX             j_audio_route_free
.text:00003980
.text:00003984 58 49                         LDR             R1, =(aSystemEtcMixer - 0x398C) ; "/system/etc/mixer_paths.xml"
.text:00003986 00 20                         MOVS            R0, #0
.text:00003988 79 44                         ADD             R1, PC        ; "/system/etc/mixer_paths.xml"
.text:0000398A FF F7 56 EB                   BLX             j_audio_route_init
.text:0000398A
.text:0000398E C8 F8 BC 00                   STR.W           R0, [R8,#0xBC]
.text:00003992 40 B9                         CBNZ            R0, loc_39A6
.text:00003992
.text:00003994 55 49                         LDR             R1, =(aAudioHwPrimary - 0x39A0) ; "audio_hw_primary"
.text:00003996 06 20                         MOVS            R0, #6
.text:00003998 55 4A                         LDR             R2, =(aSFailedToOpenA - 0x39A2) ; "%s(): failed to open audio route"
.text:0000399A 56 4B                         LDR             R3, =(aThreadRefreshA_0 - 0x39A4) ; "thread_refresh_audio_route"
.text:0000399C 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000399E 7A 44                         ADD             R2, PC        ; "%s(): failed to open audio route"
.text:000039A0 7B 44                         ADD             R3, PC        ; "thread_refresh_audio_route"
.text:000039A2 FF F7 1A EB                   BLX             __android_log_print
.text:000039A2
.text:000039A6
.text:000039A6                               loc_39A6                      ; CODE XREF: thread_refresh_audio_route+8A↑j
.text:000039A6 20 46                         MOV             R0, R4        ; mutex
.text:000039A8 FF F7 4C EB                   BLX             pthread_mutex_unlock
.text:000039A8
.text:000039AC 20 46                         MOV             R0, R4        ; mutex
.text:000039AE FF F7 38 EB                   BLX             pthread_mutex_lock
.text:000039AE
.text:000039B2 51 48                         LDR             R0, =(pcm_config_amplifier_ptr - 0x39BC)
.text:000039B4 02 21                         MOVS            R1, #2
.text:000039B6 00 22                         MOVS            R2, #0
.text:000039B8 78 44                         ADD             R0, PC        ; pcm_config_amplifier_ptr
.text:000039BA 03 68                         LDR             R3, [R0]      ; pcm_config_amplifier
.text:000039BC 00 20                         MOVS            R0, #0
.text:000039BE FF F7 48 EB                   BLX             pcm_open
.text:000039BE
.text:000039C2 06 46                         MOV             R6, R0
.text:000039C4 26 B1                         CBZ             R6, loc_39D0
.text:000039C4
.text:000039C6 30 46                         MOV             R0, R6
.text:000039C8 FF F7 48 EB                   BLX             pcm_is_ready
.text:000039C8
.text:000039CC 00 28                         CMP             R0, #0
.text:000039CE 3F D0                         BEQ             loc_3A50
.text:000039CE
.text:000039D0
.text:000039D0                               loc_39D0                      ; CODE XREF: thread_refresh_audio_route+BC↑j
.text:000039D0 30 46                         MOV             R0, R6
.text:000039D2 FF F7 4A EB                   BLX             pcm_prepare
.text:000039D2
.text:000039D6 4C 48                         LDR             R0, =(pcm_config_amplifier_ptr - 0x39E2)
.text:000039D8 06 21                         MOVS            R1, #6
.text:000039DA 4F F0 80 52                   MOV.W           R2, #0x10000000
.text:000039DE 78 44                         ADD             R0, PC        ; pcm_config_amplifier_ptr
.text:000039E0 03 68                         LDR             R3, [R0]      ; pcm_config_amplifier
.text:000039E2 00 20                         MOVS            R0, #0
.text:000039E4 FF F7 34 EB                   BLX             pcm_open
.text:000039E4
.text:000039E8 07 46                         MOV             R7, R0
.text:000039EA 1F B1                         CBZ             R7, loc_39F4
.text:000039EA
.text:000039EC 38 46                         MOV             R0, R7
.text:000039EE FF F7 36 EB                   BLX             pcm_is_ready
.text:000039EE
.text:000039F2 E0 B3                         CBZ             R0, loc_3A6E
.text:000039F2
.text:000039F4
.text:000039F4                               loc_39F4                      ; CODE XREF: thread_refresh_audio_route+E2↑j
.text:000039F4 38 46                         MOV             R0, R7
.text:000039F6 FF F7 38 EB                   BLX             pcm_prepare
.text:000039F6
.text:000039FA D8 F8 BC 00                   LDR.W           R0, [R8,#0xBC]
.text:000039FE FF F7 3A EB                   BLX             j_audio_route_reset
.text:000039FE
.text:00003A02 45 49                         LDR             R1, =(aSpeaker - 0x3A0C) ; "speaker"
.text:00003A04 D8 F8 BC 00                   LDR.W           R0, [R8,#0xBC] ; int
.text:00003A08 79 44                         ADD             R1, PC        ; "speaker"
.text:00003A0A FF F7 3A EB                   BLX             j_audio_route_apply_path
.text:00003A0A
.text:00003A0E D8 F8 BC 00                   LDR.W           R0, [R8,#0xBC]
.text:00003A12 FF F7 3C EB                   BLX             j_audio_route_update_mixer
.text:00003A12
.text:00003A16 20 46                         MOV             R0, R4        ; mutex
.text:00003A18 FF F7 14 EB                   BLX             pthread_mutex_unlock
.text:00003A18
.text:00003A1C 4F F4 7A 70                   MOV.W           R0, #0x3E8    ; useconds
.text:00003A20 FF F7 F8 EA                   BLX             usleep
.text:00003A20
.text:00003A24 3D 48                         LDR             R0, =(pcm_config_amplifier_ptr - 0x3A2A)
.text:00003A26 78 44                         ADD             R0, PC        ; pcm_config_amplifier_ptr
.text:00003A28 00 68                         LDR             R0, [R0]      ; pcm_config_amplifier
.text:00003A2A 40 68                         LDR             R0, [R0,#(off_110D4 - 0x110D0)] ; "bluetooth_nrec=%d"
.text:00003A2C FF F7 34 EB                   BLX             NxpTfa98xx_StartUp
.text:00003A2C
.text:00003A30 05 46                         MOV             R5, R0
.text:00003A32 45 B1                         CBZ             R5, loc_3A46
.text:00003A32
.text:00003A34 3A 49                         LDR             R1, =(aAudioHwPrimary - 0x3A40) ; "audio_hw_primary"
.text:00003A36 06 20                         MOVS            R0, #6
.text:00003A38 3A 4A                         LDR             R2, =(aSFailedToBring - 0x3A42) ; "%s(): failed to bring up tfa98xx"
.text:00003A3A 3B 4B                         LDR             R3, =(aAmplifierIniti - 0x3A44) ; "amplifier_initialize"
.text:00003A3C 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00003A3E 7A 44                         ADD             R2, PC        ; "%s(): failed to bring up tfa98xx"
.text:00003A40 7B 44                         ADD             R3, PC        ; "amplifier_initialize"
.text:00003A42 FF F7 CA EA                   BLX             __android_log_print
.text:00003A42
.text:00003A46
.text:00003A46                               loc_3A46                      ; CODE XREF: thread_refresh_audio_route+12A↑j
.text:00003A46 4F F4 7A 70                   MOV.W           R0, #0x3E8    ; useconds
.text:00003A4A FF F7 E4 EA                   BLX             usleep
.text:00003A4A
.text:00003A4E 1C E0                         B               loc_3A8A
.text:00003A4E
.text:00003A50                               ; ---------------------------------------------------------------------------
.text:00003A50
.text:00003A50                               loc_3A50                      ; CODE XREF: thread_refresh_audio_route+C6↑j
.text:00003A50 30 46                         MOV             R0, R6
.text:00003A52 FF F7 28 EB                   BLX             pcm_get_error
.text:00003A52
.text:00003A56 29 49                         LDR             R1, =(aAudioHwPrimary - 0x3A60) ; "audio_hw_primary"
.text:00003A58 29 4A                         LDR             R2, =(aSPcmOpenBacken - 0x3A64) ; "%s(): pcm_open(BACKEND) failed: %s"
.text:00003A5A 2A 4B                         LDR             R3, =(aAmplifierIniti - 0x3A66) ; "amplifier_initialize"
.text:00003A5C 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00003A5E 00 90                         STR             R0, [SP,#0x20+var_20]
.text:00003A60 7A 44                         ADD             R2, PC        ; "%s(): pcm_open(BACKEND) failed: %s"
.text:00003A62 7B 44                         ADD             R3, PC        ; "amplifier_initialize"
.text:00003A64 06 20                         MOVS            R0, #6
.text:00003A66 FF F7 B8 EA                   BLX             __android_log_print
.text:00003A66
.text:00003A6A 00 25                         MOVS            R5, #0
.text:00003A6C 10 E0                         B               loc_3A90
.text:00003A6C
.text:00003A6E                               ; ---------------------------------------------------------------------------
.text:00003A6E
.text:00003A6E                               loc_3A6E                      ; CODE XREF: thread_refresh_audio_route+EA↑j
.text:00003A6E 38 46                         MOV             R0, R7
.text:00003A70 FF F7 18 EB                   BLX             pcm_get_error
.text:00003A70
.text:00003A74 25 49                         LDR             R1, =(aAudioHwPrimary - 0x3A7E) ; "audio_hw_primary"
.text:00003A76 26 4A                         LDR             R2, =(aSPcmOpenAmplif - 0x3A82) ; "%s(): pcm_open(AMPLIFIER) failed: %s"
.text:00003A78 26 4B                         LDR             R3, =(aAmplifierIniti - 0x3A84) ; "amplifier_initialize"
.text:00003A7A 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00003A7C 00 90                         STR             R0, [SP,#0x20+var_20]
.text:00003A7E 7A 44                         ADD             R2, PC        ; "%s(): pcm_open(AMPLIFIER) failed: %s"
.text:00003A80 7B 44                         ADD             R3, PC        ; "amplifier_initialize"
.text:00003A82 06 20                         MOVS            R0, #6
.text:00003A84 FF F7 A8 EA                   BLX             __android_log_print
.text:00003A84
.text:00003A88 00 25                         MOVS            R5, #0
.text:00003A88
.text:00003A8A
.text:00003A8A                               loc_3A8A                      ; CODE XREF: thread_refresh_audio_route+146↑j
.text:00003A8A 38 46                         MOV             R0, R7
.text:00003A8C FF F7 10 EB                   BLX             pcm_close
.text:00003A8C
.text:00003A90
.text:00003A90                               loc_3A90                      ; CODE XREF: thread_refresh_audio_route+164↑j
.text:00003A90 30 46                         MOV             R0, R6
.text:00003A92 FF F7 0E EB                   BLX             pcm_close
.text:00003A92
.text:00003A96 20 46                         MOV             R0, R4        ; mutex
.text:00003A98 FF F7 D4 EA                   BLX             pthread_mutex_unlock
.text:00003A98
.text:00003A9C 4D B1                         CBZ             R5, loc_3AB2
.text:00003A9C
.text:00003A9E 23 49                         LDR             R1, =(aAudioHwPrimary - 0x3AAA) ; "audio_hw_primary"
.text:00003AA0 06 20                         MOVS            R0, #6
.text:00003AA2 23 4A                         LDR             R2, =(aSFailedToBring_0 - 0x3AAC) ; "%s(): failed to bring up amplifier, spe"...
.text:00003AA4 23 4B                         LDR             R3, =(aThreadRefreshA_0 - 0x3AAE) ; "thread_refresh_audio_route"
.text:00003AA6 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00003AA8 7A 44                         ADD             R2, PC        ; "%s(): failed to bring up amplifier, spe"...
.text:00003AAA 7B 44                         ADD             R3, PC        ; "thread_refresh_audio_route"
.text:00003AAC FF F7 94 EA                   BLX             __android_log_print
.text:00003AAC
.text:00003AB0 05 E0                         B               loc_3ABE
.text:00003AB0
.text:00003AB2                               ; ---------------------------------------------------------------------------
.text:00003AB2
.text:00003AB2                               loc_3AB2                      ; CODE XREF: thread_refresh_audio_route+194↑j
.text:00003AB2 21 48                         LDR             R0, =(aPrimaryPaReady - 0x3ABA) ; "primary.pa.ready"
.text:00003AB4 21 49                         LDR             R1, =(a1 - 0x3ABC) ; "1"
.text:00003AB6 78 44                         ADD             R0, PC        ; "primary.pa.ready"
.text:00003AB8 79 44                         ADD             R1, PC        ; "1"
.text:00003ABA FF F7 00 EB                   BLX             property_set
.text:00003ABA
.text:00003ABE
.text:00003ABE                               loc_3ABE                      ; CODE XREF: thread_refresh_audio_route+1A8↑j
.text:00003ABE 20 49                         LDR             R1, =(aAudioHwPrimary - 0x3ACA) ; "audio_hw_primary"
.text:00003AC0 03 20                         MOVS            R0, #3
.text:00003AC2 20 4A                         LDR             R2, =(aSLeave - 0x3ACC) ; "%s(): leave"
.text:00003AC4 20 4B                         LDR             R3, =(aThreadRefreshA_0 - 0x3ACE) ; "thread_refresh_audio_route"
.text:00003AC6 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00003AC8 7A 44                         ADD             R2, PC        ; "%s(): leave"
.text:00003ACA 7B 44                         ADD             R3, PC        ; "thread_refresh_audio_route"
.text:00003ACA
.text:00003ACC
.text:00003ACC                               loc_3ACC                      ; CODE XREF: thread_refresh_audio_route+68↑j
.text:00003ACC FF F7 84 EA                   BLX             __android_log_print
.text:00003ACC
.text:00003AD0 00 20                         MOVS            R0, #0
.text:00003AD2 02 B0                         ADD             SP, SP, #8
.text:00003AD4 BD E8 F0 81                   POP.W           {R4-R8,PC}
.text:00003AD4
.text:00003AD4                               ; End of function thread_refresh_audio_route
.text:00003AD4
.text:00003AD4                               ; ---------------------------------------------------------------------------
.text:00003AD8 83 81 00 00                   off_3AD8 DCD aAudioHwPrimary - 0x391C
.text:00003AD8                                                             ; DATA XREF: thread_refresh_audio_route+6↑r
.text:00003AD8                                                             ; "audio_hw_primary"
.text:00003ADC AF 86 00 00                   off_3ADC DCD aSEnter - 0x391E ; DATA XREF: thread_refresh_audio_route+A↑r
.text:00003ADC                                                             ; "%s(): enter"
.text:00003AE0 B9 86 00 00                   off_3AE0 DCD aThreadRefreshA_0 - 0x3920
.text:00003AE0                                                             ; DATA XREF: thread_refresh_audio_route+E↑r
.text:00003AE0                                                             ; "thread_refresh_audio_route"
.text:00003AE4 12 87 00 00                   off_3AE4 DCD aInternalRoute - 0x392A
.text:00003AE4                                                             ; DATA XREF: thread_refresh_audio_route+1A↑r
.text:00003AE4                                                             ; "Internal Route"
.text:00003AE8 BF 86 00 00                   off_3AE8 DCD aSystemEtcMixer - 0x398C
.text:00003AE8                                                             ; DATA XREF: thread_refresh_audio_route+7C↑r
.text:00003AE8                                                             ; "/system/etc/mixer_paths.xml"
.text:00003AEC FF 80 00 00                   off_3AEC DCD aAudioHwPrimary - 0x39A0
.text:00003AEC                                                             ; DATA XREF: thread_refresh_audio_route+8C↑r
.text:00003AEC                                                             ; "audio_hw_primary"
.text:00003AF0 C5 86 00 00                   off_3AF0 DCD aSFailedToOpenA - 0x39A2
.text:00003AF0                                                             ; DATA XREF: thread_refresh_audio_route+90↑r
.text:00003AF0                                                             ; "%s(): failed to open audio route"
.text:00003AF4 35 86 00 00                   off_3AF4 DCD aThreadRefreshA_0 - 0x39A4
.text:00003AF4                                                             ; DATA XREF: thread_refresh_audio_route+92↑r
.text:00003AF4                                                             ; "thread_refresh_audio_route"
.text:00003AF8 E0 D3 00 00                   off_3AF8 DCD pcm_config_amplifier_ptr - 0x39BC
.text:00003AF8                                                             ; DATA XREF: thread_refresh_audio_route+AA↑r
.text:00003AFC 3F 80 00 00                   off_3AFC DCD aAudioHwPrimary - 0x3A60
.text:00003AFC                                                             ; DATA XREF: thread_refresh_audio_route+14E↑r
.text:00003AFC                                                             ; "audio_hw_primary"
.text:00003B00 73 89 00 00                   off_3B00 DCD aSPcmOpenBacken - 0x3A64
.text:00003B00                                                             ; DATA XREF: thread_refresh_audio_route+150↑r
.text:00003B00                                                             ; "%s(): pcm_open(BACKEND) failed: %s"
.text:00003B04 94 89 00 00                   off_3B04 DCD aAmplifierIniti - 0x3A66
.text:00003B04                                                             ; DATA XREF: thread_refresh_audio_route+152↑r
.text:00003B04                                                             ; "amplifier_initialize"
.text:00003B08 BA D3 00 00                   off_3B08 DCD pcm_config_amplifier_ptr - 0x39E2
.text:00003B08                                                             ; DATA XREF: thread_refresh_audio_route+CE↑r
.text:00003B0C 21 80 00 00                   off_3B0C DCD aAudioHwPrimary - 0x3A7E
.text:00003B0C                                                             ; DATA XREF: thread_refresh_audio_route+16C↑r
.text:00003B0C                                                             ; "audio_hw_primary"
.text:00003B10 8D 89 00 00                   off_3B10 DCD aSPcmOpenAmplif - 0x3A82
.text:00003B10                                                             ; DATA XREF: thread_refresh_audio_route+16E↑r
.text:00003B10                                                             ; "%s(): pcm_open(AMPLIFIER) failed: %s"
.text:00003B14 76 89 00 00                   off_3B14 DCD aAmplifierIniti - 0x3A84
.text:00003B14                                                             ; DATA XREF: thread_refresh_audio_route+170↑r
.text:00003B14                                                             ; "amplifier_initialize"
.text:00003B18 26 89 00 00                   off_3B18 DCD aSpeaker - 0x3A0C
.text:00003B18                                                             ; DATA XREF: thread_refresh_audio_route+FA↑r
.text:00003B18                                                             ; "speaker"
.text:00003B1C 72 D3 00 00                   off_3B1C DCD pcm_config_amplifier_ptr - 0x3A2A
.text:00003B1C                                                             ; DATA XREF: thread_refresh_audio_route+11C↑r
.text:00003B20 5F 80 00 00                   off_3B20 DCD aAudioHwPrimary - 0x3A40
.text:00003B20                                                             ; DATA XREF: thread_refresh_audio_route+12C↑r
.text:00003B20                                                             ; "audio_hw_primary"
.text:00003B24 F2 89 00 00                   off_3B24 DCD aSFailedToBring - 0x3A42
.text:00003B24                                                             ; DATA XREF: thread_refresh_audio_route+130↑r
.text:00003B24                                                             ; "%s(): failed to bring up tfa98xx"
.text:00003B28 B6 89 00 00                   off_3B28 DCD aAmplifierIniti - 0x3A44
.text:00003B28                                                             ; DATA XREF: thread_refresh_audio_route+132↑r
.text:00003B28                                                             ; "amplifier_initialize"
.text:00003B2C F5 7F 00 00                   off_3B2C DCD aAudioHwPrimary - 0x3AAA
.text:00003B2C                                                             ; DATA XREF: thread_refresh_audio_route+196↑r
.text:00003B2C                                                             ; "audio_hw_primary"
.text:00003B30 DC 85 00 00                   off_3B30 DCD aSFailedToBring_0 - 0x3AAC
.text:00003B30                                                             ; DATA XREF: thread_refresh_audio_route+19A↑r
.text:00003B30                                                             ; "%s(): failed to bring up amplifier, spe"...
.text:00003B34 2B 85 00 00                   off_3B34 DCD aThreadRefreshA_0 - 0x3AAE
.text:00003B34                                                             ; DATA XREF: thread_refresh_audio_route+19C↑r
.text:00003B34                                                             ; "thread_refresh_audio_route"
.text:00003B38 9B 89 00 00                   off_3B38 DCD aPrimaryPaReady - 0x3ABA
.text:00003B38                                                             ; DATA XREF: thread_refresh_audio_route:loc_3AB2↑r
.text:00003B38                                                             ; "primary.pa.ready"
.text:00003B3C AA 89 00 00                   off_3B3C DCD a1 - 0x3ABC      ; DATA XREF: thread_refresh_audio_route+1AC↑r
.text:00003B3C                                                             ; "1"
.text:00003B40 D5 7F 00 00                   off_3B40 DCD aAudioHwPrimary - 0x3ACA
.text:00003B40                                                             ; DATA XREF: thread_refresh_audio_route:loc_3ABE↑r
.text:00003B40                                                             ; "audio_hw_primary"
.text:00003B44 F7 85 00 00                   off_3B44 DCD aSLeave - 0x3ACC ; DATA XREF: thread_refresh_audio_route+1BA↑r
.text:00003B44                                                             ; "%s(): leave"
.text:00003B48 0B 85 00 00                   off_3B48 DCD aThreadRefreshA_0 - 0x3ACE
.text:00003B48                                                             ; DATA XREF: thread_refresh_audio_route+1BC↑r
.text:00003B48                                                             ; "thread_refresh_audio_route"
.text:00003B4C 41 81 00 00                   off_3B4C DCD aAudioHwPrimary - 0x395E
.text:00003B4C                                                             ; DATA XREF: thread_refresh_audio_route+4C↑r
.text:00003B4C                                                             ; "audio_hw_primary"
.text:00003B50 94 86 00 00                   off_3B50 DCD aSWaitingForEsc - 0x3960
.text:00003B50                                                             ; DATA XREF: thread_refresh_audio_route+4E↑r
.text:00003B50                                                             ; "%s(): Waiting for escore being ready ti"...
.text:00003B54 77 86 00 00                   off_3B54 DCD aThreadRefreshA_0 - 0x3962
.text:00003B54                                                             ; DATA XREF: thread_refresh_audio_route+50↑r
.text:00003B54                                                             ; "thread_refresh_audio_route"
.text:00003B58 33 81 00 00                   off_3B58 DCD aAudioHwPrimary - 0x396C
.text:00003B58                                                             ; DATA XREF: thread_refresh_audio_route:loc_3962↑r
.text:00003B58                                                             ; "audio_hw_primary"
.text:00003B5C B3 86 00 00                   off_3B5C DCD aSUnableToOpenM - 0x396E
.text:00003B5C                                                             ; DATA XREF: thread_refresh_audio_route+5C↑r
.text:00003B5C                                                             ; "%s(): Unable to open mixer"
.text:00003B60 69 86 00 00                   off_3B60 DCD aThreadRefreshA_0 - 0x3970
.text:00003B60                                                             ; DATA XREF: thread_refresh_audio_route+5E↑r
.text:00003B60                               ; } // starts at 3908         ; "thread_refresh_audio_route"
.text:00003B64
.text:00003B64                               ; =============== S U B R O U T I N E =======================================
.text:00003B64
.text:00003B64
.text:00003B64                               ; int __fastcall test_set_hifi_gain(int result)
.text:00003B64                               EXPORT test_set_hifi_gain
.text:00003B64                               test_set_hifi_gain            ; DATA XREF: LOAD:00000C80↑o
.text:00003B64                               ; __unwind {
.text:00003B64 01 49                         LDR             R1, =(dword_116C8 - 0x3B6A)
.text:00003B66 79 44                         ADD             R1, PC        ; dword_116C8
.text:00003B68 08 60                         STR             R0, [R1]
.text:00003B6A 70 47                         BX              LR
.text:00003B6A
.text:00003B6A                               ; End of function test_set_hifi_gain
.text:00003B6A
.text:00003B6A                               ; ---------------------------------------------------------------------------
.text:00003B6C 5E DB 00 00                   off_3B6C DCD dword_116C8 - 0x3B6A
.text:00003B6C                                                             ; DATA XREF: test_set_hifi_gain↑r
.text:00003B70
.text:00003B70                               ; =============== S U B R O U T I N E =======================================
.text:00003B70
.text:00003B70
.text:00003B70                               ; int __fastcall wav_player_stop(int result)
.text:00003B70                               EXPORT wav_player_stop
.text:00003B70                               wav_player_stop               ; DATA XREF: LOAD:00000DF0↑o
.text:00003B70 01 49                         LDR             R1, =(dword_116CC - 0x3B76)
.text:00003B72 79 44                         ADD             R1, PC        ; dword_116CC
.text:00003B74 08 60                         STR             R0, [R1]
.text:00003B76 70 47                         BX              LR
.text:00003B76
.text:00003B76                               ; End of function wav_player_stop
.text:00003B76
.text:00003B76                               ; ---------------------------------------------------------------------------
.text:00003B78 56 DB 00 00                   off_3B78 DCD dword_116CC - 0x3B76
.text:00003B78                                                             ; DATA XREF: wav_player_stop↑r
.text:00003B78                               ; } // starts at 3B64
.text:00003B7C
.text:00003B7C                               ; =============== S U B R O U T I N E =======================================
.text:00003B7C
.text:00003B7C
.text:00003B7C                               ; int __fastcall wav_player_start(const char *, int, int)
.text:00003B7C                               EXPORT wav_player_start
.text:00003B7C                               wav_player_start              ; CODE XREF: j_wav_player_start+8↑j
.text:00003B7C                                                             ; DATA XREF: LOAD:00000D60↑o
.text:00003B7C                                                             ; .got:wav_player_start_ptr↓o
.text:00003B7C
.text:00003B7C                               var_90= -0x90
.text:00003B7C                               var_84= -0x84
.text:00003B7C                               var_80= -0x80
.text:00003B7C                               size= -0x7C
.text:00003B7C                               ptr= -0x78
.text:00003B7C                               var_74= -0x74
.text:00003B7C                               var_72= -0x72
.text:00003B7C                               var_70= -0x70
.text:00003B7C                               var_66= -0x66
.text:00003B7C                               var_64= -0x64
.text:00003B7C                               off= -0x60
.text:00003B7C                               var_5C= -0x5C
.text:00003B7C                               var_54= -0x54
.text:00003B7C                               var_50= -0x50
.text:00003B7C                               var_48= -0x48
.text:00003B7C                               var_44= -0x44
.text:00003B7C                               var_40= -0x40
.text:00003B7C                               var_3C= -0x3C
.text:00003B7C                               anonymous_0= -0x38
.text:00003B7C                               var_34= -0x34
.text:00003B7C                               var_28= -0x28
.text:00003B7C
.text:00003B7C                               ; __unwind {
.text:00003B7C 2D E9 F0 4F                   PUSH.W          {R4-R11,LR}
.text:00003B80 9B B0                         SUB             SP, SP, #0x6C
.text:00003B82 05 46                         MOV             R5, R0
.text:00003B84 DF F8 38 04                   LDR.W           R0, =(__stack_chk_guard_ptr - 0x3B90)
.text:00003B88 89 46                         MOV             R9, R1
.text:00003B8A 00 21                         MOVS            R1, #0
.text:00003B8C 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00003B8E DF F8 40 34                   LDR.W           R3, =(aWavPlayerStart_0 - 0x3B9E) ; "wav_player_start"
.text:00003B92 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00003B94 16 46                         MOV             R6, R2
.text:00003B96 DF F8 34 24                   LDR.W           R2, =(aS - 0x3BA2) ; "%s(): ..."
.text:00003B9A 7B 44                         ADD             R3, PC        ; "wav_player_start"
.text:00003B9C 00 68                         LDR             R0, [R0]
.text:00003B9E 7A 44                         ADD             R2, PC        ; "%s(): ..."
.text:00003BA0 1A 90                         STR             R0, [SP,#0x90+var_28]
.text:00003BA2 DF F8 20 04                   LDR.W           R0, =(dword_116CC - 0x3BAA)
.text:00003BA6 78 44                         ADD             R0, PC        ; dword_116CC
.text:00003BA8 01 60                         STR             R1, [R0]
.text:00003BAA 03 20                         MOVS            R0, #3
.text:00003BAC DF F8 18 14                   LDR.W           R1, =(aAudioHwPrimary - 0x3BB4) ; "audio_hw_primary"
.text:00003BB0 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00003BB2 FF F7 12 EA                   BLX             __android_log_print
.text:00003BB2
.text:00003BB6 DF F8 1C 14                   LDR.W           R1, =(aRb - 0x3BC0) ; "rb"
.text:00003BBA 28 46                         MOV             R0, R5        ; filename
.text:00003BBC 79 44                         ADD             R1, PC        ; "rb"
.text:00003BBE FF F7 EE E9                   BLX             fopen
.text:00003BBE
.text:00003BC2 04 46                         MOV             R4, R0
.text:00003BC4 00 2C                         CMP             R4, #0
.text:00003BC6 53 D0                         BEQ             loc_3C70
.text:00003BC6
.text:00003BC8 0C 20                         MOVS            R0, #0xC
.text:00003BCA 0C 21                         MOVS            R1, #0xC
.text:00003BCC 00 90                         STR             R0, [SP,#0x90+var_90]
.text:00003BCE 0D A8                         ADD             R0, SP, #0x90+var_5C
.text:00003BD0 01 22                         MOVS            R2, #1
.text:00003BD2 23 46                         MOV             R3, R4
.text:00003BD4 FF F7 78 EA                   BLX             __fread_chk
.text:00003BD4
.text:00003BD8 44 F6 52 11                   MOVW            R1, #0x4952
.text:00003BDC 0D 98                         LDR             R0, [SP,#0x90+var_5C]
.text:00003BDE C4 F2 46 61                   MOVT            R1, #0x4646
.text:00003BE2 88 42                         CMP             R0, R1
.text:00003BE4 36 D1                         BNE             loc_3C54
.text:00003BE4
.text:00003BE6 44 F2 57 11                   MOVW            R1, #0x4157
.text:00003BEA 0F 98                         LDR             R0, [SP,#0x90+var_54]
.text:00003BEC C4 F2 56 51                   MOVT            R1, #0x4556
.text:00003BF0 88 42                         CMP             R0, R1
.text:00003BF2 2F D1                         BNE             loc_3C54
.text:00003BF2
.text:00003BF4 46 F2 64 18                   MOVW            R8, #0x6164
.text:00003BF8 06 96                         STR             R6, [SP,#0x90+ptr]
.text:00003BFA 46 F6 66 56                   MOVW            R6, #0x6D66
.text:00003BFE 08 27                         MOVS            R7, #8
.text:00003C00 0B AD                         ADD             R5, SP, #0x90+var_64
.text:00003C02 C2 F2 74 06                   MOVT            R6, #0x2074
.text:00003C06 4F F0 10 0B                   MOV.W           R11, #0x10
.text:00003C0A 0D F1 1C 0A                   ADD.W           R10, SP, #0x90+var_74
.text:00003C0E C6 F2 74 18                   MOVT            R8, #0x6174
.text:00003C12 03 E0                         B               loc_3C1C
.text:00003C12
.text:00003C14                               ; ---------------------------------------------------------------------------
.text:00003C14
.text:00003C14                               loc_3C14                      ; CODE XREF: wav_player_start+BA↓j
.text:00003C14                                                             ; wav_player_start+D6↓j
.text:00003C14 20 46                         MOV             R0, R4        ; stream
.text:00003C16 01 22                         MOVS            R2, #1        ; whence
.text:00003C18 FF F7 5C EA                   BLX             fseek
.text:00003C18
.text:00003C1C
.text:00003C1C                               loc_3C1C                      ; CODE XREF: wav_player_start+96↑j
.text:00003C1C                                                             ; wav_player_start+D0↓j
.text:00003C1C 28 46                         MOV             R0, R5
.text:00003C1E 08 21                         MOVS            R1, #8
.text:00003C20 01 22                         MOVS            R2, #1
.text:00003C22 23 46                         MOV             R3, R4
.text:00003C24 00 97                         STR             R7, [SP,#0x90+var_90]
.text:00003C26 FF F7 50 EA                   BLX             __fread_chk
.text:00003C26
.text:00003C2A 0B 98                         LDR             R0, [SP,#0x90+var_64]
.text:00003C2C B0 42                         CMP             R0, R6
.text:00003C2E 03 D0                         BEQ             loc_3C38
.text:00003C2E
.text:00003C30 40 45                         CMP             R0, R8
.text:00003C32 2F D0                         BEQ             loc_3C94
.text:00003C32
.text:00003C34 0C 99                         LDR             R1, [SP,#0x90+off] ; off
.text:00003C36 ED E7                         B               loc_3C14
.text:00003C36
.text:00003C38                               ; ---------------------------------------------------------------------------
.text:00003C38
.text:00003C38                               loc_3C38                      ; CODE XREF: wav_player_start+B2↑j
.text:00003C38 50 46                         MOV             R0, R10
.text:00003C3A 10 21                         MOVS            R1, #0x10
.text:00003C3C 01 22                         MOVS            R2, #1
.text:00003C3E 23 46                         MOV             R3, R4
.text:00003C40 CD F8 00 B0                   STR.W           R11, [SP,#0x90+var_90]
.text:00003C44 FF F7 40 EA                   BLX             __fread_chk
.text:00003C44
.text:00003C48 0C 98                         LDR             R0, [SP,#0x90+off]
.text:00003C4A 11 28                         CMP             R0, #0x11
.text:00003C4C E6 D3                         BCC             loc_3C1C
.text:00003C4C
.text:00003C4E A0 F1 10 01                   SUB.W           R1, R0, #0x10
.text:00003C52 DF E7                         B               loc_3C14
.text:00003C52
.text:00003C54                               ; ---------------------------------------------------------------------------
.text:00003C54
.text:00003C54                               loc_3C54                      ; CODE XREF: wav_player_start+68↑j
.text:00003C54                                                             ; wav_player_start+76↑j
.text:00003C54 DF F8 80 13                   LDR.W           R1, =(aAudioHwPrimary - 0x3C62) ; "audio_hw_primary"
.text:00003C58 06 20                         MOVS            R0, #6
.text:00003C5A E0 4A                         LDR             R2, =(aErrorSIsNotARi - 0x3C64) ; "Error: '%s' is not a riff/wave file"
.text:00003C5C 2B 46                         MOV             R3, R5
.text:00003C5E 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00003C60 7A 44                         ADD             R2, PC        ; "Error: '%s' is not a riff/wave file"
.text:00003C62 FF F7 BA E9                   BLX             __android_log_print
.text:00003C62
.text:00003C66 20 46                         MOV             R0, R4        ; stream
.text:00003C68 FF F7 A4 E9                   BLX             fclose
.text:00003C68
.text:00003C6C 01 20                         MOVS            R0, #1
.text:00003C6E 9B E1                         B               loc_3FA8
.text:00003C6E
.text:00003C70                               ; ---------------------------------------------------------------------------
.text:00003C70
.text:00003C70                               loc_3C70                      ; CODE XREF: wav_player_start+4A↑j
.text:00003C70 FF F7 A6 E9                   BLX             __errno
.text:00003C70
.text:00003C74 00 68                         LDR             R0, [R0]      ; errnum
.text:00003C76 FF F7 AA E9                   BLX             strerror
.text:00003C76
.text:00003C7A DF F8 F8 13                   LDR.W           R1, =(aAudioHwPrimary - 0x3C8A) ; "audio_hw_primary"
.text:00003C7E 2B 46                         MOV             R3, R5
.text:00003C80 DF F8 F4 23                   LDR.W           R2, =(aUnableToOpenFi - 0x3C8C) ; "Unable to open file '%s' [%s]"
.text:00003C84 00 90                         STR             R0, [SP,#0x90+var_90]
.text:00003C86 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00003C88 7A 44                         ADD             R2, PC        ; "Unable to open file '%s' [%s]"
.text:00003C8A 06 20                         MOVS            R0, #6
.text:00003C8C FF F7 A4 E9                   BLX             __android_log_print
.text:00003C8C
.text:00003C90 01 20                         MOVS            R0, #1
.text:00003C92 89 E1                         B               loc_3FA8
.text:00003C92
.text:00003C94                               ; ---------------------------------------------------------------------------
.text:00003C94
.text:00003C94                               loc_3C94                      ; CODE XREF: wav_player_start+B6↑j
.text:00003C94 BD F8 1E A0                   LDRH.W          R10, [SP,#0x90+var_72]
.text:00003C98 08 98                         LDR             R0, [SP,#0x90+var_70]
.text:00003C9A BD F8 2A 70                   LDRH.W          R7, [SP,#0x90+var_66]
.text:00003C9E 05 90                         STR             R0, [SP,#0x90+size]
.text:00003CA0 CD E9 10 A0                   STRD.W          R10, R0, [SP,#0x90+var_50]
.text:00003CA4 4F F4 80 60                   MOV.W           R0, #0x400
.text:00003CA8 10 2F                         CMP             R7, #0x10
.text:00003CAA 12 90                         STR             R0, [SP,#0x90+var_48]
.text:00003CAC 4F F0 04 00                   MOV.W           R0, #4
.text:00003CB0 13 90                         STR             R0, [SP,#0x90+var_44]
.text:00003CB2 07 D0                         BEQ             loc_3CC4
.text:00003CB2
.text:00003CB4 DD F8 18 80                   LDR.W           R8, [SP,#0x90+ptr]
.text:00003CB8 18 2F                         CMP             R7, #0x18
.text:00003CBA 08 D0                         BEQ             loc_3CCE
.text:00003CBA
.text:00003CBC 20 2F                         CMP             R7, #0x20 ; ' '
.text:00003CBE 08 D1                         BNE             loc_3CD2
.text:00003CBE
.text:00003CC0 01 20                         MOVS            R0, #1
.text:00003CC2 05 E0                         B               loc_3CD0
.text:00003CC2
.text:00003CC4                               ; ---------------------------------------------------------------------------
.text:00003CC4
.text:00003CC4                               loc_3CC4                      ; CODE XREF: wav_player_start+136↑j
.text:00003CC4 00 20                         MOVS            R0, #0
.text:00003CC6 DD F8 18 80                   LDR.W           R8, [SP,#0x90+ptr]
.text:00003CCA 14 90                         STR             R0, [SP,#0x90+var_40]
.text:00003CCC 01 E0                         B               loc_3CD2
.text:00003CCC
.text:00003CCE                               ; ---------------------------------------------------------------------------
.text:00003CCE
.text:00003CCE                               loc_3CCE                      ; CODE XREF: wav_player_start+13E↑j
.text:00003CCE 03 20                         MOVS            R0, #3
.text:00003CCE
.text:00003CD0
.text:00003CD0                               loc_3CD0                      ; CODE XREF: wav_player_start+146↑j
.text:00003CD0 14 90                         STR             R0, [SP,#0x90+var_40]
.text:00003CD0
.text:00003CD2
.text:00003CD2                               loc_3CD2                      ; CODE XREF: wav_player_start+142↑j
.text:00003CD2                                                             ; wav_player_start+150↑j
.text:00003CD2 00 20                         MOVS            R0, #0
.text:00003CD4 41 46                         MOV             R1, R8
.text:00003CD6 CD E9 15 00                   STRD.W          R0, R0, [SP,#0x90+var_3C]
.text:00003CDA 00 22                         MOVS            R2, #0
.text:00003CDC 17 90                         STR             R0, [SP,#0x90+var_34]
.text:00003CDE 48 46                         MOV             R0, R9
.text:00003CE0 FF F7 FE E9                   BLX             pcm_params_get
.text:00003CE0
.text:00003CE4 05 46                         MOV             R5, R0
.text:00003CE6 00 2D                         CMP             R5, #0
.text:00003CE8 00 F0 29 81                   BEQ.W           loc_3F3E
.text:00003CE8
.text:00003CEC DF F8 F0 B2                   LDR.W           R11, =(aHz - 0x3CFC) ; "Hz"
.text:00003CF0 28 46                         MOV             R0, R5
.text:00003CF2 BC 4B                         LDR             R3, =(aSampleRate - 0x3CFE) ; "Sample rate"
.text:00003CF4 06 21                         MOVS            R1, #6
.text:00003CF6 05 9A                         LDR             R2, [SP,#0x90+size]
.text:00003CF8 FB 44                         ADD             R11, PC       ; "Hz"
.text:00003CFA 7B 44                         ADD             R3, PC        ; "Sample rate"
.text:00003CFC CD F8 00 B0                   STR.W           R11, [SP,#0x90+var_90]
.text:00003D00 00 F0 54 FB                   BL              sub_43AC
.text:00003D00
.text:00003D04 06 90                         STR             R0, [SP,#0x90+ptr]
.text:00003D06 05 21                         MOVS            R1, #5
.text:00003D08 B7 48                         LDR             R0, =(aChannels - 0x3D12) ; " channels"
.text:00003D0A 52 46                         MOV             R2, R10
.text:00003D0C B7 4B                         LDR             R3, =(aSample - 0x3D1A) ; "Sample"
.text:00003D0E 78 44                         ADD             R0, PC        ; " channels"
.text:00003D10 CD F8 0C A0                   STR.W           R10, [SP,#0x90+var_84]
.text:00003D14 00 90                         STR             R0, [SP,#0x90+var_90]
.text:00003D16 7B 44                         ADD             R3, PC        ; "Sample"
.text:00003D18 28 46                         MOV             R0, R5
.text:00003D1A 00 F0 47 FB                   BL              sub_43AC
.text:00003D1A
.text:00003D1E 06 46                         MOV             R6, R0
.text:00003D20 B3 48                         LDR             R0, =(aBits - 0x3D2A) ; " bits"
.text:00003D22 B4 4B                         LDR             R3, =(aBitrate - 0x3D30) ; "Bitrate"
.text:00003D24 03 21                         MOVS            R1, #3
.text:00003D26 78 44                         ADD             R0, PC        ; " bits"
.text:00003D28 3A 46                         MOV             R2, R7
.text:00003D2A 00 90                         STR             R0, [SP,#0x90+var_90]
.text:00003D2C 7B 44                         ADD             R3, PC        ; "Bitrate"
.text:00003D2E 28 46                         MOV             R0, R5
.text:00003D30 04 97                         STR             R7, [SP,#0x90+var_80]
.text:00003D32 00 F0 3B FB                   BL              sub_43AC
.text:00003D32
.text:00003D36 B0 4B                         LDR             R3, =(aPeriodSize - 0x3D42) ; "Period size"
.text:00003D38 07 46                         MOV             R7, R0
.text:00003D3A 28 46                         MOV             R0, R5
.text:00003D3C 08 21                         MOVS            R1, #8
.text:00003D3E 7B 44                         ADD             R3, PC        ; "Period size"
.text:00003D40 4F F4 80 62                   MOV.W           R2, #0x400
.text:00003D44 CD F8 00 B0                   STR.W           R11, [SP,#0x90+var_90]
.text:00003D48 00 F0 30 FB                   BL              sub_43AC
.text:00003D48
.text:00003D4C AB 4B                         LDR             R3, =(aPeriodCount - 0x3D58) ; "Period count"
.text:00003D4E 82 46                         MOV             R10, R0
.text:00003D50 28 46                         MOV             R0, R5
.text:00003D52 0A 21                         MOVS            R1, #0xA
.text:00003D54 7B 44                         ADD             R3, PC        ; "Period count"
.text:00003D56 04 22                         MOVS            R2, #4
.text:00003D58 CD F8 00 B0                   STR.W           R11, [SP,#0x90+var_90]
.text:00003D5C 00 F0 26 FB                   BL              sub_43AC
.text:00003D5C
.text:00003D60 83 46                         MOV             R11, R0
.text:00003D62 28 46                         MOV             R0, R5
.text:00003D64 FF F7 C2 E9                   BLX             pcm_params_free
.text:00003D64
.text:00003D68 06 98                         LDR             R0, [SP,#0x90+ptr]
.text:00003D6A 30 40                         ANDS            R0, R6
.text:00003D6C 38 40                         ANDS            R0, R7
.text:00003D6E 00 EA 0A 00                   AND.W           R0, R0, R10
.text:00003D72 10 EA 0B 0F                   TST.W           R0, R11
.text:00003D76 00 F0 13 81                   BEQ.W           loc_3FA0
.text:00003D76
.text:00003D7A 10 AB                         ADD             R3, SP, #0x90+var_50
.text:00003D7C 48 46                         MOV             R0, R9
.text:00003D7E 41 46                         MOV             R1, R8
.text:00003D80 00 22                         MOVS            R2, #0
.text:00003D82 00 25                         MOVS            R5, #0
.text:00003D84 FF F7 64 E9                   BLX             pcm_open
.text:00003D84
.text:00003D88 9D 49                         LDR             R1, =(dword_116D0 - 0x3D90)
.text:00003D8A 00 28                         CMP             R0, #0
.text:00003D8C 79 44                         ADD             R1, PC        ; dword_116D0
.text:00003D8E 08 60                         STR             R0, [R1]
.text:00003D90 00 F0 DD 80                   BEQ.W           loc_3F4E
.text:00003D90
.text:00003D94 FF F7 62 E9                   BLX             pcm_is_ready
.text:00003D94
.text:00003D98 00 28                         CMP             R0, #0
.text:00003D9A 00 F0 D5 80                   BEQ.W           loc_3F48
.text:00003D9A
.text:00003D9E 01 20                         MOVS            R0, #1
.text:00003DA0 FF F7 26 E9                   BLX             mixer_open
.text:00003DA0
.text:00003DA4 06 46                         MOV             R6, R0
.text:00003DA6 DE B3                         CBZ             R6, loc_3E20
.text:00003DA6
.text:00003DA8 96 4D                         LDR             R5, =(dword_116C8 - 0x3DB2)
.text:00003DAA 0C 21                         MOVS            R1, #0xC
.text:00003DAC 97 4A                         LDR             R2, =(aSSetHifiGainDD - 0x3DB8) ; "%s(): set hifi gain: %d, %d"
.text:00003DAE 7D 44                         ADD             R5, PC        ; dword_116C8
.text:00003DB0 97 4B                         LDR             R3, =(aPlaySample - 0x3DBA) ; "play_sample"
.text:00003DB2 28 68                         LDR             R0, [R5]
.text:00003DB4 7A 44                         ADD             R2, PC        ; "%s(): set hifi gain: %d, %d"
.text:00003DB6 7B 44                         ADD             R3, PC        ; "play_sample"
.text:00003DB8 CD E9 00 01                   STRD.W          R0, R1, [SP,#0x90+var_90]
.text:00003DBC 03 20                         MOVS            R0, #3
.text:00003DBE 92 49                         LDR             R1, =(aAudioHwPrimary - 0x3DC4) ; "audio_hw_primary"
.text:00003DC0 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00003DC2 FF F7 0A E9                   BLX             __android_log_print
.text:00003DC2
.text:00003DC6 93 49                         LDR             R1, =(aGainSelection - 0x3DD0) ; "Gain selection"
.text:00003DC8 30 46                         MOV             R0, R6
.text:00003DCA 2A 68                         LDR             R2, [R5]
.text:00003DCC 79 44                         ADD             R1, PC        ; "Gain selection"
.text:00003DCE 00 F0 C9 FA                   BL              sub_4364
.text:00003DCE
.text:00003DD2 91 49                         LDR             R1, =(aMasterPlayback - 0x3DDC) ; "Master Playback Volume"
.text:00003DD4 30 46                         MOV             R0, R6
.text:00003DD6 0C 22                         MOVS            R2, #0xC
.text:00003DD8 79 44                         ADD             R1, PC        ; "Master Playback Volume"
.text:00003DDA 00 F0 C3 FA                   BL              sub_4364
.text:00003DDA
.text:00003DDE 8F 49                         LDR             R1, =(aFilterShape - 0x3DE8) ; "Filter Shape"
.text:00003DE0 30 46                         MOV             R0, R6
.text:00003DE2 01 22                         MOVS            R2, #1
.text:00003DE4 79 44                         ADD             R1, PC        ; "Filter Shape"
.text:00003DE6 00 F0 BD FA                   BL              sub_4364
.text:00003DE6
.text:00003DEA 8D 49                         LDR             R1, =(aBypassIir - 0x3DF4) ; "bypass IIR"
.text:00003DEC 30 46                         MOV             R0, R6
.text:00003DEE 01 22                         MOVS            R2, #1
.text:00003DF0 79 44                         ADD             R1, PC        ; "bypass IIR"
.text:00003DF2 00 F0 B7 FA                   BL              sub_4364
.text:00003DF2
.text:00003DF6 8B 49                         LDR             R1, =(aThdCompensatio - 0x3E00) ; "THD Compensation"
.text:00003DF8 30 46                         MOV             R0, R6
.text:00003DFA 01 22                         MOVS            R2, #1
.text:00003DFC 79 44                         ADD             R1, PC        ; "THD Compensation"
.text:00003DFE 00 F0 B1 FA                   BL              sub_4364
.text:00003DFE
.text:00003E02 89 49                         LDR             R1, =(a2ndHarmonicCom - 0x3E0C) ; "2nd Harmonic Compensation"
.text:00003E04 30 46                         MOV             R0, R6
.text:00003E06 00 22                         MOVS            R2, #0
.text:00003E08 79 44                         ADD             R1, PC        ; "2nd Harmonic Compensation"
.text:00003E0A 00 F0 AB FA                   BL              sub_4364
.text:00003E0A
.text:00003E0E 87 49                         LDR             R1, =(a3ndHarmonicCom - 0x3E18) ; "3nd Harmonic Compensation"
.text:00003E10 30 46                         MOV             R0, R6
.text:00003E12 FE 22                         MOVS            R2, #0xFE
.text:00003E14 79 44                         ADD             R1, PC        ; "3nd Harmonic Compensation"
.text:00003E16 00 F0 A5 FA                   BL              sub_4364
.text:00003E16
.text:00003E1A 30 46                         MOV             R0, R6
.text:00003E1C FF F7 F4 E8                   BLX             mixer_close
.text:00003E1C
.text:00003E20
.text:00003E20                               loc_3E20                      ; CODE XREF: wav_player_start+22A↑j
.text:00003E20 83 48                         LDR             R0, =(dword_116D0 - 0x3E26)
.text:00003E22 78 44                         ADD             R0, PC        ; dword_116D0
.text:00003E24 05 68                         LDR             R5, [R0]
.text:00003E26 28 46                         MOV             R0, R5
.text:00003E28 FF F7 66 E9                   BLX             pcm_get_buffer_size
.text:00003E28
.text:00003E2C 01 46                         MOV             R1, R0
.text:00003E2E 28 46                         MOV             R0, R5
.text:00003E30 FF F7 68 E9                   BLX             pcm_frames_to_bytes
.text:00003E30
.text:00003E34 81 46                         MOV             R9, R0
.text:00003E36 FF F7 6C E9                   BLX             malloc
.text:00003E36
.text:00003E3A 83 46                         MOV             R11, R0
.text:00003E3C CD F8 18 B0                   STR.W           R11, [SP,#0x90+ptr]
.text:00003E40 BB F1 00 0F                   CMP.W           R11, #0
.text:00003E44 DD E9 03 38                   LDRD.W          R3, R8, [SP,#0x90+var_84]
.text:00003E48 00 F0 8E 80                   BEQ.W           loc_3F68
.text:00003E48
.text:00003E4C 05 98                         LDR             R0, [SP,#0x90+size]
.text:00003E4E 79 49                         LDR             R1, =(aAudioHwPrimary - 0x3E5A) ; "audio_hw_primary"
.text:00003E50 79 4A                         LDR             R2, =(aPlayingSampleU - 0x3E5C) ; "Playing sample: %u ch, %u hz, %u bit\n"
.text:00003E52 CD E9 00 08                   STRD.W          R0, R8, [SP,#0x90+var_90]
.text:00003E56 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00003E58 7A 44                         ADD             R2, PC        ; "Playing sample: %u ch, %u hz, %u bit\n"
.text:00003E5A 03 20                         MOVS            R0, #3
.text:00003E5C FF F7 BC E8                   BLX             __android_log_print
.text:00003E5C
.text:00003E60 76 49                         LDR             R1, =(sub_4394+1 - 0x3E68)
.text:00003E62 02 20                         MOVS            R0, #2        ; sig
.text:00003E64 79 44                         ADD             R1, PC        ; sub_4394 ; handler
.text:00003E66 FF F7 5A E9                   BLX             signal
.text:00003E66
.text:00003E6A 4F EA E9 70                   MOV.W           R0, R9,ASR#31
.text:00003E6E 74 4D                         LDR             R5, =(dword_116D0 - 0x3E80)
.text:00003E70 09 EB 90 70                   ADD.W           R0, R9, R0,LSR#30
.text:00003E74 75 4E                         LDR             R6, =(dword_116CC - 0x3E86)
.text:00003E76 4F F0 FF 3A                   MOV.W           R10, #0xFFFFFFFF
.text:00003E7A 87 10                         ASRS            R7, R0, #2
.text:00003E7C 7D 44                         ADD             R5, PC        ; dword_116D0
.text:00003E7E
.text:00003E7E                               loc_3E7E
.text:00003E7E 07 EB 47 00                   ADD.W           R0, R7, R7,LSL#1
.text:00003E82 7E 44                         ADD             R6, PC        ; dword_116CC
.text:00003E84 05 90                         STR             R0, [SP,#0x90+size]
.text:00003E86 0B F1 01 00                   ADD.W           R0, R11, #1
.text:00003E8A 03 90                         STR             R0, [SP,#0x90+var_84]
.text:00003E8A
.text:00003E8C
.text:00003E8C                               loc_3E8C                      ; CODE XREF: wav_player_start+3BE↓j
.text:00003E8C B8 F1 18 0F                   CMP.W           R8, #0x18
.text:00003E90 41 D1                         BNE             loc_3F16
.text:00003E90
.text:00003E92 05 9E                         LDR             R6, [SP,#0x90+size]
.text:00003E94 CB 46                         MOV             R11, R9
.text:00003E96 30 46                         MOV             R0, R6        ; size
.text:00003E98 FF F7 3A E9                   BLX             malloc
.text:00003E98
.text:00003E9C 01 21                         MOVS            R1, #1
.text:00003E9E 32 46                         MOV             R2, R6
.text:00003EA0 23 46                         MOV             R3, R4
.text:00003EA2 81 46                         MOV             R9, R0
.text:00003EA4 CD F8 00 A0                   STR.W           R10, [SP,#0x90+var_90]
.text:00003EA8 FF F7 0E E9                   BLX             __fread_chk
.text:00003EA8
.text:00003EAC 82 46                         MOV             R10, R0
.text:00003EAE BB F1 04 0F                   CMP.W           R11, #4
.text:00003EB2 1A DB                         BLT             loc_3EEA
.text:00003EB2
.text:00003EB4 03 9B                         LDR             R3, [SP,#0x90+var_84]
.text:00003EB6 09 F1 01 00                   ADD.W           R0, R9, #1
.text:00003EBA 09 F1 02 01                   ADD.W           R1, R9, #2
.text:00003EBE 00 22                         MOVS            R2, #0
.text:00003EBE
.text:00003EC0
.text:00003EC0                               loc_3EC0                      ; CODE XREF: wav_player_start+36C↓j
.text:00003EC0 11 F8 02 6C                   LDRB.W          R6, [R1,#-2]
.text:00003EC4 03 F8 01 6C                   STRB.W          R6, [R3,#-1]
.text:00003EC8 02 EB 42 06                   ADD.W           R6, R2, R2,LSL#1
.text:00003ECC 01 32                         ADDS            R2, #1
.text:00003ECE 86 5D                         LDRB            R6, [R0,R6]
.text:00003ED0 BA 42                         CMP             R2, R7
.text:00003ED2 1E 70                         STRB            R6, [R3]
.text:00003ED4 91 F9 00 60                   LDRSB.W         R6, [R1]
.text:00003ED8 01 F1 03 01                   ADD.W           R1, R1, #3
.text:00003EDC 5E 70                         STRB            R6, [R3,#1]
.text:00003EDE 4F EA D6 16                   MOV.W           R6, R6,LSR#7
.text:00003EE2 9E 70                         STRB            R6, [R3,#2]
.text:00003EE4 03 F1 04 03                   ADD.W           R3, R3, #4
.text:00003EE8 EA DB                         BLT             loc_3EC0
.text:00003EE8
.text:00003EEA
.text:00003EEA                               loc_3EEA                      ; CODE XREF: wav_player_start+336↑j
.text:00003EEA 48 46                         MOV             R0, R9        ; ptr
.text:00003EEC FF F7 1C E9                   BLX             free
.text:00003EEC
.text:00003EF0 45 F2 56 50                   MOVW            R0, #0x5556
.text:00003EF4 62 4D                         LDR             R5, =(dword_116D0 - 0x3F0E)
.text:00003EF6 C5 F2 55 50                   MOVT            R0, #0x5555
.text:00003EFA 62 4E                         LDR             R6, =(dword_116CC - 0x3F10)
.text:00003EFC 5A FB 00 F0                   SMMUL.W         R0, R10, R0
.text:00003F00 D9 46                         MOV             R9, R11
.text:00003F02 DD F8 18 B0                   LDR.W           R11, [SP,#0x90+ptr]
.text:00003F06 4F F0 FF 3A                   MOV.W           R10, #0xFFFFFFFF
.text:00003F0A 7D 44                         ADD             R5, PC        ; dword_116D0
.text:00003F0C 7E 44                         ADD             R6, PC        ; dword_116CC
.text:00003F0E 00 EB D0 70                   ADD.W           R0, R0, R0,LSR#31
.text:00003F12 82 00                         LSLS            R2, R0, #2
.text:00003F14 08 E0                         B               loc_3F28
.text:00003F14
.text:00003F16                               ; ---------------------------------------------------------------------------
.text:00003F16
.text:00003F16                               loc_3F16                      ; CODE XREF: wav_player_start+314↑j
.text:00003F16 58 46                         MOV             R0, R11
.text:00003F18 01 21                         MOVS            R1, #1
.text:00003F1A 4A 46                         MOV             R2, R9
.text:00003F1C 23 46                         MOV             R3, R4
.text:00003F1E CD F8 00 A0                   STR.W           R10, [SP,#0x90+var_90]
.text:00003F22 FF F7 D2 E8                   BLX             __fread_chk
.text:00003F22
.text:00003F26 02 46                         MOV             R2, R0
.text:00003F26
.text:00003F28
.text:00003F28                               loc_3F28                      ; CODE XREF: wav_player_start+398↑j
.text:00003F28 01 2A                         CMP             R2, #1
.text:00003F2A 2F DB                         BLT             loc_3F8C
.text:00003F2A
.text:00003F2C 28 68                         LDR             R0, [R5]
.text:00003F2E 59 46                         MOV             R1, R11
.text:00003F30 FF F7 00 E9                   BLX             pcm_write
.text:00003F30
.text:00003F34 18 BB                         CBNZ            R0, loc_3F7E
.text:00003F34
.text:00003F36 30 68                         LDR             R0, [R6]
.text:00003F38 00 28                         CMP             R0, #0
.text:00003F3A A7 D0                         BEQ             loc_3E8C
.text:00003F3A
.text:00003F3C 26 E0                         B               loc_3F8C
.text:00003F3C
.text:00003F3E                               ; ---------------------------------------------------------------------------
.text:00003F3E
.text:00003F3E                               loc_3F3E                      ; CODE XREF: wav_player_start+16C↑j
.text:00003F3E 4B 49                         LDR             R1, =(aAudioHwPrimary - 0x3F46) ; "audio_hw_primary"
.text:00003F40 4B 4A                         LDR             R2, =(aUnableToOpenPc - 0x3F48) ; "Unable to open PCM device %u."
.text:00003F42 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00003F44 7A 44                         ADD             R2, PC        ; "Unable to open PCM device %u."
.text:00003F46 0A E0                         B               loc_3F5E
.text:00003F46
.text:00003F48                               ; ---------------------------------------------------------------------------
.text:00003F48
.text:00003F48                               loc_3F48                      ; CODE XREF: wav_player_start+21E↑j
.text:00003F48 45 48                         LDR             R0, =(dword_116D0 - 0x3F4E)
.text:00003F4A 78 44                         ADD             R0, PC        ; dword_116D0
.text:00003F4C 05 68                         LDR             R5, [R0]
.text:00003F4C
.text:00003F4E
.text:00003F4E                               loc_3F4E                      ; CODE XREF: wav_player_start+214↑j
.text:00003F4E 28 46                         MOV             R0, R5
.text:00003F50 FF F7 A8 E8                   BLX             pcm_get_error
.text:00003F50
.text:00003F54 43 49                         LDR             R1, =(aAudioHwPrimary - 0x3F5E) ; "audio_hw_primary"
.text:00003F56 44 4A                         LDR             R2, =(aUnableToOpenPc_0 - 0x3F60) ; "Unable to open PCM device %u (%s)"
.text:00003F58 00 90                         STR             R0, [SP,#0x90+var_90]
.text:00003F5A 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00003F5C 7A 44                         ADD             R2, PC        ; "Unable to open PCM device %u (%s)"
.text:00003F5C
.text:00003F5E
.text:00003F5E                               loc_3F5E                      ; CODE XREF: wav_player_start+3CA↑j
.text:00003F5E 06 20                         MOVS            R0, #6
.text:00003F60 43 46                         MOV             R3, R8
.text:00003F62 FF F7 3A E8                   BLX             __android_log_print
.text:00003F62
.text:00003F66 1B E0                         B               loc_3FA0
.text:00003F66
.text:00003F68                               ; ---------------------------------------------------------------------------
.text:00003F68
.text:00003F68                               loc_3F68                      ; CODE XREF: wav_player_start+2CC↑j
.text:00003F68 3A 49                         LDR             R1, =(aAudioHwPrimary - 0x3F74) ; "audio_hw_primary"
.text:00003F6A 06 20                         MOVS            R0, #6
.text:00003F6C 3A 4A                         LDR             R2, =(aUnableToAlloca - 0x3F76) ; "Unable to allocate %d bytes"
.text:00003F6E 4B 46                         MOV             R3, R9
.text:00003F70 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00003F72 7A 44                         ADD             R2, PC        ; "Unable to allocate %d bytes"
.text:00003F74 FF F7 30 E8                   BLX             __android_log_print
.text:00003F74
.text:00003F78 38 4D                         LDR             R5, =(dword_116D0 - 0x3F7E)
.text:00003F7A 7D 44                         ADD             R5, PC        ; dword_116D0
.text:00003F7C 0B E0                         B               loc_3F96
.text:00003F7C
.text:00003F7E                               ; ---------------------------------------------------------------------------
.text:00003F7E
.text:00003F7E                               loc_3F7E                      ; CODE XREF: wav_player_start+3B8↑j
.text:00003F7E 31 49                         LDR             R1, =(aAudioHwPrimary - 0x3F88) ; "audio_hw_primary"
.text:00003F80 06 20                         MOVS            R0, #6
.text:00003F82 31 4A                         LDR             R2, =(aErrorPlayingSa - 0x3F8A) ; "Error playing sample"
.text:00003F84 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00003F86 7A 44                         ADD             R2, PC        ; "Error playing sample"
.text:00003F88 FF F7 26 E8                   BLX             __android_log_print
.text:00003F88
.text:00003F8C
.text:00003F8C                               loc_3F8C                      ; CODE XREF: wav_player_start+3AE↑j
.text:00003F8C                                                             ; wav_player_start+3C0↑j
.text:00003F8C 58 46                         MOV             R0, R11       ; ptr
.text:00003F8E FF F7 CC E8                   BLX             free
.text:00003F8E
.text:00003F92 2F 4D                         LDR             R5, =(dword_116D0 - 0x3F98)
.text:00003F94 7D 44                         ADD             R5, PC        ; dword_116D0
.text:00003F94
.text:00003F96
.text:00003F96                               loc_3F96                      ; CODE XREF: wav_player_start+400↑j
.text:00003F96 28 68                         LDR             R0, [R5]
.text:00003F98 FF F7 8A E8                   BLX             pcm_close
.text:00003F98
.text:00003F9C 00 20                         MOVS            R0, #0
.text:00003F9E 28 60                         STR             R0, [R5]
.text:00003F9E
.text:00003FA0
.text:00003FA0                               loc_3FA0                      ; CODE XREF: wav_player_start+1FA↑j
.text:00003FA0                                                             ; wav_player_start+3EA↑j
.text:00003FA0 20 46                         MOV             R0, R4        ; stream
.text:00003FA2 FF F7 08 E8                   BLX             fclose
.text:00003FA2
.text:00003FA6 00 20                         MOVS            R0, #0
.text:00003FA6
.text:00003FA8
.text:00003FA8                               loc_3FA8                      ; CODE XREF: wav_player_start+F2↑j
.text:00003FA8                                                             ; wav_player_start+116↑j
.text:00003FA8 34 49                         LDR             R1, =(__stack_chk_guard_ptr - 0x3FB0)
.text:00003FAA 1A 9A                         LDR             R2, [SP,#0x90+var_28]
.text:00003FAC 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:00003FAE 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:00003FB0 09 68                         LDR             R1, [R1]
.text:00003FB2 89 1A                         SUBS            R1, R1, R2
.text:00003FB4 04 BF                         ITT EQ
.text:00003FB6 1B B0                         ADDEQ           SP, SP, #0x6C ; 'l'
.text:00003FB8 BD E8 F0 8F                   POPEQ.W         {R4-R11,PC}
.text:00003FB8
.text:00003FBC FF F7 12 E8                   BLX             __stack_chk_fail
.text:00003FBC
.text:00003FBC                               ; End of function wav_player_start
.text:00003FBC
.text:00003FBC                               ; ---------------------------------------------------------------------------
.text:00003FC0 04 D2 00 00                   off_3FC0 DCD __stack_chk_guard_ptr - 0x3B90
.text:00003FC0                                                             ; DATA XREF: wav_player_start+8↑r
.text:00003FC4 22 DB 00 00                   off_3FC4 DCD dword_116CC - 0x3BAA
.text:00003FC4                                                             ; DATA XREF: wav_player_start+26↑r
.text:00003FC8 EB 7E 00 00                   off_3FC8 DCD aAudioHwPrimary - 0x3BB4
.text:00003FC8                                                             ; DATA XREF: wav_player_start+30↑r
.text:00003FC8                                                             ; "audio_hw_primary"
.text:00003FCC 2D 85 00 00                   off_3FCC DCD aS - 0x3BA2      ; DATA XREF: wav_player_start+1A↑r
.text:00003FCC                                                             ; "%s(): ..."
.text:00003FD0 3B 85 00 00                   off_3FD0 DCD aWavPlayerStart_0 - 0x3B9E
.text:00003FD0                                                             ; DATA XREF: wav_player_start+12↑r
.text:00003FD0                                                             ; "wav_player_start"
.text:00003FD4 2A 85 00 00                   off_3FD4 DCD aRb - 0x3BC0     ; DATA XREF: wav_player_start+3A↑r
.text:00003FD4                                                             ; "rb"
.text:00003FD8 3D 7E 00 00                   off_3FD8 DCD aAudioHwPrimary - 0x3C62
.text:00003FD8                                                             ; DATA XREF: wav_player_start:loc_3C54↑r
.text:00003FD8                                                             ; "audio_hw_primary"
.text:00003FDC A7 84 00 00                   off_3FDC DCD aErrorSIsNotARi - 0x3C64
.text:00003FDC                                                             ; DATA XREF: wav_player_start+DE↑r
.text:00003FDC                                                             ; "Error: '%s' is not a riff/wave file"
.text:00003FE0 BA 88 00 00                   off_3FE0 DCD aHz - 0x3CFC     ; DATA XREF: wav_player_start+170↑r
.text:00003FE0                                                             ; "Hz"
.text:00003FE4 AC 88 00 00                   off_3FE4 DCD aSampleRate - 0x3CFE
.text:00003FE4                                                             ; DATA XREF: wav_player_start+176↑r
.text:00003FE4                                                             ; "Sample rate"
.text:00003FE8 AE 88 00 00                   off_3FE8 DCD aChannels - 0x3D12
.text:00003FE8                                                             ; DATA XREF: wav_player_start+18C↑r
.text:00003FE8                                                             ; " channels"
.text:00003FEC 9F 88 00 00                   off_3FEC DCD aSample - 0x3D1A ; DATA XREF: wav_player_start+190↑r
.text:00003FEC                                                             ; "Sample"
.text:00003FF0 A8 88 00 00                   off_3FF0 DCD aBits - 0x3D2A   ; DATA XREF: wav_player_start+1A4↑r
.text:00003FF0                                                             ; " bits"
.text:00003FF4 9A 88 00 00                   off_3FF4 DCD aBitrate - 0x3D30
.text:00003FF4                                                             ; DATA XREF: wav_player_start+1A6↑r
.text:00003FF4                                                             ; "Bitrate"
.text:00003FF8 96 88 00 00                   off_3FF8 DCD aPeriodSize - 0x3D42
.text:00003FF8                                                             ; DATA XREF: wav_player_start+1BA↑r
.text:00003FF8                                                             ; "Period size"
.text:00003FFC 8C 88 00 00                   off_3FFC DCD aPeriodCount - 0x3D58
.text:00003FFC                                                             ; DATA XREF: wav_player_start+1D0↑r
.text:00003FFC                                                             ; "Period count"
.text:00004000 40 D9 00 00                   off_4000 DCD dword_116D0 - 0x3D90
.text:00004000                                                             ; DATA XREF: wav_player_start+20C↑r
.text:00004004 16 D9 00 00                   off_4004 DCD dword_116C8 - 0x3DB2
.text:00004004                                                             ; DATA XREF: wav_player_start+22C↑r
.text:00004008 DB 7C 00 00                   off_4008 DCD aAudioHwPrimary - 0x3DC4
.text:00004008                                                             ; DATA XREF: wav_player_start+242↑r
.text:00004008                                                             ; "audio_hw_primary"
.text:0000400C D2 86 00 00                   off_400C DCD aSSetHifiGainDD - 0x3DB8
.text:0000400C                                                             ; DATA XREF: wav_player_start+230↑r
.text:0000400C                                                             ; "%s(): set hifi gain: %d, %d"
.text:00004010 EC 86 00 00                   off_4010 DCD aPlaySample - 0x3DBA
.text:00004010                                                             ; DATA XREF: wav_player_start+234↑r
.text:00004010                                                             ; "play_sample"
.text:00004014 E2 86 00 00                   off_4014 DCD aGainSelection - 0x3DD0
.text:00004014                                                             ; DATA XREF: wav_player_start+24A↑r
.text:00004014                                                             ; "Gain selection"
.text:00004018 E5 86 00 00                   off_4018 DCD aMasterPlayback - 0x3DDC
.text:00004018                                                             ; DATA XREF: wav_player_start+256↑r
.text:00004018                                                             ; "Master Playback Volume"
.text:0000401C F0 86 00 00                   off_401C DCD aFilterShape - 0x3DE8
.text:0000401C                                                             ; DATA XREF: wav_player_start+262↑r
.text:0000401C                                                             ; "Filter Shape"
.text:00004020 F1 86 00 00                   off_4020 DCD aBypassIir - 0x3DF4
.text:00004020                                                             ; DATA XREF: wav_player_start+26E↑r
.text:00004020                                                             ; "bypass IIR"
.text:00004024 F0 86 00 00                   off_4024 DCD aThdCompensatio - 0x3E00
.text:00004024                                                             ; DATA XREF: wav_player_start+27A↑r
.text:00004024                                                             ; "THD Compensation"
.text:00004028 F5 86 00 00                   off_4028 DCD a2ndHarmonicCom - 0x3E0C
.text:00004028                                                             ; DATA XREF: wav_player_start+286↑r
.text:00004028                                                             ; "2nd Harmonic Compensation"
.text:0000402C 03 87 00 00                   off_402C DCD a3ndHarmonicCom - 0x3E18
.text:0000402C                                                             ; DATA XREF: wav_player_start+292↑r
.text:0000402C                                                             ; "3nd Harmonic Compensation"
.text:00004030 AA D8 00 00                   off_4030 DCD dword_116D0 - 0x3E26
.text:00004030                                                             ; DATA XREF: wav_player_start:loc_3E20↑r
.text:00004034 45 7C 00 00                   off_4034 DCD aAudioHwPrimary - 0x3E5A
.text:00004034                                                             ; DATA XREF: wav_player_start+2D2↑r
.text:00004034                                                             ; "audio_hw_primary"
.text:00004038 F5 86 00 00                   off_4038 DCD aPlayingSampleU - 0x3E5C
.text:00004038                                                             ; DATA XREF: wav_player_start+2D4↑r
.text:00004038                                                             ; "Playing sample: %u ch, %u hz, %u bit\n"
.text:0000403C 2D 05 00 00                   off_403C DCD sub_4394+1 - 0x3E68
.text:0000403C                                                             ; DATA XREF: wav_player_start+2E4↑r
.text:00004040 50 D8 00 00                   off_4040 DCD dword_116D0 - 0x3E80
.text:00004040                                                             ; DATA XREF: wav_player_start+2F2↑r
.text:00004044 17 7B 00 00                   off_4044 DCD aAudioHwPrimary - 0x3F88
.text:00004044                                                             ; DATA XREF: wav_player_start:loc_3F7E↑r
.text:00004044                                                             ; "audio_hw_primary"
.text:00004048 ED 85 00 00                   off_4048 DCD aErrorPlayingSa - 0x3F8A
.text:00004048                                                             ; DATA XREF: wav_player_start+406↑r
.text:00004048                                                             ; "Error playing sample"
.text:0000404C 46 D8 00 00                   off_404C DCD dword_116CC - 0x3E86
.text:0000404C                                                             ; DATA XREF: wav_player_start+2F8↑r
.text:00004050 38 D7 00 00                   off_4050 DCD dword_116D0 - 0x3F98
.text:00004050                                                             ; DATA XREF: wav_player_start+416↑r
.text:00004054 2B 7B 00 00                   off_4054 DCD aAudioHwPrimary - 0x3F74
.text:00004054                                                             ; DATA XREF: wav_player_start:loc_3F68↑r
.text:00004054                                                             ; "audio_hw_primary"
.text:00004058 BF 85 00 00                   off_4058 DCD aUnableToAlloca - 0x3F76
.text:00004058                                                             ; DATA XREF: wav_player_start+3F0↑r
.text:00004058                                                             ; "Unable to allocate %d bytes"
.text:0000405C 52 D7 00 00                   off_405C DCD dword_116D0 - 0x3F7E
.text:0000405C                                                             ; DATA XREF: wav_player_start+3FC↑r
.text:00004060 82 D7 00 00                   off_4060 DCD dword_116D0 - 0x3F4E
.text:00004060                                                             ; DATA XREF: wav_player_start:loc_3F48↑r
.text:00004064 41 7B 00 00                   off_4064 DCD aAudioHwPrimary - 0x3F5E
.text:00004064                                                             ; DATA XREF: wav_player_start+3D8↑r
.text:00004064                                                             ; "audio_hw_primary"
.text:00004068 08 85 00 00                   off_4068 DCD aUnableToOpenPc_0 - 0x3F60
.text:00004068                                                             ; DATA XREF: wav_player_start+3DA↑r
.text:00004068                                                             ; "Unable to open PCM device %u (%s)"
.text:0000406C 59 7B 00 00                   off_406C DCD aAudioHwPrimary - 0x3F46
.text:0000406C                                                             ; DATA XREF: wav_player_start:loc_3F3E↑r
.text:0000406C                                                             ; "audio_hw_primary"
.text:00004070 44 86 00 00                   off_4070 DCD aUnableToOpenPc - 0x3F48
.text:00004070                                                             ; DATA XREF: wav_player_start+3C4↑r
.text:00004070                                                             ; "Unable to open PCM device %u."
.text:00004074 15 7E 00 00                   off_4074 DCD aAudioHwPrimary - 0x3C8A
.text:00004074                                                             ; DATA XREF: wav_player_start+FE↑r
.text:00004074                                                             ; "audio_hw_primary"
.text:00004078 61 84 00 00                   off_4078 DCD aUnableToOpenFi - 0x3C8C
.text:00004078                                                             ; DATA XREF: wav_player_start+104↑r
.text:00004078                                                             ; "Unable to open file '%s' [%s]"
.text:0000407C E4 CD 00 00                   off_407C DCD __stack_chk_guard_ptr - 0x3FB0
.text:0000407C                                                             ; DATA XREF: wav_player_start:loc_3FA8↑r
.text:00004080 C2 D7 00 00                   off_4080 DCD dword_116D0 - 0x3F0E
.text:00004080                                                             ; DATA XREF: wav_player_start+378↑r
.text:00004084 BC D7 00 00                   off_4084 DCD dword_116CC - 0x3F10
.text:00004084                                                             ; DATA XREF: wav_player_start+37E↑r
.text:00004084                               ; } // starts at 3B7C
.text:00004088
.text:00004088                               ; =============== S U B R O U T I N E =======================================
.text:00004088
.text:00004088
.text:00004088                               ; bool is_headphone_on()
.text:00004088                               EXPORT is_headphone_on
.text:00004088                               is_headphone_on               ; CODE XREF: j_is_headphone_on+8↑j
.text:00004088                                                             ; DATA XREF: LOAD:00000BB0↑o
.text:00004088                                                             ; .got:is_headphone_on_ptr↓o
.text:00004088
.text:00004088                               var_18= -0x18
.text:00004088                               nptr= -0xD
.text:00004088                               var_C= -0xC
.text:00004088
.text:00004088                               ; __unwind {
.text:00004088 10 B5                         PUSH            {R4,LR}
.text:0000408A 84 B0                         SUB             SP, SP, #0x10
.text:0000408C 16 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x4094)
.text:0000408E 18 49                         LDR             R1, =(aR - 0x4098) ; "r"
.text:00004090 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00004092 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00004094 79 44                         ADD             R1, PC        ; "r"
.text:00004096 00 68                         LDR             R0, [R0]
.text:00004098 03 90                         STR             R0, [SP,#0x18+var_C]
.text:0000409A 14 48                         LDR             R0, =(aSysClassSwitch - 0x40A0) ; "/sys/class/switch/h2w/state"
.text:0000409C 78 44                         ADD             R0, PC        ; "/sys/class/switch/h2w/state"
.text:0000409E FE F7 7E EF                   BLX             fopen
.text:0000409E
.text:000040A2 04 46                         MOV             R4, R0
.text:000040A4 00 20                         MOVS            R0, #0
.text:000040A6 8D F8 0B 00                   STRB.W          R0, [SP,#0x18+nptr]
.text:000040AA 5C B1                         CBZ             R4, loc_40C4
.text:000040AA
.text:000040AC 01 20                         MOVS            R0, #1
.text:000040AE 01 21                         MOVS            R1, #1
.text:000040B0 00 90                         STR             R0, [SP,#0x18+var_18]
.text:000040B2 0D F1 0B 00                   ADD.W           R0, SP, #0x18+nptr
.text:000040B6 01 22                         MOVS            R2, #1
.text:000040B8 23 46                         MOV             R3, R4
.text:000040BA FF F7 06 E8                   BLX             __fread_chk
.text:000040BA
.text:000040BE 20 46                         MOV             R0, R4        ; stream
.text:000040C0 FE F7 78 EF                   BLX             fclose
.text:000040C0
.text:000040C4
.text:000040C4                               loc_40C4                      ; CODE XREF: is_headphone_on+22↑j
.text:000040C4 0D F1 0B 00                   ADD.W           R0, SP, #0x18+nptr ; nptr
.text:000040C8 FE F7 56 EF                   BLX             atoi
.text:000040C8
.text:000040CC 09 49                         LDR             R1, =(__stack_chk_guard_ptr - 0x40DA)
.text:000040CE 00 28                         CMP             R0, #0
.text:000040D0 18 BF                         IT NE
.text:000040D2 01 20                         MOVNE           R0, #1
.text:000040D4 03 9A                         LDR             R2, [SP,#0x18+var_C]
.text:000040D6 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:000040D8 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:000040DA 09 68                         LDR             R1, [R1]
.text:000040DC 89 1A                         SUBS            R1, R1, R2
.text:000040DE 04 BF                         ITT EQ
.text:000040E0 04 B0                         ADDEQ           SP, SP, #0x10
.text:000040E2 10 BD                         POPEQ           {R4,PC}
.text:000040E2
.text:000040E4 FE F7 7E EF                   BLX             __stack_chk_fail
.text:000040E4
.text:000040E4                               ; End of function is_headphone_on
.text:000040E4
.text:000040E4                               ; ---------------------------------------------------------------------------
.text:000040E8 00 CD 00 00                   off_40E8 DCD __stack_chk_guard_ptr - 0x4094
.text:000040E8                                                             ; DATA XREF: is_headphone_on+4↑r
.text:000040EC 5B 82 00 00                   off_40EC DCD aSysClassSwitch - 0x40A0
.text:000040EC                                                             ; DATA XREF: is_headphone_on+12↑r
.text:000040EC                                                             ; "/sys/class/switch/h2w/state"
.text:000040F0 7F 82 00 00                   off_40F0 DCD aR - 0x4098      ; DATA XREF: is_headphone_on+6↑r
.text:000040F0                                                             ; "r"
.text:000040F4 BA CC 00 00                   off_40F4 DCD __stack_chk_guard_ptr - 0x40DA
.text:000040F4                                                             ; DATA XREF: is_headphone_on+44↑r
.text:000040F4                               ; } // starts at 4088
.text:000040F8
.text:000040F8                               ; =============== S U B R O U T I N E =======================================
.text:000040F8
.text:000040F8
.text:000040F8                               ; int __fastcall amplifier_calibrate(int *)
.text:000040F8                               EXPORT amplifier_calibrate
.text:000040F8                               amplifier_calibrate           ; CODE XREF: j_amplifier_calibrate+8↑j
.text:000040F8                                                             ; DATA XREF: LOAD:00000A90↑o
.text:000040F8                                                             ; .got:amplifier_calibrate_ptr↓o
.text:000040F8                               ; __unwind {
.text:000040F8 B0 B5                         PUSH            {R4,R5,R7,LR}
.text:000040FA 04 46                         MOV             R4, R0
.text:000040FC D4 F8 E4 00                   LDR.W           R0, [R4,#0xE4]
.text:00004100 98 B3                         CBZ             R0, loc_416A
.text:00004100
.text:00004102 D4 F8 F4 00                   LDR.W           R0, [R4,#0xF4]
.text:00004106 80 B3                         CBZ             R0, loc_416A
.text:00004106
.text:00004108 D4 F8 BC 00                   LDR.W           R0, [R4,#0xBC]
.text:0000410C FE F7 B2 EF                   BLX             j_audio_route_reset
.text:0000410C
.text:00004110 1B 49                         LDR             R1, =(aSpeaker - 0x411A) ; "speaker"
.text:00004112 D4 F8 BC 00                   LDR.W           R0, [R4,#0xBC] ; int
.text:00004116 79 44                         ADD             R1, PC        ; "speaker"
.text:00004118 FE F7 B2 EF                   BLX             j_audio_route_apply_path
.text:00004118
.text:0000411C D4 F8 BC 00                   LDR.W           R0, [R4,#0xBC]
.text:00004120 FE F7 B4 EF                   BLX             j_audio_route_update_mixer
.text:00004120
.text:00004124 42 F2 10 70                   MOVW            R0, #0x2710   ; useconds
.text:00004128 FE F7 74 EF                   BLX             usleep
.text:00004128
.text:0000412C FF F7 08 E8                   BLX             NxpTfa98xx_ReCalibrate
.text:0000412C
.text:00004130 05 46                         MOV             R5, R0
.text:00004132 3D B1                         CBZ             R5, loc_4144
.text:00004132
.text:00004134 13 49                         LDR             R1, =(aAudioHwPrimary - 0x4140) ; "audio_hw_primary"
.text:00004136 06 20                         MOVS            R0, #6
.text:00004138 13 4A                         LDR             R2, =(aFailedToCalibr - 0x4142) ; "failed to calibrate tfa98xx: %d"
.text:0000413A 2B 46                         MOV             R3, R5
.text:0000413C 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000413E 7A 44                         ADD             R2, PC        ; "failed to calibrate tfa98xx: %d"
.text:00004140 FE F7 4A EF                   BLX             __android_log_print
.text:00004140
.text:00004144
.text:00004144                               loc_4144                      ; CODE XREF: amplifier_calibrate+3A↑j
.text:00004144 42 F2 10 70                   MOVW            R0, #0x2710   ; useconds
.text:00004148 FE F7 64 EF                   BLX             usleep
.text:00004148
.text:0000414C D4 F8 BC 00                   LDR.W           R0, [R4,#0xBC]
.text:00004150 FE F7 90 EF                   BLX             j_audio_route_reset
.text:00004150
.text:00004154 0D 49                         LDR             R1, =(aDummy - 0x415E) ; "dummy"
.text:00004156 D4 F8 BC 00                   LDR.W           R0, [R4,#0xBC] ; int
.text:0000415A 79 44                         ADD             R1, PC        ; "dummy"
.text:0000415C FE F7 90 EF                   BLX             j_audio_route_apply_path
.text:0000415C
.text:00004160 D4 F8 BC 00                   LDR.W           R0, [R4,#0xBC]
.text:00004164 FE F7 92 EF                   BLX             j_audio_route_update_mixer
.text:00004164
.text:00004168 08 E0                         B               loc_417C
.text:00004168
.text:0000416A                               ; ---------------------------------------------------------------------------
.text:0000416A
.text:0000416A                               loc_416A                      ; CODE XREF: amplifier_calibrate+8↑j
.text:0000416A                                                             ; amplifier_calibrate+E↑j
.text:0000416A 09 49                         LDR             R1, =(aAudioHwPrimary - 0x4174) ; "audio_hw_primary"
.text:0000416C 06 20                         MOVS            R0, #6
.text:0000416E 09 4A                         LDR             R2, =(aNotOpenPcmDevi - 0x4176) ; "not open pcm devices yet"
.text:00004170 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00004172 7A 44                         ADD             R2, PC        ; "not open pcm devices yet"
.text:00004174 FE F7 30 EF                   BLX             __android_log_print
.text:00004174
.text:00004178 6F F0 15 05                   MOV             R5, #0xFFFFFFEA
.text:00004178
.text:0000417C
.text:0000417C                               loc_417C                      ; CODE XREF: amplifier_calibrate+70↑j
.text:0000417C 28 46                         MOV             R0, R5
.text:0000417E B0 BD                         POP             {R4,R5,R7,PC}
.text:0000417E
.text:0000417E                               ; End of function amplifier_calibrate
.text:0000417E
.text:0000417E                               ; ---------------------------------------------------------------------------
.text:00004180 18 82 00 00                   off_4180 DCD aSpeaker - 0x411A
.text:00004180                                                             ; DATA XREF: amplifier_calibrate+18↑r
.text:00004180                                                             ; "speaker"
.text:00004184 5F 79 00 00                   off_4184 DCD aAudioHwPrimary - 0x4140
.text:00004184                                                             ; DATA XREF: amplifier_calibrate+3C↑r
.text:00004184                                                             ; "audio_hw_primary"
.text:00004188 F8 81 00 00                   off_4188 DCD aFailedToCalibr - 0x4142
.text:00004188                                                             ; DATA XREF: amplifier_calibrate+40↑r
.text:00004188                                                             ; "failed to calibrate tfa98xx: %d"
.text:0000418C FC 81 00 00                   off_418C DCD aDummy - 0x415E  ; DATA XREF: amplifier_calibrate+5C↑r
.text:0000418C                                                             ; "dummy"
.text:00004190 2B 79 00 00                   off_4190 DCD aAudioHwPrimary - 0x4174
.text:00004190                                                             ; DATA XREF: amplifier_calibrate:loc_416A↑r
.text:00004190                                                             ; "audio_hw_primary"
.text:00004194 A3 81 00 00                   off_4194 DCD aNotOpenPcmDevi - 0x4176
.text:00004194                                                             ; DATA XREF: amplifier_calibrate+76↑r
.text:00004194                               ; } // starts at 40F8         ; "not open pcm devices yet"
.text:00004198
.text:00004198                               ; =============== S U B R O U T I N E =======================================
.text:00004198
.text:00004198
.text:00004198                               ; int thread_test_hifi()
.text:00004198                               EXPORT thread_test_hifi
.text:00004198                               thread_test_hifi              ; DATA XREF: LOAD:00000A10↑o
.text:00004198                                                             ; sub_66B0+1B6↓o
.text:00004198                                                             ; .got:thread_test_hifi_ptr↓o
.text:00004198                               ; __unwind {
.text:00004198 80 B5                         PUSH            {R7,LR}
.text:0000419A 04 48                         LDR             R0, =(aDataDataFactor - 0x41A4) ; "/data/data/factory_test.wav"
.text:0000419C 01 21                         MOVS            R1, #1
.text:0000419E 00 22                         MOVS            R2, #0
.text:000041A0 78 44                         ADD             R0, PC        ; "/data/data/factory_test.wav"
.text:000041A2 FE F7 D4 EF                   BLX             j_wav_player_start
.text:000041A2
.text:000041A6 00 20                         MOVS            R0, #0
.text:000041A8 80 BD                         POP             {R7,PC}
.text:000041A8
.text:000041A8                               ; End of function thread_test_hifi
.text:000041A8
.text:000041A8                               ; ---------------------------------------------------------------------------
.text:000041AA 00 BF                         ALIGN 4
.text:000041AC BC 81 00 00                   off_41AC DCD aDataDataFactor - 0x41A4
.text:000041AC                                                             ; DATA XREF: thread_test_hifi+2↑r
.text:000041AC                               ; } // starts at 4198         ; "/data/data/factory_test.wav"
.text:000041B0
.text:000041B0                               ; =============== S U B R O U T I N E =======================================
.text:000041B0
.text:000041B0
.text:000041B0                               ; int __fastcall adev_set_headset_volume(int, float)
.text:000041B0                               EXPORT adev_set_headset_volume
.text:000041B0                               adev_set_headset_volume       ; DATA XREF: LOAD:00000C30↑o
.text:000041B0                                                             ; sub_4424+56↓o
.text:000041B0                                                             ; .got:adev_set_headset_volume_ptr↓o
.text:000041B0
.text:000041B0                               var_48= -0x48
.text:000041B0                               var_40= -0x40
.text:000041B0                               var_32= -0x32
.text:000041B0                               var_29= -0x29
.text:000041B0                               var_20= -0x20
.text:000041B0
.text:000041B0                               ; __unwind {
.text:000041B0 2D E9 F0 43                   PUSH.W          {R4-R9,LR}
.text:000041B4 8B B0                         SUB             SP, SP, #0x2C
.text:000041B6 80 46                         MOV             R8, R0
.text:000041B8 2C 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x41BE)
.text:000041BA 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:000041BC 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:000041BE 00 68                         LDR             R0, [R0]
.text:000041C0 0A 90                         STR             R0, [SP,#0x48+var_20]
.text:000041C2 6F F0 15 00                   MOV             R0, #0xFFFFFFEA
.text:000041C6 D8 F8 A8 20                   LDR.W           R2, [R8,#0xA8]
.text:000041CA 02 2A                         CMP             R2, #2
.text:000041CC 1C BF                         ITT NE
.text:000041CE D8 F8 AC 20                   LDRNE.W         R2, [R8,#0xAC]
.text:000041D2 12 F0 0C 02                   ANDSNE.W        R2, R2, #0xC
.text:000041D6 3D D0                         BEQ             loc_4254
.text:000041D6
.text:000041D8 00 EE 10 1A                   VMOV            S0, R1
.text:000041DC 0D F1 1F 05                   ADD.W           R5, SP, #0x48+var_29
.text:000041E0 F7 EE C0 0A                   VCVT.F64.F32    D16, S0
.text:000041E4 28 46                         MOV             R0, R5
.text:000041E6 DF F8 88 90                   LDR.W           R9, =(aF - 0x41F4) ; "%f"
.text:000041EA 09 21                         MOVS            R1, #9
.text:000041EC 00 22                         MOVS            R2, #0
.text:000041EE 09 23                         MOVS            R3, #9
.text:000041F0 F9 44                         ADD             R9, PC        ; "%f"
.text:000041F2 00 24                         MOVS            R4, #0
.text:000041F4 CD F8 00 90                   STR.W           R9, [SP,#0x48+var_48]
.text:000041F8 CD ED 02 0B                   VSTR            D16, [SP,#0x48+var_40]
.text:000041FC FE F7 AC EF                   BLX             __snprintf_chk
.text:000041FC
.text:00004200 1C 4F                         LDR             R7, =(unk_E9B0 - 0x420A)
.text:00004202 0D F1 16 06                   ADD.W           R6, SP, #0x48+var_32
.text:00004206 7F 44                         ADD             R7, PC        ; unk_E9B0
.text:00004206
.text:00004208
.text:00004208                               loc_4208                      ; CODE XREF: adev_set_headset_volume+86↓j
.text:00004208 97 ED 00 0A                   VLDR            S0, [R7]
.text:0000420C 30 46                         MOV             R0, R6
.text:0000420E F7 EE C0 0A                   VCVT.F64.F32    D16, S0
.text:00004212 09 21                         MOVS            R1, #9
.text:00004214 00 22                         MOVS            R2, #0
.text:00004216 09 23                         MOVS            R3, #9
.text:00004218 CD F8 00 90                   STR.W           R9, [SP,#0x48+var_48]
.text:0000421C CD ED 02 0B                   VSTR            D16, [SP,#0x48+var_40]
.text:00004220 FE F7 9A EF                   BLX             __snprintf_chk
.text:00004220
.text:00004224 28 46                         MOV             R0, R5        ; s1
.text:00004226 31 46                         MOV             R1, R6        ; s2
.text:00004228 09 22                         MOVS            R2, #9        ; n
.text:0000422A FE F7 9C EF                   BLX             strncmp
.text:0000422A
.text:0000422E 20 B1                         CBZ             R0, loc_423A
.text:0000422E
.text:00004230 01 34                         ADDS            R4, #1
.text:00004232 0C 37                         ADDS            R7, #0xC
.text:00004234 3D 2C                         CMP             R4, #0x3D ; '='
.text:00004236 E7 DB                         BLT             loc_4208
.text:00004236
.text:00004238 0B E0                         B               loc_4252
.text:00004238
.text:0000423A                               ; ---------------------------------------------------------------------------
.text:0000423A
.text:0000423A                               loc_423A                      ; CODE XREF: adev_set_headset_volume+7E↑j
.text:0000423A C8 F8 10 41                   STR.W           R4, [R8,#0x110]
.text:0000423E 98 F8 21 01                   LDRB.W          R0, [R8,#0x121]
.text:00004242 18 B1                         CBZ             R0, loc_424C
.text:00004242
.text:00004244 40 46                         MOV             R0, R8
.text:00004246 00 F0 19 F8                   BL              sub_427C
.text:00004246
.text:0000424A 02 E0                         B               loc_4252
.text:0000424A
.text:0000424C                               ; ---------------------------------------------------------------------------
.text:0000424C
.text:0000424C                               loc_424C                      ; CODE XREF: adev_set_headset_volume+92↑j
.text:0000424C 40 46                         MOV             R0, R8
.text:0000424E 00 F0 4F F8                   BL              sub_42F0
.text:0000424E
.text:00004252
.text:00004252                               loc_4252                      ; CODE XREF: adev_set_headset_volume+88↑j
.text:00004252                                                             ; adev_set_headset_volume+9A↑j
.text:00004252 00 20                         MOVS            R0, #0
.text:00004252
.text:00004254
.text:00004254                               loc_4254                      ; CODE XREF: adev_set_headset_volume+26↑j
.text:00004254 08 49                         LDR             R1, =(__stack_chk_guard_ptr - 0x425C)
.text:00004256 0A 9A                         LDR             R2, [SP,#0x48+var_20]
.text:00004258 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:0000425A 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:0000425C 09 68                         LDR             R1, [R1]
.text:0000425E 89 1A                         SUBS            R1, R1, R2
.text:00004260 04 BF                         ITT EQ
.text:00004262 0B B0                         ADDEQ           SP, SP, #0x2C ; ','
.text:00004264 BD E8 F0 83                   POPEQ.W         {R4-R9,PC}
.text:00004264
.text:00004268 FE F7 BC EE                   BLX             __stack_chk_fail
.text:00004268
.text:00004268                               ; End of function adev_set_headset_volume
.text:00004268
.text:00004268                               ; ---------------------------------------------------------------------------
.text:0000426C D6 CB 00 00                   off_426C DCD __stack_chk_guard_ptr - 0x41BE
.text:0000426C                                                             ; DATA XREF: adev_set_headset_volume+8↑r
.text:00004270 88 81 00 00                   off_4270 DCD aF - 0x41F4      ; DATA XREF: adev_set_headset_volume+36↑r
.text:00004270                                                             ; "%f"
.text:00004274 A6 A7 00 00                   off_4274 DCD unk_E9B0 - 0x420A
.text:00004274                                                             ; DATA XREF: adev_set_headset_volume+50↑r
.text:00004278 38 CB 00 00                   off_4278 DCD __stack_chk_guard_ptr - 0x425C
.text:00004278                                                             ; DATA XREF: adev_set_headset_volume:loc_4254↑r
.text:00004278                               ; } // starts at 41B0
.text:0000427C
.text:0000427C                               ; =============== S U B R O U T I N E =======================================
.text:0000427C
.text:0000427C
.text:0000427C                               ; unsigned int __fastcall sub_427C(int)
.text:0000427C                               sub_427C                      ; CODE XREF: adev_set_headset_volume+96↑p
.text:0000427C                                                             ; sub_4B48+CC↓p
.text:0000427C                                                             ; sub_4B48+12A↓p
.text:0000427C                                                             ; sub_5730+FE↓p
.text:0000427C
.text:0000427C                               var_18= -0x18
.text:0000427C
.text:0000427C                               ; __unwind {
.text:0000427C B0 B5                         PUSH            {R4,R5,R7,LR}
.text:0000427E 82 B0                         SUB             SP, SP, #8
.text:00004280 04 46                         MOV             R4, R0
.text:00004282 D4 F8 24 01                   LDR.W           R0, [R4,#0x124]
.text:00004286 03 28                         CMP             R0, #3
.text:00004288 01 D1                         BNE             loc_428E
.text:00004288
.text:0000428A 00 25                         MOVS            R5, #0
.text:0000428C 14 E0                         B               loc_42B8
.text:0000428C
.text:0000428E                               ; ---------------------------------------------------------------------------
.text:0000428E
.text:0000428E                               loc_428E                      ; CODE XREF: sub_427C+C↑j
.text:0000428E D4 F8 10 01                   LDR.W           R0, [R4,#0x110]
.text:00004292 3C 28                         CMP             R0, #0x3C ; '<'
.text:00004294 01 D1                         BNE             loc_429A
.text:00004294
.text:00004296 FF 25                         MOVS            R5, #0xFF
.text:00004298 0E E0                         B               loc_42B8
.text:00004298
.text:0000429A                               ; ---------------------------------------------------------------------------
.text:0000429A
.text:0000429A                               loc_429A                      ; CODE XREF: sub_427C+18↑j
.text:0000429A D4 F8 2C 11                   LDR.W           R1, [R4,#0x12C]
.text:0000429E 94 F8 22 21                   LDRB.W          R2, [R4,#0x122]
.text:000042A2 01 EB 40 05                   ADD.W           R5, R1, R0,LSL#1
.text:000042A6 3A B1                         CBZ             R2, loc_42B8
.text:000042A6
.text:000042A8 18 2D                         CMP             R5, #0x18
.text:000042AA 01 DB                         BLT             loc_42B0
.text:000042AA
.text:000042AC 0C 3D                         SUBS            R5, #0xC
.text:000042AE 03 E0                         B               loc_42B8
.text:000042AE
.text:000042B0                               ; ---------------------------------------------------------------------------
.text:000042B0
.text:000042B0                               loc_42B0                      ; CODE XREF: sub_427C+2E↑j
.text:000042B0 05 EB D5 70                   ADD.W           R0, R5, R5,LSR#31
.text:000042B4 A5 EB 60 05                   SUB.W           R5, R5, R0,ASR#1
.text:000042B4
.text:000042B8
.text:000042B8                               loc_42B8                      ; CODE XREF: sub_427C+10↑j
.text:000042B8                                                             ; sub_427C+1C↑j
.text:000042B8                                                             ; sub_427C+2A↑j
.text:000042B8                                                             ; sub_427C+32↑j
.text:000042B8 09 49                         LDR             R1, =(aAudioHwPrimary - 0x42C4) ; "audio_hw_primary"
.text:000042BA 02 20                         MOVS            R0, #2
.text:000042BC 09 4A                         LDR             R2, =(aSVolumeD - 0x42C6) ; "%s(): volume=%d"
.text:000042BE 0A 4B                         LDR             R3, =(aSetHifiVolume - 0x42CA) ; "set_hifi_volume"
.text:000042C0 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000042C2 7A 44                         ADD             R2, PC        ; "%s(): volume=%d"
.text:000042C4 00 95                         STR             R5, [SP,#0x18+var_18]
.text:000042C6 7B 44                         ADD             R3, PC        ; "set_hifi_volume"
.text:000042C8 FE F7 86 EE                   BLX             __android_log_print
.text:000042C8
.text:000042CC 07 49                         LDR             R1, =(aMasterPlayback - 0x42D8) ; "Master Playback Volume"
.text:000042CE 2A 46                         MOV             R2, R5
.text:000042D0 D4 F8 C4 00                   LDR.W           R0, [R4,#0xC4]
.text:000042D4 79 44                         ADD             R1, PC        ; "Master Playback Volume"
.text:000042D6 02 B0                         ADD             SP, SP, #8
.text:000042D8 BD E8 B0 40                   POP.W           {R4,R5,R7,LR}
.text:000042DC 00 F0 42 B8                   B.W             sub_4364
.text:000042DC
.text:000042DC                               ; End of function sub_427C
.text:000042DC
.text:000042DC                               ; ---------------------------------------------------------------------------
.text:000042E0 DB 77 00 00                   off_42E0 DCD aAudioHwPrimary - 0x42C4
.text:000042E0                                                             ; DATA XREF: sub_427C:loc_42B8↑r
.text:000042E0                                                             ; "audio_hw_primary"
.text:000042E4 7D 83 00 00                   off_42E4 DCD aSVolumeD - 0x42C6
.text:000042E4                                                             ; DATA XREF: sub_427C+40↑r
.text:000042E4                                                             ; "%s(): volume=%d"
.text:000042E8 89 83 00 00                   off_42E8 DCD aSetHifiVolume - 0x42CA
.text:000042E8                                                             ; DATA XREF: sub_427C+42↑r
.text:000042E8                                                             ; "set_hifi_volume"
.text:000042EC E9 81 00 00                   off_42EC DCD aMasterPlayback - 0x42D8
.text:000042EC                                                             ; DATA XREF: sub_427C+50↑r
.text:000042EC                                                             ; "Master Playback Volume"
.text:000042F0
.text:000042F0                               ; =============== S U B R O U T I N E =======================================
.text:000042F0
.text:000042F0
.text:000042F0                               ; unsigned int __fastcall sub_42F0(int)
.text:000042F0                               sub_42F0                      ; CODE XREF: adev_set_headset_volume+9E↑p
.text:000042F0                                                             ; sub_55E8+12↓p
.text:000042F0                                                             ; sub_5730+10C↓p
.text:000042F0
.text:000042F0                               var_18= -0x18
.text:000042F0
.text:000042F0 B0 B5                         PUSH            {R4,R5,R7,LR}
.text:000042F2 82 B0                         SUB             SP, SP, #8
.text:000042F4 04 46                         MOV             R4, R0
.text:000042F6 94 F8 AC 00                   LDRB.W          R0, [R4,#0xAC]
.text:000042FA 10 F0 0C 0F                   TST.W           R0, #0xC
.text:000042FE 0E D0                         BEQ             loc_431E
.text:000042FE
.text:00004300 D4 F8 A8 00                   LDR.W           R0, [R4,#0xA8]
.text:00004304 80 25                         MOVS            R5, #0x80
.text:00004306 01 28                         CMP             R0, #1
.text:00004308 18 BF                         IT NE
.text:0000430A 03 28                         CMPNE           R0, #3
.text:0000430C 0E D0                         BEQ             loc_432C
.text:0000430C
.text:0000430E 02 28                         CMP             R0, #2
.text:00004310 07 D1                         BNE             loc_4322
.text:00004310
.text:00004312 D4 F8 14 01                   LDR.W           R0, [R4,#0x114]
.text:00004316 80 21                         MOVS            R1, #0x80
.text:00004318 A1 EB 80 05                   SUB.W           R5, R1, R0,LSL#2
.text:0000431C 06 E0                         B               loc_432C
.text:0000431C
.text:0000431E                               ; ---------------------------------------------------------------------------
.text:0000431E
.text:0000431E                               loc_431E                      ; CODE XREF: sub_42F0+E↑j
.text:0000431E 02 B0                         ADD             SP, SP, #8
.text:00004320 B0 BD                         POP             {R4,R5,R7,PC}
.text:00004320
.text:00004322                               ; ---------------------------------------------------------------------------
.text:00004322
.text:00004322                               loc_4322                      ; CODE XREF: sub_42F0+20↑j
.text:00004322 D4 F8 10 01                   LDR.W           R0, [R4,#0x110]
.text:00004326 80 21                         MOVS            R1, #0x80
.text:00004328 A1 EB 40 05                   SUB.W           R5, R1, R0,LSL#1
.text:00004328
.text:0000432C
.text:0000432C                               loc_432C                      ; CODE XREF: sub_42F0+1C↑j
.text:0000432C                                                             ; sub_42F0+2C↑j
.text:0000432C 09 49                         LDR             R1, =(aAudioHwPrimary - 0x4338) ; "audio_hw_primary"
.text:0000432E 02 20                         MOVS            R0, #2
.text:00004330 09 4A                         LDR             R2, =(aSHeadphoneVolu - 0x433A) ; "%s(): headphone volume=%d"
.text:00004332 0A 4B                         LDR             R3, =(aSetHeadphoneVo - 0x433E) ; "set_headphone_volume"
.text:00004334 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00004336 7A 44                         ADD             R2, PC        ; "%s(): headphone volume=%d"
.text:00004338 00 95                         STR             R5, [SP,#0x18+var_18]
.text:0000433A 7B 44                         ADD             R3, PC        ; "set_headphone_volume"
.text:0000433C FE F7 4C EE                   BLX             __android_log_print
.text:0000433C
.text:00004340 07 49                         LDR             R1, =(aHpoutDigitalVo - 0x434C) ; "HPOUT Digital Volume"
.text:00004342 2A 46                         MOV             R2, R5
.text:00004344 D4 F8 C0 00                   LDR.W           R0, [R4,#0xC0]
.text:00004348 79 44                         ADD             R1, PC        ; "HPOUT Digital Volume"
.text:0000434A 02 B0                         ADD             SP, SP, #8
.text:0000434C BD E8 B0 40                   POP.W           {R4,R5,R7,LR}
.text:00004350 00 F0 08 B8                   B.W             sub_4364
.text:00004350
.text:00004350                               ; End of function sub_42F0
.text:00004350
.text:00004350                               ; ---------------------------------------------------------------------------
.text:00004354 67 77 00 00                   off_4354 DCD aAudioHwPrimary - 0x4338
.text:00004354                                                             ; DATA XREF: sub_42F0:loc_432C↑r
.text:00004354                                                             ; "audio_hw_primary"
.text:00004358 29 83 00 00                   off_4358 DCD aSHeadphoneVolu - 0x433A
.text:00004358                                                             ; DATA XREF: sub_42F0+40↑r
.text:00004358                                                             ; "%s(): headphone volume=%d"
.text:0000435C 3F 83 00 00                   off_435C DCD aSetHeadphoneVo - 0x433E
.text:0000435C                                                             ; DATA XREF: sub_42F0+42↑r
.text:0000435C                                                             ; "set_headphone_volume"
.text:00004360 BD 7E 00 00                   off_4360 DCD aHpoutDigitalVo - 0x434C
.text:00004360                                                             ; DATA XREF: sub_42F0+50↑r
.text:00004360                               ; } // starts at 427C         ; "HPOUT Digital Volume"
.text:00004364
.text:00004364                               ; =============== S U B R O U T I N E =======================================
.text:00004364
.text:00004364
.text:00004364                               ; unsigned int __fastcall sub_4364(int, int, int)
.text:00004364                               sub_4364                      ; CODE XREF: wav_player_start+252↑p
.text:00004364                                                             ; wav_player_start+25E↑p
.text:00004364                                                             ; wav_player_start+26A↑p
.text:00004364                                                             ; wav_player_start+276↑p
.text:00004364                                                             ; wav_player_start+282↑p
.text:00004364                                                             ; wav_player_start+28E↑p
.text:00004364                                                             ; wav_player_start+29A↑p
.text:00004364                                                             ; sub_427C+60↑j
.text:00004364                                                             ; sub_42F0+60↑j
.text:00004364                                                             ; sub_55A4+20↓p
.text:00004364                                                             ; sub_55A4+32↓p
.text:00004364                                                             ; sub_5730+1EC↓p
.text:00004364                                                             ; sub_5730+1FC↓p
.text:00004364                                                             ; sub_5730+20C↓p
.text:00004364                                                             ; sub_5730+21C↓p ...
.text:00004364                               ; __unwind {
.text:00004364 70 B5                         PUSH            {R4-R6,LR}
.text:00004366 14 46                         MOV             R4, R2
.text:00004368 FE F7 48 EE                   BLX             mixer_get_ctl_by_name
.text:00004368
.text:0000436C 05 46                         MOV             R5, R0
.text:0000436E 7D B1                         CBZ             R5, locret_4390
.text:0000436E
.text:00004370 28 46                         MOV             R0, R5
.text:00004372 FE F7 FE EE                   BLX             mixer_ctl_get_num_values
.text:00004372
.text:00004376 58 B1                         CBZ             R0, locret_4390
.text:00004376
.text:00004378 00 26                         MOVS            R6, #0
.text:00004378
.text:0000437A
.text:0000437A                               loc_437A                      ; CODE XREF: sub_4364+2A↓j
.text:0000437A 28 46                         MOV             R0, R5
.text:0000437C 31 46                         MOV             R1, R6
.text:0000437E 22 46                         MOV             R2, R4
.text:00004380 FE F7 FC EE                   BLX             mixer_ctl_set_value
.text:00004380
.text:00004384 28 46                         MOV             R0, R5
.text:00004386 01 36                         ADDS            R6, #1
.text:00004388 FE F7 F2 EE                   BLX             mixer_ctl_get_num_values
.text:00004388
.text:0000438C 86 42                         CMP             R6, R0
.text:0000438E F4 D3                         BCC             loc_437A
.text:0000438E
.text:00004390
.text:00004390                               locret_4390                   ; CODE XREF: sub_4364+A↑j
.text:00004390                                                             ; sub_4364+12↑j
.text:00004390 70 BD                         POP             {R4-R6,PC}
.text:00004390
.text:00004390                               ; End of function sub_4364
.text:00004390
.text:00004390                               ; ---------------------------------------------------------------------------
.text:00004392 00 00                         ALIGN 4
.text:00004392                               ; } // starts at 4364
.text:00004394
.text:00004394                               ; =============== S U B R O U T I N E =======================================
.text:00004394
.text:00004394
.text:00004394                               ; int *__fastcall sub_4394(int)
.text:00004394                               sub_4394                      ; DATA XREF: wav_player_start+2E4↑o
.text:00004394                                                             ; wav_player_start+2E8↑o
.text:00004394                                                             ; .text:off_403C↑o
.text:00004394                               ; __unwind {
.text:00004394 10 B5                         PUSH            {R4,LR}
.text:00004396 01 21                         MOVS            R1, #(dword_0+1) ; handler
.text:00004398 01 24                         MOVS            R4, #1
.text:0000439A FE F7 C0 EE                   BLX             signal
.text:0000439A
.text:0000439E 02 48                         LDR             R0, =(dword_116CC - 0x43A4)
.text:000043A0 78 44                         ADD             R0, PC        ; dword_116CC
.text:000043A2 04 60                         STR             R4, [R0]
.text:000043A4 10 BD                         POP             {R4,PC}
.text:000043A4
.text:000043A4                               ; End of function sub_4394
.text:000043A4
.text:000043A4                               ; ---------------------------------------------------------------------------
.text:000043A6 00 BF                         ALIGN 4
.text:000043A8 28 D3 00 00                   off_43A8 DCD dword_116CC - 0x43A4
.text:000043A8                                                             ; DATA XREF: sub_4394+A↑r
.text:000043A8                               ; } // starts at 4394
.text:000043AC
.text:000043AC                               ; =============== S U B R O U T I N E =======================================
.text:000043AC
.text:000043AC
.text:000043AC                               ; int __fastcall sub_43AC(int, int, unsigned int, const char *, const char *)
.text:000043AC                               sub_43AC                      ; CODE XREF: wav_player_start+184↑p
.text:000043AC                                                             ; wav_player_start+19E↑p
.text:000043AC                                                             ; wav_player_start+1B6↑p
.text:000043AC                                                             ; wav_player_start+1CC↑p
.text:000043AC                                                             ; wav_player_start+1E0↑p
.text:000043AC
.text:000043AC                               var_30= -0x30
.text:000043AC                               var_28= -0x28
.text:000043AC                               arg_0=  0
.text:000043AC
.text:000043AC                               ; __unwind {
.text:000043AC 2D E9 F0 43                   PUSH.W          {R4-R9,LR}
.text:000043B0 85 B0                         SUB             SP, SP, #0x14
.text:000043B2 98 46                         MOV             R8, R3
.text:000043B4 15 46                         MOV             R5, R2
.text:000043B6 0E 46                         MOV             R6, R1
.text:000043B8 07 46                         MOV             R7, R0
.text:000043BA FE F7 E6 EE                   BLX             pcm_params_get_min
.text:000043BA
.text:000043BE DD F8 30 90                   LDR.W           R9, [SP,#0x30+arg_0]
.text:000043C2 A8 42                         CMP             R0, R5
.text:000043C4 0D D9                         BLS             loc_43E2
.text:000043C4
.text:000043C6 13 49                         LDR             R1, =(aAudioHwPrimary - 0x43D4) ; "audio_hw_primary"
.text:000043C8 43 46                         MOV             R3, R8
.text:000043CA 13 4A                         LDR             R2, =(aSIsUSDeviceOnl - 0x43D6) ; "%s is %u%s, device only supports >= %u%"...
.text:000043CC CD E9 00 59                   STRD.W          R5, R9, [SP,#0x30+var_30]
.text:000043D0 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000043D2 7A 44                         ADD             R2, PC        ; "%s is %u%s, device only supports >= %u%"...
.text:000043D4 CD E9 02 09                   STRD.W          R0, R9, [SP,#0x30+var_28]
.text:000043D8 06 20                         MOVS            R0, #6
.text:000043DA FE F7 FE ED                   BLX             __android_log_print
.text:000043DA
.text:000043DE 00 24                         MOVS            R4, #0
.text:000043E0 00 E0                         B               loc_43E4
.text:000043E0
.text:000043E2                               ; ---------------------------------------------------------------------------
.text:000043E2
.text:000043E2                               loc_43E2                      ; CODE XREF: sub_43AC+18↑j
.text:000043E2 01 24                         MOVS            R4, #1
.text:000043E2
.text:000043E4
.text:000043E4                               loc_43E4                      ; CODE XREF: sub_43AC+34↑j
.text:000043E4 38 46                         MOV             R0, R7
.text:000043E6 31 46                         MOV             R1, R6
.text:000043E8 FE F7 D4 EE                   BLX             pcm_params_get_max
.text:000043E8
.text:000043EC A8 42                         CMP             R0, R5
.text:000043EE 0C D2                         BCS             loc_440A
.text:000043EE
.text:000043F0 0A 49                         LDR             R1, =(aAudioHwPrimary - 0x43FE) ; "audio_hw_primary"
.text:000043F2 43 46                         MOV             R3, R8
.text:000043F4 0A 4A                         LDR             R2, =(aSIsUSDeviceOnl_0 - 0x4400) ; "%s is %u%s, device only supports <= %u%"...
.text:000043F6 CD E9 00 59                   STRD.W          R5, R9, [SP,#0x30+var_30]
.text:000043FA 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000043FC 7A 44                         ADD             R2, PC        ; "%s is %u%s, device only supports <= %u%"...
.text:000043FE CD E9 02 09                   STRD.W          R0, R9, [SP,#0x30+var_28]
.text:00004402 06 20                         MOVS            R0, #6
.text:00004404 FE F7 E8 ED                   BLX             __android_log_print
.text:00004404
.text:00004408 00 24                         MOVS            R4, #0
.text:00004408
.text:0000440A
.text:0000440A                               loc_440A                      ; CODE XREF: sub_43AC+42↑j
.text:0000440A 20 46                         MOV             R0, R4
.text:0000440C 05 B0                         ADD             SP, SP, #0x14
.text:0000440E BD E8 F0 83                   POP.W           {R4-R9,PC}
.text:0000440E
.text:0000440E                               ; End of function sub_43AC
.text:0000440E
.text:0000440E                               ; ---------------------------------------------------------------------------
.text:00004412 00 BF                         ALIGN 4
.text:00004414 CB 76 00 00                   off_4414 DCD aAudioHwPrimary - 0x43D4
.text:00004414                                                             ; DATA XREF: sub_43AC+1A↑r
.text:00004414                                                             ; "audio_hw_primary"
.text:00004418 1B 82 00 00                   off_4418 DCD aSIsUSDeviceOnl - 0x43D6
.text:00004418                                                             ; DATA XREF: sub_43AC+1E↑r
.text:00004418                                                             ; "%s is %u%s, device only supports >= %u%"...
.text:0000441C A1 76 00 00                   off_441C DCD aAudioHwPrimary - 0x43FE
.text:0000441C                                                             ; DATA XREF: sub_43AC+44↑r
.text:0000441C                                                             ; "audio_hw_primary"
.text:00004420 1A 82 00 00                   off_4420 DCD aSIsUSDeviceOnl_0 - 0x4400
.text:00004420                                                             ; DATA XREF: sub_43AC+48↑r
.text:00004420                               ; } // starts at 43AC         ; "%s is %u%s, device only supports <= %u%"...
.text:00004424
.text:00004424                               ; =============== S U B R O U T I N E =======================================
.text:00004424
.text:00004424
.text:00004424                               ; int __fastcall sub_4424(int, char *s1, _DWORD *)
.text:00004424                               sub_4424                      ; DATA XREF: .data:off_11644↓o
.text:00004424
.text:00004424                               var_120= -0x120
.text:00004424                               s1= -0x118
.text:00004424                               var_98= -0x98
.text:00004424                               var_18= -0x18
.text:00004424
.text:00004424                               ; __unwind {
.text:00004424 F0 B5                         PUSH            {R4-R7,LR}
.text:00004426 C3 B0                         SUB             SP, SP, #0x10C
.text:00004428 06 46                         MOV             R6, R0
.text:0000442A 84 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x4434)
.text:0000442C 15 46                         MOV             R5, R2
.text:0000442E 84 4A                         LDR             R2, =(aAudioHwIf - 0x4438) ; "audio_hw_if"
.text:00004430 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00004432 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00004434 7A 44                         ADD             R2, PC        ; "audio_hw_if"
.text:00004436 00 68                         LDR             R0, [R0]
.text:00004438 42 90                         STR             R0, [SP,#0x120+var_18]
.text:0000443A 08 46                         MOV             R0, R1        ; s1
.text:0000443C 11 46                         MOV             R1, R2        ; s2
.text:0000443E FE F7 B0 EE                   BLX             strcmp
.text:0000443E
.text:00004442 10 B1                         CBZ             R0, loc_444A
.text:00004442
.text:00004444 6F F0 15 00                   MOV             R0, #0xFFFFFFEA
.text:00004448 EA E0                         B               loc_4620
.text:00004448
.text:0000444A                               ; ---------------------------------------------------------------------------
.text:0000444A
.text:0000444A                               loc_444A                      ; CODE XREF: sub_4424+1E↑j
.text:0000444A 01 20                         MOVS            R0, #1        ; nmemb
.text:0000444C 4F F4 A0 71                   MOV.W           R1, #0x140    ; size
.text:00004450 FE F7 AC EE                   BLX             calloc
.text:00004450
.text:00004454 04 46                         MOV             R4, R0
.text:00004456 00 2C                         CMP             R4, #0
.text:00004458 00 F0 E0 80                   BEQ.W           loc_461C
.text:00004458
.text:0000445C 44 F2 54 40                   MOVW            R0, #0x4454
.text:00004460 4F F4 00 71                   MOV.W           R1, #0x200
.text:00004464 C4 F6 57 00                   MOVT            R0, #0x4857
.text:00004468 20 60                         STR             R0, [R4]
.text:0000446A C4 E9 01 16                   STRD.W          R1, R6, [R4,#4]
.text:0000446E 76 49                         LDR             R1, =(sub_46E0+1 - 0x4476)
.text:00004470 74 48                         LDR             R0, =(adev_set_headset_volume_ptr - 0x447A)
.text:00004472 79 44                         ADD             R1, PC        ; sub_46E0
.text:00004474 E1 63                         STR             R1, [R4,#0x3C]
.text:00004476 78 44                         ADD             R0, PC        ; adev_set_headset_volume_ptr
.text:00004478 74 49                         LDR             R1, =(sub_470A+1 - 0x4480)
.text:0000447A 00 68                         LDR             R0, [R0]      ; adev_set_headset_volume
.text:0000447C 79 44                         ADD             R1, PC        ; sub_470A
.text:0000447E 61 64                         STR             R1, [R4,#0x44]
.text:00004480 73 49                         LDR             R1, =(sub_4710+1 - 0x4486)
.text:00004482 79 44                         ADD             R1, PC        ; sub_4710
.text:00004484 A1 64                         STR             R1, [R4,#0x48]
.text:00004486 73 49                         LDR             R1, =(sub_4824+1 - 0x448C)
.text:00004488 79 44                         ADD             R1, PC        ; sub_4824
.text:0000448A E1 64                         STR             R1, [R4,#0x4C]
.text:0000448C 72 49                         LDR             R1, =(sub_482C+1 - 0x4492)
.text:0000448E 79 44                         ADD             R1, PC        ; sub_482C
.text:00004490 61 65                         STR             R1, [R4,#0x54]
.text:00004492 72 49                         LDR             R1, =(sub_4B34+1 - 0x4498)
.text:00004494 79 44                         ADD             R1, PC        ; sub_4B34
.text:00004496 A1 65                         STR             R1, [R4,#0x58]
.text:00004498 71 49                         LDR             R1, =(sub_4B3C+1 - 0x449E)
.text:0000449A 79 44                         ADD             R1, PC        ; sub_4B3C
.text:0000449C E1 65                         STR             R1, [R4,#0x5C]
.text:0000449E 71 49                         LDR             R1, =(sub_4B48+1 - 0x44A4)
.text:000044A0 79 44                         ADD             R1, PC        ; sub_4B48
.text:000044A2 E1 66                         STR             R1, [R4,#0x6C]
.text:000044A4 70 49                         LDR             R1, =(sub_4E6C+1 - 0x44AA)
.text:000044A6 79 44                         ADD             R1, PC        ; sub_4E6C
.text:000044A8 21 67                         STR             R1, [R4,#0x70]
.text:000044AA 70 49                         LDR             R1, =(sub_4FD0+1 - 0x44B0)
.text:000044AC 79 44                         ADD             R1, PC        ; sub_4FD0
.text:000044AE 61 67                         STR             R1, [R4,#0x74]
.text:000044B0 6F 49                         LDR             R1, =(sub_5068+1 - 0x44B6)
.text:000044B2 79 44                         ADD             R1, PC        ; sub_5068
.text:000044B4 A1 67                         STR             R1, [R4,#0x78]
.text:000044B6 6F 49                         LDR             R1, =(sub_52B8+1 - 0x44BC)
.text:000044B8 79 44                         ADD             R1, PC        ; sub_52B8
.text:000044BA E1 67                         STR             R1, [R4,#0x7C]
.text:000044BC 6E 49                         LDR             R1, =(sub_52F4+1 - 0x44C2)
.text:000044BE 79 44                         ADD             R1, PC        ; sub_52F4
.text:000044C0 C4 F8 80 10                   STR.W           R1, [R4,#0x80]
.text:000044C4 6D 49                         LDR             R1, =(sub_5520+1 - 0x44CA)
.text:000044C6 79 44                         ADD             R1, PC        ; sub_5520
.text:000044C8 C4 F8 84 10                   STR.W           R1, [R4,#0x84]
.text:000044CC 6C 49                         LDR             R1, =(sub_55A0+1 - 0x44D2)
.text:000044CE 79 44                         ADD             R1, PC        ; sub_55A0
.text:000044D0 C4 F8 88 10                   STR.W           R1, [R4,#0x88]
.text:000044D4 A0 66                         STR             R0, [R4,#0x68]
.text:000044D6 6B 48                         LDR             R0, =(sub_55A4+1 - 0x44DE)
.text:000044D8 6B 49                         LDR             R1, =(aSystemEtcMixer - 0x44E2) ; "/system/etc/mixer_paths.xml"
.text:000044DA 78 44                         ADD             R0, PC        ; sub_55A4
.text:000044DC 20 66                         STR             R0, [R4,#0x60]
.text:000044DE 79 44                         ADD             R1, PC        ; "/system/etc/mixer_paths.xml"
.text:000044E0 00 20                         MOVS            R0, #0
.text:000044E2 FE F7 AA ED                   BLX             j_audio_route_init
.text:000044E2
.text:000044E6 C4 F8 BC 00                   STR.W           R0, [R4,#0xBC]
.text:000044EA 00 28                         CMP             R0, #0
.text:000044EC 6E D0                         BEQ             loc_45CC
.text:000044EC
.text:000044EE 00 20                         MOVS            R0, #0
.text:000044F0 FE F7 7E ED                   BLX             mixer_open
.text:000044F0
.text:000044F4 C4 F8 C0 00                   STR.W           R0, [R4,#0xC0]
.text:000044F8 00 28                         CMP             R0, #0
.text:000044FA 71 D0                         BEQ             loc_45E0
.text:000044FA
.text:000044FC 01 20                         MOVS            R0, #1
.text:000044FE FE F7 78 ED                   BLX             mixer_open
.text:000044FE
.text:00004502 C4 F8 C4 00                   STR.W           R0, [R4,#0xC4]
.text:00004506 00 28                         CMP             R0, #0
.text:00004508 74 D0                         BEQ             loc_45F4
.text:00004508
.text:0000450A 00 20                         MOVS            R0, #0
.text:0000450C 4B F6 80 31                   MOVW            R1, #0xBB80
.text:00004510 C4 F8 C8 00                   STR.W           R0, [R4,#0xC8]
.text:00004514 C4 F8 A8 00                   STR.W           R0, [R4,#0xA8]
.text:00004518 C4 E9 34 00                   STRD.W          R0, R0, [R4,#0xD0]
.text:0000451C 84 F8 04 01                   STRB.W          R0, [R4,#0x104]
.text:00004520 84 F8 0C 01                   STRB.W          R0, [R4,#0x10C]
.text:00004524 C4 F8 08 11                   STR.W           R1, [R4,#0x108]
.text:00004528 4F F0 FF 31                   MOV.W           R1, #0xFFFFFFFF
.text:0000452C C4 F8 FC 00                   STR.W           R0, [R4,#0xFC]
.text:00004530 84 F8 20 01                   STRB.W          R0, [R4,#0x120]
.text:00004534 84 F8 22 01                   STRB.W          R0, [R4,#0x122]
.text:00004538 84 F8 0D 01                   STRB.W          R0, [R4,#0x10D]
.text:0000453C C4 E9 49 01                   STRD.W          R0, R1, [R4,#0x124]
.text:00004540 1C 20                         MOVS            R0, #0x1C
.text:00004542 C4 F8 10 01                   STR.W           R0, [R4,#0x110]
.text:00004546 38 20                         MOVS            R0, #0x38 ; '8'
.text:00004548 C4 F8 14 01                   STR.W           R0, [R4,#0x114]
.text:0000454C 07 20                         MOVS            R0, #7
.text:0000454E C4 E9 46 00                   STRD.W          R0, R0, [R4,#0x118]
.text:00004552 2C 60                         STR             R4, [R5]
.text:00004554 FE F7 30 EE                   BLX             Open
.text:00004554
.text:00004558 20 46                         MOV             R0, R4
.text:0000455A FE F7 34 EE                   BLX             j_thread_refresh_audio_route
.text:0000455A
.text:0000455E 4C 4D                         LDR             R5, =(a0 - 0x456A) ; "0"
.text:00004560 22 AE                         ADD             R6, SP, #0x120+var_98
.text:00004562 4A 48                         LDR             R0, =(aRoProductLocal - 0x456C) ; "ro.product.locale.region"
.text:00004564 31 46                         MOV             R1, R6
.text:00004566 7D 44                         ADD             R5, PC        ; "0"
.text:00004568 78 44                         ADD             R0, PC        ; "ro.product.locale.region"
.text:0000456A 2A 46                         MOV             R2, R5
.text:0000456C FE F7 FE EC                   BLX             property_get
.text:0000456C
.text:00004570 48 48                         LDR             R0, =(aRoProductLocal_0 - 0x457C) ; "ro.product.locale.language"
.text:00004572 02 AF                         ADD             R7, SP, #0x120+s1
.text:00004574 39 46                         MOV             R1, R7
.text:00004576 2A 46                         MOV             R2, R5
.text:00004578 78 44                         ADD             R0, PC        ; "ro.product.locale.language"
.text:0000457A FE F7 F8 EC                   BLX             property_get
.text:0000457A
.text:0000457E 46 49                         LDR             R1, =(aAudioHwPrimary - 0x458A) ; "audio_hw_primary"
.text:00004580 03 20                         MOVS            R0, #3
.text:00004582 46 4A                         LDR             R2, =(aSRegionSLangua - 0x458C) ; "%s:region=%s,language=%s"
.text:00004584 46 4B                         LDR             R3, =(aAdevOpen - 0x4592) ; "adev_open"
.text:00004586 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00004588 7A 44                         ADD             R2, PC        ; "%s:region=%s,language=%s"
.text:0000458A CD E9 00 67                   STRD.W          R6, R7, [SP,#0x120+var_120]
.text:0000458E 7B 44                         ADD             R3, PC        ; "adev_open"
.text:00004590 FE F7 22 ED                   BLX             __android_log_print
.text:00004590
.text:00004594 43 49                         LDR             R1, =(aCn - 0x459C) ; "CN"
.text:00004596 30 46                         MOV             R0, R6        ; s1
.text:00004598 79 44                         ADD             R1, PC        ; "CN"
.text:0000459A FE F7 02 EE                   BLX             strcmp
.text:0000459A
.text:0000459E 30 B9                         CBNZ            R0, loc_45AE
.text:0000459E
.text:000045A0 41 49                         LDR             R1, =(aZh - 0x45A8) ; "zh"
.text:000045A2 02 A8                         ADD             R0, SP, #0x120+s1 ; s1
.text:000045A4 79 44                         ADD             R1, PC        ; "zh"
.text:000045A6 FE F7 FC ED                   BLX             strcmp
.text:000045A6
.text:000045AA 00 28                         CMP             R0, #0
.text:000045AC 43 D0                         BEQ             loc_4636
.text:000045AC
.text:000045AE
.text:000045AE                               loc_45AE                      ; CODE XREF: sub_4424+17A↑j
.text:000045AE 01 20                         MOVS            R0, #1
.text:000045AE
.text:000045B0
.text:000045B0                               loc_45B0                      ; CODE XREF: sub_4424+214↓j
.text:000045B0 3E 49                         LDR             R1, =(aAudioHwPrimary - 0x45BA) ; "audio_hw_primary"
.text:000045B2 3F 4A                         LDR             R2, =(aSIsOverseaD - 0x45C0) ; "%s:is_oversea=%d"
.text:000045B4 3F 4B                         LDR             R3, =(aAdevOpen - 0x45C2) ; "adev_open"
.text:000045B6 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000045B8 84 F8 30 01                   STRB.W          R0, [R4,#0x130]
.text:000045BC 7A 44                         ADD             R2, PC        ; "%s:is_oversea=%d"
.text:000045BE 7B 44                         ADD             R3, PC        ; "adev_open"
.text:000045C0 00 90                         STR             R0, [SP,#0x120+var_120]
.text:000045C2 03 20                         MOVS            R0, #3
.text:000045C4 FE F7 08 ED                   BLX             __android_log_print
.text:000045C4
.text:000045C8 00 20                         MOVS            R0, #0
.text:000045CA 29 E0                         B               loc_4620
.text:000045CA
.text:000045CC                               ; ---------------------------------------------------------------------------
.text:000045CC
.text:000045CC                               loc_45CC                      ; CODE XREF: sub_4424+C8↑j
.text:000045CC 40 49                         LDR             R1, =(aAudioHwPrimary - 0x45D8) ; "audio_hw_primary"
.text:000045CE 06 20                         MOVS            R0, #6
.text:000045D0 40 4A                         LDR             R2, =(aSFailedToOpenA_0 - 0x45DA) ; "%s(): failed to open audio route, abort"...
.text:000045D2 41 4B                         LDR             R3, =(aAdevOpen - 0x45DC) ; "adev_open"
.text:000045D4 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000045D6 7A 44                         ADD             R2, PC        ; "%s(): failed to open audio route, abort"...
.text:000045D8 7B 44                         ADD             R3, PC        ; "adev_open"
.text:000045DA FE F7 FE EC                   BLX             __android_log_print
.text:000045DA
.text:000045DE 1A E0                         B               loc_4616
.text:000045DE
.text:000045E0                               ; ---------------------------------------------------------------------------
.text:000045E0
.text:000045E0                               loc_45E0                      ; CODE XREF: sub_4424+D6↑j
.text:000045E0 38 49                         LDR             R1, =(aAudioHwPrimary - 0x45EC) ; "audio_hw_primary"
.text:000045E2 06 20                         MOVS            R0, #6
.text:000045E4 38 4A                         LDR             R2, =(aSFailedToOpenM - 0x45EE) ; "%s(): failed to open mixer, abort..."
.text:000045E6 39 4B                         LDR             R3, =(aAdevOpen - 0x45F0) ; "adev_open"
.text:000045E8 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000045EA 7A 44                         ADD             R2, PC        ; "%s(): failed to open mixer, abort..."
.text:000045EC 7B 44                         ADD             R3, PC        ; "adev_open"
.text:000045EE FE F7 F4 EC                   BLX             __android_log_print
.text:000045EE
.text:000045F2 0C E0                         B               loc_460E
.text:000045F2
.text:000045F4                               ; ---------------------------------------------------------------------------
.text:000045F4
.text:000045F4                               loc_45F4                      ; CODE XREF: sub_4424+E4↑j
.text:000045F4 30 49                         LDR             R1, =(aAudioHwPrimary - 0x4600) ; "audio_hw_primary"
.text:000045F6 06 20                         MOVS            R0, #6
.text:000045F8 30 4A                         LDR             R2, =(aSFailedToOpenH - 0x4602) ; "%s(): failed to open HiFi mixer, abort."...
.text:000045FA 31 4B                         LDR             R3, =(aAdevOpen - 0x4604) ; "adev_open"
.text:000045FC 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000045FE 7A 44                         ADD             R2, PC        ; "%s(): failed to open HiFi mixer, abort."...
.text:00004600 7B 44                         ADD             R3, PC        ; "adev_open"
.text:00004602 FE F7 EA EC                   BLX             __android_log_print
.text:00004602
.text:00004606 D4 F8 C0 00                   LDR.W           R0, [R4,#0xC0]
.text:0000460A FE F7 FE EC                   BLX             mixer_close
.text:0000460A
.text:0000460E
.text:0000460E                               loc_460E                      ; CODE XREF: sub_4424+1CE↑j
.text:0000460E D4 F8 BC 00                   LDR.W           R0, [R4,#0xBC]
.text:00004612 FE F7 0C ED                   BLX             j_audio_route_free
.text:00004612
.text:00004616
.text:00004616                               loc_4616                      ; CODE XREF: sub_4424+1BA↑j
.text:00004616 20 46                         MOV             R0, R4        ; ptr
.text:00004618 FE F7 86 ED                   BLX             free
.text:00004618
.text:0000461C
.text:0000461C                               loc_461C                      ; CODE XREF: sub_4424+34↑j
.text:0000461C 6F F0 0B 00                   MOV             R0, #0xFFFFFFF4
.text:0000461C
.text:00004620
.text:00004620                               loc_4620                      ; CODE XREF: sub_4424+24↑j
.text:00004620                                                             ; sub_4424+1A6↑j
.text:00004620 2E 49                         LDR             R1, =(__stack_chk_guard_ptr - 0x4628)
.text:00004622 42 9A                         LDR             R2, [SP,#0x120+var_18]
.text:00004624 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:00004626 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:00004628 09 68                         LDR             R1, [R1]
.text:0000462A 89 1A                         SUBS            R1, R1, R2
.text:0000462C 04 BF                         ITT EQ
.text:0000462E 43 B0                         ADDEQ           SP, SP, #0x10C
.text:00004630 F0 BD                         POPEQ           {R4-R7,PC}
.text:00004630
.text:00004632 FE F7 D8 EC                   BLX             __stack_chk_fail
.text:00004632
.text:00004636                               ; ---------------------------------------------------------------------------
.text:00004636
.text:00004636                               loc_4636                      ; CODE XREF: sub_4424+188↑j
.text:00004636 00 20                         MOVS            R0, #0
.text:00004638 BA E7                         B               loc_45B0
.text:00004638
.text:00004638                               ; End of function sub_4424
.text:00004638
.text:00004638                               ; ---------------------------------------------------------------------------
.text:0000463A 00 BF                         ALIGN 4
.text:0000463C 60 C9 00 00                   off_463C DCD __stack_chk_guard_ptr - 0x4434
.text:0000463C                                                             ; DATA XREF: sub_4424+6↑r
.text:00004640 5A 82 00 00                   off_4640 DCD aAudioHwIf - 0x4438
.text:00004640                                                             ; DATA XREF: sub_4424+A↑r
.text:00004640                                                             ; "audio_hw_if"
.text:00004644 26 C9 00 00                   off_4644 DCD adev_set_headset_volume_ptr - 0x447A
.text:00004644                                                             ; DATA XREF: sub_4424+4C↑r
.text:00004648 6B 02 00 00                   off_4648 DCD sub_46E0+1 - 0x4476
.text:00004648                                                             ; DATA XREF: sub_4424+4A↑r
.text:0000464C 8B 02 00 00                   off_464C DCD sub_470A+1 - 0x4480
.text:0000464C                                                             ; DATA XREF: sub_4424+54↑r
.text:00004650 8B 02 00 00                   off_4650 DCD sub_4710+1 - 0x4486
.text:00004650                                                             ; DATA XREF: sub_4424+5C↑r
.text:00004654 99 03 00 00                   off_4654 DCD sub_4824+1 - 0x448C
.text:00004654                                                             ; DATA XREF: sub_4424+62↑r
.text:00004658 9B 03 00 00                   off_4658 DCD sub_482C+1 - 0x4492
.text:00004658                                                             ; DATA XREF: sub_4424+68↑r
.text:0000465C 9D 06 00 00                   off_465C DCD sub_4B34+1 - 0x4498
.text:0000465C                                                             ; DATA XREF: sub_4424+6E↑r
.text:00004660 9F 06 00 00                   off_4660 DCD sub_4B3C+1 - 0x449E
.text:00004660                                                             ; DATA XREF: sub_4424+74↑r
.text:00004664 A5 06 00 00                   off_4664 DCD sub_4B48+1 - 0x44A4
.text:00004664                                                             ; DATA XREF: sub_4424+7A↑r
.text:00004668 C3 09 00 00                   off_4668 DCD sub_4E6C+1 - 0x44AA
.text:00004668                                                             ; DATA XREF: sub_4424+80↑r
.text:0000466C 21 0B 00 00                   off_466C DCD sub_4FD0+1 - 0x44B0
.text:0000466C                                                             ; DATA XREF: sub_4424+86↑r
.text:00004670 B3 0B 00 00                   off_4670 DCD sub_5068+1 - 0x44B6
.text:00004670                                                             ; DATA XREF: sub_4424+8C↑r
.text:00004674 FD 0D 00 00                   off_4674 DCD sub_52B8+1 - 0x44BC
.text:00004674                                                             ; DATA XREF: sub_4424+92↑r
.text:00004678 33 0E 00 00                   off_4678 DCD sub_52F4+1 - 0x44C2
.text:00004678                                                             ; DATA XREF: sub_4424+98↑r
.text:0000467C 57 10 00 00                   off_467C DCD sub_5520+1 - 0x44CA
.text:0000467C                                                             ; DATA XREF: sub_4424+A0↑r
.text:00004680 CF 10 00 00                   off_4680 DCD sub_55A0+1 - 0x44D2
.text:00004680                                                             ; DATA XREF: sub_4424+A8↑r
.text:00004684 C7 10 00 00                   off_4684 DCD sub_55A4+1 - 0x44DE
.text:00004684                                                             ; DATA XREF: sub_4424+B2↑r
.text:00004688 69 7B 00 00                   off_4688 DCD aSystemEtcMixer - 0x44E2
.text:00004688                                                             ; DATA XREF: sub_4424+B4↑r
.text:00004688                                                             ; "/system/etc/mixer_paths.xml"
.text:0000468C B6 81 00 00                   off_468C DCD aRoProductLocal - 0x456C
.text:0000468C                                                             ; DATA XREF: sub_4424+13E↑r
.text:0000468C                                                             ; "ro.product.locale.region"
.text:00004690 33 75 00 00                   off_4690 DCD a0 - 0x456A      ; DATA XREF: sub_4424+13A↑r
.text:00004690                                                             ; "0"
.text:00004694 BF 81 00 00                   off_4694 DCD aRoProductLocal_0 - 0x457C
.text:00004694                                                             ; DATA XREF: sub_4424+14C↑r
.text:00004694                                                             ; "ro.product.locale.language"
.text:00004698 15 75 00 00                   off_4698 DCD aAudioHwPrimary - 0x458A
.text:00004698                                                             ; DATA XREF: sub_4424+15A↑r
.text:00004698                                                             ; "audio_hw_primary"
.text:0000469C CA 81 00 00                   off_469C DCD aSRegionSLangua - 0x458C
.text:0000469C                                                             ; DATA XREF: sub_4424+15E↑r
.text:0000469C                                                             ; "%s:region=%s,language=%s"
.text:000046A0 37 81 00 00                   off_46A0 DCD aAdevOpen - 0x4592
.text:000046A0                                                             ; DATA XREF: sub_4424+160↑r
.text:000046A0                                                             ; "adev_open"
.text:000046A4 D3 81 00 00                   off_46A4 DCD aCn - 0x459C     ; DATA XREF: sub_4424+170↑r
.text:000046A4                                                             ; "CN"
.text:000046A8 CA 81 00 00                   off_46A8 DCD aZh - 0x45A8     ; DATA XREF: sub_4424+17C↑r
.text:000046A8                                                             ; "zh"
.text:000046AC E5 74 00 00                   off_46AC DCD aAudioHwPrimary - 0x45BA
.text:000046AC                                                             ; DATA XREF: sub_4424:loc_45B0↑r
.text:000046AC                                                             ; "audio_hw_primary"
.text:000046B0 B5 81 00 00                   off_46B0 DCD aSIsOverseaD - 0x45C0
.text:000046B0                                                             ; DATA XREF: sub_4424+18E↑r
.text:000046B0                                                             ; "%s:is_oversea=%d"
.text:000046B4 07 81 00 00                   off_46B4 DCD aAdevOpen - 0x45C2
.text:000046B4                                                             ; DATA XREF: sub_4424+190↑r
.text:000046B4                                                             ; "adev_open"
.text:000046B8 9F 74 00 00                   off_46B8 DCD aAudioHwPrimary - 0x4600
.text:000046B8                                                             ; DATA XREF: sub_4424:loc_45F4↑r
.text:000046B8                                                             ; "audio_hw_primary"
.text:000046BC F6 80 00 00                   off_46BC DCD aSFailedToOpenH - 0x4602
.text:000046BC                                                             ; DATA XREF: sub_4424+1D4↑r
.text:000046BC                                                             ; "%s(): failed to open HiFi mixer, abort."...
.text:000046C0 C5 80 00 00                   off_46C0 DCD aAdevOpen - 0x4604
.text:000046C0                                                             ; DATA XREF: sub_4424+1D6↑r
.text:000046C0                                                             ; "adev_open"
.text:000046C4 B3 74 00 00                   off_46C4 DCD aAudioHwPrimary - 0x45EC
.text:000046C4                                                             ; DATA XREF: sub_4424:loc_45E0↑r
.text:000046C4                                                             ; "audio_hw_primary"
.text:000046C8 E5 80 00 00                   off_46C8 DCD aSFailedToOpenM - 0x45EE
.text:000046C8                                                             ; DATA XREF: sub_4424+1C0↑r
.text:000046C8                                                             ; "%s(): failed to open mixer, abort..."
.text:000046CC D9 80 00 00                   off_46CC DCD aAdevOpen - 0x45F0
.text:000046CC                                                             ; DATA XREF: sub_4424+1C2↑r
.text:000046CC                                                             ; "adev_open"
.text:000046D0 C7 74 00 00                   off_46D0 DCD aAudioHwPrimary - 0x45D8
.text:000046D0                                                             ; DATA XREF: sub_4424:loc_45CC↑r
.text:000046D0                                                             ; "audio_hw_primary"
.text:000046D4 C4 80 00 00                   off_46D4 DCD aSFailedToOpenA_0 - 0x45DA
.text:000046D4                                                             ; DATA XREF: sub_4424+1AC↑r
.text:000046D4                                                             ; "%s(): failed to open audio route, abort"...
.text:000046D8 ED 80 00 00                   off_46D8 DCD aAdevOpen - 0x45DC
.text:000046D8                                                             ; DATA XREF: sub_4424+1AE↑r
.text:000046D8                                                             ; "adev_open"
.text:000046DC 6C C7 00 00                   off_46DC DCD __stack_chk_guard_ptr - 0x4628
.text:000046DC                                                             ; DATA XREF: sub_4424:loc_4620↑r
.text:000046DC                               ; } // starts at 4424
.text:000046E0
.text:000046E0                               ; =============== S U B R O U T I N E =======================================
.text:000046E0
.text:000046E0
.text:000046E0                               ; int __fastcall sub_46E0(int)
.text:000046E0                               sub_46E0                      ; DATA XREF: sub_4424+4A↑o
.text:000046E0                                                             ; sub_4424+4E↑o
.text:000046E0                                                             ; .text:off_4648↑o
.text:000046E0                               ; __unwind {
.text:000046E0 10 B5                         PUSH            {R4,LR}
.text:000046E2 04 46                         MOV             R4, R0
.text:000046E4 FE F7 74 ED                   BLX             NxpTfa98xx_Stop
.text:000046E4
.text:000046E8 D4 F8 C4 00                   LDR.W           R0, [R4,#0xC4]
.text:000046EC FE F7 8C EC                   BLX             mixer_close
.text:000046EC
.text:000046F0 D4 F8 C0 00                   LDR.W           R0, [R4,#0xC0]
.text:000046F4 FE F7 88 EC                   BLX             mixer_close
.text:000046F4
.text:000046F8 D4 F8 BC 00                   LDR.W           R0, [R4,#0xBC]
.text:000046FC FE F7 96 EC                   BLX             j_audio_route_free
.text:000046FC
.text:00004700 20 46                         MOV             R0, R4        ; ptr
.text:00004702 FE F7 12 ED                   BLX             free
.text:00004702
.text:00004706 00 20                         MOVS            R0, #0
.text:00004708 10 BD                         POP             {R4,PC}
.text:00004708                               ; } // starts at 46E0
.text:00004708
.text:00004708                               ; End of function sub_46E0
.text:00004708
.text:0000470A
.text:0000470A                               ; =============== S U B R O U T I N E =======================================
.text:0000470A
.text:0000470A
.text:0000470A                               ; int sub_470A()
.text:0000470A                               sub_470A                      ; DATA XREF: sub_4424+54↑o
.text:0000470A                                                             ; sub_4424+58↑o
.text:0000470A                                                             ; .text:off_464C↑o
.text:0000470A                               ; __unwind {
.text:0000470A 00 20                         MOVS            R0, #0
.text:0000470C 70 47                         BX              LR
.text:0000470C
.text:0000470C                               ; End of function sub_470A
.text:0000470C
.text:0000470C                               ; ---------------------------------------------------------------------------
.text:0000470E 00 00                         ALIGN 0x10
.text:0000470E                               ; } // starts at 470A
.text:00004710
.text:00004710                               ; =============== S U B R O U T I N E =======================================
.text:00004710
.text:00004710
.text:00004710                               ; int __fastcall sub_4710(int, float)
.text:00004710                               sub_4710                      ; DATA XREF: sub_4424+5C↑o
.text:00004710                                                             ; sub_4424+5E↑o
.text:00004710                                                             ; .text:off_4650↑o
.text:00004710
.text:00004710                               var_50= -0x50
.text:00004710                               var_48= -0x48
.text:00004710                               mutex= -0x40
.text:00004710                               var_3A= -0x3A
.text:00004710                               var_31= -0x31
.text:00004710                               var_28= -0x28
.text:00004710
.text:00004710                               ; __unwind {
.text:00004710 2D E9 F0 4F                   PUSH.W          {R4-R11,LR}
.text:00004714 8B B0                         SUB             SP, SP, #0x2C
.text:00004716 04 46                         MOV             R4, R0
.text:00004718 3B 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x4720)
.text:0000471A 0D 46                         MOV             R5, R1
.text:0000471C 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:0000471E 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00004720 00 68                         LDR             R0, [R0]
.text:00004722 0A 90                         STR             R0, [SP,#0x50+var_28]
.text:00004724 04 F1 A4 00                   ADD.W           R0, R4, #0xA4 ; mutex
.text:00004728 04 90                         STR             R0, [SP,#0x50+mutex]
.text:0000472A FE F7 7A EC                   BLX             pthread_mutex_lock
.text:0000472A
.text:0000472E 00 EE 10 5A                   VMOV            S0, R5
.text:00004732 0D F1 1F 06                   ADD.W           R6, SP, #0x50+var_31
.text:00004736 F7 EE C0 0A                   VCVT.F64.F32    D16, S0
.text:0000473A 30 46                         MOV             R0, R6
.text:0000473C 33 4D                         LDR             R5, =(aF - 0x4748) ; "%f"
.text:0000473E 09 21                         MOVS            R1, #9
.text:00004740 00 22                         MOVS            R2, #0
.text:00004742 09 23                         MOVS            R3, #9
.text:00004744 7D 44                         ADD             R5, PC        ; "%f"
.text:00004746 4F F0 00 08                   MOV.W           R8, #0
.text:0000474A CD ED 02 0B                   VSTR            D16, [SP,#0x50+var_48]
.text:0000474E 00 95                         STR             R5, [SP,#0x50+var_50]
.text:00004750 FE F7 02 ED                   BLX             __snprintf_chk
.text:00004750
.text:00004754 2E 48                         LDR             R0, =(unk_EC8C - 0x4766)
.text:00004756 0D F1 16 07                   ADD.W           R7, SP, #0x50+var_3A
.text:0000475A DF F8 B8 A0                   LDR.W           R10, =(aSVoiceVolumeS - 0x476C) ; "%s(): voice volume = %s"
.text:0000475E DF F8 B8 B0                   LDR.W           R11, =(aAdevSetVoiceVo - 0x476E) ; "adev_set_voice_volume"
.text:00004762 78 44                         ADD             R0, PC        ; unk_EC8C
.text:00004764 00 F1 04 09                   ADD.W           R9, R0, #4
.text:00004768 FA 44                         ADD             R10, PC       ; "%s(): voice volume = %s"
.text:0000476A FB 44                         ADD             R11, PC       ; "adev_set_voice_volume"
.text:0000476A
.text:0000476C
.text:0000476C                               loc_476C                      ; CODE XREF: sub_4710+C6↓j
.text:0000476C 19 ED 01 0A                   VLDR            S0, [R9,#-4]
.text:00004770 38 46                         MOV             R0, R7
.text:00004772 F7 EE C0 0A                   VCVT.F64.F32    D16, S0
.text:00004776 09 21                         MOVS            R1, #9
.text:00004778 00 22                         MOVS            R2, #0
.text:0000477A 09 23                         MOVS            R3, #9
.text:0000477C 00 95                         STR             R5, [SP,#0x50+var_50]
.text:0000477E CD ED 02 0B                   VSTR            D16, [SP,#0x50+var_48]
.text:00004782 FE F7 EA EC                   BLX             __snprintf_chk
.text:00004782
.text:00004786 30 46                         MOV             R0, R6        ; s1
.text:00004788 39 46                         MOV             R1, R7        ; s2
.text:0000478A 09 22                         MOVS            R2, #9        ; n
.text:0000478C FE F7 EA EC                   BLX             strncmp
.text:0000478C
.text:00004790 D8 B9                         CBNZ            R0, loc_47CA
.text:00004790
.text:00004792 23 49                         LDR             R1, =(aAudioHwPrimary - 0x479E) ; "audio_hw_primary"
.text:00004794 03 20                         MOVS            R0, #3
.text:00004796 52 46                         MOV             R2, R10
.text:00004798 5B 46                         MOV             R3, R11
.text:0000479A 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000479C 00 96                         STR             R6, [SP,#0x50+var_50]
.text:0000479E FE F7 1C EC                   BLX             __android_log_print
.text:0000479E
.text:000047A2 94 F8 AC 00                   LDRB.W          R0, [R4,#0xAC]
.text:000047A6 10 F0 0C 0F                   TST.W           R0, #0xC
.text:000047AA 02 D0                         BEQ             loc_47B2
.text:000047AA
.text:000047AC C4 F8 14 81                   STR.W           R8, [R4,#0x114]
.text:000047B0 0B E0                         B               loc_47CA
.text:000047B0
.text:000047B2                               ; ---------------------------------------------------------------------------
.text:000047B2
.text:000047B2                               loc_47B2                      ; CODE XREF: sub_4710+9A↑j
.text:000047B2 99 ED 00 0A                   VLDR            S0, [R9]
.text:000047B6 BD EE C0 0A                   VCVT.S32.F32    S0, S0
.text:000047BA 84 ED 47 0A                   VSTR            S0, [R4,#0x11C]
.text:000047BE 99 ED 01 0A                   VLDR            S0, [R9,#4]
.text:000047C2 BD EE C0 0A                   VCVT.S32.F32    S0, S0
.text:000047C6 84 ED 46 0A                   VSTR            S0, [R4,#0x118]
.text:000047C6
.text:000047CA
.text:000047CA                               loc_47CA                      ; CODE XREF: sub_4710+80↑j
.text:000047CA                                                             ; sub_4710+A0↑j
.text:000047CA 08 F1 01 08                   ADD.W           R8, R8, #1
.text:000047CE 09 F1 0C 09                   ADD.W           R9, R9, #0xC
.text:000047D2 B8 F1 0F 0F                   CMP.W           R8, #0xF
.text:000047D6 C9 D1                         BNE             loc_476C
.text:000047D6
.text:000047D8 D4 F8 A8 00                   LDR.W           R0, [R4,#0xA8]
.text:000047DC 02 28                         CMP             R0, #2
.text:000047DE 02 D1                         BNE             loc_47E6
.text:000047DE
.text:000047E0 20 46                         MOV             R0, R4
.text:000047E2 00 F0 01 FF                   BL              sub_55E8
.text:000047E2
.text:000047E6
.text:000047E6                               loc_47E6                      ; CODE XREF: sub_4710+CE↑j
.text:000047E6 04 98                         LDR             R0, [SP,#0x50+mutex] ; mutex
.text:000047E8 FE F7 2C EC                   BLX             pthread_mutex_unlock
.text:000047E8
.text:000047EC 0B 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x47F4)
.text:000047EE 0A 99                         LDR             R1, [SP,#0x50+var_28]
.text:000047F0 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:000047F2 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:000047F4 00 68                         LDR             R0, [R0]
.text:000047F6 40 1A                         SUBS            R0, R0, R1
.text:000047F8 02 BF                         ITTT EQ
.text:000047FA 00 20                         MOVEQ           R0, #0
.text:000047FC 0B B0                         ADDEQ           SP, SP, #0x2C ; ','
.text:000047FE BD E8 F0 8F                   POPEQ.W         {R4-R11,PC}
.text:000047FE
.text:00004802 FE F7 F0 EB                   BLX             __stack_chk_fail
.text:00004802
.text:00004802                               ; End of function sub_4710
.text:00004802
.text:00004802                               ; ---------------------------------------------------------------------------
.text:00004806 00 BF                         ALIGN 4
.text:00004808 74 C6 00 00                   off_4808 DCD __stack_chk_guard_ptr - 0x4720
.text:00004808                                                             ; DATA XREF: sub_4710+8↑r
.text:0000480C 34 7C 00 00                   off_480C DCD aF - 0x4748      ; DATA XREF: sub_4710+2C↑r
.text:0000480C                                                             ; "%f"
.text:00004810 26 A5 00 00                   off_4810 DCD unk_EC8C - 0x4766
.text:00004810                                                             ; DATA XREF: sub_4710+44↑r
.text:00004814 1A 80 00 00                   off_4814 DCD aSVoiceVolumeS - 0x476C
.text:00004814                                                             ; DATA XREF: sub_4710+4A↑r
.text:00004814                                                             ; "%s(): voice volume = %s"
.text:00004818 30 80 00 00                   off_4818 DCD aAdevSetVoiceVo - 0x476E
.text:00004818                                                             ; DATA XREF: sub_4710+4E↑r
.text:00004818                                                             ; "adev_set_voice_volume"
.text:0000481C A0 C5 00 00                   off_481C DCD __stack_chk_guard_ptr - 0x47F4
.text:0000481C                                                             ; DATA XREF: sub_4710+DC↑r
.text:00004820 01 73 00 00                   off_4820 DCD aAudioHwPrimary - 0x479E
.text:00004820                                                             ; DATA XREF: sub_4710+82↑r
.text:00004820                               ; } // starts at 4710         ; "audio_hw_primary"
.text:00004824
.text:00004824                               ; =============== S U B R O U T I N E =======================================
.text:00004824
.text:00004824
.text:00004824                               ; int sub_4824()
.text:00004824                               sub_4824                      ; DATA XREF: sub_4424+62↑o
.text:00004824                                                             ; sub_4424+64↑o
.text:00004824                                                             ; .text:off_4654↑o
.text:00004824                               ; __unwind {
.text:00004824 6F F0 25 00                   MOV             R0, #0xFFFFFFDA
.text:00004828 70 47                         BX              LR
.text:00004828
.text:00004828                               ; End of function sub_4824
.text:00004828
.text:00004828                               ; ---------------------------------------------------------------------------
.text:0000482A 00 00                         ALIGN 4
.text:0000482A                               ; } // starts at 4824
.text:0000482C
.text:0000482C                               ; =============== S U B R O U T I N E =======================================
.text:0000482C
.text:0000482C
.text:0000482C                               ; int __fastcall sub_482C(int, int)
.text:0000482C                               sub_482C                      ; DATA XREF: sub_4424+68↑o
.text:0000482C                                                             ; sub_4424+6A↑o
.text:0000482C                                                             ; .text:off_4658↑o
.text:0000482C
.text:0000482C                               var_20= -0x20
.text:0000482C
.text:0000482C                               ; __unwind {
.text:0000482C F0 B5                         PUSH            {R4-R7,LR}
.text:0000482E 83 B0                         SUB             SP, SP, #0xC
.text:00004830 04 46                         MOV             R4, R0
.text:00004832 A3 4A                         LDR             R2, =(aSModeChangeDD - 0x4840) ; "%s(): mode change: (%d >> %d)"
.text:00004834 D4 F8 A8 00                   LDR.W           R0, [R4,#0xA8]
.text:00004838 0E 46                         MOV             R6, R1
.text:0000483A A0 49                         LDR             R1, =(aAudioHwPrimary - 0x4848) ; "audio_hw_primary"
.text:0000483C 7A 44                         ADD             R2, PC        ; "%s(): mode change: (%d >> %d)"
.text:0000483E A1 4B                         LDR             R3, =(aAdevSetMode - 0x484A) ; "adev_set_mode"
.text:00004840 CD E9 00 06                   STRD.W          R0, R6, [SP,#0x20+var_20]
.text:00004844 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00004846 7B 44                         ADD             R3, PC        ; "adev_set_mode"
.text:00004848 03 20                         MOVS            R0, #3
.text:0000484A FE F7 C6 EB                   BLX             __android_log_print
.text:0000484A
.text:0000484E 04 F1 A4 05                   ADD.W           R5, R4, #0xA4
.text:00004852 28 46                         MOV             R0, R5        ; mutex
.text:00004854 FE F7 E4 EB                   BLX             pthread_mutex_lock
.text:00004854
.text:00004858 D4 F8 A8 00                   LDR.W           R0, [R4,#0xA8]
.text:0000485C B0 42                         CMP             R0, R6
.text:0000485E 00 F0 27 81                   BEQ.W           loc_4AB0
.text:0000485E
.text:00004862 C4 F8 A8 60                   STR.W           R6, [R4,#0xA8]
.text:00004866 02 2E                         CMP             R6, #2
.text:00004868 D4 F8 D0 00                   LDR.W           R0, [R4,#0xD0]
.text:0000486C 17 D1                         BNE             loc_489E
.text:0000486C
.text:0000486E 00 28                         CMP             R0, #0
.text:00004870 40 F0 E4 80                   BNE.W           loc_4A3C
.text:00004870
.text:00004874 9B 49                         LDR             R1, =(aAudioHwPrimary - 0x487E) ; "audio_hw_primary"
.text:00004876 03 20                         MOVS            R0, #3
.text:00004878 9B 4A                         LDR             R2, =(aEnteringInCall - 0x4880) ; "Entering IN_CALL state"
.text:0000487A 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000487C 7A 44                         ADD             R2, PC        ; "Entering IN_CALL state"
.text:0000487E FE F7 AC EB                   BLX             __android_log_print
.text:0000487E
.text:00004882 20 46                         MOV             R0, R4
.text:00004884 00 F0 0A FF                   BL              sub_569C
.text:00004884
.text:00004888 D4 F8 AC 00                   LDR.W           R0, [R4,#0xAC]
.text:0000488C 02 28                         CMP             R0, #2
.text:0000488E 4F D1                         BNE             loc_4930
.text:0000488E
.text:00004890 04 21                         MOVS            R1, #4
.text:00004892 01 20                         MOVS            R0, #1
.text:00004894 C8 F2 00 01                   MOVT            R1, #0x8000
.text:00004898 C4 E9 2B 01                   STRD.W          R0, R1, [R4,#0xAC]
.text:0000489C 4C E0                         B               loc_4938
.text:0000489C
.text:0000489E                               ; ---------------------------------------------------------------------------
.text:0000489E
.text:0000489E                               loc_489E                      ; CODE XREF: sub_482C+40↑j
.text:0000489E 00 28                         CMP             R0, #0
.text:000048A0 00 F0 CC 80                   BEQ.W           loc_4A3C
.text:000048A0
.text:000048A4 88 4E                         LDR             R6, =(aAudioHwPrimary - 0x48AE) ; "audio_hw_primary"
.text:000048A6 03 20                         MOVS            R0, #3
.text:000048A8 88 4A                         LDR             R2, =(aLeavingInCallS - 0x48B0) ; "Leaving IN_CALL state"
.text:000048AA 7E 44                         ADD             R6, PC        ; "audio_hw_primary"
.text:000048AC 7A 44                         ADD             R2, PC        ; "Leaving IN_CALL state"
.text:000048AE 31 46                         MOV             R1, R6
.text:000048B0 FE F7 92 EB                   BLX             __android_log_print
.text:000048B0
.text:000048B4 86 4A                         LDR             R2, =(aS_0 - 0x48C0) ; "%s():..."
.text:000048B6 00 27                         MOVS            R7, #0
.text:000048B8 86 4B                         LDR             R3, =(aEndCall - 0x48C4) ; "end_call"
.text:000048BA 03 20                         MOVS            R0, #3
.text:000048BC 7A 44                         ADD             R2, PC        ; "%s():..."
.text:000048BE 31 46                         MOV             R1, R6
.text:000048C0 7B 44                         ADD             R3, PC        ; "end_call"
.text:000048C2 C4 F8 D0 70                   STR.W           R7, [R4,#0xD0]
.text:000048C6 C4 F8 C8 70                   STR.W           R7, [R4,#0xC8]
.text:000048CA FE F7 86 EB                   BLX             __android_log_print
.text:000048CA
.text:000048CE D4 F8 DC 00                   LDR.W           R0, [R4,#0xDC]
.text:000048D2 38 B1                         CBZ             R0, loc_48E4
.text:000048D2
.text:000048D4 FE F7 82 EC                   BLX             pcm_stop
.text:000048D4
.text:000048D8 D4 F8 DC 00                   LDR.W           R0, [R4,#0xDC]
.text:000048DC FE F7 E8 EB                   BLX             pcm_close
.text:000048DC
.text:000048E0 C4 F8 DC 70                   STR.W           R7, [R4,#0xDC]
.text:000048E0
.text:000048E4
.text:000048E4                               loc_48E4                      ; CODE XREF: sub_482C+A6↑j
.text:000048E4 D4 F8 E0 00                   LDR.W           R0, [R4,#0xE0]
.text:000048E8 40 B1                         CBZ             R0, loc_48FC
.text:000048E8
.text:000048EA FE F7 78 EC                   BLX             pcm_stop
.text:000048EA
.text:000048EE D4 F8 E0 00                   LDR.W           R0, [R4,#0xE0]
.text:000048F2 FE F7 DE EB                   BLX             pcm_close
.text:000048F2
.text:000048F6 00 20                         MOVS            R0, #0
.text:000048F8 C4 F8 E0 00                   STR.W           R0, [R4,#0xE0]
.text:000048F8
.text:000048FC
.text:000048FC                               loc_48FC                      ; CODE XREF: sub_482C+BC↑j
.text:000048FC 00 20                         MOVS            R0, #0
.text:000048FE 00 26                         MOVS            R6, #0
.text:00004900 FE F7 72 EC                   BLX             SetAudioClock
.text:00004900
.text:00004904 70 B1                         CBZ             R0, loc_4924
.text:00004904
.text:00004906 FE F7 58 EC                   BLX             Open
.text:00004906
.text:0000490A 00 20                         MOVS            R0, #0
.text:0000490C FE F7 6C EC                   BLX             SetAudioClock
.text:0000490C
.text:00004910 71 49                         LDR             R1, =(aAudioHwPrimary - 0x491A) ; "audio_hw_primary"
.text:00004912 72 4A                         LDR             R2, =(aSFailedToDisab - 0x491E) ; "%s(): failed to disable cp i2s clock, r"...
.text:00004914 72 4B                         LDR             R3, =(aEndCall - 0x4920) ; "end_call"
.text:00004916 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00004918 00 90                         STR             R0, [SP,#0x20+var_20]
.text:0000491A 7A 44                         ADD             R2, PC        ; "%s(): failed to disable cp i2s clock, r"...
.text:0000491C 7B 44                         ADD             R3, PC        ; "end_call"
.text:0000491E 03 20                         MOVS            R0, #3
.text:00004920 FE F7 5A EB                   BLX             __android_log_print
.text:00004920
.text:00004924
.text:00004924                               loc_4924                      ; CODE XREF: sub_482C+D8↑j
.text:00004924 20 46                         MOV             R0, R4
.text:00004926 84 F8 B7 60                   STRB.W          R6, [R4,#0xB7]
.text:0000492A 00 F0 B7 FE                   BL              sub_569C
.text:0000492A
.text:0000492E 85 E0                         B               loc_4A3C
.text:0000492E
.text:00004930                               ; ---------------------------------------------------------------------------
.text:00004930
.text:00004930                               loc_4930                      ; CODE XREF: sub_482C+62↑j
.text:00004930 20 F0 02 00                   BIC.W           R0, R0, #2
.text:00004934 C4 F8 AC 00                   STR.W           R0, [R4,#0xAC]
.text:00004934
.text:00004938
.text:00004938                               loc_4938                      ; CODE XREF: sub_482C+70↑j
.text:00004938 6C 49                         LDR             R1, =(aAudioHwPrimary - 0x4944) ; "audio_hw_primary"
.text:0000493A 04 20                         MOVS            R0, #4
.text:0000493C 6C 4A                         LDR             R2, =(aS_0 - 0x494A) ; "%s():..."
.text:0000493E 6D 4B                         LDR             R3, =(aStartCall - 0x494C) ; "start_call"
.text:00004940 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00004942 C4 F8 C8 00                   STR.W           R0, [R4,#0xC8]
.text:00004946 7A 44                         ADD             R2, PC        ; "%s():..."
.text:00004948 7B 44                         ADD             R3, PC        ; "start_call"
.text:0000494A 03 20                         MOVS            R0, #3
.text:0000494C FE F7 44 EB                   BLX             __android_log_print
.text:0000494C
.text:00004950 01 20                         MOVS            R0, #1
.text:00004952 FE F7 4A EC                   BLX             SetAudioClock
.text:00004952
.text:00004956 70 B1                         CBZ             R0, loc_4976
.text:00004956
.text:00004958 FE F7 2E EC                   BLX             Open
.text:00004958
.text:0000495C 01 20                         MOVS            R0, #1
.text:0000495E FE F7 44 EC                   BLX             SetAudioClock
.text:0000495E
.text:00004962 65 49                         LDR             R1, =(aAudioHwPrimary - 0x496C) ; "audio_hw_primary"
.text:00004964 65 4A                         LDR             R2, =(aSFailedToEnabl - 0x4970) ; "%s(): failed to enable cp i2s clock, re"...
.text:00004966 66 4B                         LDR             R3, =(aStartCall - 0x4972) ; "start_call"
.text:00004968 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000496A 00 90                         STR             R0, [SP,#0x20+var_20]
.text:0000496C 7A 44                         ADD             R2, PC        ; "%s(): failed to enable cp i2s clock, re"...
.text:0000496E 7B 44                         ADD             R3, PC        ; "start_call"
.text:00004970 03 20                         MOVS            R0, #3
.text:00004972 FE F7 32 EB                   BLX             __android_log_print
.text:00004972
.text:00004976
.text:00004976                               loc_4976                      ; CODE XREF: sub_482C+12A↑j
.text:00004976 41 F2 88 30                   MOVW            R0, #0x1388   ; useconds
.text:0000497A FE F7 4C EB                   BLX             usleep
.text:0000497A
.text:0000497E D4 F8 DC 00                   LDR.W           R0, [R4,#0xDC]
.text:00004982 98 B9                         CBNZ            R0, loc_49AC
.text:00004982
.text:00004984 5F 48                         LDR             R0, =(pcm_config_voice_call_ptr - 0x4990)
.text:00004986 03 21                         MOVS            R1, #3
.text:00004988 00 22                         MOVS            R2, #0
.text:0000498A 00 26                         MOVS            R6, #0
.text:0000498C 78 44                         ADD             R0, PC        ; pcm_config_voice_call_ptr
.text:0000498E 03 68                         LDR             R3, [R0]      ; pcm_config_voice_call
.text:00004990 00 20                         MOVS            R0, #0
.text:00004992 FE F7 5E EB                   BLX             pcm_open
.text:00004992
.text:00004996 C4 F8 DC 00                   STR.W           R0, [R4,#0xDC]
.text:0000499A 20 B1                         CBZ             R0, loc_49A6
.text:0000499A
.text:0000499C FE F7 5E EB                   BLX             pcm_is_ready
.text:0000499C
.text:000049A0 D4 F8 DC 60                   LDR.W           R6, [R4,#0xDC]
.text:000049A4 D8 B1                         CBZ             R0, loc_49DE
.text:000049A4
.text:000049A6
.text:000049A6                               loc_49A6                      ; CODE XREF: sub_482C+16E↑j
.text:000049A6 30 46                         MOV             R0, R6
.text:000049A8 FE F7 5E EB                   BLX             pcm_prepare
.text:000049A8
.text:000049AC
.text:000049AC                               loc_49AC                      ; CODE XREF: sub_482C+156↑j
.text:000049AC D4 F8 E0 00                   LDR.W           R0, [R4,#0xE0]
.text:000049B0 F0 BB                         CBNZ            R0, loc_4A30
.text:000049B0
.text:000049B2 58 48                         LDR             R0, =(pcm_config_voice_call_ptr - 0x49C0)
.text:000049B4 03 21                         MOVS            R1, #3
.text:000049B6 4F F0 80 52                   MOV.W           R2, #0x10000000
.text:000049BA 00 26                         MOVS            R6, #0
.text:000049BC 78 44                         ADD             R0, PC        ; pcm_config_voice_call_ptr
.text:000049BE 03 68                         LDR             R3, [R0]      ; pcm_config_voice_call
.text:000049C0 00 20                         MOVS            R0, #0
.text:000049C2 FE F7 46 EB                   BLX             pcm_open
.text:000049C2
.text:000049C6 C4 F8 E0 00                   STR.W           R0, [R4,#0xE0]
.text:000049CA 20 B1                         CBZ             R0, loc_49D6
.text:000049CA
.text:000049CC FE F7 46 EB                   BLX             pcm_is_ready
.text:000049CC
.text:000049D0 D4 F8 E0 60                   LDR.W           R6, [R4,#0xE0]
.text:000049D4 88 B1                         CBZ             R0, loc_49FA
.text:000049D4
.text:000049D6
.text:000049D6                               loc_49D6                      ; CODE XREF: sub_482C+19E↑j
.text:000049D6 30 46                         MOV             R0, R6
.text:000049D8 FE F7 46 EB                   BLX             pcm_prepare
.text:000049D8
.text:000049DC 28 E0                         B               loc_4A30
.text:000049DC
.text:000049DE                               ; ---------------------------------------------------------------------------
.text:000049DE
.text:000049DE                               loc_49DE                      ; CODE XREF: sub_482C+178↑j
.text:000049DE 30 46                         MOV             R0, R6
.text:000049E0 FE F7 60 EB                   BLX             pcm_get_error
.text:000049E0
.text:000049E4 48 49                         LDR             R1, =(aAudioHwPrimary - 0x49EE) ; "audio_hw_primary"
.text:000049E6 49 4A                         LDR             R2, =(aSPcmOpenVoiceO - 0x49F2) ; "%s(): pcm_open(VOICE_OUT) failed: %s"
.text:000049E8 49 4B                         LDR             R3, =(aStartCall - 0x49F4) ; "start_call"
.text:000049EA 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000049EC 00 90                         STR             R0, [SP,#0x20+var_20]
.text:000049EE 7A 44                         ADD             R2, PC        ; "%s(): pcm_open(VOICE_OUT) failed: %s"
.text:000049F0 7B 44                         ADD             R3, PC        ; "start_call"
.text:000049F2 06 20                         MOVS            R0, #6
.text:000049F4 FE F7 F0 EA                   BLX             __android_log_print
.text:000049F4
.text:000049F8 13 E0                         B               loc_4A22
.text:000049F8
.text:000049FA                               ; ---------------------------------------------------------------------------
.text:000049FA
.text:000049FA                               loc_49FA                      ; CODE XREF: sub_482C+1A8↑j
.text:000049FA 30 46                         MOV             R0, R6
.text:000049FC FE F7 52 EB                   BLX             pcm_get_error
.text:000049FC
.text:00004A00 45 49                         LDR             R1, =(aAudioHwPrimary - 0x4A0A) ; "audio_hw_primary"
.text:00004A02 46 4A                         LDR             R2, =(aSPcmOpenVoiceI - 0x4A0E) ; "%s(): pcm_open(VOICE_IN) failed: %s"
.text:00004A04 46 4B                         LDR             R3, =(aStartCall - 0x4A10) ; "start_call"
.text:00004A06 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00004A08 00 90                         STR             R0, [SP,#0x20+var_20]
.text:00004A0A 7A 44                         ADD             R2, PC        ; "%s(): pcm_open(VOICE_IN) failed: %s"
.text:00004A0C 7B 44                         ADD             R3, PC        ; "start_call"
.text:00004A0E 06 20                         MOVS            R0, #6
.text:00004A10 FE F7 E2 EA                   BLX             __android_log_print
.text:00004A10
.text:00004A14 D4 F8 E0 00                   LDR.W           R0, [R4,#0xE0]
.text:00004A18 FE F7 4A EB                   BLX             pcm_close
.text:00004A18
.text:00004A1C 00 20                         MOVS            R0, #0
.text:00004A1E C4 F8 E0 00                   STR.W           R0, [R4,#0xE0]
.text:00004A1E
.text:00004A22
.text:00004A22                               loc_4A22                      ; CODE XREF: sub_482C+1CC↑j
.text:00004A22 D4 F8 DC 00                   LDR.W           R0, [R4,#0xDC]
.text:00004A26 FE F7 44 EB                   BLX             pcm_close
.text:00004A26
.text:00004A2A 00 20                         MOVS            R0, #0
.text:00004A2C C4 F8 DC 00                   STR.W           R0, [R4,#0xDC]
.text:00004A2C
.text:00004A30
.text:00004A30                               loc_4A30                      ; CODE XREF: sub_482C+184↑j
.text:00004A30                                                             ; sub_482C+1B0↑j
.text:00004A30 20 46                         MOV             R0, R4
.text:00004A32 00 F0 7D FE                   BL              sub_5730
.text:00004A32
.text:00004A36 01 20                         MOVS            R0, #1
.text:00004A38 C4 F8 D0 00                   STR.W           R0, [R4,#0xD0]
.text:00004A38
.text:00004A3C
.text:00004A3C                               loc_4A3C                      ; CODE XREF: sub_482C+44↑j
.text:00004A3C                                                             ; sub_482C+74↑j
.text:00004A3C                                                             ; sub_482C+102↑j
.text:00004A3C D4 F8 D4 00                   LDR.W           R0, [R4,#0xD4]
.text:00004A40 D4 F8 A8 10                   LDR.W           R1, [R4,#0xA8]
.text:00004A44 03 29                         CMP             R1, #3
.text:00004A46 15 D1                         BNE             loc_4A74
.text:00004A46
.text:00004A48 90 BB                         CBNZ            R0, loc_4AB0
.text:00004A48
.text:00004A4A 38 49                         LDR             R1, =(aAudioHwPrimary - 0x4A54) ; "audio_hw_primary"
.text:00004A4C 03 20                         MOVS            R0, #3
.text:00004A4E 38 4A                         LDR             R2, =(aEnteringInComm - 0x4A56) ; "Entering IN_COMMUNICATION state"
.text:00004A50 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00004A52 7A 44                         ADD             R2, PC        ; "Entering IN_COMMUNICATION state"
.text:00004A54 FE F7 C0 EA                   BLX             __android_log_print
.text:00004A54
.text:00004A58 20 46                         MOV             R0, R4
.text:00004A5A 00 F0 1F FE                   BL              sub_569C
.text:00004A5A
.text:00004A5E D4 F8 AC 00                   LDR.W           R0, [R4,#0xAC]
.text:00004A62 02 28                         CMP             R0, #2
.text:00004A64 17 D1                         BNE             loc_4A96
.text:00004A64
.text:00004A66 04 21                         MOVS            R1, #4
.text:00004A68 01 20                         MOVS            R0, #1
.text:00004A6A C8 F2 00 01                   MOVT            R1, #0x8000
.text:00004A6E C4 E9 2B 01                   STRD.W          R0, R1, [R4,#0xAC]
.text:00004A72 14 E0                         B               loc_4A9E
.text:00004A72
.text:00004A74                               ; ---------------------------------------------------------------------------
.text:00004A74
.text:00004A74                               loc_4A74                      ; CODE XREF: sub_482C+21A↑j
.text:00004A74 E0 B1                         CBZ             R0, loc_4AB0
.text:00004A74
.text:00004A76 2B 49                         LDR             R1, =(aAudioHwPrimary - 0x4A80) ; "audio_hw_primary"
.text:00004A78 03 20                         MOVS            R0, #3
.text:00004A7A 2B 4A                         LDR             R2, =(aLeavingInCommu - 0x4A82) ; "Leaving IN_COMMUNICATION state"
.text:00004A7C 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00004A7E 7A 44                         ADD             R2, PC        ; "Leaving IN_COMMUNICATION state"
.text:00004A80 FE F7 AA EA                   BLX             __android_log_print
.text:00004A80
.text:00004A84 00 20                         MOVS            R0, #0
.text:00004A86 C4 F8 D4 00                   STR.W           R0, [R4,#0xD4]
.text:00004A8A C4 F8 C8 00                   STR.W           R0, [R4,#0xC8]
.text:00004A8E 20 46                         MOV             R0, R4
.text:00004A90 00 F0 04 FE                   BL              sub_569C
.text:00004A90
.text:00004A94 0C E0                         B               loc_4AB0
.text:00004A94
.text:00004A96                               ; ---------------------------------------------------------------------------
.text:00004A96
.text:00004A96                               loc_4A96                      ; CODE XREF: sub_482C+238↑j
.text:00004A96 20 F0 02 00                   BIC.W           R0, R0, #2
.text:00004A9A C4 F8 AC 00                   STR.W           R0, [R4,#0xAC]
.text:00004A9A
.text:00004A9E
.text:00004A9E                               loc_4A9E                      ; CODE XREF: sub_482C+246↑j
.text:00004A9E 07 20                         MOVS            R0, #7
.text:00004AA0 C4 F8 C8 00                   STR.W           R0, [R4,#0xC8]
.text:00004AA4 20 46                         MOV             R0, R4
.text:00004AA6 00 F0 43 FE                   BL              sub_5730
.text:00004AA6
.text:00004AAA 01 20                         MOVS            R0, #1
.text:00004AAC C4 F8 D4 00                   STR.W           R0, [R4,#0xD4]
.text:00004AAC
.text:00004AB0
.text:00004AB0                               loc_4AB0                      ; CODE XREF: sub_482C+32↑j
.text:00004AB0                                                             ; sub_482C+21C↑j
.text:00004AB0                                                             ; sub_482C:loc_4A74↑j
.text:00004AB0                                                             ; sub_482C+268↑j
.text:00004AB0 28 46                         MOV             R0, R5        ; mutex
.text:00004AB2 FE F7 C8 EA                   BLX             pthread_mutex_unlock
.text:00004AB2
.text:00004AB6 00 20                         MOVS            R0, #0
.text:00004AB8 03 B0                         ADD             SP, SP, #0xC
.text:00004ABA F0 BD                         POP             {R4-R7,PC}
.text:00004ABA
.text:00004ABA                               ; End of function sub_482C
.text:00004ABA
.text:00004ABA                               ; ---------------------------------------------------------------------------
.text:00004ABC 57 72 00 00                   off_4ABC DCD aAudioHwPrimary - 0x4848
.text:00004ABC                                                             ; DATA XREF: sub_482C+E↑r
.text:00004ABC                                                             ; "audio_hw_primary"
.text:00004AC0 14 80 00 00                   off_4AC0 DCD aSModeChangeDD - 0x4840
.text:00004AC0                                                             ; DATA XREF: sub_482C+6↑r
.text:00004AC0                                                             ; "%s(): mode change: (%d >> %d)"
.text:00004AC4 28 80 00 00                   off_4AC4 DCD aAdevSetMode - 0x484A
.text:00004AC4                                                             ; DATA XREF: sub_482C+12↑r
.text:00004AC4                                                             ; "adev_set_mode"
.text:00004AC8 F1 71 00 00                   off_4AC8 DCD aAudioHwPrimary - 0x48AE
.text:00004AC8                                                             ; DATA XREF: sub_482C+78↑r
.text:00004AC8                                                             ; "audio_hw_primary"
.text:00004ACC E7 7F 00 00                   off_4ACC DCD aLeavingInCallS - 0x48B0
.text:00004ACC                                                             ; DATA XREF: sub_482C+7C↑r
.text:00004ACC                                                             ; "Leaving IN_CALL state"
.text:00004AD0 2C 80 00 00                   off_4AD0 DCD aS_0 - 0x48C0    ; DATA XREF: sub_482C+88↑r
.text:00004AD0                                                             ; "%s():..."
.text:00004AD4 20 85 00 00                   off_4AD4 DCD aEndCall - 0x48C4
.text:00004AD4                                                             ; DATA XREF: sub_482C+8C↑r
.text:00004AD4                                                             ; "end_call"
.text:00004AD8 85 71 00 00                   off_4AD8 DCD aAudioHwPrimary - 0x491A
.text:00004AD8                                                             ; DATA XREF: sub_482C+E4↑r
.text:00004AD8                                                             ; "audio_hw_primary"
.text:00004ADC CF 84 00 00                   off_4ADC DCD aSFailedToDisab - 0x491E
.text:00004ADC                                                             ; DATA XREF: sub_482C+E6↑r
.text:00004ADC                                                             ; "%s(): failed to disable cp i2s clock, r"...
.text:00004AE0 C4 84 00 00                   off_4AE0 DCD aEndCall - 0x4920
.text:00004AE0                                                             ; DATA XREF: sub_482C+E8↑r
.text:00004AE0                                                             ; "end_call"
.text:00004AE4 21 72 00 00                   off_4AE4 DCD aAudioHwPrimary - 0x487E
.text:00004AE4                                                             ; DATA XREF: sub_482C+48↑r
.text:00004AE4                                                             ; "audio_hw_primary"
.text:00004AE8 00 80 00 00                   off_4AE8 DCD aEnteringInCall - 0x4880
.text:00004AE8                                                             ; DATA XREF: sub_482C+4C↑r
.text:00004AE8                                                             ; "Entering IN_CALL state"
.text:00004AEC 5B 71 00 00                   off_4AEC DCD aAudioHwPrimary - 0x4944
.text:00004AEC                                                             ; DATA XREF: sub_482C:loc_4938↑r
.text:00004AEC                                                             ; "audio_hw_primary"
.text:00004AF0 A2 7F 00 00                   off_4AF0 DCD aS_0 - 0x494A    ; DATA XREF: sub_482C+110↑r
.text:00004AF0                                                             ; "%s():..."
.text:00004AF4 22 80 00 00                   off_4AF4 DCD aStartCall - 0x494C
.text:00004AF4                                                             ; DATA XREF: sub_482C+112↑r
.text:00004AF4                                                             ; "start_call"
.text:00004AF8 33 71 00 00                   off_4AF8 DCD aAudioHwPrimary - 0x496C
.text:00004AF8                                                             ; DATA XREF: sub_482C+136↑r
.text:00004AF8                                                             ; "audio_hw_primary"
.text:00004AFC 09 80 00 00                   off_4AFC DCD aSFailedToEnabl - 0x4970
.text:00004AFC                                                             ; DATA XREF: sub_482C+138↑r
.text:00004AFC                                                             ; "%s(): failed to enable cp i2s clock, re"...
.text:00004B00 FC 7F 00 00                   off_4B00 DCD aStartCall - 0x4972
.text:00004B00                                                             ; DATA XREF: sub_482C+13A↑r
.text:00004B00                                                             ; "start_call"
.text:00004B04 14 C4 00 00                   off_4B04 DCD pcm_config_voice_call_ptr - 0x4990
.text:00004B04                                                             ; DATA XREF: sub_482C+158↑r
.text:00004B08 B1 70 00 00                   off_4B08 DCD aAudioHwPrimary - 0x49EE
.text:00004B08                                                             ; DATA XREF: sub_482C+1B8↑r
.text:00004B08                                                             ; "audio_hw_primary"
.text:00004B0C C0 7F 00 00                   off_4B0C DCD aSPcmOpenVoiceO - 0x49F2
.text:00004B0C                                                             ; DATA XREF: sub_482C+1BA↑r
.text:00004B0C                                                             ; "%s(): pcm_open(VOICE_OUT) failed: %s"
.text:00004B10 7A 7F 00 00                   off_4B10 DCD aStartCall - 0x49F4
.text:00004B10                                                             ; DATA XREF: sub_482C+1BC↑r
.text:00004B10                                                             ; "start_call"
.text:00004B14 E4 C3 00 00                   off_4B14 DCD pcm_config_voice_call_ptr - 0x49C0
.text:00004B14                                                             ; DATA XREF: sub_482C+186↑r
.text:00004B18 95 70 00 00                   off_4B18 DCD aAudioHwPrimary - 0x4A0A
.text:00004B18                                                             ; DATA XREF: sub_482C+1D4↑r
.text:00004B18                                                             ; "audio_hw_primary"
.text:00004B1C C9 7F 00 00                   off_4B1C DCD aSPcmOpenVoiceI - 0x4A0E
.text:00004B1C                                                             ; DATA XREF: sub_482C+1D6↑r
.text:00004B1C                                                             ; "%s(): pcm_open(VOICE_IN) failed: %s"
.text:00004B20 5E 7F 00 00                   off_4B20 DCD aStartCall - 0x4A10
.text:00004B20                                                             ; DATA XREF: sub_482C+1D8↑r
.text:00004B20                                                             ; "start_call"
.text:00004B24 1F 70 00 00                   off_4B24 DCD aAudioHwPrimary - 0x4A80
.text:00004B24                                                             ; DATA XREF: sub_482C+24A↑r
.text:00004B24                                                             ; "audio_hw_primary"
.text:00004B28 4B 7E 00 00                   off_4B28 DCD aLeavingInCommu - 0x4A82
.text:00004B28                                                             ; DATA XREF: sub_482C+24E↑r
.text:00004B28                                                             ; "Leaving IN_COMMUNICATION state"
.text:00004B2C 4B 70 00 00                   off_4B2C DCD aAudioHwPrimary - 0x4A54
.text:00004B2C                                                             ; DATA XREF: sub_482C+21E↑r
.text:00004B2C                                                             ; "audio_hw_primary"
.text:00004B30 57 7E 00 00                   off_4B30 DCD aEnteringInComm - 0x4A56
.text:00004B30                                                             ; DATA XREF: sub_482C+222↑r
.text:00004B30                               ; } // starts at 482C         ; "Entering IN_COMMUNICATION state"
.text:00004B34
.text:00004B34                               ; =============== S U B R O U T I N E =======================================
.text:00004B34
.text:00004B34
.text:00004B34                               ; int __fastcall sub_4B34(int, char)
.text:00004B34                               sub_4B34                      ; DATA XREF: sub_4424+6E↑o
.text:00004B34                                                             ; sub_4424+70↑o
.text:00004B34                                                             ; .text:off_465C↑o
.text:00004B34                               ; __unwind {
.text:00004B34 80 F8 B4 10                   STRB.W          R1, [R0,#0xB4]
.text:00004B38 00 20                         MOVS            R0, #0
.text:00004B3A 70 47                         BX              LR
.text:00004B3A
.text:00004B3A                               ; End of function sub_4B34
.text:00004B3A
.text:00004B3C
.text:00004B3C                               ; =============== S U B R O U T I N E =======================================
.text:00004B3C
.text:00004B3C
.text:00004B3C                               ; int __fastcall sub_4B3C(int, _BYTE *)
.text:00004B3C                               sub_4B3C                      ; DATA XREF: sub_4424+74↑o
.text:00004B3C                                                             ; sub_4424+76↑o
.text:00004B3C                                                             ; .text:off_4660↑o
.text:00004B3C 90 F8 B4 00                   LDRB.W          R0, [R0,#0xB4]
.text:00004B40 08 70                         STRB            R0, [R1]
.text:00004B42 00 20                         MOVS            R0, #0
.text:00004B44 70 47                         BX              LR
.text:00004B44
.text:00004B44                               ; End of function sub_4B3C
.text:00004B44
.text:00004B44                               ; ---------------------------------------------------------------------------
.text:00004B46 00 00                         ALIGN 4
.text:00004B46                               ; } // starts at 4B34
.text:00004B48
.text:00004B48                               ; =============== S U B R O U T I N E =======================================
.text:00004B48
.text:00004B48
.text:00004B48                               ; int __fastcall sub_4B48(int, const char *)
.text:00004B48                               sub_4B48                      ; DATA XREF: sub_4424+7A↑o
.text:00004B48                                                             ; sub_4424+7C↑o
.text:00004B48                                                             ; .text:off_4664↑o
.text:00004B48
.text:00004B48                               var_48= -0x48
.text:00004B48                               s1= -0x40
.text:00004B48                               var_20= -0x20
.text:00004B48
.text:00004B48                               ; __unwind {
.text:00004B48 2D E9 F0 43                   PUSH.W          {R4-R9,LR}
.text:00004B4C 8B B0                         SUB             SP, SP, #0x2C
.text:00004B4E 05 46                         MOV             R5, R0
.text:00004B50 A9 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x4B58)
.text:00004B52 88 46                         MOV             R8, R1
.text:00004B54 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00004B56 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00004B58 00 68                         LDR             R0, [R0]
.text:00004B5A 0A 90                         STR             R0, [SP,#0x48+var_20]
.text:00004B5C 40 46                         MOV             R0, R8
.text:00004B5E FE F7 4A EB                   BLX             str_parms_create_str
.text:00004B5E
.text:00004B62 A6 49                         LDR             R1, =(aAudioHwPrimary - 0x4B70) ; "audio_hw_primary"
.text:00004B64 04 46                         MOV             R4, R0
.text:00004B66 A6 4A                         LDR             R2, =(aSKvpairsS - 0x4B72) ; "%s(): kvpairs = %s"
.text:00004B68 03 20                         MOVS            R0, #3
.text:00004B6A A6 4B                         LDR             R3, =(aAdevSetParamet - 0x4B78) ; "adev_set_parameters"
.text:00004B6C 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00004B6E 7A 44                         ADD             R2, PC        ; "%s(): kvpairs = %s"
.text:00004B70 CD F8 00 80                   STR.W           R8, [SP,#0x48+var_48]
.text:00004B74 7B 44                         ADD             R3, PC        ; "adev_set_parameters"
.text:00004B76 FE F7 30 EA                   BLX             __android_log_print
.text:00004B76
.text:00004B7A A3 49                         LDR             R1, =(aBtHeadsetNrec - 0x4B86) ; "bt_headset_nrec"
.text:00004B7C 02 AA                         ADD             R2, SP, #0x48+s1
.text:00004B7E 20 46                         MOV             R0, R4
.text:00004B80 20 23                         MOVS            R3, #0x20 ; ' '
.text:00004B82 79 44                         ADD             R1, PC        ; "bt_headset_nrec"
.text:00004B84 FE F7 3C EB                   BLX             str_parms_get_str
.text:00004B84
.text:00004B88 00 28                         CMP             R0, #0
.text:00004B8A 0A DB                         BLT             loc_4BA2
.text:00004B8A
.text:00004B8C 9F 49                         LDR             R1, =(aOn - 0x4B94) ; "on"
.text:00004B8E 02 A8                         ADD             R0, SP, #0x48+s1 ; s1
.text:00004B90 79 44                         ADD             R1, PC        ; "on"
.text:00004B92 FE F7 06 EB                   BLX             strcmp
.text:00004B92
.text:00004B96 00 28                         CMP             R0, #0
.text:00004B98 14 BF                         ITE NE
.text:00004B9A 00 20                         MOVNE           R0, #0
.text:00004B9C 01 20                         MOVEQ           R0, #1
.text:00004B9E 85 F8 B6 00                   STRB.W          R0, [R5,#0xB6]
.text:00004B9E
.text:00004BA2
.text:00004BA2                               loc_4BA2                      ; CODE XREF: sub_4B48+42↑j
.text:00004BA2 9B 49                         LDR             R1, =(aScreenState - 0x4BAE) ; "screen_state"
.text:00004BA4 02 AA                         ADD             R2, SP, #0x48+s1
.text:00004BA6 20 46                         MOV             R0, R4
.text:00004BA8 20 23                         MOVS            R3, #0x20 ; ' '
.text:00004BAA 79 44                         ADD             R1, PC        ; "screen_state"
.text:00004BAC FE F7 28 EB                   BLX             str_parms_get_str
.text:00004BAC
.text:00004BB0 00 28                         CMP             R0, #0
.text:00004BB2 0A DB                         BLT             loc_4BCA
.text:00004BB2
.text:00004BB4 97 49                         LDR             R1, =(aOn - 0x4BBC) ; "on"
.text:00004BB6 02 A8                         ADD             R0, SP, #0x48+s1 ; s1
.text:00004BB8 79 44                         ADD             R1, PC        ; "on"
.text:00004BBA FE F7 F2 EA                   BLX             strcmp
.text:00004BBA
.text:00004BBE 00 28                         CMP             R0, #0
.text:00004BC0 14 BF                         ITE NE
.text:00004BC2 01 20                         MOVNE           R0, #1
.text:00004BC4 00 20                         MOVEQ           R0, #0
.text:00004BC6 85 F8 B5 00                   STRB.W          R0, [R5,#0xB5]
.text:00004BC6
.text:00004BCA
.text:00004BCA                               loc_4BCA                      ; CODE XREF: sub_4B48+6A↑j
.text:00004BCA 93 49                         LDR             R1, =(aHifiGain - 0x4BD6) ; "hifi_gain"
.text:00004BCC 02 AA                         ADD             R2, SP, #0x48+s1
.text:00004BCE 20 46                         MOV             R0, R4
.text:00004BD0 20 23                         MOVS            R3, #0x20 ; ' '
.text:00004BD2 79 44                         ADD             R1, PC        ; "hifi_gain"
.text:00004BD4 FE F7 14 EB                   BLX             str_parms_get_str
.text:00004BD4
.text:00004BD8 00 28                         CMP             R0, #0
.text:00004BDA 1D DB                         BLT             loc_4C18
.text:00004BDA
.text:00004BDC 02 A8                         ADD             R0, SP, #0x48+s1 ; nptr
.text:00004BDE FE F7 CC E9                   BLX             atoi
.text:00004BDE
.text:00004BE2 06 46                         MOV             R6, R0
.text:00004BE4 D5 F8 24 01                   LDR.W           R0, [R5,#0x124]
.text:00004BE8 B0 42                         CMP             R0, R6
.text:00004BEA 15 D0                         BEQ             loc_4C18
.text:00004BEA
.text:00004BEC 8B 49                         LDR             R1, =(aAudioHwPrimary - 0x4BF6) ; "audio_hw_primary"
.text:00004BEE 8C 4A                         LDR             R2, =(aSHifiGainChang - 0x4BFC) ; "%s(): hifi_gain change: (%d >> %d)"
.text:00004BF0 8C 4B                         LDR             R3, =(aAdevSetParamet - 0x4BFE) ; "adev_set_parameters"
.text:00004BF2 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00004BF4 CD E9 00 06                   STRD.W          R0, R6, [SP,#0x48+var_48]
.text:00004BF8 7A 44                         ADD             R2, PC        ; "%s(): hifi_gain change: (%d >> %d)"
.text:00004BFA 7B 44                         ADD             R3, PC        ; "adev_set_parameters"
.text:00004BFC 03 20                         MOVS            R0, #3
.text:00004BFE FE F7 EC E9                   BLX             __android_log_print
.text:00004BFE
.text:00004C02 C5 F8 24 61                   STR.W           R6, [R5,#0x124]
.text:00004C06 95 F8 21 01                   LDRB.W          R0, [R5,#0x121]
.text:00004C0A 28 B1                         CBZ             R0, loc_4C18
.text:00004C0A
.text:00004C0C 28 46                         MOV             R0, R5
.text:00004C0E 01 F0 67 FB                   BL              sub_62E0
.text:00004C0E
.text:00004C12 28 46                         MOV             R0, R5
.text:00004C14 FF F7 32 FB                   BL              sub_427C
.text:00004C14
.text:00004C18
.text:00004C18                               loc_4C18                      ; CODE XREF: sub_4B48+92↑j
.text:00004C18                                                             ; sub_4B48+A2↑j
.text:00004C18                                                             ; sub_4B48+C2↑j
.text:00004C18 83 49                         LDR             R1, =(aDirac - 0x4C24) ; "dirac"
.text:00004C1A 02 AA                         ADD             R2, SP, #0x48+s1
.text:00004C1C 20 46                         MOV             R0, R4
.text:00004C1E 20 23                         MOVS            R3, #0x20 ; ' '
.text:00004C20 79 44                         ADD             R1, PC        ; "dirac"
.text:00004C22 FE F7 EE EA                   BLX             str_parms_get_str
.text:00004C22
.text:00004C26 00 28                         CMP             R0, #0
.text:00004C28 25 DB                         BLT             loc_4C76
.text:00004C28
.text:00004C2A 80 48                         LDR             R0, =(aClose_0 - 0x4C32) ; "close"
.text:00004C2C 02 A9                         ADD             R1, SP, #0x48+s1 ; s2
.text:00004C2E 78 44                         ADD             R0, PC        ; "close"
.text:00004C30 FE F7 B6 EA                   BLX             strcmp
.text:00004C30
.text:00004C34 48 B1                         CBZ             R0, loc_4C4A
.text:00004C34
.text:00004C36 7E 48                         LDR             R0, =(aDisable - 0x4C3E) ; "disable"
.text:00004C38 02 A9                         ADD             R1, SP, #0x48+s1 ; s2
.text:00004C3A 78 44                         ADD             R0, PC        ; "disable"
.text:00004C3C FE F7 B0 EA                   BLX             strcmp
.text:00004C3C
.text:00004C40 06 46                         MOV             R6, R0
.text:00004C42 00 2E                         CMP             R6, #0
.text:00004C44 18 BF                         IT NE
.text:00004C46 01 26                         MOVNE           R6, #1
.text:00004C48 00 E0                         B               loc_4C4C
.text:00004C48
.text:00004C4A                               ; ---------------------------------------------------------------------------
.text:00004C4A
.text:00004C4A                               loc_4C4A                      ; CODE XREF: sub_4B48+EC↑j
.text:00004C4A 00 26                         MOVS            R6, #0
.text:00004C4A
.text:00004C4C
.text:00004C4C                               loc_4C4C                      ; CODE XREF: sub_4B48+100↑j
.text:00004C4C 95 F8 22 01                   LDRB.W          R0, [R5,#0x122]
.text:00004C50 B0 42                         CMP             R0, R6
.text:00004C52 10 D0                         BEQ             loc_4C76
.text:00004C52
.text:00004C54 77 49                         LDR             R1, =(aAudioHwPrimary - 0x4C5E) ; "audio_hw_primary"
.text:00004C56 78 4A                         LDR             R2, =(aSDiracStateDD - 0x4C64) ; "%s(): dirac state (%d >> %d)"
.text:00004C58 78 4B                         LDR             R3, =(aAdevSetParamet - 0x4C66) ; "adev_set_parameters"
.text:00004C5A 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00004C5C CD E9 00 06                   STRD.W          R0, R6, [SP,#0x48+var_48]
.text:00004C60 7A 44                         ADD             R2, PC        ; "%s(): dirac state (%d >> %d)"
.text:00004C62 7B 44                         ADD             R3, PC        ; "adev_set_parameters"
.text:00004C64 03 20                         MOVS            R0, #3
.text:00004C66 FE F7 B8 E9                   BLX             __android_log_print
.text:00004C66
.text:00004C6A 85 F8 22 61                   STRB.W          R6, [R5,#0x122]
.text:00004C6E 16 B1                         CBZ             R6, loc_4C76
.text:00004C6E
.text:00004C70 28 46                         MOV             R0, R5
.text:00004C72 FF F7 03 FB                   BL              sub_427C
.text:00004C72
.text:00004C76
.text:00004C76                               loc_4C76                      ; CODE XREF: sub_4B48+E0↑j
.text:00004C76                                                             ; sub_4B48+10A↑j
.text:00004C76                                                             ; sub_4B48+126↑j
.text:00004C76 72 49                         LDR             R1, =(aAssistantReady - 0x4C84) ; "assistant_ready"
.text:00004C78 02 AA                         ADD             R2, SP, #0x48+s1
.text:00004C7A D5 E9 3F 96                   LDRD.W          R9, R6, [R5,#0xFC]
.text:00004C7E 20 46                         MOV             R0, R4
.text:00004C80 79 44                         ADD             R1, PC        ; "assistant_ready"
.text:00004C82 20 23                         MOVS            R3, #0x20 ; ' '
.text:00004C84 FE F7 BC EA                   BLX             str_parms_get_str
.text:00004C84
.text:00004C88 00 28                         CMP             R0, #0
.text:00004C8A 3A DB                         BLT             loc_4D02
.text:00004C8A
.text:00004C8C 02 A8                         ADD             R0, SP, #0x48+s1 ; nptr
.text:00004C8E FE F7 74 E9                   BLX             atoi
.text:00004C8E
.text:00004C92 07 46                         MOV             R7, R0
.text:00004C94 95 F8 39 01                   LDRB.W          R0, [R5,#0x139]
.text:00004C98 B8 42                         CMP             R0, R7
.text:00004C9A 32 D0                         BEQ             loc_4D02
.text:00004C9A
.text:00004C9C 69 49                         LDR             R1, =(aAudioHwPrimary - 0x4CA6) ; "audio_hw_primary"
.text:00004C9E 6A 4A                         LDR             R2, =(aSXunfeiAssista - 0x4CAC) ; "%s(): xunfei assistant asr_ready change"...
.text:00004CA0 6A 4B                         LDR             R3, =(aAdevSetParamet - 0x4CAE) ; "adev_set_parameters"
.text:00004CA2 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00004CA4 CD E9 00 07                   STRD.W          R0, R7, [SP,#0x48+var_48]
.text:00004CA8 7A 44                         ADD             R2, PC        ; "%s(): xunfei assistant asr_ready change"...
.text:00004CAA 7B 44                         ADD             R3, PC        ; "adev_set_parameters"
.text:00004CAC 03 20                         MOVS            R0, #3
.text:00004CAE FE F7 94 E9                   BLX             __android_log_print
.text:00004CAE
.text:00004CB2 00 2F                         CMP             R7, #0
.text:00004CB4 18 BF                         IT NE
.text:00004CB6 01 27                         MOVNE           R7, #1
.text:00004CB8 85 F8 39 71                   STRB.W          R7, [R5,#0x139]
.text:00004CBC 21 D1                         BNE             loc_4D02
.text:00004CBC
.text:00004CBE D5 F8 A8 00                   LDR.W           R0, [R5,#0xA8]
.text:00004CC2 02 28                         CMP             R0, #2
.text:00004CC4 1D D0                         BEQ             loc_4D02
.text:00004CC4
.text:00004CC6 16 B1                         CBZ             R6, loc_4CCE
.text:00004CC6
.text:00004CC8 30 46                         MOV             R0, R6
.text:00004CCA 01 F0 BB FC                   BL              sub_6644
.text:00004CCA
.text:00004CCE
.text:00004CCE                               loc_4CCE                      ; CODE XREF: sub_4B48+17E↑j
.text:00004CCE B9 F1 00 0F                   CMP.W           R9, #0
.text:00004CD2 03 D0                         BEQ             loc_4CDC
.text:00004CD2
.text:00004CD4 48 46                         MOV             R0, R9
.text:00004CD6 01 F0 CE FC                   BL              sub_6676
.text:00004CD6
.text:00004CDA 12 E0                         B               loc_4D02
.text:00004CDA
.text:00004CDC                               ; ---------------------------------------------------------------------------
.text:00004CDC
.text:00004CDC                               loc_4CDC                      ; CODE XREF: sub_4B48+18A↑j
.text:00004CDC 8E B9                         CBNZ            R6, loc_4D02
.text:00004CDC
.text:00004CDE 05 F1 A4 06                   ADD.W           R6, R5, #0xA4
.text:00004CE2 30 46                         MOV             R0, R6        ; mutex
.text:00004CE4 FE F7 9C E9                   BLX             pthread_mutex_lock
.text:00004CE4
.text:00004CE8 00 20                         MOVS            R0, #0
.text:00004CEA D5 F8 AC 70                   LDR.W           R7, [R5,#0xAC]
.text:00004CEE C5 F8 AC 00                   STR.W           R0, [R5,#0xAC]
.text:00004CF2 28 46                         MOV             R0, R5
.text:00004CF4 00 F0 1C FD                   BL              sub_5730
.text:00004CF4
.text:00004CF8 30 46                         MOV             R0, R6        ; mutex
.text:00004CFA C5 F8 AC 70                   STR.W           R7, [R5,#0xAC]
.text:00004CFE FE F7 A2 E9                   BLX             pthread_mutex_unlock
.text:00004CFE
.text:00004D02
.text:00004D02                               loc_4D02                      ; CODE XREF: sub_4B48+142↑j
.text:00004D02                                                             ; sub_4B48+152↑j
.text:00004D02                                                             ; sub_4B48+174↑j
.text:00004D02                                                             ; sub_4B48+17C↑j
.text:00004D02                                                             ; sub_4B48+192↑j
.text:00004D02                                                             ; sub_4B48:loc_4CDC↑j
.text:00004D02 53 49                         LDR             R1, =(aFactoryTest - 0x4D0E) ; "factory_test"
.text:00004D04 02 AA                         ADD             R2, SP, #0x48+s1
.text:00004D06 20 46                         MOV             R0, R4
.text:00004D08 20 23                         MOVS            R3, #0x20 ; ' '
.text:00004D0A 79 44                         ADD             R1, PC        ; "factory_test"
.text:00004D0C FE F7 78 EA                   BLX             str_parms_get_str
.text:00004D0C
.text:00004D10 00 28                         CMP             R0, #0
.text:00004D12 08 DB                         BLT             loc_4D26
.text:00004D12
.text:00004D14 28 46                         MOV             R0, R5
.text:00004D16 41 46                         MOV             R1, R8
.text:00004D18 01 F0 CA FC                   BL              sub_66B0
.text:00004D18
.text:00004D1C 05 46                         MOV             R5, R0
.text:00004D1E 20 46                         MOV             R0, R4
.text:00004D20 FE F7 74 EA                   BLX             str_parms_destroy
.text:00004D20
.text:00004D24 5B E0                         B               loc_4DDE
.text:00004D24
.text:00004D26                               ; ---------------------------------------------------------------------------
.text:00004D26
.text:00004D26                               loc_4D26                      ; CODE XREF: sub_4B48+1CA↑j
.text:00004D26 D5 F8 A8 00                   LDR.W           R0, [R5,#0xA8]
.text:00004D2A 02 28                         CMP             R0, #2
.text:00004D2C 18 D1                         BNE             loc_4D60
.text:00004D2C
.text:00004D2E 49 49                         LDR             R1, =(aRouting - 0x4D3A) ; "routing"
.text:00004D30 02 AA                         ADD             R2, SP, #0x48+s1
.text:00004D32 20 46                         MOV             R0, R4
.text:00004D34 20 23                         MOVS            R3, #0x20 ; ' '
.text:00004D36 79 44                         ADD             R1, PC        ; "routing"
.text:00004D38 FE F7 62 EA                   BLX             str_parms_get_str
.text:00004D38
.text:00004D3C 00 28                         CMP             R0, #0
.text:00004D3E 0F DB                         BLT             loc_4D60
.text:00004D3E
.text:00004D40 02 A8                         ADD             R0, SP, #0x48+s1 ; nptr
.text:00004D42 FE F7 1A E9                   BLX             atoi
.text:00004D42
.text:00004D46 01 28                         CMP             R0, #1
.text:00004D48 0A D1                         BNE             loc_4D60
.text:00004D48
.text:00004D4A 05 F1 A4 06                   ADD.W           R6, R5, #0xA4
.text:00004D4E 30 46                         MOV             R0, R6        ; mutex
.text:00004D50 FE F7 66 E9                   BLX             pthread_mutex_lock
.text:00004D50
.text:00004D54 28 46                         MOV             R0, R5
.text:00004D56 00 F0 EB FC                   BL              sub_5730
.text:00004D56
.text:00004D5A 30 46                         MOV             R0, R6        ; mutex
.text:00004D5C FE F7 72 E9                   BLX             pthread_mutex_unlock
.text:00004D5C
.text:00004D60
.text:00004D60                               loc_4D60                      ; CODE XREF: sub_4B48+1E4↑j
.text:00004D60                                                             ; sub_4B48+1F6↑j
.text:00004D60                                                             ; sub_4B48+200↑j
.text:00004D60 3D 49                         LDR             R1, =(aVoiceCallWb - 0x4D6C) ; "voice_call_wb"
.text:00004D62 02 AA                         ADD             R2, SP, #0x48+s1
.text:00004D64 20 46                         MOV             R0, R4
.text:00004D66 20 23                         MOVS            R3, #0x20 ; ' '
.text:00004D68 79 44                         ADD             R1, PC        ; "voice_call_wb"
.text:00004D6A FE F7 4A EA                   BLX             str_parms_get_str
.text:00004D6A
.text:00004D6E 00 28                         CMP             R0, #0
.text:00004D70 1D DB                         BLT             loc_4DAE
.text:00004D70
.text:00004D72 47 F2 30 50                   MOVW            R0, #0x7530   ; useconds
.text:00004D76 FE F7 4E E9                   BLX             usleep
.text:00004D76
.text:00004D7A 38 49                         LDR             R1, =(aOn - 0x4D82) ; "on"
.text:00004D7C 02 A8                         ADD             R0, SP, #0x48+s1 ; s1
.text:00004D7E 79 44                         ADD             R1, PC        ; "on"
.text:00004D80 FE F7 0E EA                   BLX             strcmp
.text:00004D80
.text:00004D84 00 21                         MOVS            R1, #0
.text:00004D86 00 28                         CMP             R0, #0
.text:00004D88 08 BF                         IT EQ
.text:00004D8A 01 21                         MOVEQ           R1, #1
.text:00004D8C 85 F8 B7 10                   STRB.W          R1, [R5,#0xB7]
.text:00004D90 D5 F8 A8 00                   LDR.W           R0, [R5,#0xA8]
.text:00004D94 02 28                         CMP             R0, #2
.text:00004D96 0A D1                         BNE             loc_4DAE
.text:00004D96
.text:00004D98 05 F1 A4 06                   ADD.W           R6, R5, #0xA4
.text:00004D9C 30 46                         MOV             R0, R6        ; mutex
.text:00004D9E FE F7 40 E9                   BLX             pthread_mutex_lock
.text:00004D9E
.text:00004DA2 28 46                         MOV             R0, R5
.text:00004DA4 00 F0 C4 FC                   BL              sub_5730
.text:00004DA4
.text:00004DA8 30 46                         MOV             R0, R6        ; mutex
.text:00004DAA FE F7 4C E9                   BLX             pthread_mutex_unlock
.text:00004DAA
.text:00004DAE
.text:00004DAE                               loc_4DAE                      ; CODE XREF: sub_4B48+228↑j
.text:00004DAE                                                             ; sub_4B48+24E↑j
.text:00004DAE 2C 49                         LDR             R1, =(aMicNrOff - 0x4DBA) ; "mic_nr_off"
.text:00004DB0 02 AA                         ADD             R2, SP, #0x48+s1
.text:00004DB2 20 46                         MOV             R0, R4
.text:00004DB4 20 23                         MOVS            R3, #0x20 ; ' '
.text:00004DB6 79 44                         ADD             R1, PC        ; "mic_nr_off"
.text:00004DB8 FE F7 22 EA                   BLX             str_parms_get_str
.text:00004DB8
.text:00004DBC 00 28                         CMP             R0, #0
.text:00004DBE 0A DB                         BLT             loc_4DD6
.text:00004DBE
.text:00004DC0 28 49                         LDR             R1, =(aOn - 0x4DC8) ; "on"
.text:00004DC2 02 A8                         ADD             R0, SP, #0x48+s1 ; s1
.text:00004DC4 79 44                         ADD             R1, PC        ; "on"
.text:00004DC6 FE F7 EC E9                   BLX             strcmp
.text:00004DC6
.text:00004DCA 00 28                         CMP             R0, #0
.text:00004DCC 14 BF                         ITE NE
.text:00004DCE 00 20                         MOVNE           R0, #0
.text:00004DD0 01 20                         MOVEQ           R0, #1
.text:00004DD2 85 F8 B8 00                   STRB.W          R0, [R5,#0xB8]
.text:00004DD2
.text:00004DD6
.text:00004DD6                               loc_4DD6                      ; CODE XREF: sub_4B48+276↑j
.text:00004DD6 20 46                         MOV             R0, R4
.text:00004DD8 FE F7 18 EA                   BLX             str_parms_destroy
.text:00004DD8
.text:00004DDC 00 25                         MOVS            R5, #0
.text:00004DDC
.text:00004DDE
.text:00004DDE                               loc_4DDE                      ; CODE XREF: sub_4B48+1DC↑j
.text:00004DDE 22 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x4DE6)
.text:00004DE0 0A 99                         LDR             R1, [SP,#0x48+var_20]
.text:00004DE2 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00004DE4 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00004DE6 00 68                         LDR             R0, [R0]
.text:00004DE8 40 1A                         SUBS            R0, R0, R1
.text:00004DEA 02 BF                         ITTT EQ
.text:00004DEC 28 46                         MOVEQ           R0, R5
.text:00004DEE 0B B0                         ADDEQ           SP, SP, #0x2C ; ','
.text:00004DF0 BD E8 F0 83                   POPEQ.W         {R4-R9,PC}
.text:00004DF0
.text:00004DF4 FE F7 F6 E8                   BLX             __stack_chk_fail
.text:00004DF4
.text:00004DF4                               ; End of function sub_4B48
.text:00004DF4
.text:00004DF4                               ; ---------------------------------------------------------------------------
.text:00004DF8 3C C2 00 00                   off_4DF8 DCD __stack_chk_guard_ptr - 0x4B58
.text:00004DF8                                                             ; DATA XREF: sub_4B48+8↑r
.text:00004DFC 2F 6F 00 00                   off_4DFC DCD aAudioHwPrimary - 0x4B70
.text:00004DFC                                                             ; DATA XREF: sub_4B48+1A↑r
.text:00004DFC                                                             ; "audio_hw_primary"
.text:00004E00 B5 82 00 00                   off_4E00 DCD aSKvpairsS - 0x4B72
.text:00004E00                                                             ; DATA XREF: sub_4B48+1E↑r
.text:00004E00                                                             ; "%s(): kvpairs = %s"
.text:00004E04 C2 82 00 00                   off_4E04 DCD aAdevSetParamet - 0x4B78
.text:00004E04                                                             ; DATA XREF: sub_4B48+22↑r
.text:00004E04                                                             ; "adev_set_parameters"
.text:00004E08 C8 82 00 00                   off_4E08 DCD aBtHeadsetNrec - 0x4B86
.text:00004E08                                                             ; DATA XREF: sub_4B48+32↑r
.text:00004E08                                                             ; "bt_headset_nrec"
.text:00004E0C CA 82 00 00                   off_4E0C DCD aOn - 0x4B94     ; DATA XREF: sub_4B48+44↑r
.text:00004E0C                                                             ; "on"
.text:00004E10 B3 82 00 00                   off_4E10 DCD aScreenState - 0x4BAE
.text:00004E10                                                             ; DATA XREF: sub_4B48:loc_4BA2↑r
.text:00004E10                                                             ; "screen_state"
.text:00004E14 A2 82 00 00                   off_4E14 DCD aOn - 0x4BBC     ; DATA XREF: sub_4B48+6C↑r
.text:00004E14                                                             ; "on"
.text:00004E18 98 82 00 00                   off_4E18 DCD aHifiGain - 0x4BD6
.text:00004E18                                                             ; DATA XREF: sub_4B48:loc_4BCA↑r
.text:00004E18                                                             ; "hifi_gain"
.text:00004E1C A9 6E 00 00                   off_4E1C DCD aAudioHwPrimary - 0x4BF6
.text:00004E1C                                                             ; DATA XREF: sub_4B48+A4↑r
.text:00004E1C                                                             ; "audio_hw_primary"
.text:00004E20 7C 82 00 00                   off_4E20 DCD aSHifiGainChang - 0x4BFC
.text:00004E20                                                             ; DATA XREF: sub_4B48+A6↑r
.text:00004E20                                                             ; "%s(): hifi_gain change: (%d >> %d)"
.text:00004E24 3C 82 00 00                   off_4E24 DCD aAdevSetParamet - 0x4BFE
.text:00004E24                                                             ; DATA XREF: sub_4B48+A8↑r
.text:00004E24                                                             ; "adev_set_parameters"
.text:00004E28 77 82 00 00                   off_4E28 DCD aDirac - 0x4C24  ; DATA XREF: sub_4B48:loc_4C18↑r
.text:00004E28                                                             ; "dirac"
.text:00004E2C 6F 82 00 00                   off_4E2C DCD aClose_0 - 0x4C32
.text:00004E2C                                                             ; DATA XREF: sub_4B48+E2↑r
.text:00004E2C                                                             ; "close"
.text:00004E30 69 82 00 00                   off_4E30 DCD aDisable - 0x4C3E
.text:00004E30                                                             ; DATA XREF: sub_4B48+EE↑r
.text:00004E30                                                             ; "disable"
.text:00004E34 41 6E 00 00                   off_4E34 DCD aAudioHwPrimary - 0x4C5E
.text:00004E34                                                             ; DATA XREF: sub_4B48+10C↑r
.text:00004E34                                                             ; "audio_hw_primary"
.text:00004E38 4B 82 00 00                   off_4E38 DCD aSDiracStateDD - 0x4C64
.text:00004E38                                                             ; DATA XREF: sub_4B48+10E↑r
.text:00004E38                                                             ; "%s(): dirac state (%d >> %d)"
.text:00004E3C D4 81 00 00                   off_4E3C DCD aAdevSetParamet - 0x4C66
.text:00004E3C                                                             ; DATA XREF: sub_4B48+110↑r
.text:00004E3C                                                             ; "adev_set_parameters"
.text:00004E40 48 82 00 00                   off_4E40 DCD aAssistantReady - 0x4C84
.text:00004E40                                                             ; DATA XREF: sub_4B48:loc_4C76↑r
.text:00004E40                                                             ; "assistant_ready"
.text:00004E44 F9 6D 00 00                   off_4E44 DCD aAudioHwPrimary - 0x4CA6
.text:00004E44                                                             ; DATA XREF: sub_4B48+154↑r
.text:00004E44                                                             ; "audio_hw_primary"
.text:00004E48 30 82 00 00                   off_4E48 DCD aSXunfeiAssista - 0x4CAC
.text:00004E48                                                             ; DATA XREF: sub_4B48+156↑r
.text:00004E48                                                             ; "%s(): xunfei assistant asr_ready change"...
.text:00004E4C 8C 81 00 00                   off_4E4C DCD aAdevSetParamet - 0x4CAE
.text:00004E4C                                                             ; DATA XREF: sub_4B48+158↑r
.text:00004E4C                                                             ; "adev_set_parameters"
.text:00004E50 02 82 00 00                   off_4E50 DCD aFactoryTest - 0x4D0E
.text:00004E50                                                             ; DATA XREF: sub_4B48:loc_4D02↑r
.text:00004E50                                                             ; "factory_test"
.text:00004E54 E3 81 00 00                   off_4E54 DCD aRouting - 0x4D3A
.text:00004E54                                                             ; DATA XREF: sub_4B48+1E6↑r
.text:00004E54                                                             ; "routing"
.text:00004E58 B9 81 00 00                   off_4E58 DCD aVoiceCallWb - 0x4D6C
.text:00004E58                                                             ; DATA XREF: sub_4B48:loc_4D60↑r
.text:00004E58                                                             ; "voice_call_wb"
.text:00004E5C DC 80 00 00                   off_4E5C DCD aOn - 0x4D82     ; DATA XREF: sub_4B48+232↑r
.text:00004E5C                                                             ; "on"
.text:00004E60 79 81 00 00                   off_4E60 DCD aMicNrOff - 0x4DBA
.text:00004E60                                                             ; DATA XREF: sub_4B48:loc_4DAE↑r
.text:00004E60                                                             ; "mic_nr_off"
.text:00004E64 96 80 00 00                   off_4E64 DCD aOn - 0x4DC8     ; DATA XREF: sub_4B48+278↑r
.text:00004E64                                                             ; "on"
.text:00004E68 AE BF 00 00                   off_4E68 DCD __stack_chk_guard_ptr - 0x4DE6
.text:00004E68                                                             ; DATA XREF: sub_4B48:loc_4DDE↑r
.text:00004E68                               ; } // starts at 4B48
.text:00004E6C
.text:00004E6C                               ; =============== S U B R O U T I N E =======================================
.text:00004E6C
.text:00004E6C
.text:00004E6C                               ; char *__fastcall sub_4E6C(int, const char *)
.text:00004E6C                               sub_4E6C                      ; DATA XREF: sub_4424+80↑o
.text:00004E6C                                                             ; sub_4424+82↑o
.text:00004E6C                                                             ; .text:off_4668↑o
.text:00004E6C
.text:00004E6C                               var_40= -0x40
.text:00004E6C                               s1= -0x38
.text:00004E6C                               anonymous_0= -0x30
.text:00004E6C                               anonymous_1= -0x28
.text:00004E6C                               anonymous_2= -0x20
.text:00004E6C                               var_14= -0x14
.text:00004E6C
.text:00004E6C                               ; __unwind {
.text:00004E6C 70 B5                         PUSH            {R4-R6,LR}
.text:00004E6E 8C B0                         SUB             SP, SP, #0x30
.text:00004E70 04 46                         MOV             R4, R0
.text:00004E72 46 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x4E7A)
.text:00004E74 0E 46                         MOV             R6, R1
.text:00004E76 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00004E78 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00004E7A 00 68                         LDR             R0, [R0]
.text:00004E7C 0B 90                         STR             R0, [SP,#0x40+var_14]
.text:00004E7E 30 46                         MOV             R0, R6
.text:00004E80 FE F7 B8 E9                   BLX             str_parms_create_str
.text:00004E80
.text:00004E84 42 49                         LDR             R1, =(aAudioHwPrimary - 0x4E92) ; "audio_hw_primary"
.text:00004E86 05 46                         MOV             R5, R0
.text:00004E88 42 4A                         LDR             R2, =(aSKvpairsS - 0x4E94) ; "%s(): kvpairs = %s"
.text:00004E8A 03 20                         MOVS            R0, #3
.text:00004E8C 42 4B                         LDR             R3, =(aAdevGetParamet - 0x4E98) ; "adev_get_parameters"
.text:00004E8E 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00004E90 7A 44                         ADD             R2, PC        ; "%s(): kvpairs = %s"
.text:00004E92 00 96                         STR             R6, [SP,#0x40+var_40]
.text:00004E94 7B 44                         ADD             R3, PC        ; "adev_get_parameters"
.text:00004E96 FE F7 A0 E8                   BLX             __android_log_print
.text:00004E96
.text:00004E9A 40 49                         LDR             R1, =(aEcSupported - 0x4EA6) ; "ec_supported"
.text:00004E9C 02 AA                         ADD             R2, SP, #0x40+s1
.text:00004E9E 28 46                         MOV             R0, R5
.text:00004EA0 20 23                         MOVS            R3, #0x20 ; ' '
.text:00004EA2 79 44                         ADD             R1, PC        ; "ec_supported"
.text:00004EA4 FE F7 AC E9                   BLX             str_parms_get_str
.text:00004EA4
.text:00004EA8 00 28                         CMP             R0, #0
.text:00004EAA 0E DB                         BLT             loc_4ECA
.text:00004EAA
.text:00004EAC 28 46                         MOV             R0, R5
.text:00004EAE FE F7 AE E9                   BLX             str_parms_destroy
.text:00004EAE
.text:00004EB2 45 48                         LDR             R0, =(aEcSupportedYes - 0x4EB8) ; "ec_supported=yes"
.text:00004EB4 78 44                         ADD             R0, PC        ; "ec_supported=yes"
.text:00004EB6 FE F7 9E E9                   BLX             str_parms_create_str
.text:00004EB6
.text:00004EBA 04 46                         MOV             R4, R0
.text:00004EBC FE F7 AC E9                   BLX             str_parms_to_str
.text:00004EBC
.text:00004EC0 05 46                         MOV             R5, R0
.text:00004EC2 20 46                         MOV             R0, R4
.text:00004EC4 FE F7 A2 E9                   BLX             str_parms_destroy
.text:00004EC4
.text:00004EC8 54 E0                         B               loc_4F74
.text:00004EC8
.text:00004ECA                               ; ---------------------------------------------------------------------------
.text:00004ECA
.text:00004ECA                               loc_4ECA                      ; CODE XREF: sub_4E6C+3E↑j
.text:00004ECA 35 49                         LDR             R1, =(aFactoryTest - 0x4ED6) ; "factory_test"
.text:00004ECC 02 AA                         ADD             R2, SP, #0x40+s1
.text:00004ECE 28 46                         MOV             R0, R5
.text:00004ED0 20 23                         MOVS            R3, #0x20 ; ' '
.text:00004ED2 79 44                         ADD             R1, PC        ; "factory_test"
.text:00004ED4 FE F7 94 E9                   BLX             str_parms_get_str
.text:00004ED4
.text:00004ED8 06 46                         MOV             R6, R0
.text:00004EDA 28 46                         MOV             R0, R5
.text:00004EDC FE F7 96 E9                   BLX             str_parms_destroy
.text:00004EDC
.text:00004EE0 00 2E                         CMP             R6, #0
.text:00004EE2 09 DB                         BLT             loc_4EF8
.text:00004EE2
.text:00004EE4 30 49                         LDR             R1, =(aPaCalibration - 0x4EEE) ; "pa_calibration"
.text:00004EE6 02 AD                         ADD             R5, SP, #0x40+s1
.text:00004EE8 28 46                         MOV             R0, R5        ; s1
.text:00004EEA 79 44                         ADD             R1, PC        ; "pa_calibration"
.text:00004EEC FE F7 58 E9                   BLX             strcmp
.text:00004EEC
.text:00004EF0 40 B1                         CBZ             R0, loc_4F04
.text:00004EF0
.text:00004EF2 2E 48                         LDR             R0, =(unk_D192 - 0x4EF8)
.text:00004EF4 78 44                         ADD             R0, PC        ; unk_D192
.text:00004EF6 01 E0                         B               loc_4EFC
.text:00004EF6
.text:00004EF8                               ; ---------------------------------------------------------------------------
.text:00004EF8
.text:00004EF8                               loc_4EF8                      ; CODE XREF: sub_4E6C+76↑j
.text:00004EF8 2A 48                         LDR             R0, =(unk_D192 - 0x4EFE)
.text:00004EFA 78 44                         ADD             R0, PC        ; unk_D192 ; s
.text:00004EFA
.text:00004EFC
.text:00004EFC                               loc_4EFC                      ; CODE XREF: sub_4E6C+8A↑j
.text:00004EFC FE F7 92 E9                   BLX             strdup
.text:00004EFC
.text:00004F00 05 46                         MOV             R5, R0
.text:00004F02 37 E0                         B               loc_4F74
.text:00004F02
.text:00004F04                               ; ---------------------------------------------------------------------------
.text:00004F04
.text:00004F04                               loc_4F04                      ; CODE XREF: sub_4E6C+84↑j
.text:00004F04 2A 49                         LDR             R1, =(aFactoryTestPaC - 0x4F0C) ; "factory_test=pa_calibration"
.text:00004F06 20 46                         MOV             R0, R4
.text:00004F08 79 44                         ADD             R1, PC        ; "factory_test=pa_calibration"
.text:00004F0A 01 F0 D1 FB                   BL              sub_66B0
.text:00004F0A
.text:00004F0E 10 B1                         CBZ             R0, loc_4F16
.text:00004F0E
.text:00004F10 C0 EF 10 00                   VMOV.I32        D16, #0
.text:00004F14 05 E0                         B               loc_4F22
.text:00004F14
.text:00004F16                               ; ---------------------------------------------------------------------------
.text:00004F16
.text:00004F16                               loc_4F16                      ; CODE XREF: sub_4E6C+A2↑j
.text:00004F16 FE F7 8C E9                   BLX             NxpTfa98xx_GetSpeakerImpedance
.text:00004F16
.text:00004F1A 00 EE 10 0A                   VMOV            S0, R0
.text:00004F1E F7 EE C0 0A                   VCVT.F64.F32    D16, S0
.text:00004F1E
.text:00004F22
.text:00004F22                               loc_4F22                      ; CODE XREF: sub_4E6C+A8↑j
.text:00004F22 C0 EF 50 20                   VMOV.I32        Q9, #0
.text:00004F26 28 46                         MOV             R0, R5
.text:00004F28 22 4B                         LDR             R3, =(aSpeakerImpedan - 0x4F36) ; "speaker_impedance=%f"
.text:00004F2A 00 21                         MOVS            R1, #0
.text:00004F2C 20 22                         MOVS            R2, #0x20 ; ' '
.text:00004F2E 40 F9 CD 2A                   VST1.64         {D18-D19}, [R0]!
.text:00004F32 7B 44                         ADD             R3, PC        ; "speaker_impedance=%f"
.text:00004F34 40 F9 CF 2A                   VST1.64         {D18-D19}, [R0]
.text:00004F38 28 46                         MOV             R0, R5
.text:00004F3A CD ED 00 0B                   VSTR            D16, [SP,#0x40+var_40]
.text:00004F3E FE F7 7E E9                   BLX             __sprintf_chk
.text:00004F3E
.text:00004F42 28 46                         MOV             R0, R5
.text:00004F44 FE F7 56 E9                   BLX             str_parms_create_str
.text:00004F44
.text:00004F48 06 46                         MOV             R6, R0
.text:00004F4A FE F7 66 E9                   BLX             str_parms_to_str
.text:00004F4A
.text:00004F4E 05 46                         MOV             R5, R0
.text:00004F50 30 46                         MOV             R0, R6
.text:00004F52 FE F7 5C E9                   BLX             str_parms_destroy
.text:00004F52
.text:00004F56 18 49                         LDR             R1, =(aFactoryTestOff - 0x4F5E) ; "factory_test=off"
.text:00004F58 20 46                         MOV             R0, R4
.text:00004F5A 79 44                         ADD             R1, PC        ; "factory_test=off"
.text:00004F5C 01 F0 A8 FB                   BL              sub_66B0
.text:00004F5C
.text:00004F60 16 49                         LDR             R1, =(aAudioHwPrimary - 0x4F6C) ; "audio_hw_primary"
.text:00004F62 03 20                         MOVS            R0, #3
.text:00004F64 16 4A                         LDR             R2, =(aSS - 0x4F6E) ; "%s(): %s"
.text:00004F66 17 4B                         LDR             R3, =(aAdevGetParamet - 0x4F72) ; "adev_get_parameters"
.text:00004F68 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00004F6A 7A 44                         ADD             R2, PC        ; "%s(): %s"
.text:00004F6C 00 95                         STR             R5, [SP,#0x40+var_40]
.text:00004F6E 7B 44                         ADD             R3, PC        ; "adev_get_parameters"
.text:00004F70 FE F7 32 E8                   BLX             __android_log_print
.text:00004F70
.text:00004F74
.text:00004F74                               loc_4F74                      ; CODE XREF: sub_4E6C+5C↑j
.text:00004F74                                                             ; sub_4E6C+96↑j
.text:00004F74 15 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x4F7C)
.text:00004F76 0B 99                         LDR             R1, [SP,#0x40+var_14]
.text:00004F78 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00004F7A 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00004F7C 00 68                         LDR             R0, [R0]
.text:00004F7E 40 1A                         SUBS            R0, R0, R1
.text:00004F80 02 BF                         ITTT EQ
.text:00004F82 28 46                         MOVEQ           R0, R5
.text:00004F84 0C B0                         ADDEQ           SP, SP, #0x30 ; '0'
.text:00004F86 70 BD                         POPEQ           {R4-R6,PC}
.text:00004F86
.text:00004F88 FE F7 2C E8                   BLX             __stack_chk_fail
.text:00004F88
.text:00004F88                               ; End of function sub_4E6C
.text:00004F88
.text:00004F88                               ; ---------------------------------------------------------------------------
.text:00004F8C 1A BF 00 00                   off_4F8C DCD __stack_chk_guard_ptr - 0x4E7A
.text:00004F8C                                                             ; DATA XREF: sub_4E6C+6↑r
.text:00004F90 0D 6C 00 00                   off_4F90 DCD aAudioHwPrimary - 0x4E92
.text:00004F90                                                             ; DATA XREF: sub_4E6C+18↑r
.text:00004F90                                                             ; "audio_hw_primary"
.text:00004F94 93 7F 00 00                   off_4F94 DCD aSKvpairsS - 0x4E94
.text:00004F94                                                             ; DATA XREF: sub_4E6C+1C↑r
.text:00004F94                                                             ; "%s(): kvpairs = %s"
.text:00004F98 C8 82 00 00                   off_4F98 DCD aAdevGetParamet - 0x4E98
.text:00004F98                                                             ; DATA XREF: sub_4E6C+20↑r
.text:00004F98                                                             ; "adev_get_parameters"
.text:00004F9C CE 82 00 00                   off_4F9C DCD aEcSupported - 0x4EA6
.text:00004F9C                                                             ; DATA XREF: sub_4E6C+2E↑r
.text:00004F9C                                                             ; "ec_supported"
.text:00004FA0 3A 80 00 00                   off_4FA0 DCD aFactoryTest - 0x4ED6
.text:00004FA0                                                             ; DATA XREF: sub_4E6C:loc_4ECA↑r
.text:00004FA0                                                             ; "factory_test"
.text:00004FA4 94 82 00 00                   off_4FA4 DCD unk_D192 - 0x4EFE
.text:00004FA4                                                             ; DATA XREF: sub_4E6C:loc_4EF8↑r
.text:00004FA8 98 80 00 00                   off_4FA8 DCD aPaCalibration - 0x4EEE
.text:00004FA8                                                             ; DATA XREF: sub_4E6C+78↑r
.text:00004FA8                                                             ; "pa_calibration"
.text:00004FAC 9A 82 00 00                   off_4FAC DCD unk_D192 - 0x4EF8
.text:00004FAC                                                             ; DATA XREF: sub_4E6C+86↑r
.text:00004FB0 87 82 00 00                   off_4FB0 DCD aFactoryTestPaC - 0x4F0C
.text:00004FB0                                                             ; DATA XREF: sub_4E6C:loc_4F04↑r
.text:00004FB0                                                             ; "factory_test=pa_calibration"
.text:00004FB4 79 82 00 00                   off_4FB4 DCD aSpeakerImpedan - 0x4F36
.text:00004FB4                                                             ; DATA XREF: sub_4E6C+BC↑r
.text:00004FB4                                                             ; "speaker_impedance=%f"
.text:00004FB8 66 82 00 00                   off_4FB8 DCD aFactoryTestOff - 0x4F5E
.text:00004FB8                                                             ; DATA XREF: sub_4E6C+EA↑r
.text:00004FB8                                                             ; "factory_test=off"
.text:00004FBC 33 6B 00 00                   off_4FBC DCD aAudioHwPrimary - 0x4F6C
.text:00004FBC                                                             ; DATA XREF: sub_4E6C+F4↑r
.text:00004FBC                                                             ; "audio_hw_primary"
.text:00004FC0 67 82 00 00                   off_4FC0 DCD aSS - 0x4F6E     ; DATA XREF: sub_4E6C+F8↑r
.text:00004FC0                                                             ; "%s(): %s"
.text:00004FC4 EE 81 00 00                   off_4FC4 DCD aAdevGetParamet - 0x4F72
.text:00004FC4                                                             ; DATA XREF: sub_4E6C+FA↑r
.text:00004FC4                                                             ; "adev_get_parameters"
.text:00004FC8 C9 82 00 00                   off_4FC8 DCD aEcSupportedYes - 0x4EB8
.text:00004FC8                                                             ; DATA XREF: sub_4E6C+46↑r
.text:00004FC8                                                             ; "ec_supported=yes"
.text:00004FCC 18 BE 00 00                   off_4FCC DCD __stack_chk_guard_ptr - 0x4F7C
.text:00004FCC                                                             ; DATA XREF: sub_4E6C:loc_4F74↑r
.text:00004FCC                               ; } // starts at 4E6C
.text:00004FD0
.text:00004FD0                               ; =============== S U B R O U T I N E =======================================
.text:00004FD0
.text:00004FD0
.text:00004FD0                               ; int __fastcall sub_4FD0(int, int *)
.text:00004FD0                               sub_4FD0                      ; DATA XREF: sub_4424+86↑o
.text:00004FD0                                                             ; sub_4424+88↑o
.text:00004FD0                                                             ; .text:off_466C↑o
.text:00004FD0                               ; __unwind {
.text:00004FD0 10 B5                         PUSH            {R4,LR}
.text:00004FD2 91 E8 05 10                   LDM.W           R1, {R0,R2,R12}
.text:00004FD6 4F F0 55 31                   MOV.W           R1, #0x55555555
.text:00004FDA 4F F0 33 3E                   MOV.W           LR, #0x33333333
.text:00004FDE 21 4B                         LDR             R3, =(pcm_config_in_ptr - 0x4FE8)
.text:00004FE0 01 EA 52 01                   AND.W           R1, R1, R2,LSR#1
.text:00004FE4 7B 44                         ADD             R3, PC        ; pcm_config_in_ptr
.text:00004FE6 51 1A                         SUBS            R1, R2, R1
.text:00004FE8 1B 68                         LDR             R3, [R3]      ; pcm_config_in
.text:00004FEA 0E EA 91 02                   AND.W           R2, LR, R1,LSR#2
.text:00004FEE 21 F0 CC 31                   BIC.W           R1, R1, #0xCCCCCCCC
.text:00004FF2 11 44                         ADD             R1, R2
.text:00004FF4 D3 E9 01 43                   LDRD.W          R4, R3, [R3,#4]
.text:00004FF8 01 EB 11 11                   ADD.W           R1, R1, R1,LSR#4
.text:00004FFC 4F F0 01 32                   MOV.W           R2, #0x1010101
.text:00005000 21 F0 F0 31                   BIC.W           R1, R1, #0xF0F0F0F0
.text:00005004 03 FB 00 F0                   MUL.W           R0, R3, R0
.text:00005008 51 43                         MULS            R1, R2
.text:0000500A B0 FB F4 F0                   UDIV.W          R0, R0, R4
.text:0000500E 0F 30                         ADDS            R0, #0xF
.text:00005010 20 F0 0F 00                   BIC.W           R0, R0, #0xF
.text:00005014 AC F1 01 02                   SUB.W           R2, R12, #1   ; switch 6 cases
.text:00005018 05 2A                         CMP             R2, #5
.text:0000501A 4F EA 11 61                   MOV.W           R1, R1,LSR#24
.text:0000501E 01 FB 00 F0                   MUL.W           R0, R1, R0
.text:00005022 12 D8                         BHI             def_502C      ; jumptable 0000502C default case
.text:00005022
.text:00005024 0F F2 06 01                   ADR.W           R1, loc_502E
.text:00005028 01 EB 82 01                   ADD.W           R1, R1, R2,LSL#2
.text:0000502C 8F 46                         MOV             PC, R1        ; switch jump
.text:0000502C
.text:0000502E                               ; ---------------------------------------------------------------------------
.text:0000502E
.text:0000502E                               loc_502E                      ; CODE XREF: sub_4FD0+5C↑j
.text:0000502E                                                             ; DATA XREF: sub_4FD0+54↑o
.text:0000502E 00 F0 0F B8                   B.W             loc_5050      ; jumptable 0000502C case 1
.text:0000502E
.text:00005032                               ; ---------------------------------------------------------------------------
.text:00005032
.text:00005032                               loc_5032                      ; CODE XREF: sub_4FD0+5C↑j
.text:00005032 00 F0 0F B8                   B.W             loc_5054      ; jumptable 0000502C case 2
.text:00005032
.text:00005036                               ; ---------------------------------------------------------------------------
.text:00005036
.text:00005036                               loc_5036                      ; CODE XREF: sub_4FD0+5C↑j
.text:00005036 00 F0 06 B8                   B.W             loc_5046      ; jumptable 0000502C cases 3-5
.text:00005036
.text:0000503A                               ; ---------------------------------------------------------------------------
.text:0000503A
.text:0000503A                               loc_503A                      ; CODE XREF: sub_4FD0+5C↑j
.text:0000503A 00 F0 04 B8                   B.W             loc_5046      ; jumptable 0000502C cases 3-5
.text:0000503A
.text:0000503E                               ; ---------------------------------------------------------------------------
.text:0000503E
.text:0000503E                               loc_503E                      ; CODE XREF: sub_4FD0+5C↑j
.text:0000503E 00 F0 02 B8                   B.W             loc_5046      ; jumptable 0000502C cases 3-5
.text:0000503E
.text:00005042                               ; ---------------------------------------------------------------------------
.text:00005042
.text:00005042                               loc_5042                      ; CODE XREF: sub_4FD0+5C↑j
.text:00005042 00 F0 09 B8                   B.W             loc_5058      ; jumptable 0000502C case 6
.text:00005042
.text:00005046                               ; ---------------------------------------------------------------------------
.text:00005046
.text:00005046                               loc_5046                      ; CODE XREF: sub_4FD0+5C↑j
.text:00005046                                                             ; sub_4FD0:loc_5036↑j
.text:00005046                                                             ; sub_4FD0:loc_503A↑j
.text:00005046                                                             ; sub_4FD0:loc_503E↑j
.text:00005046 04 21                         MOVS            R1, #4        ; jumptable 0000502C cases 3-5
.text:00005048 09 E0                         B               loc_505E
.text:00005048
.text:0000504A                               ; ---------------------------------------------------------------------------
.text:0000504A
.text:0000504A                               def_502C                      ; CODE XREF: sub_4FD0+52↑j
.text:0000504A BC F1 50 6F                   CMP.W           R12, #0xD000000 ; jumptable 0000502C default case
.text:0000504E 05 D1                         BNE             loc_505C
.text:0000504E
.text:00005050
.text:00005050                               loc_5050                      ; CODE XREF: sub_4FD0+5C↑j
.text:00005050                                                             ; sub_4FD0:loc_502E↑j
.text:00005050 02 21                         MOVS            R1, #2        ; jumptable 0000502C case 1
.text:00005052 04 E0                         B               loc_505E
.text:00005052
.text:00005054                               ; ---------------------------------------------------------------------------
.text:00005054
.text:00005054                               loc_5054                      ; CODE XREF: sub_4FD0+5C↑j
.text:00005054                                                             ; sub_4FD0:loc_5032↑j
.text:00005054 01 21                         MOVS            R1, #1        ; jumptable 0000502C case 2
.text:00005056 02 E0                         B               loc_505E
.text:00005056
.text:00005058                               ; ---------------------------------------------------------------------------
.text:00005058
.text:00005058                               loc_5058                      ; CODE XREF: sub_4FD0+5C↑j
.text:00005058                                                             ; sub_4FD0:loc_5042↑j
.text:00005058 03 21                         MOVS            R1, #3        ; jumptable 0000502C case 6
.text:0000505A 00 E0                         B               loc_505E
.text:0000505A
.text:0000505C                               ; ---------------------------------------------------------------------------
.text:0000505C
.text:0000505C                               loc_505C                      ; CODE XREF: sub_4FD0+7E↑j
.text:0000505C 00 21                         MOVS            R1, #0
.text:0000505C
.text:0000505E
.text:0000505E                               loc_505E                      ; CODE XREF: sub_4FD0+78↑j
.text:0000505E                                                             ; sub_4FD0+82↑j
.text:0000505E                                                             ; sub_4FD0+86↑j
.text:0000505E                                                             ; sub_4FD0+8A↑j
.text:0000505E 48 43                         MULS            R0, R1
.text:00005060 10 BD                         POP             {R4,PC}
.text:00005060
.text:00005060                               ; End of function sub_4FD0
.text:00005060
.text:00005060                               ; ---------------------------------------------------------------------------
.text:00005062 00 BF                         ALIGN 4
.text:00005064 B0 BD 00 00                   off_5064 DCD pcm_config_in_ptr - 0x4FE8
.text:00005064                                                             ; DATA XREF: sub_4FD0+E↑r
.text:00005064                               ; } // starts at 4FD0
.text:00005068
.text:00005068                               ; =============== S U B R O U T I N E =======================================
.text:00005068
.text:00005068
.text:00005068                               ; int __fastcall sub_5068(int, int, int, int, _DWORD *, _DWORD *)
.text:00005068                               sub_5068                      ; DATA XREF: sub_4424+8C↑o
.text:00005068                                                             ; sub_4424+8E↑o
.text:00005068                                                             ; .text:off_4670↑o
.text:00005068
.text:00005068                               arg_0=  0
.text:00005068                               arg_4=  4
.text:00005068
.text:00005068                               ; __unwind {
.text:00005068 2D E9 F0 4F                   PUSH.W          {R4-R11,LR}
.text:0000506C 81 B0                         SUB             SP, SP, #4
.text:0000506E 83 46                         MOV             R11, R0
.text:00005070 DD F8 2C 90                   LDR.W           R9, [SP,#0x28+arg_4]
.text:00005074 9B F8 0D 01                   LDRB.W          R0, [R11,#0x10D]
.text:00005078 70 B1                         CBZ             R0, loc_5098
.text:00005078
.text:0000507A 76 49                         LDR             R1, =(aAudioHwPrimary - 0x5086) ; "audio_hw_primary"
.text:0000507C 06 20                         MOVS            R0, #6
.text:0000507E 76 4A                         LDR             R2, =(aSOutputStreamH - 0x5088) ; "%s(): output stream has been opened, ab"...
.text:00005080 76 4B                         LDR             R3, =(aAdevOpenOutput - 0x508A) ; "adev_open_output_stream"
.text:00005082 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00005084 7A 44                         ADD             R2, PC        ; "%s(): output stream has been opened, ab"...
.text:00005086 7B 44                         ADD             R3, PC        ; "adev_open_output_stream"
.text:00005088 FD F7 A6 EF                   BLX             __android_log_print
.text:00005088
.text:0000508C 00 20                         MOVS            R0, #0
.text:0000508E C9 F8 00 00                   STR.W           R0, [R9]
.text:00005092 6F F0 15 00                   MOV             R0, #0xFFFFFFEA
.text:00005096 D9 E0                         B               loc_524C
.text:00005096
.text:00005098                               ; ---------------------------------------------------------------------------
.text:00005098
.text:00005098                               loc_5098                      ; CODE XREF: sub_5068+10↑j
.text:00005098 01 20                         MOVS            R0, #1        ; nmemb
.text:0000509A D8 21                         MOVS            R1, #0xD8     ; size
.text:0000509C 4F F0 01 0A                   MOV.W           R10, #1
.text:000050A0 FE F7 84 E8                   BLX             calloc
.text:000050A0
.text:000050A4 04 46                         MOV             R4, R0
.text:000050A6 00 2C                         CMP             R4, #0
.text:000050A8 64 D0                         BEQ             loc_5174
.text:000050A8
.text:000050AA 03 20                         MOVS            R0, #3
.text:000050AC 04 F1 74 01                   ADD.W           R1, R4, #0x74 ; 't'
.text:000050B0 C4 E9 2A 00                   STRD.W          R0, R0, [R4,#0xA8]
.text:000050B4 6A 48                         LDR             R0, =(pcm_config_ptr - 0x50BE)
.text:000050B6 DD F8 28 80                   LDR.W           R8, [SP,#0x28+arg_0]
.text:000050BA 78 44                         ADD             R0, PC        ; pcm_config_ptr
.text:000050BC 00 68                         LDR             R0, [R0]      ; pcm_config
.text:000050BE EC C8                         LDM             R0!, {R2,R3,R5-R7}
.text:000050C0 EC C1                         STM             R1!, {R2,R3,R5-R7}
.text:000050C2 90 E8 EC 00                   LDM.W           R0, {R2,R3,R5-R7}
.text:000050C6 67 48                         LDR             R0, =(sub_6E08+1 - 0x50CE)
.text:000050C8 EC C1                         STM             R1!, {R2,R3,R5-R7}
.text:000050CA 78 44                         ADD             R0, PC        ; sub_6E08
.text:000050CC 20 60                         STR             R0, [R4]
.text:000050CE 66 48                         LDR             R0, =(sub_6E0E+1 - 0x50D4)
.text:000050D0 78 44                         ADD             R0, PC        ; sub_6E0E
.text:000050D2 60 60                         STR             R0, [R4,#4]
.text:000050D4 65 48                         LDR             R0, =(sub_6E16+1 - 0x50DA)
.text:000050D6 78 44                         ADD             R0, PC        ; sub_6E16
.text:000050D8 A0 60                         STR             R0, [R4,#8]
.text:000050DA 65 48                         LDR             R0, =(sub_6E22+1 - 0x50E0)
.text:000050DC 78 44                         ADD             R0, PC        ; sub_6E22
.text:000050DE E0 60                         STR             R0, [R4,#0xC]
.text:000050E0 64 48                         LDR             R0, =(sub_6E28+1 - 0x50E6)
.text:000050E2 78 44                         ADD             R0, PC        ; sub_6E28
.text:000050E4 20 61                         STR             R0, [R4,#0x10]
.text:000050E6 64 48                         LDR             R0, =(sub_6E2E+1 - 0x50EC)
.text:000050E8 78 44                         ADD             R0, PC        ; sub_6E2E
.text:000050EA 60 61                         STR             R0, [R4,#0x14]
.text:000050EC 63 48                         LDR             R0, =(sub_6644+1 - 0x50F2)
.text:000050EE 78 44                         ADD             R0, PC        ; sub_6644
.text:000050F0 A0 61                         STR             R0, [R4,#0x18]
.text:000050F2 63 48                         LDR             R0, =(sub_6E34+1 - 0x50F8)
.text:000050F4 78 44                         ADD             R0, PC        ; sub_6E34
.text:000050F6 E0 61                         STR             R0, [R4,#0x1C]
.text:000050F8 62 48                         LDR             R0, =(sub_6E38+1 - 0x50FE)
.text:000050FA 78 44                         ADD             R0, PC        ; sub_6E38
.text:000050FC A0 62                         STR             R0, [R4,#0x28]
.text:000050FE 62 48                         LDR             R0, =(sub_723C+1 - 0x5104)
.text:00005100 78 44                         ADD             R0, PC        ; sub_723C
.text:00005102 E0 62                         STR             R0, [R4,#0x2C]
.text:00005104 61 48                         LDR             R0, =(sub_7320+1 - 0x510A)
.text:00005106 78 44                         ADD             R0, PC        ; sub_7320
.text:00005108 20 63                         STR             R0, [R4,#0x30]
.text:0000510A 61 48                         LDR             R0, =(sub_7324+1 - 0x5110)
.text:0000510C 78 44                         ADD             R0, PC        ; sub_7324
.text:0000510E 60 63                         STR             R0, [R4,#0x34]
.text:00005110 60 48                         LDR             R0, =(sub_7328+1 - 0x5116)
.text:00005112 78 44                         ADD             R0, PC        ; sub_7328
.text:00005114 A0 63                         STR             R0, [R4,#0x38]
.text:00005116 60 48                         LDR             R0, =(sub_733E+1 - 0x511C)
.text:00005118 78 44                         ADD             R0, PC        ; sub_733E
.text:0000511A E0 63                         STR             R0, [R4,#0x3C]
.text:0000511C 5F 48                         LDR             R0, =(sub_7344+1 - 0x5122)
.text:0000511E 78 44                         ADD             R0, PC        ; sub_7344
.text:00005120 20 64                         STR             R0, [R4,#0x40]
.text:00005122 5F 48                         LDR             R0, =(sub_7C90+1 - 0x5128)
.text:00005124 78 44                         ADD             R0, PC        ; sub_7C90
.text:00005126 60 64                         STR             R0, [R4,#0x44]
.text:00005128 5E 48                         LDR             R0, =(sub_7C96+1 - 0x512E)
.text:0000512A 78 44                         ADD             R0, PC        ; sub_7C96
.text:0000512C A0 64                         STR             R0, [R4,#0x48]
.text:0000512E 5E 48                         LDR             R0, =(sub_7C9C+1 - 0x5134)
.text:00005130 78 44                         ADD             R0, PC        ; sub_7C9C
.text:00005132 20 66                         STR             R0, [R4,#0x60]
.text:00005134 4B F6 80 30                   MOVW            R0, #0xBB80
.text:00005138 C4 F8 CC B0                   STR.W           R11, [R4,#0xCC]
.text:0000513C C4 E9 2E 0A                   STRD.W          R0, R10, [R4,#0xB8]
.text:00005140 20 46                         MOV             R0, R4
.text:00005142 02 F0 F3 FD                   BL              sub_7D2C
.text:00005142
.text:00005146 06 46                         MOV             R6, R0
.text:00005148 20 46                         MOV             R0, R4
.text:0000514A C4 F8 C0 60                   STR.W           R6, [R4,#0xC0]
.text:0000514E 21 69                         LDR             R1, [R4,#0x10]
.text:00005150 88 47                         BLX             R1
.text:00005150
.text:00005152 00 F0 7F 41                   AND.W           R1, R0, #0xFF000000
.text:00005156 B1 F1 50 6F                   CMP.W           R1, #0xD000000
.text:0000515A 18 BF                         IT NE
.text:0000515C 00 29                         CMPNE           R1, #0
.text:0000515E 3C D1                         BNE             loc_51DA
.text:0000515E
.text:00005160 41 1E                         SUBS            R1, R0, #1    ; switch 6 cases
.text:00005162 05 29                         CMP             R1, #5
.text:00005164 09 D8                         BHI             def_5166      ; jumptable 00005166 default case
.text:00005164
.text:00005166 DF E8 01 F0                   TBB.W           [PC,R1]       ; switch jump
.text:00005166
.text:00005166                               ; ---------------------------------------------------------------------------
.text:0000516A 0B                            jpt_5166 DCB 0xB              ; jump table for switch statement
.text:0000516B 0D                            DCB 0xD
.text:0000516C 03                            DCB 3
.text:0000516D 03                            DCB 3
.text:0000516E 03                            DCB 3
.text:0000516F 0F                            DCB 0xF
.text:00005170                               ; ---------------------------------------------------------------------------
.text:00005170
.text:00005170                               loc_5170                      ; CODE XREF: sub_5068+FE↑j
.text:00005170 04 27                         MOVS            R7, #4        ; jumptable 00005166 cases 3-5
.text:00005172 0C E0                         B               loc_518E
.text:00005172
.text:00005174                               ; ---------------------------------------------------------------------------
.text:00005174
.text:00005174                               loc_5174                      ; CODE XREF: sub_5068+40↑j
.text:00005174 6F F0 0B 00                   MOV             R0, #0xFFFFFFF4
.text:00005178 68 E0                         B               loc_524C
.text:00005178
.text:0000517A                               ; ---------------------------------------------------------------------------
.text:0000517A
.text:0000517A                               def_5166                      ; CODE XREF: sub_5068+FC↑j
.text:0000517A B0 F1 50 6F                   CMP.W           R0, #0xD000000 ; jumptable 00005166 default case
.text:0000517E 05 D1                         BNE             loc_518C
.text:0000517E
.text:00005180
.text:00005180                               loc_5180                      ; CODE XREF: sub_5068+FE↑j
.text:00005180 02 27                         MOVS            R7, #2        ; jumptable 00005166 case 1
.text:00005182 04 E0                         B               loc_518E
.text:00005182
.text:00005184                               ; ---------------------------------------------------------------------------
.text:00005184
.text:00005184                               loc_5184                      ; CODE XREF: sub_5068+FE↑j
.text:00005184 01 27                         MOVS            R7, #1        ; jumptable 00005166 case 2
.text:00005186 02 E0                         B               loc_518E
.text:00005186
.text:00005188                               ; ---------------------------------------------------------------------------
.text:00005188
.text:00005188                               loc_5188                      ; CODE XREF: sub_5068+FE↑j
.text:00005188 03 27                         MOVS            R7, #3        ; jumptable 00005166 case 6
.text:0000518A 00 E0                         B               loc_518E
.text:0000518A
.text:0000518C                               ; ---------------------------------------------------------------------------
.text:0000518C
.text:0000518C                               loc_518C                      ; CODE XREF: sub_5068+116↑j
.text:0000518C 00 27                         MOVS            R7, #0
.text:0000518C
.text:0000518E
.text:0000518E                               loc_518E                      ; CODE XREF: sub_5068+10A↑j
.text:0000518E                                                             ; sub_5068+11A↑j
.text:0000518E                                                             ; sub_5068+11E↑j
.text:0000518E                                                             ; sub_5068+122↑j
.text:0000518E E1 68                         LDR             R1, [R4,#0xC]
.text:00005190 20 46                         MOV             R0, R4
.text:00005192 88 47                         BLX             R1
.text:00005192
.text:00005194 02 21                         MOVS            R1, #2
.text:00005196 B1 EB 90 7F                   CMP.W           R1, R0,LSR#30
.text:0000519A 04 D0                         BEQ             loc_51A6
.text:0000519A
.text:0000519C 81 0F                         LSRS            R1, R0, #0x1E
.text:0000519E C9 B9                         CBNZ            R1, loc_51D4
.text:0000519E
.text:000051A0 6F F3 9F 40                   BFC.W           R0, #0x12, #0xE
.text:000051A4 01 E0                         B               loc_51AA
.text:000051A4
.text:000051A6                               ; ---------------------------------------------------------------------------
.text:000051A6
.text:000051A6                               loc_51A6                      ; CODE XREF: sub_5068+132↑j
.text:000051A6 20 F0 40 40                   BIC.W           R0, R0, #0xC0000000
.text:000051A6
.text:000051AA
.text:000051AA                               loc_51AA                      ; CODE XREF: sub_5068+13C↑j
.text:000051AA 4F F0 55 31                   MOV.W           R1, #0x55555555
.text:000051AE 01 EA 50 01                   AND.W           R1, R1, R0,LSR#1
.text:000051B2 40 1A                         SUBS            R0, R0, R1
.text:000051B4 4F F0 33 31                   MOV.W           R1, #0x33333333
.text:000051B8 01 EA 90 01                   AND.W           R1, R1, R0,LSR#2
.text:000051BC 20 F0 CC 30                   BIC.W           R0, R0, #0xCCCCCCCC
.text:000051C0 08 44                         ADD             R0, R1
.text:000051C2 4F F0 01 31                   MOV.W           R1, #0x1010101
.text:000051C6 00 EB 10 10                   ADD.W           R0, R0, R0,LSR#4
.text:000051CA 20 F0 F0 30                   BIC.W           R0, R0, #0xF0F0F0F0
.text:000051CE 48 43                         MULS            R0, R1
.text:000051D0 00 0E                         LSRS            R0, R0, #0x18
.text:000051D2 00 E0                         B               loc_51D6
.text:000051D2
.text:000051D4                               ; ---------------------------------------------------------------------------
.text:000051D4
.text:000051D4                               loc_51D4                      ; CODE XREF: sub_5068+136↑j
.text:000051D4 00 20                         MOVS            R0, #0
.text:000051D4
.text:000051D6
.text:000051D6                               loc_51D6                      ; CODE XREF: sub_5068+16A↑j
.text:000051D6 00 FB 07 FA                   MUL.W           R10, R0, R7
.text:000051D6
.text:000051DA
.text:000051DA                               loc_51DA                      ; CODE XREF: sub_5068+F6↑j
.text:000051DA B6 FB FA F0                   UDIV.W          R0, R6, R10
.text:000051DE 0B F1 A4 06                   ADD.W           R6, R11, #0xA4
.text:000051E2 E0 67                         STR             R0, [R4,#0x7C]
.text:000051E4 01 27                         MOVS            R7, #1
.text:000051E6 D4 F8 BC 00                   LDR.W           R0, [R4,#0xBC]
.text:000051EA C8 F8 08 00                   STR.W           R0, [R8,#8]
.text:000051EE D4 F8 A8 00                   LDR.W           R0, [R4,#0xA8]
.text:000051F2 C8 F8 04 00                   STR.W           R0, [R8,#4]
.text:000051F6 D4 F8 B8 00                   LDR.W           R0, [R4,#0xB8]
.text:000051FA C8 F8 00 00                   STR.W           R0, [R8]
.text:000051FE 30 46                         MOV             R0, R6        ; mutex
.text:00005200 84 F8 A0 70                   STRB.W          R7, [R4,#0xA0]
.text:00005204 FD F7 0C EF                   BLX             pthread_mutex_lock
.text:00005204
.text:00005208 DB F8 00 01                   LDR.W           R0, [R11,#0x100]
.text:0000520C A0 B1                         CBZ             R0, loc_5238
.text:0000520C
.text:0000520E 30 46                         MOV             R0, R6        ; mutex
.text:00005210 FD F7 18 EF                   BLX             pthread_mutex_unlock
.text:00005210
.text:00005214 25 49                         LDR             R1, =(aAudioHwPrimary - 0x5220) ; "audio_hw_primary"
.text:00005216 06 20                         MOVS            R0, #6
.text:00005218 25 4A                         LDR             R2, =(aSOutputDeviceB - 0x5222) ; "%s(): output device busy, abort..."
.text:0000521A 26 4B                         LDR             R3, =(aAdevOpenOutput - 0x5224) ; "adev_open_output_stream"
.text:0000521C 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000521E 7A 44                         ADD             R2, PC        ; "%s(): output device busy, abort..."
.text:00005220 7B 44                         ADD             R3, PC        ; "adev_open_output_stream"
.text:00005222 FD F7 DA EE                   BLX             __android_log_print
.text:00005222
.text:00005226 20 46                         MOV             R0, R4        ; ptr
.text:00005228 FD F7 7E EF                   BLX             free
.text:00005228
.text:0000522C 00 20                         MOVS            R0, #0
.text:0000522E C9 F8 00 00                   STR.W           R0, [R9]
.text:00005232 6F F0 0F 00                   MOV             R0, #0xFFFFFFF0
.text:00005236 09 E0                         B               loc_524C
.text:00005236
.text:00005238                               ; ---------------------------------------------------------------------------
.text:00005238
.text:00005238                               loc_5238                      ; CODE XREF: sub_5068+1A4↑j
.text:00005238 30 46                         MOV             R0, R6        ; mutex
.text:0000523A CB F8 00 41                   STR.W           R4, [R11,#0x100]
.text:0000523E 8B F8 0D 71                   STRB.W          R7, [R11,#0x10D]
.text:00005242 FD F7 00 EF                   BLX             pthread_mutex_unlock
.text:00005242
.text:00005246 00 20                         MOVS            R0, #0
.text:00005248 C9 F8 00 40                   STR.W           R4, [R9]
.text:00005248
.text:0000524C
.text:0000524C                               loc_524C                      ; CODE XREF: sub_5068+2E↑j
.text:0000524C                                                             ; sub_5068+110↑j
.text:0000524C                                                             ; sub_5068+1CE↑j
.text:0000524C 01 B0                         ADD             SP, SP, #4
.text:0000524E BD E8 F0 8F                   POP.W           {R4-R11,PC}
.text:0000524E
.text:0000524E                               ; End of function sub_5068
.text:0000524E
.text:0000524E                               ; ---------------------------------------------------------------------------
.text:00005252 00 BF                         ALIGN 4
.text:00005254 19 6A 00 00                   off_5254 DCD aAudioHwPrimary - 0x5086
.text:00005254                                                             ; DATA XREF: sub_5068+12↑r
.text:00005254                                                             ; "audio_hw_primary"
.text:00005258 56 81 00 00                   off_5258 DCD aSOutputStreamH - 0x5088
.text:00005258                                                             ; DATA XREF: sub_5068+16↑r
.text:00005258                                                             ; "%s(): output stream has been opened, ab"...
.text:0000525C 82 81 00 00                   off_525C DCD aAdevOpenOutput - 0x508A
.text:0000525C                                                             ; DATA XREF: sub_5068+18↑r
.text:0000525C                                                             ; "adev_open_output_stream"
.text:00005260 EA BC 00 00                   off_5260 DCD pcm_config_ptr - 0x50BE
.text:00005260                                                             ; DATA XREF: sub_5068+4C↑r
.text:00005264 3B 1D 00 00                   off_5264 DCD sub_6E08+1 - 0x50CE
.text:00005264                                                             ; DATA XREF: sub_5068+5E↑r
.text:00005268 3B 1D 00 00                   off_5268 DCD sub_6E0E+1 - 0x50D4
.text:00005268                                                             ; DATA XREF: sub_5068+66↑r
.text:0000526C 3D 1D 00 00                   off_526C DCD sub_6E16+1 - 0x50DA
.text:0000526C                                                             ; DATA XREF: sub_5068+6C↑r
.text:00005270 43 1D 00 00                   off_5270 DCD sub_6E22+1 - 0x50E0
.text:00005270                                                             ; DATA XREF: sub_5068+72↑r
.text:00005274 43 1D 00 00                   off_5274 DCD sub_6E28+1 - 0x50E6
.text:00005274                                                             ; DATA XREF: sub_5068+78↑r
.text:00005278 43 1D 00 00                   off_5278 DCD sub_6E2E+1 - 0x50EC
.text:00005278                                                             ; DATA XREF: sub_5068+7E↑r
.text:0000527C 53 15 00 00                   off_527C DCD sub_6644+1 - 0x50F2
.text:0000527C                                                             ; DATA XREF: sub_5068+84↑r
.text:00005280 3D 1D 00 00                   off_5280 DCD sub_6E34+1 - 0x50F8
.text:00005280                                                             ; DATA XREF: sub_5068+8A↑r
.text:00005284 3B 1D 00 00                   off_5284 DCD sub_6E38+1 - 0x50FE
.text:00005284                                                             ; DATA XREF: sub_5068+90↑r
.text:00005288 39 21 00 00                   off_5288 DCD sub_723C+1 - 0x5104
.text:00005288                                                             ; DATA XREF: sub_5068+96↑r
.text:0000528C 17 22 00 00                   off_528C DCD sub_7320+1 - 0x510A
.text:0000528C                                                             ; DATA XREF: sub_5068+9C↑r
.text:00005290 15 22 00 00                   off_5290 DCD sub_7324+1 - 0x5110
.text:00005290                                                             ; DATA XREF: sub_5068+A2↑r
.text:00005294 13 22 00 00                   off_5294 DCD sub_7328+1 - 0x5116
.text:00005294                                                             ; DATA XREF: sub_5068+A8↑r
.text:00005298 23 22 00 00                   off_5298 DCD sub_733E+1 - 0x511C
.text:00005298                                                             ; DATA XREF: sub_5068+AE↑r
.text:0000529C 23 22 00 00                   off_529C DCD sub_7344+1 - 0x5122
.text:0000529C                                                             ; DATA XREF: sub_5068+B4↑r
.text:000052A0 69 2B 00 00                   off_52A0 DCD sub_7C90+1 - 0x5128
.text:000052A0                                                             ; DATA XREF: sub_5068+BA↑r
.text:000052A4 69 2B 00 00                   off_52A4 DCD sub_7C96+1 - 0x512E
.text:000052A4                                                             ; DATA XREF: sub_5068+C0↑r
.text:000052A8 69 2B 00 00                   off_52A8 DCD sub_7C9C+1 - 0x5134
.text:000052A8                                                             ; DATA XREF: sub_5068+C6↑r
.text:000052AC 7F 68 00 00                   off_52AC DCD aAudioHwPrimary - 0x5220
.text:000052AC                                                             ; DATA XREF: sub_5068+1AC↑r
.text:000052AC                                                             ; "audio_hw_primary"
.text:000052B0 02 80 00 00                   off_52B0 DCD aSOutputDeviceB - 0x5222
.text:000052B0                                                             ; DATA XREF: sub_5068+1B0↑r
.text:000052B0                                                             ; "%s(): output device busy, abort..."
.text:000052B4 E8 7F 00 00                   off_52B4 DCD aAdevOpenOutput - 0x5224
.text:000052B4                                                             ; DATA XREF: sub_5068+1B2↑r
.text:000052B4                               ; } // starts at 5068         ; "adev_open_output_stream"
.text:000052B8
.text:000052B8                               ; =============== S U B R O U T I N E =======================================
.text:000052B8
.text:000052B8
.text:000052B8                               ; void __fastcall sub_52B8(int, void *)
.text:000052B8                               sub_52B8                      ; DATA XREF: sub_4424+92↑o
.text:000052B8                                                             ; sub_4424+94↑o
.text:000052B8                                                             ; .text:off_4674↑o
.text:000052B8                               ; __unwind {
.text:000052B8 70 B5                         PUSH            {R4-R6,LR}
.text:000052BA 0C 46                         MOV             R4, R1
.text:000052BC 05 46                         MOV             R5, R0
.text:000052BE 20 46                         MOV             R0, R4
.text:000052C0 01 F0 C0 F9                   BL              sub_6644
.text:000052C0
.text:000052C4 05 F1 A4 06                   ADD.W           R6, R5, #0xA4
.text:000052C8 30 46                         MOV             R0, R6        ; mutex
.text:000052CA FD F7 AA EE                   BLX             pthread_mutex_lock
.text:000052CA
.text:000052CE D5 F8 00 01                   LDR.W           R0, [R5,#0x100]
.text:000052D2 A0 42                         CMP             R0, R4
.text:000052D4 04 BF                         ITT EQ
.text:000052D6 00 20                         MOVEQ           R0, #0
.text:000052D8 C5 F8 00 01                   STREQ.W         R0, [R5,#0x100]
.text:000052DC 00 20                         MOVS            R0, #0
.text:000052DE 85 F8 0D 01                   STRB.W          R0, [R5,#0x10D]
.text:000052E2 30 46                         MOV             R0, R6        ; mutex
.text:000052E4 FD F7 AE EE                   BLX             pthread_mutex_unlock
.text:000052E4
.text:000052E8 20 46                         MOV             R0, R4
.text:000052EA BD E8 70 40                   POP.W           {R4-R6,LR}
.text:000052EE 06 F0 8F B9                   B.W             j_free
.text:000052EE
.text:000052EE                               ; End of function sub_52B8
.text:000052EE
.text:000052EE                               ; ---------------------------------------------------------------------------
.text:000052F2 00 00                         ALIGN 4
.text:000052F2                               ; } // starts at 52B8
.text:000052F4
.text:000052F4                               ; =============== S U B R O U T I N E =======================================
.text:000052F4
.text:000052F4
.text:000052F4                               ; int __fastcall sub_52F4(int, int, int, _DWORD *, _DWORD *)
.text:000052F4                               sub_52F4                      ; DATA XREF: sub_4424+98↑o
.text:000052F4                                                             ; sub_4424+9A↑o
.text:000052F4                                                             ; .text:off_4678↑o
.text:000052F4
.text:000052F4                               var_28= -0x28
.text:000052F4                               arg_0=  0
.text:000052F4
.text:000052F4                               ; __unwind {
.text:000052F4 2D E9 F0 4F                   PUSH.W          {R4-R11,LR}
.text:000052F8 A1 B0                         SUB             SP, SP, #0x84
.text:000052FA 80 46                         MOV             R8, R0
.text:000052FC 68 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x5306)
.text:000052FE 69 49                         LDR             R1, =(aAudioHwPrimary - 0x5310) ; "audio_hw_primary"
.text:00005300 1D 46                         MOV             R5, R3
.text:00005302 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00005304 69 4B                         LDR             R3, =(aAdevOpenInputS - 0x5312) ; "adev_open_input_stream"
.text:00005306 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00005308 91 46                         MOV             R9, R2
.text:0000530A 67 4A                         LDR             R2, =(aS_0 - 0x5316) ; "%s():..."
.text:0000530C 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000530E 7B 44                         ADD             R3, PC        ; "adev_open_input_stream"
.text:00005310 00 68                         LDR             R0, [R0]
.text:00005312 7A 44                         ADD             R2, PC        ; "%s():..."
.text:00005314 20 90                         STR             R0, [SP,#0xA8+var_28]
.text:00005316 03 20                         MOVS            R0, #3
.text:00005318 FD F7 5E EE                   BLX             __android_log_print
.text:00005318
.text:0000531C 2A 99                         LDR             R1, [SP,#0xA8+arg_0]
.text:0000531E 00 20                         MOVS            R0, #0
.text:00005320 08 60                         STR             R0, [R1]
.text:00005322 68 68                         LDR             R0, [R5,#4]
.text:00005324 10 28                         CMP             R0, #0x10
.text:00005326 51 D1                         BNE             loc_53CC
.text:00005326
.text:00005328 01 20                         MOVS            R0, #1        ; nmemb
.text:0000532A B0 21                         MOVS            R1, #0xB0     ; size
.text:0000532C FD F7 3E EF                   BLX             calloc
.text:0000532C
.text:00005330 07 46                         MOV             R7, R0
.text:00005332 00 2F                         CMP             R7, #0
.text:00005334 00 F0 A6 80                   BEQ.W           loc_5484
.text:00005334
.text:00005338 5D 4E                         LDR             R6, =(aPersistSysAudi - 0x5344) ; "persist.sys.audience.ustrhal"
.text:0000533A EA 46                         MOV             R10, SP
.text:0000533C 5D 4C                         LDR             R4, =(a0 - 0x534A) ; "0"
.text:0000533E 51 46                         MOV             R1, R10
.text:00005340 7E 44                         ADD             R6, PC        ; "persist.sys.audience.ustrhal"
.text:00005342 09 F0 04 0B                   AND.W           R11, R9, #4
.text:00005346 7C 44                         ADD             R4, PC        ; "0"
.text:00005348 30 46                         MOV             R0, R6
.text:0000534A 22 46                         MOV             R2, R4
.text:0000534C FD F7 0E EE                   BLX             property_get
.text:0000534C
.text:00005350 30 46                         MOV             R0, R6
.text:00005352 21 46                         MOV             R1, R4
.text:00005354 FD F7 B2 EE                   BLX             property_set
.text:00005354
.text:00005358 57 49                         LDR             R1, =(a1 - 0x5362) ; "1"
.text:0000535A 50 46                         MOV             R0, R10       ; s1
.text:0000535C 02 22                         MOVS            R2, #2        ; n
.text:0000535E 79 44                         ADD             R1, PC        ; "1"
.text:00005360 FD F7 00 EF                   BLX             strncmp
.text:00005360
.text:00005364 BB F1 00 0F                   CMP.W           R11, #0
.text:00005368 35 D0                         BEQ             loc_53D6
.text:00005368
.text:0000536A A0 BB                         CBNZ            R0, loc_53D6
.text:0000536A
.text:0000536C 55 49                         LDR             R1, =(aAudioHwPrimary - 0x5376) ; "audio_hw_primary"
.text:0000536E 03 20                         MOVS            R0, #3
.text:00005370 55 4A                         LDR             R2, =(aAudioAudienceC - 0x5378) ; "audio audience cvq enabled"
.text:00005372 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00005374 7A 44                         ADD             R2, PC        ; "audio audience cvq enabled"
.text:00005376 FD F7 30 EE                   BLX             __android_log_print
.text:00005376
.text:0000537A 01 20                         MOVS            R0, #1
.text:0000537C B8 64                         STR             R0, [R7,#0x48]
.text:0000537E 4E F2 64 20 C0 F2 04 00       MOV             R0, #0x4E264  ; size
.text:00005386 FD F7 C4 EE                   BLX             malloc
.text:00005386
.text:0000538A 06 46                         MOV             R6, R0
.text:0000538C 00 2E                         CMP             R6, #0
.text:0000538E 6C D0                         BEQ             loc_546A
.text:0000538E
.text:00005390 4E 49                         LDR             R1, =(aAudioHwPrimary - 0x539A) ; "audio_hw_primary"
.text:00005392 03 20                         MOVS            R0, #3
.text:00005394 4E 4A                         LDR             R2, =(aAudioAudienceC - 0x539C) ; "audio audience cvq enabled"
.text:00005396 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00005398 7A 44                         ADD             R2, PC        ; "audio audience cvq enabled"
.text:0000539A FD F7 1E EE                   BLX             __android_log_print
.text:0000539A
.text:0000539E 30 46                         MOV             R0, R6
.text:000053A0 7E 64                         STR             R6, [R7,#0x44]
.text:000053A2 FD F7 52 EF                   BLX             j_cvq_init
.text:000053A2
.text:000053A6 47 F2 00 10 C0 F2 02 00       MOV             R0, #0x27100  ; size
.text:000053AE 38 66                         STR             R0, [R7,#0x60]
.text:000053B0 FD F7 AE EE                   BLX             malloc
.text:000053B0
.text:000053B4 F8 65                         STR             R0, [R7,#0x5C]
.text:000053B6 00 20                         MOVS            R0, #0
.text:000053B8 C7 E9 19 00                   STRD.W          R0, R0, [R7,#0x64]
.text:000053BC 01 21                         MOVS            R1, #1
.text:000053BE F8 66                         STR             R0, [R7,#0x6C]
.text:000053C0 F8 64                         STR             R0, [R7,#0x4C]
.text:000053C2 C7 E9 15 00                   STRD.W          R0, R0, [R7,#0x54]
.text:000053C6 4F F4 00 60                   MOV.W           R0, #0x800
.text:000053CA 0E E0                         B               loc_53EA
.text:000053CA
.text:000053CC                               ; ---------------------------------------------------------------------------
.text:000053CC
.text:000053CC                               loc_53CC                      ; CODE XREF: sub_52F4+32↑j
.text:000053CC 10 20                         MOVS            R0, #0x10
.text:000053CE 68 60                         STR             R0, [R5,#4]
.text:000053D0 6F F0 15 00                   MOV             R0, #0xFFFFFFEA
.text:000053D4 58 E0                         B               loc_5488
.text:000053D4
.text:000053D6                               ; ---------------------------------------------------------------------------
.text:000053D6
.text:000053D6                               loc_53D6                      ; CODE XREF: sub_52F4+74↑j
.text:000053D6                                                             ; sub_52F4+76↑j
.text:000053D6 39 49                         LDR             R1, =(aAudioHwPrimary - 0x53E0) ; "audio_hw_primary"
.text:000053D8 03 20                         MOVS            R0, #3
.text:000053DA 39 4A                         LDR             R2, =(aAudioAudienceC_0 - 0x53E2) ; "audio audience cvq disable"
.text:000053DC 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000053DE 7A 44                         ADD             R2, PC        ; "audio audience cvq disable"
.text:000053E0 FD F7 FA ED                   BLX             __android_log_print
.text:000053E0
.text:000053E4 4F F4 80 60                   MOV.W           R0, #0x400
.text:000053E8 02 21                         MOVS            R1, #2
.text:000053E8
.text:000053EA
.text:000053EA                               loc_53EA                      ; CODE XREF: sub_52F4+D6↑j
.text:000053EA 3A 4A                         LDR             R2, =(pcm_config_in_ptr - 0x53F2)
.text:000053EC 2A 9B                         LDR             R3, [SP,#0xA8+arg_0]
.text:000053EE 7A 44                         ADD             R2, PC        ; pcm_config_in_ptr
.text:000053F0 12 68                         LDR             R2, [R2]      ; pcm_config_in
.text:000053F2 11 60                         STR             R1, [R2]
.text:000053F4 90 60                         STR             R0, [R2,#(off_11038 - 0x11030)] ; stru_400
.text:000053F6 38 48                         LDR             R0, =(sub_7DAC+1 - 0x53FC)
.text:000053F8 78 44                         ADD             R0, PC        ; sub_7DAC
.text:000053FA 38 60                         STR             R0, [R7]
.text:000053FC 37 48                         LDR             R0, =(sub_7DB2+1 - 0x5402)
.text:000053FE 78 44                         ADD             R0, PC        ; sub_7DB2
.text:00005400 78 60                         STR             R0, [R7,#4]
.text:00005402 37 48                         LDR             R0, =(sub_7DB8+1 - 0x5408)
.text:00005404 78 44                         ADD             R0, PC        ; sub_7DB8
.text:00005406 B8 60                         STR             R0, [R7,#8]
.text:00005408 36 48                         LDR             R0, =(sub_7DE0+1 - 0x540E)
.text:0000540A 78 44                         ADD             R0, PC        ; sub_7DE0
.text:0000540C F8 60                         STR             R0, [R7,#0xC]
.text:0000540E 36 48                         LDR             R0, =(sub_7DE4+1 - 0x5414)
.text:00005410 78 44                         ADD             R0, PC        ; sub_7DE4
.text:00005412 38 61                         STR             R0, [R7,#0x10]
.text:00005414 35 48                         LDR             R0, =(sub_7DE8+1 - 0x541A)
.text:00005416 78 44                         ADD             R0, PC        ; sub_7DE8
.text:00005418 78 61                         STR             R0, [R7,#0x14]
.text:0000541A 35 48                         LDR             R0, =(sub_6676+1 - 0x5420)
.text:0000541C 78 44                         ADD             R0, PC        ; sub_6676
.text:0000541E B8 61                         STR             R0, [R7,#0x18]
.text:00005420 34 48                         LDR             R0, =(sub_7DEE+1 - 0x5426)
.text:00005422 78 44                         ADD             R0, PC        ; sub_7DEE
.text:00005424 F8 61                         STR             R0, [R7,#0x1C]
.text:00005426 34 48                         LDR             R0, =(sub_7DF4+1 - 0x542C)
.text:00005428 78 44                         ADD             R0, PC        ; sub_7DF4
.text:0000542A B8 62                         STR             R0, [R7,#0x28]
.text:0000542C 33 48                         LDR             R0, =(sub_7F78+1 - 0x5432)
.text:0000542E 78 44                         ADD             R0, PC        ; sub_7F78
.text:00005430 F8 62                         STR             R0, [R7,#0x2C]
.text:00005432 33 48                         LDR             R0, =(sub_7F84+1 - 0x5438)
.text:00005434 78 44                         ADD             R0, PC        ; sub_7F84
.text:00005436 38 63                         STR             R0, [R7,#0x30]
.text:00005438 32 48                         LDR             R0, =(sub_7F88+1 - 0x543E)
.text:0000543A 78 44                         ADD             R0, PC        ; sub_7F88
.text:0000543C 78 63                         STR             R0, [R7,#0x34]
.text:0000543E 32 48                         LDR             R0, =(sub_7F8C+1 - 0x5444)
.text:00005440 78 44                         ADD             R0, PC        ; sub_7F8C
.text:00005442 B8 63                         STR             R0, [R7,#0x38]
.text:00005444 31 48                         LDR             R0, =(sub_7F90+1 - 0x544A)
.text:00005446 78 44                         ADD             R0, PC        ; sub_7F90
.text:00005448 F8 63                         STR             R0, [R7,#0x3C]
.text:0000544A 31 48                         LDR             R0, =(sub_8A54+1 - 0x5450)
.text:0000544C 78 44                         ADD             R0, PC        ; sub_8A54
.text:0000544E 38 64                         STR             R0, [R7,#0x40]
.text:00005450 01 20                         MOVS            R0, #1
.text:00005452 C7 F8 AC 80                   STR.W           R8, [R7,#0xAC]
.text:00005456 87 F8 7C 00                   STRB.W          R0, [R7,#0x7C]
.text:0000545A 28 68                         LDR             R0, [R5]
.text:0000545C C7 F8 80 00                   STR.W           R0, [R7,#0x80]
.text:00005460 00 20                         MOVS            R0, #0
.text:00005462 C7 E9 27 09                   STRD.W          R0, R9, [R7,#0x9C]
.text:00005466 1F 60                         STR             R7, [R3]
.text:00005468 0E E0                         B               loc_5488
.text:00005468
.text:0000546A                               ; ---------------------------------------------------------------------------
.text:0000546A
.text:0000546A                               loc_546A                      ; CODE XREF: sub_52F4+9A↑j
.text:0000546A 2A 49                         LDR             R1, =(aAudioHwPrimary - 0x5474) ; "audio_hw_primary"
.text:0000546C 06 20                         MOVS            R0, #6
.text:0000546E 2A 4A                         LDR             R2, =(aAudioCvqErrorA - 0x5476) ; "audio cvq Error audio in assigning mcvq"...
.text:00005470 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00005472 7A 44                         ADD             R2, PC        ; "audio cvq Error audio in assigning mcvq"...
.text:00005474 FD F7 B0 ED                   BLX             __android_log_print
.text:00005474
.text:00005478 38 46                         MOV             R0, R7        ; ptr
.text:0000547A FD F7 56 EE                   BLX             free
.text:0000547A
.text:0000547E 2A 99                         LDR             R1, [SP,#0xA8+arg_0]
.text:00005480 00 20                         MOVS            R0, #0
.text:00005482 08 60                         STR             R0, [R1]
.text:00005482
.text:00005484
.text:00005484                               loc_5484                      ; CODE XREF: sub_52F4+40↑j
.text:00005484 6F F0 0B 00                   MOV             R0, #0xFFFFFFF4
.text:00005484
.text:00005488
.text:00005488                               loc_5488                      ; CODE XREF: sub_52F4+E0↑j
.text:00005488                                                             ; sub_52F4+174↑j
.text:00005488 24 49                         LDR             R1, =(__stack_chk_guard_ptr - 0x5490)
.text:0000548A 20 9A                         LDR             R2, [SP,#0xA8+var_28]
.text:0000548C 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:0000548E 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:00005490 09 68                         LDR             R1, [R1]
.text:00005492 89 1A                         SUBS            R1, R1, R2
.text:00005494 04 BF                         ITT EQ
.text:00005496 21 B0                         ADDEQ           SP, SP, #0x84
.text:00005498 BD E8 F0 8F                   POPEQ.W         {R4-R11,PC}
.text:00005498
.text:0000549C FD F7 A2 ED                   BLX             __stack_chk_fail
.text:0000549C
.text:0000549C                               ; End of function sub_52F4
.text:0000549C
.text:0000549C                               ; ---------------------------------------------------------------------------
.text:000054A0 8E BA 00 00                   off_54A0 DCD __stack_chk_guard_ptr - 0x5306
.text:000054A0                                                             ; DATA XREF: sub_52F4+8↑r
.text:000054A4 8F 67 00 00                   off_54A4 DCD aAudioHwPrimary - 0x5310
.text:000054A4                                                             ; DATA XREF: sub_52F4+A↑r
.text:000054A4                                                             ; "audio_hw_primary"
.text:000054A8 D6 75 00 00                   off_54A8 DCD aS_0 - 0x5316    ; DATA XREF: sub_52F4+16↑r
.text:000054A8                                                             ; "%s():..."
.text:000054AC AB 82 00 00                   off_54AC DCD aAdevOpenInputS - 0x5312
.text:000054AC                                                             ; DATA XREF: sub_52F4+10↑r
.text:000054AC                                                             ; "adev_open_input_stream"
.text:000054B0 90 82 00 00                   off_54B0 DCD aPersistSysAudi - 0x5344
.text:000054B0                                                             ; DATA XREF: sub_52F4+44↑r
.text:000054B0                                                             ; "persist.sys.audience.ustrhal"
.text:000054B4 53 67 00 00                   off_54B4 DCD a0 - 0x534A      ; DATA XREF: sub_52F4+48↑r
.text:000054B4                                                             ; "0"
.text:000054B8 04 71 00 00                   off_54B8 DCD a1 - 0x5362      ; DATA XREF: sub_52F4+64↑r
.text:000054B8                                                             ; "1"
.text:000054BC BF 66 00 00                   off_54BC DCD aAudioHwPrimary - 0x53E0
.text:000054BC                                                             ; DATA XREF: sub_52F4:loc_53D6↑r
.text:000054BC                                                             ; "audio_hw_primary"
.text:000054C0 58 82 00 00                   off_54C0 DCD aAudioAudienceC_0 - 0x53E2
.text:000054C0                                                             ; DATA XREF: sub_52F4+E6↑r
.text:000054C0                                                             ; "audio audience cvq disable"
.text:000054C4 29 67 00 00                   off_54C4 DCD aAudioHwPrimary - 0x5376
.text:000054C4                                                             ; DATA XREF: sub_52F4+78↑r
.text:000054C4                                                             ; "audio_hw_primary"
.text:000054C8 79 82 00 00                   off_54C8 DCD aAudioAudienceC - 0x5378
.text:000054C8                                                             ; DATA XREF: sub_52F4+7C↑r
.text:000054C8                                                             ; "audio audience cvq enabled"
.text:000054CC 05 67 00 00                   off_54CC DCD aAudioHwPrimary - 0x539A
.text:000054CC                                                             ; DATA XREF: sub_52F4+9C↑r
.text:000054CC                                                             ; "audio_hw_primary"
.text:000054D0 55 82 00 00                   off_54D0 DCD aAudioAudienceC - 0x539C
.text:000054D0                                                             ; DATA XREF: sub_52F4+A0↑r
.text:000054D0                                                             ; "audio audience cvq enabled"
.text:000054D4 A6 B9 00 00                   off_54D4 DCD pcm_config_in_ptr - 0x53F2
.text:000054D4                                                             ; DATA XREF: sub_52F4:loc_53EA↑r
.text:000054D8 B1 29 00 00                   off_54D8 DCD sub_7DAC+1 - 0x53FC
.text:000054D8                                                             ; DATA XREF: sub_52F4+102↑r
.text:000054DC B1 29 00 00                   off_54DC DCD sub_7DB2+1 - 0x5402
.text:000054DC                                                             ; DATA XREF: sub_52F4+108↑r
.text:000054E0 B1 29 00 00                   off_54E0 DCD sub_7DB8+1 - 0x5408
.text:000054E0                                                             ; DATA XREF: sub_52F4+10E↑r
.text:000054E4 D3 29 00 00                   off_54E4 DCD sub_7DE0+1 - 0x540E
.text:000054E4                                                             ; DATA XREF: sub_52F4+114↑r
.text:000054E8 D1 29 00 00                   off_54E8 DCD sub_7DE4+1 - 0x5414
.text:000054E8                                                             ; DATA XREF: sub_52F4+11A↑r
.text:000054EC CF 29 00 00                   off_54EC DCD sub_7DE8+1 - 0x541A
.text:000054EC                                                             ; DATA XREF: sub_52F4+120↑r
.text:000054F0 57 12 00 00                   off_54F0 DCD sub_6676+1 - 0x5420
.text:000054F0                                                             ; DATA XREF: sub_52F4+126↑r
.text:000054F4 C9 29 00 00                   off_54F4 DCD sub_7DEE+1 - 0x5426
.text:000054F4                                                             ; DATA XREF: sub_52F4+12C↑r
.text:000054F8 C9 29 00 00                   off_54F8 DCD sub_7DF4+1 - 0x542C
.text:000054F8                                                             ; DATA XREF: sub_52F4+132↑r
.text:000054FC 47 2B 00 00                   off_54FC DCD sub_7F78+1 - 0x5432
.text:000054FC                                                             ; DATA XREF: sub_52F4+138↑r
.text:00005500 4D 2B 00 00                   off_5500 DCD sub_7F84+1 - 0x5438
.text:00005500                                                             ; DATA XREF: sub_52F4+13E↑r
.text:00005504 4B 2B 00 00                   off_5504 DCD sub_7F88+1 - 0x543E
.text:00005504                                                             ; DATA XREF: sub_52F4+144↑r
.text:00005508 49 2B 00 00                   off_5508 DCD sub_7F8C+1 - 0x5444
.text:00005508                                                             ; DATA XREF: sub_52F4+14A↑r
.text:0000550C 47 2B 00 00                   off_550C DCD sub_7F90+1 - 0x544A
.text:0000550C                                                             ; DATA XREF: sub_52F4+150↑r
.text:00005510 05 36 00 00                   off_5510 DCD sub_8A54+1 - 0x5450
.text:00005510                                                             ; DATA XREF: sub_52F4+156↑r
.text:00005514 2B 66 00 00                   off_5514 DCD aAudioHwPrimary - 0x5474
.text:00005514                                                             ; DATA XREF: sub_52F4:loc_546A↑r
.text:00005514                                                             ; "audio_hw_primary"
.text:00005518 96 81 00 00                   off_5518 DCD aAudioCvqErrorA - 0x5476
.text:00005518                                                             ; DATA XREF: sub_52F4+17A↑r
.text:00005518                                                             ; "audio cvq Error audio in assigning mcvq"...
.text:0000551C 04 B9 00 00                   off_551C DCD __stack_chk_guard_ptr - 0x5490
.text:0000551C                                                             ; DATA XREF: sub_52F4:loc_5488↑r
.text:0000551C                               ; } // starts at 52F4
.text:00005520
.text:00005520                               ; =============== S U B R O U T I N E =======================================
.text:00005520
.text:00005520
.text:00005520                               ; void __fastcall sub_5520(int, _DWORD *)
.text:00005520                               sub_5520                      ; DATA XREF: sub_4424+A0↑o
.text:00005520                                                             ; sub_4424+A2↑o
.text:00005520                                                             ; .text:off_467C↑o
.text:00005520
.text:00005520                               var_18= -0x18
.text:00005520
.text:00005520                               ; __unwind {
.text:00005520 70 B5                         PUSH            {R4-R6,LR}
.text:00005522 82 B0                         SUB             SP, SP, #8
.text:00005524 0C 46                         MOV             R4, R1
.text:00005526 D4 F8 AC 60                   LDR.W           R6, [R4,#0xAC]
.text:0000552A 20 46                         MOV             R0, R4
.text:0000552C D6 F8 00 51                   LDR.W           R5, [R6,#0x100]
.text:00005530 01 F0 A1 F8                   BL              sub_6676
.text:00005530
.text:00005534 A0 6C                         LDR             R0, [R4,#0x48]
.text:00005536 16 49                         LDR             R1, =(aAudioHwPrimary - 0x5540) ; "audio_hw_primary"
.text:00005538 16 4A                         LDR             R2, =(aSIsCvqD - 0x5544) ; "%s(): is_cvq=%d"
.text:0000553A 17 4B                         LDR             R3, =(aAdevCloseInput - 0x5546) ; "adev_close_input_stream"
.text:0000553C 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000553E 00 90                         STR             R0, [SP,#0x18+var_18]
.text:00005540 7A 44                         ADD             R2, PC        ; "%s(): is_cvq=%d"
.text:00005542 7B 44                         ADD             R3, PC        ; "adev_close_input_stream"
.text:00005544 02 20                         MOVS            R0, #2
.text:00005546 FD F7 48 ED                   BLX             __android_log_print
.text:00005546
.text:0000554A D5 B1                         CBZ             R5, loc_5582
.text:0000554A
.text:0000554C 96 F8 21 01                   LDRB.W          R0, [R6,#0x121]
.text:00005550 B8 B9                         CBNZ            R0, loc_5582
.text:00005550
.text:00005552 12 48                         LDR             R0, =(pcm_config_in_ptr - 0x555C)
.text:00005554 D5 F8 B8 10                   LDR.W           R1, [R5,#0xB8]
.text:00005558 78 44                         ADD             R0, PC        ; pcm_config_in_ptr
.text:0000555A 00 68                         LDR             R0, [R0]      ; pcm_config_in
.text:0000555C 40 68                         LDR             R0, [R0,#(off_11034 - 0x11030)] ; "bluetooth_nrec=%d"
.text:0000555E 81 42                         CMP             R1, R0
.text:00005560 03 D1                         BNE             loc_556A
.text:00005560
.text:00005562 D5 F8 BC 00                   LDR.W           R0, [R5,#0xBC]
.text:00005566 01 28                         CMP             R0, #1
.text:00005568 0B D0                         BEQ             loc_5582
.text:00005568
.text:0000556A
.text:0000556A                               loc_556A                      ; CODE XREF: sub_5520+40↑j
.text:0000556A 96 F8 39 01                   LDRB.W          R0, [R6,#0x139]
.text:0000556E 08 B1                         CBZ             R0, loc_5574
.text:0000556E
.text:00005570 A0 6C                         LDR             R0, [R4,#0x48]
.text:00005572 30 B1                         CBZ             R0, loc_5582
.text:00005572
.text:00005574
.text:00005574                               loc_5574                      ; CODE XREF: sub_5520+4E↑j
.text:00005574 D6 F8 A8 00                   LDR.W           R0, [R6,#0xA8]
.text:00005578 02 28                         CMP             R0, #2
.text:0000557A 02 D0                         BEQ             loc_5582
.text:0000557A
.text:0000557C 28 46                         MOV             R0, R5
.text:0000557E 01 F0 61 F8                   BL              sub_6644
.text:0000557E
.text:00005582
.text:00005582                               loc_5582                      ; CODE XREF: sub_5520+2A↑j
.text:00005582                                                             ; sub_5520+30↑j
.text:00005582                                                             ; sub_5520+48↑j
.text:00005582                                                             ; sub_5520+52↑j
.text:00005582                                                             ; sub_5520+5A↑j
.text:00005582 20 46                         MOV             R0, R4
.text:00005584 02 B0                         ADD             SP, SP, #8
.text:00005586 BD E8 70 40                   POP.W           {R4-R6,LR}
.text:0000558A 06 F0 41 B8                   B.W             j_free
.text:0000558A
.text:0000558A                               ; End of function sub_5520
.text:0000558A
.text:0000558A                               ; ---------------------------------------------------------------------------
.text:0000558E 00 BF                         ALIGN 0x10
.text:00005590 5F 65 00 00                   off_5590 DCD aAudioHwPrimary - 0x5540
.text:00005590                                                             ; DATA XREF: sub_5520+16↑r
.text:00005590                                                             ; "audio_hw_primary"
.text:00005594 04 86 00 00                   off_5594 DCD aSIsCvqD - 0x5544
.text:00005594                                                             ; DATA XREF: sub_5520+18↑r
.text:00005594                                                             ; "%s(): is_cvq=%d"
.text:00005598 12 86 00 00                   off_5598 DCD aAdevCloseInput - 0x5546
.text:00005598                                                             ; DATA XREF: sub_5520+1A↑r
.text:00005598                                                             ; "adev_close_input_stream"
.text:0000559C 3C B8 00 00                   off_559C DCD pcm_config_in_ptr - 0x555C
.text:0000559C                                                             ; DATA XREF: sub_5520+32↑r
.text:0000559C                               ; } // starts at 5520
.text:000055A0
.text:000055A0                               ; =============== S U B R O U T I N E =======================================
.text:000055A0
.text:000055A0
.text:000055A0                               ; int sub_55A0()
.text:000055A0                               sub_55A0                      ; DATA XREF: sub_4424+A8↑o
.text:000055A0                                                             ; sub_4424+AA↑o
.text:000055A0                                                             ; .text:off_4680↑o
.text:000055A0                               ; __unwind {
.text:000055A0 00 20                         MOVS            R0, #0
.text:000055A2 70 47                         BX              LR
.text:000055A2                               ; } // starts at 55A0
.text:000055A2
.text:000055A2                               ; End of function sub_55A0
.text:000055A2
.text:000055A4
.text:000055A4                               ; =============== S U B R O U T I N E =======================================
.text:000055A4
.text:000055A4
.text:000055A4                               ; int __fastcall sub_55A4(int, int, int)
.text:000055A4                               sub_55A4                      ; DATA XREF: sub_4424+B2↑o
.text:000055A4                                                             ; sub_4424+B6↑o
.text:000055A4                                                             ; .text:off_4684↑o
.text:000055A4                               ; __unwind {
.text:000055A4 70 B5                         PUSH            {R4-R6,LR}
.text:000055A6 04 46                         MOV             R4, R0
.text:000055A8 0D 46                         MOV             R5, R1
.text:000055AA 94 F8 AC 00                   LDRB.W          R0, [R4,#0xAC]
.text:000055AE 10 F0 02 0F                   TST.W           R0, #2
.text:000055B2 12 D1                         BNE             loc_55DA
.text:000055B2
.text:000055B4 0A 49                         LDR             R1, =(off_10BDC - 0x55C2) ; "EQ1 B1 Volume"
.text:000055B6 96 1C                         ADDS            R6, R2, #2
.text:000055B8 D4 F8 C0 00                   LDR.W           R0, [R4,#0xC0]
.text:000055BC 32 46                         MOV             R2, R6
.text:000055BE 79 44                         ADD             R1, PC        ; off_10BDC
.text:000055C0 51 F8 25 10                   LDR.W           R1, [R1,R5,LSL#2]
.text:000055C4 FE F7 CE FE                   BL              sub_4364
.text:000055C4
.text:000055C8 06 48                         LDR             R0, =(off_10BF0 - 0x55D0) ; "EQ2 B1 Volume"
.text:000055CA 32 46                         MOV             R2, R6
.text:000055CC 78 44                         ADD             R0, PC        ; off_10BF0
.text:000055CE 50 F8 25 10                   LDR.W           R1, [R0,R5,LSL#2]
.text:000055D2 D4 F8 C0 00                   LDR.W           R0, [R4,#0xC0]
.text:000055D6 FE F7 C5 FE                   BL              sub_4364
.text:000055D6
.text:000055DA
.text:000055DA                               loc_55DA                      ; CODE XREF: sub_55A4+E↑j
.text:000055DA 00 20                         MOVS            R0, #0
.text:000055DC 70 BD                         POP             {R4-R6,PC}
.text:000055DC
.text:000055DC                               ; End of function sub_55A4
.text:000055DC
.text:000055DC                               ; ---------------------------------------------------------------------------
.text:000055DE 00 BF                         ALIGN 0x10
.text:000055E0 1A B6 00 00                   off_55E0 DCD off_10BDC - 0x55C2
.text:000055E0                                                             ; DATA XREF: sub_55A4+10↑r
.text:000055E0                                                             ; "EQ1 B1 Volume"
.text:000055E4 20 B6 00 00                   off_55E4 DCD off_10BF0 - 0x55D0
.text:000055E4                                                             ; DATA XREF: sub_55A4+24↑r
.text:000055E4                               ; } // starts at 55A4         ; "EQ2 B1 Volume"
.text:000055E8
.text:000055E8                               ; =============== S U B R O U T I N E =======================================
.text:000055E8
.text:000055E8
.text:000055E8                               ; int __fastcall sub_55E8(int)
.text:000055E8                               sub_55E8                      ; CODE XREF: sub_4710+D2↑p
.text:000055E8                                                             ; sub_5730+E2↓p
.text:000055E8
.text:000055E8                               var_18= -0x18
.text:000055E8
.text:000055E8                               ; __unwind {
.text:000055E8 B0 B5                         PUSH            {R4,R5,R7,LR}
.text:000055EA 82 B0                         SUB             SP, SP, #8
.text:000055EC 04 46                         MOV             R4, R0
.text:000055EE D4 F8 AC 00                   LDR.W           R0, [R4,#0xAC]
.text:000055F2 10 F0 0C 0F                   TST.W           R0, #0xC
.text:000055F6 04 D0                         BEQ             loc_5602
.text:000055F6
.text:000055F8 20 46                         MOV             R0, R4
.text:000055FA FE F7 79 FE                   BL              sub_42F0
.text:000055FA
.text:000055FE
.text:000055FE                               loc_55FE                      ; CODE XREF: sub_55E8+24↓j
.text:000055FE 0F 25                         MOVS            R5, #0xF
.text:00005600 0A E0                         B               loc_5618
.text:00005600
.text:00005602                               ; ---------------------------------------------------------------------------
.text:00005602
.text:00005602                               loc_5602                      ; CODE XREF: sub_55E8+E↑j
.text:00005602 10 F0 01 0F                   TST.W           R0, #1
.text:00005606 05 D1                         BNE             loc_5614
.text:00005606
.text:00005608 10 F0 70 0F                   TST.W           R0, #0x70
.text:0000560C F7 D1                         BNE             loc_55FE
.text:0000560C
.text:0000560E D4 F8 18 51                   LDR.W           R5, [R4,#0x118]
.text:00005612 01 E0                         B               loc_5618
.text:00005612
.text:00005614                               ; ---------------------------------------------------------------------------
.text:00005614
.text:00005614                               loc_5614                      ; CODE XREF: sub_55E8+1E↑j
.text:00005614 D4 F8 1C 51                   LDR.W           R5, [R4,#0x11C]
.text:00005614
.text:00005618
.text:00005618                               loc_5618                      ; CODE XREF: sub_55E8+18↑j
.text:00005618                                                             ; sub_55E8+2A↑j
.text:00005618 94 F8 38 01                   LDRB.W          R0, [R4,#0x138]
.text:0000561C 48 B1                         CBZ             R0, loc_5632
.text:0000561C
.text:0000561E 16 49                         LDR             R1, =(aAudioHwPrimary - 0x562A) ; "audio_hw_primary"
.text:00005620 02 20                         MOVS            R0, #2
.text:00005622 16 4A                         LDR             R2, =(aSAutoAnswerFix - 0x562C) ; "%s(): auto answer, fixed modem volume a"...
.text:00005624 16 4B                         LDR             R3, =(aSetVoiceVolume - 0x562E) ; "set_voice_volume"
.text:00005626 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00005628 7A 44                         ADD             R2, PC        ; "%s(): auto answer, fixed modem volume a"...
.text:0000562A 7B 44                         ADD             R3, PC        ; "set_voice_volume"
.text:0000562C FD F7 D4 EC                   BLX             __android_log_print
.text:0000562C
.text:00005630 0F 25                         MOVS            R5, #0xF
.text:00005630
.text:00005632
.text:00005632                               loc_5632                      ; CODE XREF: sub_55E8+34↑j
.text:00005632 D4 F8 AC 00                   LDR.W           R0, [R4,#0xAC]
.text:00005636 13 49                         LDR             R1, =(aAudioHwPrimary - 0x5640) ; "audio_hw_primary"
.text:00005638 13 4A                         LDR             R2, =(aSOutDevice0x02 - 0x5646) ; "%s(): out_device=0x%02x, voice_volome_l"...
.text:0000563A 14 4B                         LDR             R3, =(aSetVoiceVolume - 0x5648) ; "set_voice_volume"
.text:0000563C 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000563E CD E9 00 05                   STRD.W          R0, R5, [SP,#0x18+var_18]
.text:00005642 7A 44                         ADD             R2, PC        ; "%s(): out_device=0x%02x, voice_volome_l"...
.text:00005644 7B 44                         ADD             R3, PC        ; "set_voice_volume"
.text:00005646 03 20                         MOVS            R0, #3
.text:00005648 FD F7 C6 EC                   BLX             __android_log_print
.text:00005648
.text:0000564C 28 46                         MOV             R0, R5
.text:0000564E FD F7 02 EE                   BLX             SetAudioVolume
.text:0000564E
.text:00005652 70 B1                         CBZ             R0, loc_5672
.text:00005652
.text:00005654 FD F7 B0 ED                   BLX             Open
.text:00005654
.text:00005658 28 46                         MOV             R0, R5
.text:0000565A FD F7 FC ED                   BLX             SetAudioVolume
.text:0000565A
.text:0000565E 0C 49                         LDR             R1, =(aAudioHwPrimary - 0x5668) ; "audio_hw_primary"
.text:00005660 0C 4A                         LDR             R2, =(aSFailedToSetCp - 0x566C) ; "%s(): failed to set cp volume, retry ag"...
.text:00005662 0D 4B                         LDR             R3, =(aSetVoiceVolume - 0x566E) ; "set_voice_volume"
.text:00005664 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00005666 00 90                         STR             R0, [SP,#0x18+var_18]
.text:00005668 7A 44                         ADD             R2, PC        ; "%s(): failed to set cp volume, retry ag"...
.text:0000566A 7B 44                         ADD             R3, PC        ; "set_voice_volume"
.text:0000566C 03 20                         MOVS            R0, #3
.text:0000566E FD F7 B4 EC                   BLX             __android_log_print
.text:0000566E
.text:00005672
.text:00005672                               loc_5672                      ; CODE XREF: sub_55E8+6A↑j
.text:00005672 02 B0                         ADD             SP, SP, #8
.text:00005674 B0 BD                         POP             {R4,R5,R7,PC}
.text:00005674
.text:00005674                               ; End of function sub_55E8
.text:00005674
.text:00005674                               ; ---------------------------------------------------------------------------
.text:00005676 00 BF                         ALIGN 4
.text:00005678 75 64 00 00                   off_5678 DCD aAudioHwPrimary - 0x562A
.text:00005678                                                             ; DATA XREF: sub_55E8+36↑r
.text:00005678                                                             ; "audio_hw_primary"
.text:0000567C 88 71 00 00                   off_567C DCD aSAutoAnswerFix - 0x562C
.text:0000567C                                                             ; DATA XREF: sub_55E8+3A↑r
.text:0000567C                                                             ; "%s(): auto answer, fixed modem volume a"...
.text:00005680 B3 71 00 00                   off_5680 DCD aSetVoiceVolume - 0x562E
.text:00005680                                                             ; DATA XREF: sub_55E8+3C↑r
.text:00005680                                                             ; "set_voice_volume"
.text:00005684 5F 64 00 00                   off_5684 DCD aAudioHwPrimary - 0x5640
.text:00005684                                                             ; DATA XREF: sub_55E8+4E↑r
.text:00005684                                                             ; "audio_hw_primary"
.text:00005688 AC 71 00 00                   off_5688 DCD aSOutDevice0x02 - 0x5646
.text:00005688                                                             ; DATA XREF: sub_55E8+50↑r
.text:00005688                                                             ; "%s(): out_device=0x%02x, voice_volome_l"...
.text:0000568C 99 71 00 00                   off_568C DCD aSetVoiceVolume - 0x5648
.text:0000568C                                                             ; DATA XREF: sub_55E8+52↑r
.text:0000568C                                                             ; "set_voice_volume"
.text:00005690 37 64 00 00                   off_5690 DCD aAudioHwPrimary - 0x5668
.text:00005690                                                             ; DATA XREF: sub_55E8+76↑r
.text:00005690                                                             ; "audio_hw_primary"
.text:00005694 B5 71 00 00                   off_5694 DCD aSFailedToSetCp - 0x566C
.text:00005694                                                             ; DATA XREF: sub_55E8+78↑r
.text:00005694                                                             ; "%s(): failed to set cp volume, retry ag"...
.text:00005698 73 71 00 00                   off_5698 DCD aSetVoiceVolume - 0x566E
.text:00005698                                                             ; DATA XREF: sub_55E8+7A↑r
.text:00005698                               ; } // starts at 55E8         ; "set_voice_volume"
.text:0000569C
.text:0000569C                               ; =============== S U B R O U T I N E =======================================
.text:0000569C
.text:0000569C
.text:0000569C                               ; int __fastcall sub_569C(int)
.text:0000569C                               sub_569C                      ; CODE XREF: sub_482C+58↑p
.text:0000569C                                                             ; sub_482C+FE↑p
.text:0000569C                                                             ; sub_482C+22E↑p
.text:0000569C                                                             ; sub_482C+264↑p
.text:0000569C                               ; __unwind {
.text:0000569C 70 B5                         PUSH            {R4-R6,LR}
.text:0000569E 04 46                         MOV             R4, R0
.text:000056A0 D4 F8 FC 50                   LDR.W           R5, [R4,#0xFC]
.text:000056A4 55 B1                         CBZ             R5, loc_56BC
.text:000056A4
.text:000056A6 05 F1 74 06                   ADD.W           R6, R5, #0x74 ; 't'
.text:000056AA 30 46                         MOV             R0, R6        ; mutex
.text:000056AC FD F7 B8 EC                   BLX             pthread_mutex_lock
.text:000056AC
.text:000056B0 28 46                         MOV             R0, R5
.text:000056B2 00 F0 D3 FC                   BL              sub_605C
.text:000056B2
.text:000056B6 30 46                         MOV             R0, R6        ; mutex
.text:000056B8 FD F7 C4 EC                   BLX             pthread_mutex_unlock
.text:000056B8
.text:000056BC
.text:000056BC                               loc_56BC                      ; CODE XREF: sub_569C+8↑j
.text:000056BC D4 F8 00 51                   LDR.W           R5, [R4,#0x100]
.text:000056C0 15 B1                         CBZ             R5, loc_56C8
.text:000056C0
.text:000056C2 95 F8 A0 00                   LDRB.W          R0, [R5,#0xA0]
.text:000056C6 A0 B1                         CBZ             R0, loc_56F2
.text:000056C6
.text:000056C8
.text:000056C8                               loc_56C8                      ; CODE XREF: sub_569C+24↑j
.text:000056C8 D4 F8 E4 00                   LDR.W           R0, [R4,#0xE4]
.text:000056CC 10 B9                         CBNZ            R0, loc_56D4
.text:000056CC
.text:000056CE D4 F8 E8 00                   LDR.W           R0, [R4,#0xE8]
.text:000056D2 60 B3                         CBZ             R0, locret_572E
.text:000056D2
.text:000056D4
.text:000056D4                               loc_56D4                      ; CODE XREF: sub_569C+30↑j
.text:000056D4 00 20                         MOVS            R0, #0
.text:000056D6 D4 F8 AC 50                   LDR.W           R5, [R4,#0xAC]
.text:000056DA C4 F8 AC 00                   STR.W           R0, [R4,#0xAC]
.text:000056DE 20 46                         MOV             R0, R4
.text:000056E0 00 F0 26 F8                   BL              sub_5730
.text:000056E0
.text:000056E4 C4 F8 AC 50                   STR.W           R5, [R4,#0xAC]
.text:000056E8 20 46                         MOV             R0, R4
.text:000056EA BD E8 70 40                   POP.W           {R4-R6,LR}
.text:000056EE 00 F0 D5 BD                   B.W             sub_629C
.text:000056EE
.text:000056F2                               ; ---------------------------------------------------------------------------
.text:000056F2
.text:000056F2                               loc_56F2                      ; CODE XREF: sub_569C+2A↑j
.text:000056F2 05 F1 64 06                   ADD.W           R6, R5, #0x64 ; 'd'
.text:000056F6 30 46                         MOV             R0, R6        ; mutex
.text:000056F8 FD F7 92 EC                   BLX             pthread_mutex_lock
.text:000056F8
.text:000056FC 94 F8 04 01                   LDRB.W          R0, [R4,#0x104]
.text:00005700 50 B1                         CBZ             R0, loc_5718
.text:00005700
.text:00005702 94 F8 AC 00                   LDRB.W          R0, [R4,#0xAC]
.text:00005706 10 F0 02 0F                   TST.W           R0, #2
.text:0000570A 05 D0                         BEQ             loc_5718
.text:0000570A
.text:0000570C 20 46                         MOV             R0, R4
.text:0000570E 00 F0 29 FD                   BL              sub_6164
.text:0000570E
.text:00005712 00 20                         MOVS            R0, #0
.text:00005714 84 F8 04 01                   STRB.W          R0, [R4,#0x104]
.text:00005714
.text:00005718
.text:00005718                               loc_5718                      ; CODE XREF: sub_569C+64↑j
.text:00005718                                                             ; sub_569C+6E↑j
.text:00005718 28 46                         MOV             R0, R5
.text:0000571A 00 F0 4D FD                   BL              sub_61B8
.text:0000571A
.text:0000571E 20 46                         MOV             R0, R4
.text:00005720 00 F0 BC FD                   BL              sub_629C
.text:00005720
.text:00005724 30 46                         MOV             R0, R6
.text:00005726 BD E8 70 40                   POP.W           {R4-R6,LR}
.text:0000572A 05 F0 79 BF                   B.W             j_pthread_mutex_unlock
.text:0000572A
.text:0000572E                               ; ---------------------------------------------------------------------------
.text:0000572E
.text:0000572E                               locret_572E                   ; CODE XREF: sub_569C+36↑j
.text:0000572E 70 BD                         POP             {R4-R6,PC}
.text:0000572E                               ; } // starts at 569C
.text:0000572E
.text:0000572E                               ; End of function sub_569C
.text:0000572E
.text:00005730
.text:00005730                               ; =============== S U B R O U T I N E =======================================
.text:00005730
.text:00005730
.text:00005730                               ; int __fastcall sub_5730(int)
.text:00005730                               sub_5730                      ; CODE XREF: sub_482C+206↑p
.text:00005730                                                             ; sub_482C+27A↑p
.text:00005730                                                             ; sub_4B48+1AC↑p
.text:00005730                                                             ; sub_4B48+20E↑p
.text:00005730                                                             ; sub_4B48+25C↑p
.text:00005730                                                             ; sub_569C+44↑p
.text:00005730                                                             ; sub_605C+82↓p
.text:00005730                                                             ; sub_61B8+80↓p
.text:00005730                                                             ; sub_6E38+168↓p
.text:00005730                                                             ; sub_6E38+1F2↓p
.text:00005730                                                             ; sub_7344+47E↓p
.text:00005730                                                             ; sub_7DF4+126↓p
.text:00005730                                                             ; sub_7F90+38E↓p
.text:00005730
.text:00005730                               var_C0= -0xC0
.text:00005730                               var_BC= -0xBC
.text:00005730                               var_B8= -0xB8
.text:00005730                               var_B4= -0xB4
.text:00005730                               var_B0= -0xB0
.text:00005730                               var_AC= -0xAC
.text:00005730                               s1= -0xA8
.text:00005730                               var_A4= -0xA4
.text:00005730                               var_98= -0x98
.text:00005730                               var_28= -0x28
.text:00005730
.text:00005730                               ; __unwind {
.text:00005730 2D E9 F0 4F                   PUSH.W          {R4-R11,LR}
.text:00005734 A7 B0                         SUB             SP, SP, #0x9C
.text:00005736 04 46                         MOV             R4, R0
.text:00005738 DF F8 F8 07                   LDR.W           R0, =(__stack_chk_guard_ptr - 0x5740)
.text:0000573C 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:0000573E 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00005740 00 68                         LDR             R0, [R0]
.text:00005742 26 90                         STR             R0, [SP,#0xC0+var_28]
.text:00005744 20 46                         MOV             R0, R4
.text:00005746 D4 F8 AC 10                   LDR.W           R1, [R4,#0xAC]
.text:0000574A FD F7 8A ED                   BLX             j_get_output_device_id
.text:0000574A
.text:0000574E D4 F8 C8 10                   LDR.W           R1, [R4,#0xC8]
.text:00005752 80 46                         MOV             R8, R0
.text:00005754 20 46                         MOV             R0, R4
.text:00005756 FD F7 8A ED                   BLX             j_get_input_source_id
.text:00005756
.text:0000575A 82 46                         MOV             R10, R0
.text:0000575C D4 F8 AC 50                   LDR.W           R5, [R4,#0xAC]
.text:00005760 D4 F8 00 01                   LDR.W           R0, [R4,#0x100]
.text:00005764 15 F0 70 0F                   TST.W           R5, #0x70
.text:00005768 04 90                         STR             R0, [SP,#0xC0+var_B0]
.text:0000576A 02 D0                         BEQ             loc_5772
.text:0000576A
.text:0000576C 4F F0 01 0B                   MOV.W           R11, #1
.text:00005770 05 E0                         B               loc_577E
.text:00005770
.text:00005772                               ; ---------------------------------------------------------------------------
.text:00005772
.text:00005772                               loc_5772                      ; CODE XREF: sub_5730+3A↑j
.text:00005772 94 F8 B0 00                   LDRB.W          R0, [R4,#0xB0]
.text:00005776 00 F0 08 00                   AND.W           R0, R0, #8
.text:0000577A 4F EA D0 0B                   MOV.W           R11, R0,LSR#3
.text:0000577A
.text:0000577E
.text:0000577E                               loc_577E                      ; CODE XREF: sub_5730+40↑j
.text:0000577E D4 F8 A8 00                   LDR.W           R0, [R4,#0xA8]
.text:00005782 02 28                         CMP             R0, #2
.text:00005784 47 D1                         BNE             loc_5816
.text:00005784
.text:00005786 06 AF                         ADD             R7, SP, #0xC0+s1
.text:00005788 80 21                         MOVS            R1, #0x80
.text:0000578A 38 46                         MOV             R0, R7
.text:0000578C FD F7 74 ED                   BLX             __aeabi_memclr8
.text:0000578C
.text:00005790 DF F8 A4 07                   LDR.W           R0, =(aHwMessagerecor - 0x579E) ; "hw.messagerecord.state"
.text:00005794 39 46                         MOV             R1, R7
.text:00005796 DF F8 A4 27                   LDR.W           R2, =(a0 - 0x57A0) ; "0"
.text:0000579A 78 44                         ADD             R0, PC        ; "hw.messagerecord.state"
.text:0000579C 7A 44                         ADD             R2, PC        ; "0"
.text:0000579E FD F7 E6 EB                   BLX             property_get
.text:0000579E
.text:000057A2 B0 F1 FF 3F                   CMP.W           R0, #0xFFFFFFFF
.text:000057A6 23 DD                         BLE             loc_57F0
.text:000057A6
.text:000057A8 DF F8 94 17                   LDR.W           R1, =(a1 - 0x57B2) ; "1"
.text:000057AC 06 A8                         ADD             R0, SP, #0xC0+s1 ; s1
.text:000057AE 79 44                         ADD             R1, PC        ; "1"
.text:000057B0 FD F7 F6 EC                   BLX             strcmp
.text:000057B0
.text:000057B4 00 21                         MOVS            R1, #0
.text:000057B6 00 28                         CMP             R0, #0
.text:000057B8 08 BF                         IT EQ
.text:000057BA 01 21                         MOVEQ           R1, #1
.text:000057BC 84 F8 38 11                   STRB.W          R1, [R4,#0x138]
.text:000057C0 D4 F8 A8 10                   LDR.W           R1, [R4,#0xA8]
.text:000057C4 18 BF                         IT NE
.text:000057C6 01 20                         MOVNE           R0, #1
.text:000057C8 02 29                         CMP             R1, #2
.text:000057CA 08 BF                         IT EQ
.text:000057CC 00 28                         CMPEQ           R0, #0
.text:000057CE 1D D1                         BNE             loc_580C
.text:000057CE
.text:000057D0 D4 F8 BC 00                   LDR.W           R0, [R4,#0xBC]
.text:000057D4 FD F7 4E EC                   BLX             j_audio_route_reset
.text:000057D4
.text:000057D8 DF F8 68 17                   LDR.W           R1, =(aVoiceCallAutoA - 0x57E4) ; "voice-call-auto-answer-capture"
.text:000057DC D4 F8 BC 00                   LDR.W           R0, [R4,#0xBC] ; int
.text:000057E0 79 44                         ADD             R1, PC        ; "voice-call-auto-answer-capture"
.text:000057E2 FD F7 4E EC                   BLX             j_audio_route_apply_path
.text:000057E2
.text:000057E6 D4 F8 BC 00                   LDR.W           R0, [R4,#0xBC]
.text:000057EA FD F7 50 EC                   BLX             j_audio_route_update_mixer
.text:000057EA
.text:000057EE 65 E3                         B               loc_5EBC
.text:000057EE
.text:000057F0                               ; ---------------------------------------------------------------------------
.text:000057F0
.text:000057F0                               loc_57F0                      ; CODE XREF: sub_5730+76↑j
.text:000057F0 DF F8 54 17                   LDR.W           R1, =(aAudioHwPrimary - 0x5802) ; "audio_hw_primary"
.text:000057F4 06 20                         MOVS            R0, #6
.text:000057F6 DF F8 54 27                   LDR.W           R2, =(aSCannTGetHwMes - 0x5804) ; "%s(): cann't get hw.messagerecord.state"
.text:000057FA DF F8 54 37                   LDR.W           R3, =(aSetVoiceAutoan - 0x5806) ; "set_voice_autoanswer"
.text:000057FE 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00005800 7A 44                         ADD             R2, PC        ; "%s(): cann't get hw.messagerecord.state"
.text:00005802 7B 44                         ADD             R3, PC        ; "set_voice_autoanswer"
.text:00005804 FD F7 E8 EB                   BLX             __android_log_print
.text:00005804
.text:00005808 D4 F8 A8 10                   LDR.W           R1, [R4,#0xA8]
.text:00005808
.text:0000580C
.text:0000580C                               loc_580C                      ; CODE XREF: sub_5730+9E↑j
.text:0000580C 02 29                         CMP             R1, #2
.text:0000580E 02 D1                         BNE             loc_5816
.text:0000580E
.text:00005810 20 46                         MOV             R0, R4
.text:00005812 FF F7 E9 FE                   BL              sub_55E8
.text:00005812
.text:00005816
.text:00005816                               loc_5816                      ; CODE XREF: sub_5730+54↑j
.text:00005816                                                             ; sub_5730+DE↑j
.text:00005816 94 F8 21 01                   LDRB.W          R0, [R4,#0x121]
.text:0000581A 05 F0 0C 01                   AND.W           R1, R5, #0xC
.text:0000581E 05 F0 02 09                   AND.W           R9, R5, #2
.text:00005822 38 B1                         CBZ             R0, loc_5834
.text:00005822
.text:00005824 20 46                         MOV             R0, R4
.text:00005826 05 91                         STR             R1, [SP,#0xC0+var_AC]
.text:00005828 00 F0 5A FD                   BL              sub_62E0
.text:00005828
.text:0000582C 20 46                         MOV             R0, R4
.text:0000582E FE F7 25 FD                   BL              sub_427C
.text:0000582E
.text:00005832 05 E0                         B               loc_5840
.text:00005832
.text:00005834                               ; ---------------------------------------------------------------------------
.text:00005834
.text:00005834                               loc_5834                      ; CODE XREF: sub_5730+F2↑j
.text:00005834 00 29                         CMP             R1, #0
.text:00005836 05 91                         STR             R1, [SP,#0xC0+var_AC]
.text:00005838 1C BF                         ITT NE
.text:0000583A 20 46                         MOVNE           R0, R4
.text:0000583C FE F7 58 FD                   BLNE            sub_42F0
.text:0000583C
.text:00005840
.text:00005840                               loc_5840                      ; CODE XREF: sub_5730+102↑j
.text:00005840 B9 F1 00 0F                   CMP.W           R9, #0
.text:00005844 08 D1                         BNE             loc_5858
.text:00005844
.text:00005846 94 F8 04 01                   LDRB.W          R0, [R4,#0x104]
.text:0000584A 28 B1                         CBZ             R0, loc_5858
.text:0000584A
.text:0000584C 20 46                         MOV             R0, R4
.text:0000584E 00 F0 89 FC                   BL              sub_6164
.text:0000584E
.text:00005852 00 20                         MOVS            R0, #0
.text:00005854 84 F8 04 01                   STRB.W          R0, [R4,#0x104]
.text:00005854
.text:00005858
.text:00005858                               loc_5858                      ; CODE XREF: sub_5730+114↑j
.text:00005858                                                             ; sub_5730+11A↑j
.text:00005858 B8 F1 08 0F                   CMP.W           R8, #8
.text:0000585C 05 D1                         BNE             loc_586A
.text:0000585C
.text:0000585E BA F1 0B 0F                   CMP.W           R10, #0xB
.text:00005862 04 BF                         ITT EQ
.text:00005864 20 46                         MOVEQ           R0, R4
.text:00005866 00 F0 19 FD                   BLEQ            sub_629C
.text:00005866
.text:0000586A
.text:0000586A                               loc_586A                      ; CODE XREF: sub_5730+12C↑j
.text:0000586A BA F1 0B 0F                   CMP.W           R10, #0xB
.text:0000586E 08 D1                         BNE             loc_5882
.text:0000586E
.text:00005870 B8 F1 08 0F                   CMP.W           R8, #8
.text:00005874 00 F0 34 81                   BEQ.W           loc_5AE0
.text:00005874
.text:00005878 94 F8 21 01                   LDRB.W          R0, [R4,#0x121]
.text:0000587C 00 28                         CMP             R0, #0
.text:0000587E 40 F0 2F 81                   BNE.W           loc_5AE0
.text:0000587E
.text:00005882
.text:00005882                               loc_5882                      ; CODE XREF: sub_5730+13E↑j
.text:00005882 DF F8 D0 26                   LDR.W           R2, =(pcm_config_backend_ptr - 0x5890)
.text:00005886 06 AB                         ADD             R3, SP, #0xC0+s1
.text:00005888 D4 E9 3F CE                   LDRD.W          R12, LR, [R4,#0xFC]
.text:0000588C 7A 44                         ADD             R2, PC        ; pcm_config_backend_ptr
.text:0000588E 12 68                         LDR             R2, [R2]      ; pcm_config_backend
.text:00005890 E3 CA                         LDM             R2!, {R0,R1,R5-R7}
.text:00005892 E3 C3                         STM             R3!, {R0,R1,R5-R7}
.text:00005894 92 E8 E3 00                   LDM.W           R2, {R0,R1,R5-R7}
.text:00005898 E3 C3                         STM             R3!, {R0,R1,R5-R7}
.text:0000589A D4 F8 A8 20                   LDR.W           R2, [R4,#0xA8]
.text:0000589E 03 2A                         CMP             R2, #3
.text:000058A0 08 D0                         BEQ             loc_58B4
.text:000058A0
.text:000058A2 02 2A                         CMP             R2, #2
.text:000058A4 13 D1                         BNE             loc_58CE
.text:000058A4
.text:000058A6 DF F8 B4 06                   LDR.W           R0, =(pcm_config_voice_call_ptr - 0x58AE)
.text:000058AA 78 44                         ADD             R0, PC        ; pcm_config_voice_call_ptr
.text:000058AC 00 68                         LDR             R0, [R0]      ; pcm_config_voice_call
.text:000058AE 47 68                         LDR             R7, [R0,#(dword_1105C - 0x11058)]
.text:000058B0 07 97                         STR             R7, [SP,#0xC0+var_A4]
.text:000058B2 67 E0                         B               loc_5984
.text:000058B2
.text:000058B4                               ; ---------------------------------------------------------------------------
.text:000058B4
.text:000058B4                               loc_58B4                      ; CODE XREF: sub_5730+170↑j
.text:000058B4 DF F8 A0 06                   LDR.W           R0, =(pcm_config_ptr - 0x58C4)
.text:000058B8 0E F1 78 01                   ADD.W           R1, LR, #0x78 ; 'x'
.text:000058BC BE F1 00 0F                   CMP.W           LR, #0
.text:000058C0 78 44                         ADD             R0, PC        ; pcm_config_ptr
.text:000058C2 00 68                         LDR             R0, [R0]      ; pcm_config
.text:000058C4 08 BF                         IT EQ
.text:000058C6 01 1D                         ADDEQ           R1, R0, #4
.text:000058C8 0F 68                         LDR             R7, [R1]      ; "bluetooth_nrec=%d"
.text:000058CA 07 97                         STR             R7, [SP,#0xC0+var_A4]
.text:000058CC 5A E0                         B               loc_5984
.text:000058CC
.text:000058CE                               ; ---------------------------------------------------------------------------
.text:000058CE
.text:000058CE                               loc_58CE                      ; CODE XREF: sub_5730+174↑j
.text:000058CE BC F1 00 0F                   CMP.W           R12, #0
.text:000058D2 41 D0                         BEQ             loc_5958
.text:000058D2
.text:000058D4 DC F8 9C 00                   LDR.W           R0, [R12,#0x9C]
.text:000058D8 06 28                         CMP             R0, #6
.text:000058DA 06 D1                         BNE             loc_58EA
.text:000058DA
.text:000058DC DC F8 48 00                   LDR.W           R0, [R12,#0x48]
.text:000058E0 01 28                         CMP             R0, #1
.text:000058E2 02 D1                         BNE             loc_58EA
.text:000058E2
.text:000058E4 4B F6 80 37                   MOVW            R7, #0xBB80
.text:000058E8 04 E0                         B               loc_58F4
.text:000058E8
.text:000058EA                               ; ---------------------------------------------------------------------------
.text:000058EA
.text:000058EA                               loc_58EA                      ; CODE XREF: sub_5730+1AA↑j
.text:000058EA                                                             ; sub_5730+1B2↑j
.text:000058EA DF F8 74 06                   LDR.W           R0, =(pcm_config_in_ptr - 0x58F2)
.text:000058EE 78 44                         ADD             R0, PC        ; pcm_config_in_ptr
.text:000058F0 00 68                         LDR             R0, [R0]      ; pcm_config_in
.text:000058F2 47 68                         LDR             R7, [R0,#(off_11034 - 0x11030)] ; "bluetooth_nrec=%d"
.text:000058F2
.text:000058F4
.text:000058F4                               loc_58F4                      ; CODE XREF: sub_5730+1B8↑j
.text:000058F4 07 97                         STR             R7, [SP,#0xC0+var_A4]
.text:000058F6 94 F8 39 01                   LDRB.W          R0, [R4,#0x139]
.text:000058FA 00 28                         CMP             R0, #0
.text:000058FC 4D D1                         BNE             loc_599A
.text:000058FC
.text:000058FE 94 F8 04 01                   LDRB.W          R0, [R4,#0x104]
.text:00005902 28 B1                         CBZ             R0, loc_5910
.text:00005902
.text:00005904 02 20                         MOVS            R0, #2
.text:00005906 FD F7 BE EC                   BLX             NxpTfa98xx_SetMute
.text:00005906
.text:0000590A 01 20                         MOVS            R0, #1
.text:0000590C 84 F8 05 01                   STRB.W          R0, [R4,#0x105]
.text:0000590C
.text:00005910
.text:00005910                               loc_5910                      ; CODE XREF: sub_5730+1D2↑j
.text:00005910 DF F8 50 16                   LDR.W           R1, =(aHpoutDigitalSw - 0x591E) ; "HPOUT Digital Switch"
.text:00005914 00 22                         MOVS            R2, #0
.text:00005916 D4 F8 C0 00                   LDR.W           R0, [R4,#0xC0]
.text:0000591A 79 44                         ADD             R1, PC        ; "HPOUT Digital Switch"
.text:0000591C FE F7 22 FD                   BL              sub_4364
.text:0000591C
.text:00005920 DF F8 44 16                   LDR.W           R1, =(aEpoutDigitalSw - 0x592E) ; "EPOUT Digital Switch"
.text:00005924 00 22                         MOVS            R2, #0
.text:00005926 D4 F8 C0 00                   LDR.W           R0, [R4,#0xC0]
.text:0000592A 79 44                         ADD             R1, PC        ; "EPOUT Digital Switch"
.text:0000592C FE F7 1A FD                   BL              sub_4364
.text:0000592C
.text:00005930 DF F8 38 16                   LDR.W           R1, =(aAif2tx1Input1 - 0x593E) ; "AIF2TX1 Input 1"
.text:00005934 00 22                         MOVS            R2, #0
.text:00005936 D4 F8 C0 00                   LDR.W           R0, [R4,#0xC0]
.text:0000593A 79 44                         ADD             R1, PC        ; "AIF2TX1 Input 1"
.text:0000593C FE F7 12 FD                   BL              sub_4364
.text:0000593C
.text:00005940 DF F8 2C 16                   LDR.W           R1, =(aAif2tx2Input1 - 0x594E) ; "AIF2TX2 Input 1"
.text:00005944 00 22                         MOVS            R2, #0
.text:00005946 D4 F8 C0 00                   LDR.W           R0, [R4,#0xC0]
.text:0000594A 79 44                         ADD             R1, PC        ; "AIF2TX2 Input 1"
.text:0000594C FE F7 0A FD                   BL              sub_4364
.text:0000594C
.text:00005950 01 20                         MOVS            R0, #1
.text:00005952 84 F8 0C 01                   STRB.W          R0, [R4,#0x10C]
.text:00005956 20 E0                         B               loc_599A
.text:00005956
.text:00005958                               ; ---------------------------------------------------------------------------
.text:00005958
.text:00005958                               loc_5958                      ; CODE XREF: sub_5730+1A2↑j
.text:00005958 DF F8 18 06                   LDR.W           R0, =(pcm_config_ptr - 0x5964)
.text:0000595C BE F1 00 0F                   CMP.W           LR, #0
.text:00005960 78 44                         ADD             R0, PC        ; pcm_config_ptr
.text:00005962 00 68                         LDR             R0, [R0]      ; pcm_config
.text:00005964 00 F1 04 01                   ADD.W           R1, R0, #4
.text:00005968 00 F1 10 00                   ADD.W           R0, R0, #0x10
.text:0000596C 18 BF                         IT NE
.text:0000596E 0E F1 78 01                   ADDNE.W         R1, LR, #0x78 ; 'x'
.text:00005972 BE F1 00 0F                   CMP.W           LR, #0
.text:00005976 0F 68                         LDR             R7, [R1]
.text:00005978 07 97                         STR             R7, [SP,#0xC0+var_A4]
.text:0000597A 18 BF                         IT NE
.text:0000597C 0E F1 84 00                   ADDNE.W         R0, LR, #0x84
.text:00005980 00 68                         LDR             R0, [R0]
.text:00005982 0A 90                         STR             R0, [SP,#0xC0+var_98]
.text:00005982
.text:00005984
.text:00005984                               loc_5984                      ; CODE XREF: sub_5730+182↑j
.text:00005984                                                             ; sub_5730+19C↑j
.text:00005984 BC F1 00 0F                   CMP.W           R12, #0
.text:00005988 08 BF                         IT EQ
.text:0000598A BE F1 00 0F                   CMPEQ.W         LR, #0
.text:0000598E 04 D1                         BNE             loc_599A
.text:0000598E
.text:00005990 D4 F8 DC 00                   LDR.W           R0, [R4,#0xDC]
.text:00005994 00 28                         CMP             R0, #0
.text:00005996 00 F0 A3 80                   BEQ.W           loc_5AE0
.text:00005996
.text:0000599A
.text:0000599A                               loc_599A                      ; CODE XREF: sub_5730+1CC↑j
.text:0000599A                                                             ; sub_5730+226↑j
.text:0000599A                                                             ; sub_5730+25E↑j
.text:0000599A D4 F8 E4 00                   LDR.W           R0, [R4,#0xE4]
.text:0000599E B0 B1                         CBZ             R0, loc_59CE
.text:0000599E
.text:000059A0 D4 F8 E8 00                   LDR.W           R0, [R4,#0xE8]
.text:000059A4 98 B1                         CBZ             R0, loc_59CE
.text:000059A4
.text:000059A6 DF F8 D0 05                   LDR.W           R0, =(byte_116D4 - 0x59AE)
.text:000059AA 78 44                         ADD             R0, PC        ; byte_116D4
.text:000059AC 00 78                         LDRB            R0, [R0]
.text:000059AE 01 28                         CMP             R0, #1
.text:000059B0 0D D1                         BNE             loc_59CE
.text:000059B0
.text:000059B2 DF F8 C8 05                   LDR.W           R0, =(dword_116D8 - 0x59BA)
.text:000059B6 78 44                         ADD             R0, PC        ; dword_116D8
.text:000059B8 00 68                         LDR             R0, [R0]
.text:000059BA 87 42                         CMP             R7, R0
.text:000059BC 07 D1                         BNE             loc_59CE
.text:000059BC
.text:000059BE DF F8 C0 15                   LDR.W           R1, =(dword_116DC - 0x59C8)
.text:000059C2 0A 98                         LDR             R0, [SP,#0xC0+var_98]
.text:000059C4 79 44                         ADD             R1, PC        ; dword_116DC
.text:000059C6 09 68                         LDR             R1, [R1]
.text:000059C8 88 42                         CMP             R0, R1
.text:000059CA 00 F0 89 80                   BEQ.W           loc_5AE0
.text:000059CA
.text:000059CE
.text:000059CE                               loc_59CE                      ; CODE XREF: sub_5730+26E↑j
.text:000059CE                                                             ; sub_5730+274↑j
.text:000059CE                                                             ; sub_5730+280↑j
.text:000059CE                                                             ; sub_5730+28C↑j
.text:000059CE 06 98                         LDR             R0, [SP,#0xC0+s1]
.text:000059D0 0A 99                         LDR             R1, [SP,#0xC0+var_98]
.text:000059D2 DF F8 B8 25                   LDR.W           R2, =(aSOpenSDaiRateD - 0x59E0) ; "%s(): open %s-dai, rate=%d, format=%d,c"...
.text:000059D6 03 90                         STR             R0, [SP,#0xC0+var_B4]
.text:000059D8 DF F8 A8 05                   LDR.W           R0, =(aMedia - 0x59EA) ; "media"
.text:000059DC 7A 44                         ADD             R2, PC        ; "%s(): open %s-dai, rate=%d, format=%d,c"...
.text:000059DE DF F8 B0 35                   LDR.W           R3, =(aStartBackend - 0x59EC) ; "start_backend"
.text:000059E2 CD E9 01 71                   STRD.W          R7, R1, [SP,#0xC0+var_BC]
.text:000059E6 78 44                         ADD             R0, PC        ; "media"
.text:000059E8 7B 44                         ADD             R3, PC        ; "start_backend"
.text:000059EA DF F8 9C 15                   LDR.W           R1, =(aAudioHwPrimary - 0x59F6) ; "audio_hw_primary"
.text:000059EE 00 90                         STR             R0, [SP,#0xC0+var_C0]
.text:000059F0 03 20                         MOVS            R0, #3
.text:000059F2 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000059F4 FD F7 F0 EA                   BLX             __android_log_print
.text:000059F4
.text:000059F8 D4 F8 E4 00                   LDR.W           R0, [R4,#0xE4]
.text:000059FC 20 B1                         CBZ             R0, loc_5A08
.text:000059FC
.text:000059FE FD F7 58 EB                   BLX             pcm_close
.text:000059FE
.text:00005A02 00 20                         MOVS            R0, #0
.text:00005A04 C4 F8 E4 00                   STR.W           R0, [R4,#0xE4]
.text:00005A04
.text:00005A08
.text:00005A08                               loc_5A08                      ; CODE XREF: sub_5730+2CC↑j
.text:00005A08 D4 F8 E8 00                   LDR.W           R0, [R4,#0xE8]
.text:00005A0C 20 B1                         CBZ             R0, loc_5A18
.text:00005A0C
.text:00005A0E FD F7 50 EB                   BLX             pcm_close
.text:00005A0E
.text:00005A12 00 20                         MOVS            R0, #0
.text:00005A14 C4 F8 E8 00                   STR.W           R0, [R4,#0xE8]
.text:00005A14
.text:00005A18
.text:00005A18                               loc_5A18                      ; CODE XREF: sub_5730+2DC↑j
.text:00005A18 06 AB                         ADD             R3, SP, #0xC0+s1
.text:00005A1A 00 20                         MOVS            R0, #0
.text:00005A1C 02 21                         MOVS            R1, #2
.text:00005A1E 00 22                         MOVS            R2, #0
.text:00005A20 FD F7 16 EB                   BLX             pcm_open
.text:00005A20
.text:00005A24 C4 F8 E4 00                   STR.W           R0, [R4,#0xE4]
.text:00005A28 10 B1                         CBZ             R0, loc_5A30
.text:00005A28
.text:00005A2A FD F7 18 EB                   BLX             pcm_is_ready
.text:00005A2A
.text:00005A2E 20 B3                         CBZ             R0, loc_5A7A
.text:00005A2E
.text:00005A30
.text:00005A30                               loc_5A30                      ; CODE XREF: sub_5730+2F8↑j
.text:00005A30 06 AB                         ADD             R3, SP, #0xC0+s1
.text:00005A32 00 20                         MOVS            R0, #0
.text:00005A34 02 21                         MOVS            R1, #2
.text:00005A36 4F F0 80 52                   MOV.W           R2, #0x10000000
.text:00005A3A FD F7 0A EB                   BLX             pcm_open
.text:00005A3A
.text:00005A3E C4 F8 E8 00                   STR.W           R0, [R4,#0xE8]
.text:00005A42 10 B1                         CBZ             R0, loc_5A4A
.text:00005A42
.text:00005A44 FD F7 0A EB                   BLX             pcm_is_ready
.text:00005A44
.text:00005A48 48 B3                         CBZ             R0, loc_5A9E
.text:00005A48
.text:00005A4A
.text:00005A4A                               loc_5A4A                      ; CODE XREF: sub_5730+312↑j
.text:00005A4A D4 F8 E4 00                   LDR.W           R0, [R4,#0xE4]
.text:00005A4E FD F7 0C EB                   BLX             pcm_prepare
.text:00005A4E
.text:00005A52 D4 F8 E8 00                   LDR.W           R0, [R4,#0xE8]
.text:00005A56 FD F7 08 EB                   BLX             pcm_prepare
.text:00005A56
.text:00005A5A DF F8 50 05                   LDR.W           R0, =(byte_116D4 - 0x5A64)
.text:00005A5E 01 21                         MOVS            R1, #1
.text:00005A60 78 44                         ADD             R0, PC        ; byte_116D4
.text:00005A62 01 70                         STRB            R1, [R0]
.text:00005A64 DF F8 48 15                   LDR.W           R1, =(dword_116D8 - 0x5A6E)
.text:00005A68 07 98                         LDR             R0, [SP,#0xC0+var_A4]
.text:00005A6A 79 44                         ADD             R1, PC        ; dword_116D8
.text:00005A6C 08 60                         STR             R0, [R1]
.text:00005A6E DF F8 44 15                   LDR.W           R1, =(dword_116DC - 0x5A78)
.text:00005A72 0A 98                         LDR             R0, [SP,#0xC0+var_98]
.text:00005A74 79 44                         ADD             R1, PC        ; dword_116DC
.text:00005A76 08 60                         STR             R0, [R1]
.text:00005A78 32 E0                         B               loc_5AE0
.text:00005A78
.text:00005A7A                               ; ---------------------------------------------------------------------------
.text:00005A7A
.text:00005A7A                               loc_5A7A                      ; CODE XREF: sub_5730+2FE↑j
.text:00005A7A D4 F8 E4 00                   LDR.W           R0, [R4,#0xE4]
.text:00005A7E FD F7 12 EB                   BLX             pcm_get_error
.text:00005A7E
.text:00005A82 DF F8 10 15                   LDR.W           R1, =(aAudioHwPrimary - 0x5A92) ; "audio_hw_primary"
.text:00005A86 DF F8 10 25                   LDR.W           R2, =(aSPcmOpenBacken_0 - 0x5A96) ; "%s(): pcm_open(BACKEND_OUT) failed: %s"
.text:00005A8A DF F8 10 35                   LDR.W           R3, =(aStartBackend - 0x5A98) ; "start_backend"
.text:00005A8E 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00005A90 00 90                         STR             R0, [SP,#0xC0+var_C0]
.text:00005A92 7A 44                         ADD             R2, PC        ; "%s(): pcm_open(BACKEND_OUT) failed: %s"
.text:00005A94 7B 44                         ADD             R3, PC        ; "start_backend"
.text:00005A96 06 20                         MOVS            R0, #6
.text:00005A98 FD F7 9E EA                   BLX             __android_log_print
.text:00005A98
.text:00005A9C 18 E0                         B               loc_5AD0
.text:00005A9C
.text:00005A9E                               ; ---------------------------------------------------------------------------
.text:00005A9E
.text:00005A9E                               loc_5A9E                      ; CODE XREF: sub_5730+318↑j
.text:00005A9E D4 F8 E8 00                   LDR.W           R0, [R4,#0xE8]
.text:00005AA2 FD F7 00 EB                   BLX             pcm_get_error
.text:00005AA2
.text:00005AA6 DF F8 F8 14                   LDR.W           R1, =(aAudioHwPrimary - 0x5AB6) ; "audio_hw_primary"
.text:00005AAA DF F8 F8 24                   LDR.W           R2, =(aSPcmOpenBacken_1 - 0x5ABA) ; "%s(): pcm_open(BACKEND_IN) failed: %s"
.text:00005AAE DF F8 F8 34                   LDR.W           R3, =(aStartBackend - 0x5ABC) ; "start_backend"
.text:00005AB2 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00005AB4 00 90                         STR             R0, [SP,#0xC0+var_C0]
.text:00005AB6 7A 44                         ADD             R2, PC        ; "%s(): pcm_open(BACKEND_IN) failed: %s"
.text:00005AB8 7B 44                         ADD             R3, PC        ; "start_backend"
.text:00005ABA 06 20                         MOVS            R0, #6
.text:00005ABC FD F7 8C EA                   BLX             __android_log_print
.text:00005ABC
.text:00005AC0 D4 F8 E8 00                   LDR.W           R0, [R4,#0xE8]
.text:00005AC4 20 B1                         CBZ             R0, loc_5AD0
.text:00005AC4
.text:00005AC6 FD F7 F4 EA                   BLX             pcm_close
.text:00005AC6
.text:00005ACA 00 20                         MOVS            R0, #0
.text:00005ACC C4 F8 E8 00                   STR.W           R0, [R4,#0xE8]
.text:00005ACC
.text:00005AD0
.text:00005AD0                               loc_5AD0                      ; CODE XREF: sub_5730+36C↑j
.text:00005AD0                                                             ; sub_5730+394↑j
.text:00005AD0 D4 F8 E4 00                   LDR.W           R0, [R4,#0xE4]
.text:00005AD4 20 B1                         CBZ             R0, loc_5AE0
.text:00005AD4
.text:00005AD6 FD F7 EC EA                   BLX             pcm_close
.text:00005AD6
.text:00005ADA 00 20                         MOVS            R0, #0
.text:00005ADC C4 F8 E4 00                   STR.W           R0, [R4,#0xE4]
.text:00005ADC
.text:00005AE0
.text:00005AE0                               loc_5AE0                      ; CODE XREF: sub_5730+144↑j
.text:00005AE0                                                             ; sub_5730+14E↑j
.text:00005AE0                                                             ; sub_5730+266↑j
.text:00005AE0                                                             ; sub_5730+29A↑j
.text:00005AE0                                                             ; sub_5730+348↑j
.text:00005AE0                                                             ; sub_5730+3A4↑j
.text:00005AE0 B9 F1 00 0F                   CMP.W           R9, #0
.text:00005AE4 5F D0                         BEQ             loc_5BA6
.text:00005AE4
.text:00005AE6 94 F8 04 01                   LDRB.W          R0, [R4,#0x104]
.text:00005AEA 00 28                         CMP             R0, #0
.text:00005AEC 5B D1                         BNE             loc_5BA6
.text:00005AEC
.text:00005AEE DF F8 C8 14                   LDR.W           R1, =(pcm_config_amplifier_ptr - 0x5AFC)
.text:00005AF2 06 AA                         ADD             R2, SP, #0xC0+s1
.text:00005AF4 D4 F8 00 C1                   LDR.W           R12, [R4,#0x100]
.text:00005AF8 79 44                         ADD             R1, PC        ; pcm_config_amplifier_ptr
.text:00005AFA 09 68                         LDR             R1, [R1]      ; pcm_config_amplifier
.text:00005AFC E9 C9                         LDM             R1!, {R0,R3,R5-R7}
.text:00005AFE E9 C2                         STM             R2!, {R0,R3,R5-R7}
.text:00005B00 91 E8 E9 00                   LDM.W           R1, {R0,R3,R5-R7}
.text:00005B04 E9 C2                         STM             R2!, {R0,R3,R5-R7}
.text:00005B06 D4 F8 A8 00                   LDR.W           R0, [R4,#0xA8]
.text:00005B0A 20 F0 01 00                   BIC.W           R0, R0, #1
.text:00005B0E 02 28                         CMP             R0, #2
.text:00005B10 14 D0                         BEQ             loc_5B3C
.text:00005B10
.text:00005B12 BC F1 00 0F                   CMP.W           R12, #0
.text:00005B16 1C BF                         ITT NE
.text:00005B18 DC F8 78 00                   LDRNE.W         R0, [R12,#0x78]
.text:00005B1C 00 28                         CMPNE           R0, #0
.text:00005B1E 10 D0                         BEQ             loc_5B42
.text:00005B1E
.text:00005B20 4C F2 3B 61 CB F6 37 61       MOV             R1, #0xBE37C63B
.text:00005B28 A0 FB 01 12                   UMULL.W         R1, R2, R0, R1
.text:00005B2C 4A F6 44 41                   MOVW            R1, #0xAC44
.text:00005B30 D2 0B                         LSRS            R2, R2, #0xF
.text:00005B32 02 FB 11 00                   MLS.W           R0, R2, R1, R0
.text:00005B36 00 28                         CMP             R0, #0
.text:00005B38 00 F0 CC 81                   BEQ.W           loc_5ED4
.text:00005B38
.text:00005B3C
.text:00005B3C                               loc_5B3C                      ; CODE XREF: sub_5730+3E0↑j
.text:00005B3C 4B F6 80 30                   MOVW            R0, #0xBB80
.text:00005B40 07 90                         STR             R0, [SP,#0xC0+var_A4]
.text:00005B40
.text:00005B42
.text:00005B42                               loc_5B42                      ; CODE XREF: sub_5730+3EE↑j
.text:00005B42                                                             ; sub_5730+7A6↓j
.text:00005B42 D4 F8 F4 00                   LDR.W           R0, [R4,#0xF4]
.text:00005B46 98 B9                         CBNZ            R0, loc_5B70
.text:00005B46
.text:00005B48 06 AB                         ADD             R3, SP, #0xC0+s1
.text:00005B4A 00 20                         MOVS            R0, #0
.text:00005B4C 06 21                         MOVS            R1, #6
.text:00005B4E 00 22                         MOVS            R2, #0
.text:00005B50 00 27                         MOVS            R7, #0
.text:00005B52 FD F7 7E EA                   BLX             pcm_open
.text:00005B52
.text:00005B56 C4 F8 F4 00                   STR.W           R0, [R4,#0xF4]
.text:00005B5A 30 B1                         CBZ             R0, loc_5B6A
.text:00005B5A
.text:00005B5C FD F7 7E EA                   BLX             pcm_is_ready
.text:00005B5C
.text:00005B60 D4 F8 F4 70                   LDR.W           R7, [R4,#0xF4]
.text:00005B64 00 28                         CMP             R0, #0
.text:00005B66 00 F0 B7 81                   BEQ.W           loc_5ED8
.text:00005B66
.text:00005B6A
.text:00005B6A                               loc_5B6A                      ; CODE XREF: sub_5730+42A↑j
.text:00005B6A 38 46                         MOV             R0, R7
.text:00005B6C FD F7 7C EA                   BLX             pcm_prepare
.text:00005B6C
.text:00005B70
.text:00005B70                               loc_5B70                      ; CODE XREF: sub_5730+416↑j
.text:00005B70 D4 F8 F8 00                   LDR.W           R0, [R4,#0xF8]
.text:00005B74 A0 B9                         CBNZ            R0, loc_5BA0
.text:00005B74
.text:00005B76 06 AB                         ADD             R3, SP, #0xC0+s1
.text:00005B78 00 20                         MOVS            R0, #0
.text:00005B7A 06 21                         MOVS            R1, #6
.text:00005B7C 4F F0 80 52                   MOV.W           R2, #0x10000000
.text:00005B80 00 27                         MOVS            R7, #0
.text:00005B82 FD F7 66 EA                   BLX             pcm_open
.text:00005B82
.text:00005B86 C4 F8 F8 00                   STR.W           R0, [R4,#0xF8]
.text:00005B8A 30 B1                         CBZ             R0, loc_5B9A
.text:00005B8A
.text:00005B8C FD F7 66 EA                   BLX             pcm_is_ready
.text:00005B8C
.text:00005B90 D4 F8 F8 70                   LDR.W           R7, [R4,#0xF8]
.text:00005B94 00 28                         CMP             R0, #0
.text:00005B96 00 F0 AD 81                   BEQ.W           loc_5EF4
.text:00005B96
.text:00005B9A
.text:00005B9A                               loc_5B9A                      ; CODE XREF: sub_5730+45A↑j
.text:00005B9A 38 46                         MOV             R0, R7
.text:00005B9C FD F7 64 EA                   BLX             pcm_prepare
.text:00005B9C
.text:00005BA0
.text:00005BA0                               loc_5BA0                      ; CODE XREF: sub_5730+444↑j
.text:00005BA0 07 98                         LDR             R0, [SP,#0xC0+var_A4]
.text:00005BA2 C4 F8 08 01                   STR.W           R0, [R4,#0x108]
.text:00005BA2
.text:00005BA6
.text:00005BA6                               loc_5BA6                      ; CODE XREF: sub_5730+3B4↑j
.text:00005BA6                                                             ; sub_5730+3BC↑j
.text:00005BA6                                                             ; sub_5730+7F4↓j
.text:00005BA6                                                             ; sub_5730+802↓j
.text:00005BA6 D4 F8 EC 00                   LDR.W           R0, [R4,#0xEC]
.text:00005BAA BB F1 01 0F                   CMP.W           R11, #1
.text:00005BAE 3D D1                         BNE             loc_5C2C
.text:00005BAE
.text:00005BB0 08 BB                         CBNZ            R0, loc_5BF6
.text:00005BB0
.text:00005BB2 DF F8 2C 14                   LDR.W           R1, =(aAudioHwPrimary - 0x5BC4) ; "audio_hw_primary"
.text:00005BB6 03 20                         MOVS            R0, #3
.text:00005BB8 DF F8 28 24                   LDR.W           R2, =(aS_0 - 0x5BC6) ; "%s():..."
.text:00005BBC DF F8 28 34                   LDR.W           R3, =(aStartBtSco - 0x5BC8) ; "start_bt_sco"
.text:00005BC0 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00005BC2 7A 44                         ADD             R2, PC        ; "%s():..."
.text:00005BC4 7B 44                         ADD             R3, PC        ; "start_bt_sco"
.text:00005BC6 FD F7 08 EA                   BLX             __android_log_print
.text:00005BC6
.text:00005BCA DF F8 20 04                   LDR.W           R0, =(pcm_config_sco_ptr - 0x5BD8)
.text:00005BCE 05 21                         MOVS            R1, #5
.text:00005BD0 00 22                         MOVS            R2, #0
.text:00005BD2 00 27                         MOVS            R7, #0
.text:00005BD4 78 44                         ADD             R0, PC        ; pcm_config_sco_ptr
.text:00005BD6 03 68                         LDR             R3, [R0]      ; pcm_config_sco
.text:00005BD8 00 20                         MOVS            R0, #0
.text:00005BDA FD F7 3A EA                   BLX             pcm_open
.text:00005BDA
.text:00005BDE C4 F8 EC 00                   STR.W           R0, [R4,#0xEC]
.text:00005BE2 28 B1                         CBZ             R0, loc_5BF0
.text:00005BE2
.text:00005BE4 FD F7 3A EA                   BLX             pcm_is_ready
.text:00005BE4
.text:00005BE8 D4 F8 EC 70                   LDR.W           R7, [R4,#0xEC]
.text:00005BEC 00 28                         CMP             R0, #0
.text:00005BEE 42 D0                         BEQ             loc_5C76
.text:00005BEE
.text:00005BF0
.text:00005BF0                               loc_5BF0                      ; CODE XREF: sub_5730+4B2↑j
.text:00005BF0 38 46                         MOV             R0, R7
.text:00005BF2 FD F7 3A EA                   BLX             pcm_prepare
.text:00005BF2
.text:00005BF6
.text:00005BF6                               loc_5BF6                      ; CODE XREF: sub_5730+480↑j
.text:00005BF6 D4 F8 F0 00                   LDR.W           R0, [R4,#0xF0]
.text:00005BFA 00 28                         CMP             R0, #0
.text:00005BFC 67 D1                         BNE             loc_5CCE
.text:00005BFC
.text:00005BFE DF F8 FC 03                   LDR.W           R0, =(pcm_config_sco_ptr - 0x5C0E)
.text:00005C02 05 21                         MOVS            R1, #5
.text:00005C04 4F F0 80 52                   MOV.W           R2, #0x10000000
.text:00005C08 00 27                         MOVS            R7, #0
.text:00005C0A 78 44                         ADD             R0, PC        ; pcm_config_sco_ptr
.text:00005C0C 03 68                         LDR             R3, [R0]      ; pcm_config_sco
.text:00005C0E 00 20                         MOVS            R0, #0
.text:00005C10 FD F7 1E EA                   BLX             pcm_open
.text:00005C10
.text:00005C14 C4 F8 F0 00                   STR.W           R0, [R4,#0xF0]
.text:00005C18 20 B1                         CBZ             R0, loc_5C24
.text:00005C18
.text:00005C1A FD F7 20 EA                   BLX             pcm_is_ready
.text:00005C1A
.text:00005C1E D4 F8 F0 70                   LDR.W           R7, [R4,#0xF0]
.text:00005C22 C8 B3                         CBZ             R0, loc_5C98
.text:00005C22
.text:00005C24
.text:00005C24                               loc_5C24                      ; CODE XREF: sub_5730+4E8↑j
.text:00005C24 38 46                         MOV             R0, R7
.text:00005C26 FD F7 20 EA                   BLX             pcm_prepare
.text:00005C26
.text:00005C2A 50 E0                         B               loc_5CCE
.text:00005C2A
.text:00005C2C                               ; ---------------------------------------------------------------------------
.text:00005C2C
.text:00005C2C                               loc_5C2C                      ; CODE XREF: sub_5730+47E↑j
.text:00005C2C B0 B1                         CBZ             R0, loc_5C5C
.text:00005C2C
.text:00005C2E DF F8 A4 13                   LDR.W           R1, =(aAudioHwPrimary - 0x5C40) ; "audio_hw_primary"
.text:00005C32 03 20                         MOVS            R0, #3
.text:00005C34 DF F8 A0 23                   LDR.W           R2, =(aS_0 - 0x5C42) ; "%s():..."
.text:00005C38 DF F8 A0 33                   LDR.W           R3, =(aStopBtSco - 0x5C44) ; "stop_bt_sco"
.text:00005C3C 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00005C3E 7A 44                         ADD             R2, PC        ; "%s():..."
.text:00005C40 7B 44                         ADD             R3, PC        ; "stop_bt_sco"
.text:00005C42 FD F7 CA E9                   BLX             __android_log_print
.text:00005C42
.text:00005C46 D4 F8 EC 00                   LDR.W           R0, [R4,#0xEC]
.text:00005C4A FD F7 C8 EA                   BLX             pcm_stop
.text:00005C4A
.text:00005C4E D4 F8 EC 00                   LDR.W           R0, [R4,#0xEC]
.text:00005C52 FD F7 2E EA                   BLX             pcm_close
.text:00005C52
.text:00005C56 00 20                         MOVS            R0, #0
.text:00005C58 C4 F8 EC 00                   STR.W           R0, [R4,#0xEC]
.text:00005C58
.text:00005C5C
.text:00005C5C                               loc_5C5C                      ; CODE XREF: sub_5730:loc_5C2C↑j
.text:00005C5C D4 F8 F0 00                   LDR.W           R0, [R4,#0xF0]
.text:00005C60 A8 B3                         CBZ             R0, loc_5CCE
.text:00005C60
.text:00005C62 FD F7 BC EA                   BLX             pcm_stop
.text:00005C62
.text:00005C66 D4 F8 F0 00                   LDR.W           R0, [R4,#0xF0]
.text:00005C6A FD F7 22 EA                   BLX             pcm_close
.text:00005C6A
.text:00005C6E 00 20                         MOVS            R0, #0
.text:00005C70 C4 F8 F0 00                   STR.W           R0, [R4,#0xF0]
.text:00005C74 2B E0                         B               loc_5CCE
.text:00005C74
.text:00005C76                               ; ---------------------------------------------------------------------------
.text:00005C76
.text:00005C76                               loc_5C76                      ; CODE XREF: sub_5730+4BE↑j
.text:00005C76 38 46                         MOV             R0, R7
.text:00005C78 FD F7 14 EA                   BLX             pcm_get_error
.text:00005C78
.text:00005C7C DF F8 70 13                   LDR.W           R1, =(aAudioHwPrimary - 0x5C8C) ; "audio_hw_primary"
.text:00005C80 DF F8 70 23                   LDR.W           R2, =(aSPcmOpenScoOut - 0x5C90) ; "%s(): pcm_open(SCO_OUT) failed: %s"
.text:00005C84 DF F8 70 33                   LDR.W           R3, =(aStartBtSco - 0x5C92) ; "start_bt_sco"
.text:00005C88 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00005C8A 00 90                         STR             R0, [SP,#0xC0+var_C0]
.text:00005C8C 7A 44                         ADD             R2, PC        ; "%s(): pcm_open(SCO_OUT) failed: %s"
.text:00005C8E 7B 44                         ADD             R3, PC        ; "start_bt_sco"
.text:00005C90 06 20                         MOVS            R0, #6
.text:00005C92 FD F7 A2 E9                   BLX             __android_log_print
.text:00005C92
.text:00005C96 13 E0                         B               loc_5CC0
.text:00005C96
.text:00005C98                               ; ---------------------------------------------------------------------------
.text:00005C98
.text:00005C98                               loc_5C98                      ; CODE XREF: sub_5730+4F2↑j
.text:00005C98 38 46                         MOV             R0, R7
.text:00005C9A FD F7 04 EA                   BLX             pcm_get_error
.text:00005C9A
.text:00005C9E D8 49                         LDR             R1, =(aAudioHwPrimary - 0x5CA8) ; "audio_hw_primary"
.text:00005CA0 D8 4A                         LDR             R2, =(aSPcmOpenScoInF - 0x5CAC) ; "%s(): pcm_open(SCO_IN) failed: %s"
.text:00005CA2 D9 4B                         LDR             R3, =(aStartBtSco - 0x5CAE) ; "start_bt_sco"
.text:00005CA4 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00005CA6 00 90                         STR             R0, [SP,#0xC0+var_C0]
.text:00005CA8 7A 44                         ADD             R2, PC        ; "%s(): pcm_open(SCO_IN) failed: %s"
.text:00005CAA 7B 44                         ADD             R3, PC        ; "start_bt_sco"
.text:00005CAC 06 20                         MOVS            R0, #6
.text:00005CAE FD F7 94 E9                   BLX             __android_log_print
.text:00005CAE
.text:00005CB2 D4 F8 F0 00                   LDR.W           R0, [R4,#0xF0]
.text:00005CB6 FD F7 FC E9                   BLX             pcm_close
.text:00005CB6
.text:00005CBA 00 20                         MOVS            R0, #0
.text:00005CBC C4 F8 F0 00                   STR.W           R0, [R4,#0xF0]
.text:00005CBC
.text:00005CC0
.text:00005CC0                               loc_5CC0                      ; CODE XREF: sub_5730+566↑j
.text:00005CC0 D4 F8 EC 00                   LDR.W           R0, [R4,#0xEC]
.text:00005CC4 FD F7 F4 E9                   BLX             pcm_close
.text:00005CC4
.text:00005CC8 00 20                         MOVS            R0, #0
.text:00005CCA C4 F8 EC 00                   STR.W           R0, [R4,#0xEC]
.text:00005CCA
.text:00005CCE
.text:00005CCE                               loc_5CCE                      ; CODE XREF: sub_5730+4CC↑j
.text:00005CCE                                                             ; sub_5730+4FA↑j
.text:00005CCE                                                             ; sub_5730+530↑j
.text:00005CCE                                                             ; sub_5730+544↑j
.text:00005CCE D4 F8 BC 00                   LDR.W           R0, [R4,#0xBC]
.text:00005CD2 FD F7 D0 E9                   BLX             j_audio_route_reset
.text:00005CD2
.text:00005CD6 CD 49                         LDR             R1, =(aDummy - 0x5CE0) ; "dummy"
.text:00005CD8 D4 F8 BC 00                   LDR.W           R0, [R4,#0xBC] ; int
.text:00005CDC 79 44                         ADD             R1, PC        ; "dummy"
.text:00005CDE FD F7 D0 E9                   BLX             j_audio_route_apply_path
.text:00005CDE
.text:00005CE2 BA F1 0B 0F                   CMP.W           R10, #0xB
.text:00005CE6 0D D0                         BEQ             loc_5D04
.text:00005CE6
.text:00005CE8 B8 F1 08 0F                   CMP.W           R8, #8
.text:00005CEC 13 D0                         BEQ             loc_5D16
.text:00005CEC
.text:00005CEE CA 49                         LDR             R1, =(off_10AC4 - 0x5CF8)
.text:00005CF0 CA EB CA 00                   RSB.W           R0, R10, R10,LSL#3
.text:00005CF4 79 44                         ADD             R1, PC        ; off_10AC4
.text:00005CF6 01 EB 80 00                   ADD.W           R0, R1, R0,LSL#2
.text:00005CFA 50 F8 28 00                   LDR.W           R0, [R0,R8,LSL#2]
.text:00005CFE D0 E9 00 75                   LDRD.W          R7, R5, [R0]
.text:00005D02 35 E0                         B               loc_5D70
.text:00005D02
.text:00005D04                               ; ---------------------------------------------------------------------------
.text:00005D04
.text:00005D04                               loc_5D04                      ; CODE XREF: sub_5730+5B6↑j
.text:00005D04 B8 F1 08 0F                   CMP.W           R8, #8
.text:00005D08 20 D0                         BEQ             loc_5D4C
.text:00005D08
.text:00005D0A D4 F8 A8 00                   LDR.W           R0, [R4,#0xA8]
.text:00005D0E 02 28                         CMP             R0, #2
.text:00005D10 1F D1                         BNE             loc_5D52
.text:00005D10
.text:00005D12 00 20                         MOVS            R0, #0
.text:00005D14 22 E0                         B               loc_5D5C
.text:00005D14
.text:00005D16                               ; ---------------------------------------------------------------------------
.text:00005D16
.text:00005D16                               loc_5D16                      ; CODE XREF: sub_5730+5BC↑j
.text:00005D16 08 21                         MOVS            R1, #8
.text:00005D18 D4 F8 B0 00                   LDR.W           R0, [R4,#0xB0]
.text:00005D1C 10 22                         MOVS            R2, #0x10
.text:00005D1E C8 F2 00 01                   MOVT            R1, #0x8000
.text:00005D22 88 42                         CMP             R0, R1
.text:00005D24 4F F0 00 01                   MOV.W           R1, #0
.text:00005D28 C8 F2 00 02                   MOVT            R2, #0x8000
.text:00005D2C 08 BF                         IT EQ
.text:00005D2E 03 21                         MOVEQ           R1, #3
.text:00005D30 90 42                         CMP             R0, R2
.text:00005D32 B8 4A                         LDR             R2, =(off_10AC4 - 0x5D40)
.text:00005D34 CA EB CA 00                   RSB.W           R0, R10, R10,LSL#3
.text:00005D38 08 BF                         IT EQ
.text:00005D3A 01 21                         MOVEQ           R1, #1
.text:00005D3C 7A 44                         ADD             R2, PC        ; off_10AC4
.text:00005D3E 02 EB 80 00                   ADD.W           R0, R2, R0,LSL#2
.text:00005D42 00 27                         MOVS            R7, #0
.text:00005D44 50 F8 21 00                   LDR.W           R0, [R0,R1,LSL#2]
.text:00005D48 45 68                         LDR             R5, [R0,#4]
.text:00005D4A 11 E0                         B               loc_5D70
.text:00005D4A
.text:00005D4C                               ; ---------------------------------------------------------------------------
.text:00005D4C
.text:00005D4C                               loc_5D4C                      ; CODE XREF: sub_5730+5D8↑j
.text:00005D4C 00 25                         MOVS            R5, #0
.text:00005D4E 00 27                         MOVS            R7, #0
.text:00005D50 0E E0                         B               loc_5D70
.text:00005D50
.text:00005D52                               ; ---------------------------------------------------------------------------
.text:00005D52
.text:00005D52                               loc_5D52                      ; CODE XREF: sub_5730+5E0↑j
.text:00005D52 94 F8 39 01                   LDRB.W          R0, [R4,#0x139]
.text:00005D56 00 28                         CMP             R0, #0
.text:00005D58 18 BF                         IT NE
.text:00005D5A 02 20                         MOVNE           R0, #2
.text:00005D5A
.text:00005D5C
.text:00005D5C                               loc_5D5C                      ; CODE XREF: sub_5730+5E4↑j
.text:00005D5C AC 49                         LDR             R1, =(off_10AC4 - 0x5D68)
.text:00005D5E C0 EB C0 00                   RSB.W           R0, R0, R0,LSL#3
.text:00005D62 00 25                         MOVS            R5, #0
.text:00005D64 79 44                         ADD             R1, PC        ; off_10AC4
.text:00005D66 01 EB 80 00                   ADD.W           R0, R1, R0,LSL#2
.text:00005D6A 50 F8 28 00                   LDR.W           R0, [R0,R8,LSL#2]
.text:00005D6E 07 68                         LDR             R7, [R0]
.text:00005D6E
.text:00005D70
.text:00005D70                               loc_5D70                      ; CODE XREF: sub_5730+5D2↑j
.text:00005D70                                                             ; sub_5730+61A↑j
.text:00005D70                                                             ; sub_5730+620↑j
.text:00005D70 AA 48                         LDR             R0, =(aNone - 0x5D7C) ; "none"
.text:00005D72 00 2D                         CMP             R5, #0
.text:00005D74 D4 F8 AC 10                   LDR.W           R1, [R4,#0xAC]
.text:00005D78 78 44                         ADD             R0, PC        ; "none"
.text:00005D7A D4 F8 C8 20                   LDR.W           R2, [R4,#0xC8]
.text:00005D7E 03 46                         MOV             R3, R0
.text:00005D80 18 BF                         IT NE
.text:00005D82 2B 46                         MOVNE           R3, R5
.text:00005D84 00 2F                         CMP             R7, #0
.text:00005D86 18 BF                         IT NE
.text:00005D88 38 46                         MOVNE           R0, R7
.text:00005D8A CD E9 00 12                   STRD.W          R1, R2, [SP,#0xC0+var_C0]
.text:00005D8E CD E9 02 03                   STRD.W          R0, R3, [SP,#0xC0+var_B8]
.text:00005D92 03 20                         MOVS            R0, #3
.text:00005D94 A2 49                         LDR             R1, =(aAudioHwPrimary - 0x5D9E) ; "audio_hw_primary"
.text:00005D96 A3 4A                         LDR             R2, =(aSDevicesXInput - 0x5DA0) ; "%s(): devices %#x input src %d output r"...
.text:00005D98 A3 4B                         LDR             R3, =(aSelectDevices - 0x5DA2) ; "select_devices"
.text:00005D9A 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00005D9C 7A 44                         ADD             R2, PC        ; "%s(): devices %#x input src %d output r"...
.text:00005D9E 7B 44                         ADD             R3, PC        ; "select_devices"
.text:00005DA0 FD F7 1A E9                   BLX             __android_log_print
.text:00005DA0
.text:00005DA4 27 B1                         CBZ             R7, loc_5DB0
.text:00005DA4
.text:00005DA6 D4 F8 BC 00                   LDR.W           R0, [R4,#0xBC] ; int
.text:00005DAA 39 46                         MOV             R1, R7        ; s2
.text:00005DAC FD F7 68 E9                   BLX             j_audio_route_apply_path
.text:00005DAC
.text:00005DB0
.text:00005DB0                               loc_5DB0                      ; CODE XREF: sub_5730+674↑j
.text:00005DB0 25 B1                         CBZ             R5, loc_5DBC
.text:00005DB0
.text:00005DB2 D4 F8 BC 00                   LDR.W           R0, [R4,#0xBC] ; int
.text:00005DB6 29 46                         MOV             R1, R5        ; s2
.text:00005DB8 FD F7 62 E9                   BLX             j_audio_route_apply_path
.text:00005DB8
.text:00005DBC
.text:00005DBC                               loc_5DBC                      ; CODE XREF: sub_5730:loc_5DB0↑j
.text:00005DBC 9B 4D                         LDR             R5, =(aAudioHwPrimary - 0x5DC8) ; "audio_hw_primary"
.text:00005DBE 03 20                         MOVS            R0, #3
.text:00005DC0 9C 4E                         LDR             R6, =(aSelectDevices - 0x5DCA) ; "select_devices"
.text:00005DC2 9B 4A                         LDR             R2, =(aSRouteTimeMeas - 0x5DCE) ; "%s(): route time measurement: start"
.text:00005DC4 7D 44                         ADD             R5, PC        ; "audio_hw_primary"
.text:00005DC6 7E 44                         ADD             R6, PC        ; "select_devices"
.text:00005DC8 29 46                         MOV             R1, R5
.text:00005DCA 7A 44                         ADD             R2, PC        ; "%s(): route time measurement: start"
.text:00005DCC 33 46                         MOV             R3, R6
.text:00005DCE FD F7 04 E9                   BLX             __android_log_print
.text:00005DCE
.text:00005DD2 D4 F8 BC 00                   LDR.W           R0, [R4,#0xBC]
.text:00005DD6 FD F7 5A E9                   BLX             j_audio_route_update_mixer
.text:00005DD6
.text:00005DDA 97 4A                         LDR             R2, =(aSRouteTimeMeas_0 - 0x5DE6) ; "%s(): route time measurement: end"
.text:00005DDC 03 20                         MOVS            R0, #3
.text:00005DDE 29 46                         MOV             R1, R5
.text:00005DE0 33 46                         MOV             R3, R6
.text:00005DE2 7A 44                         ADD             R2, PC        ; "%s(): route time measurement: end"
.text:00005DE4 FD F7 F8 E8                   BLX             __android_log_print
.text:00005DE4
.text:00005DE8 05 98                         LDR             R0, [SP,#0xC0+var_AC]
.text:00005DEA 48 B1                         CBZ             R0, loc_5E00
.text:00005DEA
.text:00005DEC D4 F8 A8 00                   LDR.W           R0, [R4,#0xA8]
.text:00005DF0 30 B9                         CBNZ            R0, loc_5E00
.text:00005DF0
.text:00005DF2 94 F8 21 01                   LDRB.W          R0, [R4,#0x121]
.text:00005DF6 18 B9                         CBNZ            R0, loc_5E00
.text:00005DF6
.text:00005DF8 44 F6 20 60                   MOVW            R0, #0x4E20   ; useconds
.text:00005DFC FD F7 0A E9                   BLX             usleep
.text:00005DFC
.text:00005E00
.text:00005E00                               loc_5E00                      ; CODE XREF: sub_5730+6BA↑j
.text:00005E00                                                             ; sub_5730+6C0↑j
.text:00005E00                                                             ; sub_5730+6C6↑j
.text:00005E00 94 F8 04 01                   LDRB.W          R0, [R4,#0x104]
.text:00005E04 B9 F1 00 0F                   CMP.W           R9, #0
.text:00005E08 29 D0                         BEQ             loc_5E5E
.text:00005E08
.text:00005E0A 48 BB                         CBNZ            R0, loc_5E60
.text:00005E0A
.text:00005E0C D4 F8 A8 50                   LDR.W           R5, [R4,#0xA8]
.text:00005E10 04 98                         LDR             R0, [SP,#0xC0+var_B0]
.text:00005E12 08 B9                         CBNZ            R0, loc_5E18
.text:00005E12
.text:00005E14 02 2D                         CMP             R5, #2
.text:00005E16 2F D1                         BNE             loc_5E78
.text:00005E16
.text:00005E18
.text:00005E18                               loc_5E18                      ; CODE XREF: sub_5730+6E2↑j
.text:00005E18 41 F2 88 30                   MOVW            R0, #0x1388   ; useconds
.text:00005E1C FD F7 FA E8                   BLX             usleep
.text:00005E1C
.text:00005E20 04 98                         LDR             R0, [SP,#0xC0+var_B0]
.text:00005E22 00 22                         MOVS            R2, #0
.text:00005E24 00 28                         CMP             R0, #0
.text:00005E26 4F F0 00 00                   MOV.W           R0, #0
.text:00005E2A 08 BF                         IT EQ
.text:00005E2C 01 20                         MOVEQ           R0, #1
.text:00005E2E 02 2D                         CMP             R5, #2
.text:00005E30 08 BF                         IT EQ
.text:00005E32 01 22                         MOVEQ           R2, #1
.text:00005E34 D4 F8 08 11                   LDR.W           R1, [R4,#0x108]
.text:00005E38 40 EA 02 00                   ORR.W           R0, R0, R2
.text:00005E3C 00 22                         MOVS            R2, #0
.text:00005E3E FD F7 28 EA                   BLX             NxpTfa98xx_PowerOn
.text:00005E3E
.text:00005E42 40 B1                         CBZ             R0, loc_5E56
.text:00005E42
.text:00005E44 7D 49                         LDR             R1, =(aAudioHwPrimary - 0x5E50) ; "audio_hw_primary"
.text:00005E46 06 20                         MOVS            R0, #6
.text:00005E48 7D 4A                         LDR             R2, =(aSFailedToPower - 0x5E52) ; "%s(): failed to power on tfa98xx"
.text:00005E4A 7E 4B                         LDR             R3, =(aStartAmplifier - 0x5E54) ; "start_amplifier"
.text:00005E4C 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00005E4E 7A 44                         ADD             R2, PC        ; "%s(): failed to power on tfa98xx"
.text:00005E50 7B 44                         ADD             R3, PC        ; "start_amplifier"
.text:00005E52 FD F7 C2 E8                   BLX             __android_log_print
.text:00005E52
.text:00005E56
.text:00005E56                               loc_5E56                      ; CODE XREF: sub_5730+712↑j
.text:00005E56 01 20                         MOVS            R0, #1
.text:00005E58 84 F8 04 01                   STRB.W          R0, [R4,#0x104]
.text:00005E5C 00 E0                         B               loc_5E60
.text:00005E5C
.text:00005E5E                               ; ---------------------------------------------------------------------------
.text:00005E5E
.text:00005E5E                               loc_5E5E                      ; CODE XREF: sub_5730+6D8↑j
.text:00005E5E 58 B1                         CBZ             R0, loc_5E78
.text:00005E5E
.text:00005E60
.text:00005E60                               loc_5E60                      ; CODE XREF: sub_5730+6DA↑j
.text:00005E60                                                             ; sub_5730+72C↑j
.text:00005E60 94 F8 05 01                   LDRB.W          R0, [R4,#0x105]
.text:00005E64 40 B1                         CBZ             R0, loc_5E78
.text:00005E64
.text:00005E66 94 F8 39 01                   LDRB.W          R0, [R4,#0x139]
.text:00005E6A 28 B9                         CBNZ            R0, loc_5E78
.text:00005E6A
.text:00005E6C 00 20                         MOVS            R0, #0
.text:00005E6E 00 25                         MOVS            R5, #0
.text:00005E70 FD F7 08 EA                   BLX             NxpTfa98xx_SetMute
.text:00005E70
.text:00005E74 84 F8 05 51                   STRB.W          R5, [R4,#0x105]
.text:00005E74
.text:00005E78
.text:00005E78                               loc_5E78                      ; CODE XREF: sub_5730+6E6↑j
.text:00005E78                                                             ; sub_5730:loc_5E5E↑j
.text:00005E78                                                             ; sub_5730+734↑j
.text:00005E78                                                             ; sub_5730+73A↑j
.text:00005E78 94 F8 0C 01                   LDRB.W          R0, [R4,#0x10C]
.text:00005E7C F0 B1                         CBZ             R0, loc_5EBC
.text:00005E7C
.text:00005E7E 72 49                         LDR             R1, =(aHpoutDigitalSw - 0x5E8A) ; "HPOUT Digital Switch"
.text:00005E80 01 22                         MOVS            R2, #1
.text:00005E82 D4 F8 C0 00                   LDR.W           R0, [R4,#0xC0]
.text:00005E86 79 44                         ADD             R1, PC        ; "HPOUT Digital Switch"
.text:00005E88 FE F7 6C FA                   BL              sub_4364
.text:00005E88
.text:00005E8C 6F 49                         LDR             R1, =(aEpoutDigitalSw - 0x5E98) ; "EPOUT Digital Switch"
.text:00005E8E 01 22                         MOVS            R2, #1
.text:00005E90 D4 F8 C0 00                   LDR.W           R0, [R4,#0xC0]
.text:00005E94 79 44                         ADD             R1, PC        ; "EPOUT Digital Switch"
.text:00005E96 FE F7 65 FA                   BL              sub_4364
.text:00005E96
.text:00005E9A 6D 49                         LDR             R1, =(aAif2tx1Input1 - 0x5EA6) ; "AIF2TX1 Input 1"
.text:00005E9C 26 22                         MOVS            R2, #0x26 ; '&'
.text:00005E9E D4 F8 C0 00                   LDR.W           R0, [R4,#0xC0]
.text:00005EA2 79 44                         ADD             R1, PC        ; "AIF2TX1 Input 1"
.text:00005EA4 FE F7 5E FA                   BL              sub_4364
.text:00005EA4
.text:00005EA8 6A 49                         LDR             R1, =(aAif2tx2Input1 - 0x5EB4) ; "AIF2TX2 Input 1"
.text:00005EAA 27 22                         MOVS            R2, #0x27 ; '''
.text:00005EAC D4 F8 C0 00                   LDR.W           R0, [R4,#0xC0]
.text:00005EB0 79 44                         ADD             R1, PC        ; "AIF2TX2 Input 1"
.text:00005EB2 FE F7 57 FA                   BL              sub_4364
.text:00005EB2
.text:00005EB6 00 20                         MOVS            R0, #0
.text:00005EB8 84 F8 0C 01                   STRB.W          R0, [R4,#0x10C]
.text:00005EB8
.text:00005EBC
.text:00005EBC                               loc_5EBC                      ; CODE XREF: sub_5730+BE↑j
.text:00005EBC                                                             ; sub_5730+74C↑j
.text:00005EBC 66 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x5EC4)
.text:00005EBE 26 99                         LDR             R1, [SP,#0xC0+var_28]
.text:00005EC0 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00005EC2 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00005EC4 00 68                         LDR             R0, [R0]
.text:00005EC6 40 1A                         SUBS            R0, R0, R1
.text:00005EC8 04 BF                         ITT EQ
.text:00005ECA 27 B0                         ADDEQ           SP, SP, #0x9C
.text:00005ECC BD E8 F0 8F                   POPEQ.W         {R4-R11,PC}
.text:00005ECC
.text:00005ED0 FD F7 88 E8                   BLX             __stack_chk_fail
.text:00005ED0
.text:00005ED4                               ; ---------------------------------------------------------------------------
.text:00005ED4
.text:00005ED4                               loc_5ED4                      ; CODE XREF: sub_5730+408↑j
.text:00005ED4 07 91                         STR             R1, [SP,#0xC0+var_A4]
.text:00005ED6 34 E6                         B               loc_5B42
.text:00005ED6
.text:00005ED8                               ; ---------------------------------------------------------------------------
.text:00005ED8
.text:00005ED8                               loc_5ED8                      ; CODE XREF: sub_5730+436↑j
.text:00005ED8 38 46                         MOV             R0, R7
.text:00005EDA FD F7 E4 E8                   BLX             pcm_get_error
.text:00005EDA
.text:00005EDE 37 49                         LDR             R1, =(aAudioHwPrimary - 0x5EE8) ; "audio_hw_primary"
.text:00005EE0 37 4A                         LDR             R2, =(aSPcmOpenPaOutF - 0x5EEC) ; "%s(): pcm_open(PA_OUT) failed: %s"
.text:00005EE2 38 4B                         LDR             R3, =(aPreStartAmplif - 0x5EEE) ; "pre_start_amplifier"
.text:00005EE4 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00005EE6 00 90                         STR             R0, [SP,#0xC0+var_C0]
.text:00005EE8 7A 44                         ADD             R2, PC        ; "%s(): pcm_open(PA_OUT) failed: %s"
.text:00005EEA 7B 44                         ADD             R3, PC        ; "pre_start_amplifier"
.text:00005EEC 06 20                         MOVS            R0, #6
.text:00005EEE FD F7 74 E8                   BLX             __android_log_print
.text:00005EEE
.text:00005EF2 14 E0                         B               loc_5F1E
.text:00005EF2
.text:00005EF4                               ; ---------------------------------------------------------------------------
.text:00005EF4
.text:00005EF4                               loc_5EF4                      ; CODE XREF: sub_5730+466↑j
.text:00005EF4 38 46                         MOV             R0, R7
.text:00005EF6 FD F7 D6 E8                   BLX             pcm_get_error
.text:00005EF6
.text:00005EFA 33 49                         LDR             R1, =(aAudioHwPrimary - 0x5F04) ; "audio_hw_primary"
.text:00005EFC 33 4A                         LDR             R2, =(aSPcmOpenPaInFa - 0x5F08) ; "%s(): pcm_open(PA_IN) failed: %s"
.text:00005EFE 34 4B                         LDR             R3, =(aPreStartAmplif - 0x5F0A) ; "pre_start_amplifier"
.text:00005F00 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00005F02 00 90                         STR             R0, [SP,#0xC0+var_C0]
.text:00005F04 7A 44                         ADD             R2, PC        ; "%s(): pcm_open(PA_IN) failed: %s"
.text:00005F06 7B 44                         ADD             R3, PC        ; "pre_start_amplifier"
.text:00005F08 06 20                         MOVS            R0, #6
.text:00005F0A FD F7 66 E8                   BLX             __android_log_print
.text:00005F0A
.text:00005F0E D4 F8 F8 00                   LDR.W           R0, [R4,#0xF8]
.text:00005F12 20 B1                         CBZ             R0, loc_5F1E
.text:00005F12
.text:00005F14 FD F7 CC E8                   BLX             pcm_close
.text:00005F14
.text:00005F18 00 20                         MOVS            R0, #0
.text:00005F1A C4 F8 F8 00                   STR.W           R0, [R4,#0xF8]
.text:00005F1A
.text:00005F1E
.text:00005F1E                               loc_5F1E                      ; CODE XREF: sub_5730+7C2↑j
.text:00005F1E                                                             ; sub_5730+7E2↑j
.text:00005F1E D4 F8 F4 00                   LDR.W           R0, [R4,#0xF4]
.text:00005F22 00 28                         CMP             R0, #0
.text:00005F24 3F F4 3F AE                   BEQ.W           loc_5BA6
.text:00005F24
.text:00005F28 FD F7 C2 E8                   BLX             pcm_close
.text:00005F28
.text:00005F2C 00 20                         MOVS            R0, #0
.text:00005F2E C4 F8 F4 00                   STR.W           R0, [R4,#0xF4]
.text:00005F32 38 E6                         B               loc_5BA6
.text:00005F32
.text:00005F32                               ; End of function sub_5730
.text:00005F32
.text:00005F32                               ; ---------------------------------------------------------------------------
.text:00005F34 54 B6 00 00                   off_5F34 DCD __stack_chk_guard_ptr - 0x5740
.text:00005F34                                                             ; DATA XREF: sub_5730+8↑r
.text:00005F38 F5 72 00 00                   off_5F38 DCD aHwMessagerecor - 0x579E
.text:00005F38                                                             ; DATA XREF: sub_5730+60↑r
.text:00005F38                                                             ; "hw.messagerecord.state"
.text:00005F3C FD 62 00 00                   off_5F3C DCD a0 - 0x57A0      ; DATA XREF: sub_5730+66↑r
.text:00005F3C                                                             ; "0"
.text:00005F40 B4 6C 00 00                   off_5F40 DCD a1 - 0x57B2      ; DATA XREF: sub_5730+78↑r
.text:00005F40                                                             ; "1"
.text:00005F44 03 73 00 00                   off_5F44 DCD aVoiceCallAutoA - 0x57E4
.text:00005F44                                                             ; DATA XREF: sub_5730+A8↑r
.text:00005F44                                                             ; "voice-call-auto-answer-capture"
.text:00005F48 9D 62 00 00                   off_5F48 DCD aAudioHwPrimary - 0x5802
.text:00005F48                                                             ; DATA XREF: sub_5730:loc_57F0↑r
.text:00005F48                                                             ; "audio_hw_primary"
.text:00005F4C A6 72 00 00                   off_5F4C DCD aSCannTGetHwMes - 0x5804
.text:00005F4C                                                             ; DATA XREF: sub_5730+C6↑r
.text:00005F4C                                                             ; "%s(): cann't get hw.messagerecord.state"
.text:00005F50 CC 72 00 00                   off_5F50 DCD aSetVoiceAutoan - 0x5806
.text:00005F50                                                             ; DATA XREF: sub_5730+CA↑r
.text:00005F50                                                             ; "set_voice_autoanswer"
.text:00005F54 1C B5 00 00                   off_5F54 DCD pcm_config_backend_ptr - 0x5890
.text:00005F54                                                             ; DATA XREF: sub_5730:loc_5882↑r
.text:00005F58 E4 B4 00 00                   off_5F58 DCD pcm_config_ptr - 0x58C4
.text:00005F58                                                             ; DATA XREF: sub_5730:loc_58B4↑r
.text:00005F5C F6 B4 00 00                   off_5F5C DCD pcm_config_voice_call_ptr - 0x58AE
.text:00005F5C                                                             ; DATA XREF: sub_5730+176↑r
.text:00005F60 A6 B4 00 00                   off_5F60 DCD pcm_config_in_ptr - 0x58F2
.text:00005F60                                                             ; DATA XREF: sub_5730:loc_58EA↑r
.text:00005F64 5A 68 00 00                   off_5F64 DCD aHpoutDigitalSw - 0x591E
.text:00005F64                                                             ; DATA XREF: sub_5730:loc_5910↑r
.text:00005F64                                                             ; "HPOUT Digital Switch"
.text:00005F68 25 68 00 00                   off_5F68 DCD aEpoutDigitalSw - 0x592E
.text:00005F68                                                             ; DATA XREF: sub_5730+1F0↑r
.text:00005F68                                                             ; "EPOUT Digital Switch"
.text:00005F6C A0 73 00 00                   off_5F6C DCD aAif2tx1Input1 - 0x593E
.text:00005F6C                                                             ; DATA XREF: sub_5730+200↑r
.text:00005F6C                                                             ; "AIF2TX1 Input 1"
.text:00005F70 A0 73 00 00                   off_5F70 DCD aAif2tx2Input1 - 0x594E
.text:00005F70                                                             ; DATA XREF: sub_5730+210↑r
.text:00005F70                                                             ; "AIF2TX2 Input 1"
.text:00005F74 44 B4 00 00                   off_5F74 DCD pcm_config_ptr - 0x5964
.text:00005F74                                                             ; DATA XREF: sub_5730:loc_5958↑r
.text:00005F78 26 BD 00 00                   off_5F78 DCD byte_116D4 - 0x59AE
.text:00005F78                                                             ; DATA XREF: sub_5730+276↑r
.text:00005F7C 1E BD 00 00                   off_5F7C DCD dword_116D8 - 0x59BA
.text:00005F7C                                                             ; DATA XREF: sub_5730+282↑r
.text:00005F80 14 BD 00 00                   off_5F80 DCD dword_116DC - 0x59C8
.text:00005F80                                                             ; DATA XREF: sub_5730+28E↑r
.text:00005F84 A1 72 00 00                   off_5F84 DCD aMedia - 0x59EA  ; DATA XREF: sub_5730+2A8↑r
.text:00005F84                                                             ; "media"
.text:00005F88 A9 60 00 00                   off_5F88 DCD aAudioHwPrimary - 0x59F6
.text:00005F88                                                             ; DATA XREF: sub_5730+2BA↑r
.text:00005F88                                                             ; "audio_hw_primary"
.text:00005F8C 6B 72 00 00                   off_5F8C DCD aSOpenSDaiRateD - 0x59E0
.text:00005F8C                                                             ; DATA XREF: sub_5730+2A2↑r
.text:00005F8C                                                             ; "%s(): open %s-dai, rate=%d, format=%d,c"...
.text:00005F90 91 72 00 00                   off_5F90 DCD aStartBackend - 0x59EC
.text:00005F90                                                             ; DATA XREF: sub_5730+2AE↑r
.text:00005F90                                                             ; "start_backend"
.text:00005F94 0D 60 00 00                   off_5F94 DCD aAudioHwPrimary - 0x5A92
.text:00005F94                                                             ; DATA XREF: sub_5730+352↑r
.text:00005F94                                                             ; "audio_hw_primary"
.text:00005F98 FB 71 00 00                   off_5F98 DCD aSPcmOpenBacken_0 - 0x5A96
.text:00005F98                                                             ; DATA XREF: sub_5730+356↑r
.text:00005F98                                                             ; "%s(): pcm_open(BACKEND_OUT) failed: %s"
.text:00005F9C E5 71 00 00                   off_5F9C DCD aStartBackend - 0x5A98
.text:00005F9C                                                             ; DATA XREF: sub_5730+35A↑r
.text:00005F9C                                                             ; "start_backend"
.text:00005FA0 E9 5F 00 00                   off_5FA0 DCD aAudioHwPrimary - 0x5AB6
.text:00005FA0                                                             ; DATA XREF: sub_5730+376↑r
.text:00005FA0                                                             ; "audio_hw_primary"
.text:00005FA4 FE 71 00 00                   off_5FA4 DCD aSPcmOpenBacken_1 - 0x5ABA
.text:00005FA4                                                             ; DATA XREF: sub_5730+37A↑r
.text:00005FA4                                                             ; "%s(): pcm_open(BACKEND_IN) failed: %s"
.text:00005FA8 C1 71 00 00                   off_5FA8 DCD aStartBackend - 0x5ABC
.text:00005FA8                                                             ; DATA XREF: sub_5730+37E↑r
.text:00005FA8                                                             ; "start_backend"
.text:00005FAC 70 BC 00 00                   off_5FAC DCD byte_116D4 - 0x5A64
.text:00005FAC                                                             ; DATA XREF: sub_5730+32A↑r
.text:00005FB0 6A BC 00 00                   off_5FB0 DCD dword_116D8 - 0x5A6E
.text:00005FB0                                                             ; DATA XREF: sub_5730+334↑r
.text:00005FB4 64 BC 00 00                   off_5FB4 DCD dword_116DC - 0x5A78
.text:00005FB4                                                             ; DATA XREF: sub_5730+33E↑r
.text:00005FB8 A0 B2 00 00                   off_5FB8 DCD pcm_config_amplifier_ptr - 0x5AFC
.text:00005FB8                                                             ; DATA XREF: sub_5730+3BE↑r
.text:00005FBC B7 5B 00 00                   off_5FBC DCD aAudioHwPrimary - 0x5EE8
.text:00005FBC                                                             ; DATA XREF: sub_5730+7AE↑r
.text:00005FBC                                                             ; "audio_hw_primary"
.text:00005FC0 12 6E 00 00                   off_5FC0 DCD aSPcmOpenPaOutF - 0x5EEC
.text:00005FC0                                                             ; DATA XREF: sub_5730+7B0↑r
.text:00005FC0                                                             ; "%s(): pcm_open(PA_OUT) failed: %s"
.text:00005FC4 32 6E 00 00                   off_5FC4 DCD aPreStartAmplif - 0x5EEE
.text:00005FC4                                                             ; DATA XREF: sub_5730+7B2↑r
.text:00005FC4                                                             ; "pre_start_amplifier"
.text:00005FC8 9B 5B 00 00                   off_5FC8 DCD aAudioHwPrimary - 0x5F04
.text:00005FC8                                                             ; DATA XREF: sub_5730+7CA↑r
.text:00005FC8                                                             ; "audio_hw_primary"
.text:00005FCC 2C 6E 00 00                   off_5FCC DCD aSPcmOpenPaInFa - 0x5F08
.text:00005FCC                                                             ; DATA XREF: sub_5730+7CC↑r
.text:00005FCC                                                             ; "%s(): pcm_open(PA_IN) failed: %s"
.text:00005FD0 16 6E 00 00                   off_5FD0 DCD aPreStartAmplif - 0x5F0A
.text:00005FD0                                                             ; DATA XREF: sub_5730+7CE↑r
.text:00005FD0                                                             ; "pre_start_amplifier"
.text:00005FD4 5F 5E 00 00                   off_5FD4 DCD aAudioHwPrimary - 0x5C40
.text:00005FD4                                                             ; DATA XREF: sub_5730+4FE↑r
.text:00005FD4                                                             ; "audio_hw_primary"
.text:00005FD8 AA 6C 00 00                   off_5FD8 DCD aS_0 - 0x5C42    ; DATA XREF: sub_5730+504↑r
.text:00005FD8                                                             ; "%s():..."
.text:00005FDC 63 71 00 00                   off_5FDC DCD aStopBtSco - 0x5C44
.text:00005FDC                                                             ; DATA XREF: sub_5730+508↑r
.text:00005FDC                                                             ; "stop_bt_sco"
.text:00005FE0 DB 5E 00 00                   off_5FE0 DCD aAudioHwPrimary - 0x5BC4
.text:00005FE0                                                             ; DATA XREF: sub_5730+482↑r
.text:00005FE0                                                             ; "audio_hw_primary"
.text:00005FE4 26 6D 00 00                   off_5FE4 DCD aS_0 - 0x5BC6    ; DATA XREF: sub_5730+488↑r
.text:00005FE4                                                             ; "%s():..."
.text:00005FE8 8D 71 00 00                   off_5FE8 DCD aStartBtSco - 0x5BC8
.text:00005FE8                                                             ; DATA XREF: sub_5730+48C↑r
.text:00005FE8                                                             ; "start_bt_sco"
.text:00005FEC D8 B1 00 00                   off_5FEC DCD pcm_config_sco_ptr - 0x5BD8
.text:00005FEC                                                             ; DATA XREF: sub_5730+49A↑r
.text:00005FF0 13 5E 00 00                   off_5FF0 DCD aAudioHwPrimary - 0x5C8C
.text:00005FF0                                                             ; DATA XREF: sub_5730+54C↑r
.text:00005FF0                                                             ; "audio_hw_primary"
.text:00005FF4 D2 70 00 00                   off_5FF4 DCD aSPcmOpenScoOut - 0x5C90
.text:00005FF4                                                             ; DATA XREF: sub_5730+550↑r
.text:00005FF4                                                             ; "%s(): pcm_open(SCO_OUT) failed: %s"
.text:00005FF8 C3 70 00 00                   off_5FF8 DCD aStartBtSco - 0x5C92
.text:00005FF8                                                             ; DATA XREF: sub_5730+554↑r
.text:00005FF8                                                             ; "start_bt_sco"
.text:00005FFC A2 B1 00 00                   off_5FFC DCD pcm_config_sco_ptr - 0x5C0E
.text:00005FFC                                                             ; DATA XREF: sub_5730+4CE↑r
.text:00006000 F7 5D 00 00                   off_6000 DCD aAudioHwPrimary - 0x5CA8
.text:00006000                                                             ; DATA XREF: sub_5730+56E↑r
.text:00006000                                                             ; "audio_hw_primary"
.text:00006004 D9 70 00 00                   off_6004 DCD aSPcmOpenScoInF - 0x5CAC
.text:00006004                                                             ; DATA XREF: sub_5730+570↑r
.text:00006004                                                             ; "%s(): pcm_open(SCO_IN) failed: %s"
.text:00006008 A7 70 00 00                   off_6008 DCD aStartBtSco - 0x5CAE
.text:00006008                                                             ; DATA XREF: sub_5730+572↑r
.text:00006008                                                             ; "start_bt_sco"
.text:0000600C 7A 66 00 00                   off_600C DCD aDummy - 0x5CE0  ; DATA XREF: sub_5730+5A6↑r
.text:0000600C                                                             ; "dummy"
.text:00006010 5C AD 00 00                   off_6010 DCD off_10AC4 - 0x5D68
.text:00006010                                                             ; DATA XREF: sub_5730:loc_5D5C↑r
.text:00006014 84 AD 00 00                   off_6014 DCD off_10AC4 - 0x5D40
.text:00006014                                                             ; DATA XREF: sub_5730+602↑r
.text:00006018 CC AD 00 00                   off_6018 DCD off_10AC4 - 0x5CF8
.text:00006018                                                             ; DATA XREF: sub_5730+5BE↑r
.text:0000601C CC 6C 00 00                   off_601C DCD aNone - 0x5D7C   ; DATA XREF: sub_5730:loc_5D70↑r
.text:0000601C                                                             ; "none"
.text:00006020 01 5D 00 00                   off_6020 DCD aAudioHwPrimary - 0x5D9E
.text:00006020                                                             ; DATA XREF: sub_5730+664↑r
.text:00006020                                                             ; "audio_hw_primary"
.text:00006024 5B 6C 00 00                   off_6024 DCD aSDevicesXInput - 0x5DA0
.text:00006024                                                             ; DATA XREF: sub_5730+666↑r
.text:00006024                                                             ; "%s(): devices %#x input src %d output r"...
.text:00006028 97 6C 00 00                   off_6028 DCD aSelectDevices - 0x5DA2
.text:00006028                                                             ; DATA XREF: sub_5730+668↑r
.text:00006028                                                             ; "select_devices"
.text:0000602C D7 5C 00 00                   off_602C DCD aAudioHwPrimary - 0x5DC8
.text:0000602C                                                             ; DATA XREF: sub_5730:loc_5DBC↑r
.text:0000602C                                                             ; "audio_hw_primary"
.text:00006030 7F 6C 00 00                   off_6030 DCD aSRouteTimeMeas - 0x5DCE
.text:00006030                                                             ; DATA XREF: sub_5730+692↑r
.text:00006030                                                             ; "%s(): route time measurement: start"
.text:00006034 6F 6C 00 00                   off_6034 DCD aSelectDevices - 0x5DCA
.text:00006034                                                             ; DATA XREF: sub_5730+690↑r
.text:00006034                                                             ; "select_devices"
.text:00006038 8B 6C 00 00                   off_6038 DCD aSRouteTimeMeas_0 - 0x5DE6
.text:00006038                                                             ; DATA XREF: sub_5730+6AA↑r
.text:00006038                                                             ; "%s(): route time measurement: end"
.text:0000603C 4F 5C 00 00                   off_603C DCD aAudioHwPrimary - 0x5E50
.text:0000603C                                                             ; DATA XREF: sub_5730+714↑r
.text:0000603C                                                             ; "audio_hw_primary"
.text:00006040 61 6F 00 00                   off_6040 DCD aSFailedToPower - 0x5E52
.text:00006040                                                             ; DATA XREF: sub_5730+718↑r
.text:00006040                                                             ; "%s(): failed to power on tfa98xx"
.text:00006044 80 6F 00 00                   off_6044 DCD aStartAmplifier - 0x5E54
.text:00006044                                                             ; DATA XREF: sub_5730+71A↑r
.text:00006044                                                             ; "start_amplifier"
.text:00006048 EE 62 00 00                   off_6048 DCD aHpoutDigitalSw - 0x5E8A
.text:00006048                                                             ; DATA XREF: sub_5730+74E↑r
.text:00006048                                                             ; "HPOUT Digital Switch"
.text:0000604C BB 62 00 00                   off_604C DCD aEpoutDigitalSw - 0x5E98
.text:0000604C                                                             ; DATA XREF: sub_5730+75C↑r
.text:0000604C                                                             ; "EPOUT Digital Switch"
.text:00006050 38 6E 00 00                   off_6050 DCD aAif2tx1Input1 - 0x5EA6
.text:00006050                                                             ; DATA XREF: sub_5730+76A↑r
.text:00006050                                                             ; "AIF2TX1 Input 1"
.text:00006054 3A 6E 00 00                   off_6054 DCD aAif2tx2Input1 - 0x5EB4
.text:00006054                                                             ; DATA XREF: sub_5730+778↑r
.text:00006054                                                             ; "AIF2TX2 Input 1"
.text:00006058 D0 AE 00 00                   off_6058 DCD __stack_chk_guard_ptr - 0x5EC4
.text:00006058                                                             ; DATA XREF: sub_5730:loc_5EBC↑r
.text:00006058                               ; } // starts at 5730
.text:0000605C
.text:0000605C                               ; =============== S U B R O U T I N E =======================================
.text:0000605C
.text:0000605C
.text:0000605C                               ; void __fastcall sub_605C(int)
.text:0000605C                               sub_605C                      ; CODE XREF: sub_569C+16↑p
.text:0000605C                                                             ; sub_6676+1A↓p
.text:0000605C                                                             ; sub_6E38+368↓p
.text:0000605C
.text:0000605C                               var_18= -0x18
.text:0000605C
.text:0000605C                               ; __unwind {
.text:0000605C 70 B5                         PUSH            {R4-R6,LR}
.text:0000605E 82 B0                         SUB             SP, SP, #8
.text:00006060 3A 49                         LDR             R1, =(aAudioHwPrimary - 0x606E) ; "audio_hw_primary"
.text:00006062 04 46                         MOV             R4, R0
.text:00006064 3A 4A                         LDR             R2, =(aS_0 - 0x6070) ; "%s():..."
.text:00006066 03 20                         MOVS            R0, #3
.text:00006068 3A 4B                         LDR             R3, =(aDoInStandby - 0x6074) ; "do_in_standby"
.text:0000606A 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000606C 7A 44                         ADD             R2, PC        ; "%s():..."
.text:0000606E 65 6C                         LDR             R5, [R4,#0x44]
.text:00006070 7B 44                         ADD             R3, PC        ; "do_in_standby"
.text:00006072 D4 F8 AC 60                   LDR.W           R6, [R4,#0xAC]
.text:00006076 FC F7 B0 EF                   BLX             __android_log_print
.text:00006076
.text:0000607A 94 F8 7C 00                   LDRB.W          R0, [R4,#0x7C]
.text:0000607E 08 B1                         CBZ             R0, loc_6084
.text:0000607E
.text:00006080 02 B0                         ADD             SP, SP, #8
.text:00006082 70 BD                         POP             {R4-R6,PC}
.text:00006082
.text:00006084                               ; ---------------------------------------------------------------------------
.text:00006084
.text:00006084                               loc_6084                      ; CODE XREF: sub_605C+22↑j
.text:00006084 D6 F8 A8 10                   LDR.W           R1, [R6,#0xA8]
.text:00006088 02 29                         CMP             R1, #2
.text:0000608A 03 D1                         BNE             loc_6094
.text:0000608A
.text:0000608C D4 F8 AC 00                   LDR.W           R0, [R4,#0xAC]
.text:00006090 04 21                         MOVS            R1, #4
.text:00006092 05 E0                         B               loc_60A0
.text:00006092
.text:00006094                               ; ---------------------------------------------------------------------------
.text:00006094
.text:00006094                               loc_6094                      ; CODE XREF: sub_605C+2E↑j
.text:00006094 D4 F8 AC 00                   LDR.W           R0, [R4,#0xAC]
.text:00006098 03 29                         CMP             R1, #3
.text:0000609A 14 BF                         ITE NE
.text:0000609C 00 21                         MOVNE           R1, #0
.text:0000609E 07 21                         MOVEQ           R1, #7
.text:0000609E
.text:000060A0
.text:000060A0                               loc_60A0                      ; CODE XREF: sub_605C+36↑j
.text:000060A0 C0 F8 C8 10                   STR.W           R1, [R0,#0xC8]
.text:000060A4 D6 F8 A8 00                   LDR.W           R0, [R6,#0xA8]
.text:000060A8 2C 4A                         LDR             R2, =(aSAsrReadyDIsCv - 0x60B4) ; "%s(): asr_ready=%d, is_cvq=%d"
.text:000060AA 2D 4B                         LDR             R3, =(aDoInStandby - 0x60C8) ; "do_in_standby"
.text:000060AC 20 F0 01 00                   BIC.W           R0, R0, #1
.text:000060B0 7A 44                         ADD             R2, PC        ; "%s(): asr_ready=%d, is_cvq=%d"
.text:000060B2 02 28                         CMP             R0, #2
.text:000060B4 1E BF                         ITTT NE
.text:000060B6 D4 F8 AC 00                   LDRNE.W         R0, [R4,#0xAC]
.text:000060BA 00 21                         MOVNE           R1, #0
.text:000060BC C0 F8 B0 10                   STRNE.W         R1, [R0,#0xB0]
.text:000060C0 96 F8 39 01                   LDRB.W          R0, [R6,#0x139]
.text:000060C4 7B 44                         ADD             R3, PC        ; "do_in_standby"
.text:000060C6 A1 6C                         LDR             R1, [R4,#0x48]
.text:000060C8 CD E9 00 01                   STRD.W          R0, R1, [SP,#0x18+var_18]
.text:000060CC 02 20                         MOVS            R0, #2
.text:000060CE 22 49                         LDR             R1, =(aAudioHwPrimary - 0x60D4) ; "audio_hw_primary"
.text:000060D0 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000060D2 FC F7 82 EF                   BLX             __android_log_print
.text:000060D2
.text:000060D6 A0 6C                         LDR             R0, [R4,#0x48]
.text:000060D8 20 B9                         CBNZ            R0, loc_60E4
.text:000060D8
.text:000060DA D4 F8 AC 00                   LDR.W           R0, [R4,#0xAC]
.text:000060DE FF F7 27 FB                   BL              sub_5730
.text:000060DE
.text:000060E2 A0 6C                         LDR             R0, [R4,#0x48]
.text:000060E2
.text:000060E4
.text:000060E4                               loc_60E4                      ; CODE XREF: sub_605C+7C↑j
.text:000060E4 01 28                         CMP             R0, #1
.text:000060E6 18 D1                         BNE             loc_611A
.text:000060E6
.text:000060E8 4E F2 48 20 C0 F2 04 00       MOV             R0, #0x4E248
.text:000060F0 28 58                         LDR             R0, [R5,R0]
.text:000060F2 30 B9                         CBNZ            R0, loc_6102
.text:000060F2
.text:000060F4 4E F2 50 20 C0 F2 04 00       MOV             R0, #0x4E250
.text:000060FC 29 58                         LDR             R1, [R5,R0]
.text:000060FE 28 46                         MOV             R0, R5
.text:00006100 88 47                         BLX             R1
.text:00006100
.text:00006102
.text:00006102                               loc_6102                      ; CODE XREF: sub_605C+96↑j
.text:00006102 01 20                         MOVS            R0, #1
.text:00006104 00 21                         MOVS            R1, #0        ; thread_return
.text:00006106 E0 64                         STR             R0, [R4,#0x4C]
.text:00006108 20 6D                         LDR             R0, [R4,#0x50] ; th
.text:0000610A FD F7 C8 E8                   BLX             pthread_join
.text:0000610A
.text:0000610E 60 6C                         LDR             R0, [R4,#0x44] ; ptr
.text:00006110 FD F7 0A E8                   BLX             free
.text:00006110
.text:00006114 E0 6D                         LDR             R0, [R4,#0x5C] ; ptr
.text:00006116 FD F7 08 E8                   BLX             free
.text:00006116
.text:0000611A
.text:0000611A                               loc_611A                      ; CODE XREF: sub_605C+8A↑j
.text:0000611A A0 6F                         LDR             R0, [R4,#0x78]
.text:0000611C FC F7 C8 EF                   BLX             pcm_close
.text:0000611C
.text:00006120 00 25                         MOVS            R5, #0
.text:00006122 01 20                         MOVS            R0, #1
.text:00006124 A5 67                         STR             R5, [R4,#0x78]
.text:00006126 84 F8 7C 00                   STRB.W          R0, [R4,#0x7C]
.text:0000612A C6 F8 FC 50                   STR.W           R5, [R6,#0xFC]
.text:0000612E D4 F8 84 00                   LDR.W           R0, [R4,#0x84]
.text:00006132 18 B1                         CBZ             R0, loc_613C
.text:00006132
.text:00006134 FD F7 B8 E8                   BLX             release_resampler
.text:00006134
.text:00006138 C4 F8 84 50                   STR.W           R5, [R4,#0x84]
.text:00006138
.text:0000613C
.text:0000613C                               loc_613C                      ; CODE XREF: sub_605C+D6↑j
.text:0000613C D4 F8 90 00                   LDR.W           R0, [R4,#0x90]
.text:00006140 02 B0                         ADD             SP, SP, #8
.text:00006142 BD E8 70 40                   POP.W           {R4-R6,LR}
.text:00006146 05 F0 63 BA                   B.W             j_free
.text:00006146
.text:00006146                               ; End of function sub_605C
.text:00006146
.text:00006146                               ; ---------------------------------------------------------------------------
.text:0000614A 00 BF                         ALIGN 4
.text:0000614C 31 5A 00 00                   off_614C DCD aAudioHwPrimary - 0x606E
.text:0000614C                                                             ; DATA XREF: sub_605C+4↑r
.text:0000614C                                                             ; "audio_hw_primary"
.text:00006150 7C 68 00 00                   off_6150 DCD aS_0 - 0x6070    ; DATA XREF: sub_605C+8↑r
.text:00006150                                                             ; "%s():..."
.text:00006154 81 68 00 00                   off_6154 DCD aDoInStandby - 0x6074
.text:00006154                                                             ; DATA XREF: sub_605C+C↑r
.text:00006154                                                             ; "do_in_standby"
.text:00006158 CB 59 00 00                   off_6158 DCD aAudioHwPrimary - 0x60D4
.text:00006158                                                             ; DATA XREF: sub_605C+72↑r
.text:00006158                                                             ; "audio_hw_primary"
.text:0000615C 4F 68 00 00                   off_615C DCD aSAsrReadyDIsCv - 0x60B4
.text:0000615C                                                             ; DATA XREF: sub_605C+4C↑r
.text:0000615C                                                             ; "%s(): asr_ready=%d, is_cvq=%d"
.text:00006160 2D 68 00 00                   off_6160 DCD aDoInStandby - 0x60C8
.text:00006160                                                             ; DATA XREF: sub_605C+4E↑r
.text:00006160                               ; } // starts at 605C         ; "do_in_standby"
.text:00006164
.text:00006164                               ; =============== S U B R O U T I N E =======================================
.text:00006164
.text:00006164
.text:00006164                               ; int __fastcall sub_6164(int)
.text:00006164                               sub_6164                      ; CODE XREF: sub_569C+72↑p
.text:00006164                                                             ; sub_5730+11E↑p
.text:00006164                               ; __unwind {
.text:00006164 10 B5                         PUSH            {R4,LR}
.text:00006166 04 46                         MOV             R4, R0
.text:00006168 FD F7 A4 E8                   BLX             NxpTfa98xx_PowerOff
.text:00006168
.text:0000616C 40 B1                         CBZ             R0, loc_6180
.text:0000616C
.text:0000616E 0F 49                         LDR             R1, =(aAudioHwPrimary - 0x617A) ; "audio_hw_primary"
.text:00006170 06 20                         MOVS            R0, #6
.text:00006172 0F 4A                         LDR             R2, =(aSFailedToPower_0 - 0x617C) ; "%s(): failed to power off tfa98xx"
.text:00006174 0F 4B                         LDR             R3, =(aStopAmplifier - 0x617E) ; "stop_amplifier"
.text:00006176 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00006178 7A 44                         ADD             R2, PC        ; "%s(): failed to power off tfa98xx"
.text:0000617A 7B 44                         ADD             R3, PC        ; "stop_amplifier"
.text:0000617C FC F7 2C EF                   BLX             __android_log_print
.text:0000617C
.text:00006180
.text:00006180                               loc_6180                      ; CODE XREF: sub_6164+8↑j
.text:00006180 41 F2 88 30                   MOVW            R0, #0x1388   ; useconds
.text:00006184 FC F7 46 EF                   BLX             usleep
.text:00006184
.text:00006188 D4 F8 F4 00                   LDR.W           R0, [R4,#0xF4]
.text:0000618C 20 B1                         CBZ             R0, loc_6198
.text:0000618C
.text:0000618E FC F7 90 EF                   BLX             pcm_close
.text:0000618E
.text:00006192 00 20                         MOVS            R0, #0
.text:00006194 C4 F8 F4 00                   STR.W           R0, [R4,#0xF4]
.text:00006194
.text:00006198
.text:00006198                               loc_6198                      ; CODE XREF: sub_6164+28↑j
.text:00006198 D4 F8 F8 00                   LDR.W           R0, [R4,#0xF8]
.text:0000619C 20 B1                         CBZ             R0, locret_61A8
.text:0000619C
.text:0000619E FC F7 88 EF                   BLX             pcm_close
.text:0000619E
.text:000061A2 00 20                         MOVS            R0, #0
.text:000061A4 C4 F8 F8 00                   STR.W           R0, [R4,#0xF8]
.text:000061A4
.text:000061A8
.text:000061A8                               locret_61A8                   ; CODE XREF: sub_6164+38↑j
.text:000061A8 10 BD                         POP             {R4,PC}
.text:000061A8
.text:000061A8                               ; End of function sub_6164
.text:000061A8
.text:000061A8                               ; ---------------------------------------------------------------------------
.text:000061AA 00 BF                         ALIGN 4
.text:000061AC 25 59 00 00                   off_61AC DCD aAudioHwPrimary - 0x617A
.text:000061AC                                                             ; DATA XREF: sub_6164+A↑r
.text:000061AC                                                             ; "audio_hw_primary"
.text:000061B0 A5 67 00 00                   off_61B0 DCD aSFailedToPower_0 - 0x617C
.text:000061B0                                                             ; DATA XREF: sub_6164+E↑r
.text:000061B0                                                             ; "%s(): failed to power off tfa98xx"
.text:000061B4 C5 67 00 00                   off_61B4 DCD aStopAmplifier - 0x617E
.text:000061B4                                                             ; DATA XREF: sub_6164+10↑r
.text:000061B4                               ; } // starts at 6164         ; "stop_amplifier"
.text:000061B8
.text:000061B8                               ; =============== S U B R O U T I N E =======================================
.text:000061B8
.text:000061B8
.text:000061B8                               ; void __fastcall sub_61B8(int)
.text:000061B8                               sub_61B8                      ; CODE XREF: sub_569C+7E↑p
.text:000061B8                                                             ; sub_6644+1A↓p
.text:000061B8                                                             ; sub_6E38+BA↓p
.text:000061B8                                                             ; sub_6E38+34C↓p
.text:000061B8                                                             ; sub_7F90+1AC↓p
.text:000061B8                               ; __unwind {
.text:000061B8 2D E9 F0 41                   PUSH.W          {R4-R8,LR}
.text:000061BC 34 49                         LDR             R1, =(aAudioHwPrimary - 0x61CA) ; "audio_hw_primary"
.text:000061BE 04 46                         MOV             R4, R0
.text:000061C0 34 4A                         LDR             R2, =(aS_0 - 0x61CC) ; "%s():..."
.text:000061C2 03 20                         MOVS            R0, #3
.text:000061C4 34 4B                         LDR             R3, =(aDoOutStandby - 0x61D2) ; "do_out_standby"
.text:000061C6 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000061C8 7A 44                         ADD             R2, PC        ; "%s():..."
.text:000061CA D4 F8 CC 80                   LDR.W           R8, [R4,#0xCC]
.text:000061CE 7B 44                         ADD             R3, PC        ; "do_out_standby"
.text:000061D0 FC F7 02 EF                   BLX             __android_log_print
.text:000061D0
.text:000061D4 94 F8 A0 00                   LDRB.W          R0, [R4,#0xA0]
.text:000061D8 00 28                         CMP             R0, #0
.text:000061DA 56 D1                         BNE             locret_628A
.text:000061DA
.text:000061DC 98 F8 21 01                   LDRB.W          R0, [R8,#0x121]
.text:000061E0 78 B1                         CBZ             R0, loc_6202
.text:000061E0
.text:000061E2 00 25                         MOVS            R5, #0
.text:000061E4 88 F8 21 51                   STRB.W          R5, [R8,#0x121]
.text:000061E8 98 F8 3A 01                   LDRB.W          R0, [R8,#0x13A]
.text:000061EC 28 B1                         CBZ             R0, loc_61FA
.text:000061EC
.text:000061EE D8 F8 3C 01                   LDR.W           R0, [R8,#0x13C] ; ptr
.text:000061F2 FC F7 9A EF                   BLX             free
.text:000061F2
.text:000061F6 88 F8 3A 51                   STRB.W          R5, [R8,#0x13A]
.text:000061F6
.text:000061FA
.text:000061FA                               loc_61FA                      ; CODE XREF: sub_61B8+34↑j
.text:000061FA 4F F0 FF 30                   MOV.W           R0, #0xFFFFFFFF
.text:000061FE C8 F8 28 01                   STR.W           R0, [R8,#0x128]
.text:000061FE
.text:00006202
.text:00006202                               loc_6202                      ; CODE XREF: sub_61B8+28↑j
.text:00006202 D8 F8 A8 00                   LDR.W           R0, [R8,#0xA8]
.text:00006206 02 28                         CMP             R0, #2
.text:00006208 1A D0                         BEQ             loc_6240
.text:00006208
.text:0000620A 98 F8 39 01                   LDRB.W          R0, [R8,#0x139]
.text:0000620E B8 B9                         CBNZ            R0, loc_6240
.text:0000620E
.text:00006210 D4 F8 CC 00                   LDR.W           R0, [R4,#0xCC]
.text:00006214 D8 F8 AC 60                   LDR.W           R6, [R8,#0xAC]
.text:00006218 D0 F8 00 11                   LDR.W           R1, [R0,#0x100]
.text:0000621C 00 20                         MOVS            R0, #0
.text:0000621E 41 B1                         CBZ             R1, loc_6232
.text:0000621E
.text:00006220 A1 42                         CMP             R1, R4
.text:00006222 06 D0                         BEQ             loc_6232
.text:00006222
.text:00006224 91 F8 A0 00                   LDRB.W          R0, [R1,#0xA0]
.text:00006228 00 28                         CMP             R0, #0
.text:0000622A 0C BF                         ITE EQ
.text:0000622C D1 F8 A4 00                   LDREQ.W         R0, [R1,#0xA4]
.text:00006230 00 20                         MOVNE           R0, #0
.text:00006230
.text:00006232
.text:00006232                               loc_6232                      ; CODE XREF: sub_61B8+66↑j
.text:00006232                                                             ; sub_61B8+6A↑j
.text:00006232 C8 F8 AC 00                   STR.W           R0, [R8,#0xAC]
.text:00006236 40 46                         MOV             R0, R8
.text:00006238 FF F7 7A FA                   BL              sub_5730
.text:00006238
.text:0000623C C8 F8 AC 60                   STR.W           R6, [R8,#0xAC]
.text:0000623C
.text:00006240
.text:00006240                               loc_6240                      ; CODE XREF: sub_61B8+50↑j
.text:00006240                                                             ; sub_61B8+56↑j
.text:00006240 04 F1 68 06                   ADD.W           R6, R4, #0x68 ; 'h'
.text:00006244 00 27                         MOVS            R7, #0
.text:00006246 00 25                         MOVS            R5, #0
.text:00006246
.text:00006248
.text:00006248                               loc_6248                      ; CODE XREF: sub_61B8+AA↓j
.text:00006248 56 F8 25 00                   LDR.W           R0, [R6,R5,LSL#2]
.text:0000624C 38 B1                         CBZ             R0, loc_625E
.text:0000624C
.text:0000624E FC F7 C6 EF                   BLX             pcm_stop
.text:0000624E
.text:00006252 56 F8 25 00                   LDR.W           R0, [R6,R5,LSL#2]
.text:00006256 FC F7 2C EF                   BLX             pcm_close
.text:00006256
.text:0000625A 46 F8 25 70                   STR.W           R7, [R6,R5,LSL#2]
.text:0000625A
.text:0000625E
.text:0000625E                               loc_625E                      ; CODE XREF: sub_61B8+94↑j
.text:0000625E 01 35                         ADDS            R5, #1
.text:00006260 03 2D                         CMP             R5, #3
.text:00006262 F1 D1                         BNE             loc_6248
.text:00006262
.text:00006264 01 20                         MOVS            R0, #1
.text:00006266 00 25                         MOVS            R5, #0
.text:00006268 84 F8 A0 00                   STRB.W          R0, [R4,#0xA0]
.text:0000626C C8 F8 00 51                   STR.W           R5, [R8,#0x100]
.text:00006270 D4 F8 C4 00                   LDR.W           R0, [R4,#0xC4]
.text:00006274 48 B1                         CBZ             R0, locret_628A
.text:00006274
.text:00006276 FD F7 18 E8                   BLX             release_resampler
.text:00006276
.text:0000627A C4 F8 C4 50                   STR.W           R5, [R4,#0xC4]
.text:0000627E D4 F8 C8 00                   LDR.W           R0, [R4,#0xC8]
.text:00006282 BD E8 F0 41                   POP.W           {R4-R8,LR}
.text:00006286 05 F0 C3 B9                   B.W             j_free
.text:00006286
.text:0000628A                               ; ---------------------------------------------------------------------------
.text:0000628A
.text:0000628A                               locret_628A                   ; CODE XREF: sub_61B8+22↑j
.text:0000628A                                                             ; sub_61B8+BC↑j
.text:0000628A BD E8 F0 81                   POP.W           {R4-R8,PC}
.text:0000628A
.text:0000628A                               ; End of function sub_61B8
.text:0000628A
.text:0000628A                               ; ---------------------------------------------------------------------------
.text:0000628E 00 BF                         ALIGN 0x10
.text:00006290 D5 58 00 00                   off_6290 DCD aAudioHwPrimary - 0x61CA
.text:00006290                                                             ; DATA XREF: sub_61B8+4↑r
.text:00006290                                                             ; "audio_hw_primary"
.text:00006294 20 67 00 00                   off_6294 DCD aS_0 - 0x61CC    ; DATA XREF: sub_61B8+8↑r
.text:00006294                                                             ; "%s():..."
.text:00006298 80 67 00 00                   off_6298 DCD aDoOutStandby - 0x61D2
.text:00006298                                                             ; DATA XREF: sub_61B8+C↑r
.text:00006298                               ; } // starts at 61B8         ; "do_out_standby"
.text:0000629C
.text:0000629C                               ; =============== S U B R O U T I N E =======================================
.text:0000629C
.text:0000629C
.text:0000629C                               ; int __fastcall sub_629C(int)
.text:0000629C                               sub_629C                      ; CODE XREF: sub_569C+52↑j
.text:0000629C                                                             ; sub_569C+84↑p
.text:0000629C                                                             ; sub_5730+136↑p
.text:0000629C                               ; __unwind {
.text:0000629C 10 B5                         PUSH            {R4,LR}
.text:0000629E 0D 49                         LDR             R1, =(aAudioHwPrimary - 0x62AC) ; "audio_hw_primary"
.text:000062A0 04 46                         MOV             R4, R0
.text:000062A2 0D 4A                         LDR             R2, =(aS_0 - 0x62AE) ; "%s():..."
.text:000062A4 03 20                         MOVS            R0, #3
.text:000062A6 0D 4B                         LDR             R3, =(aStopBackend - 0x62B0) ; "stop_backend"
.text:000062A8 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000062AA 7A 44                         ADD             R2, PC        ; "%s():..."
.text:000062AC 7B 44                         ADD             R3, PC        ; "stop_backend"
.text:000062AE FC F7 94 EE                   BLX             __android_log_print
.text:000062AE
.text:000062B2 D4 F8 E8 00                   LDR.W           R0, [R4,#0xE8]
.text:000062B6 20 B1                         CBZ             R0, loc_62C2
.text:000062B6
.text:000062B8 FC F7 FA EE                   BLX             pcm_close
.text:000062B8
.text:000062BC 00 20                         MOVS            R0, #0
.text:000062BE C4 F8 E8 00                   STR.W           R0, [R4,#0xE8]
.text:000062BE
.text:000062C2
.text:000062C2                               loc_62C2                      ; CODE XREF: sub_629C+1A↑j
.text:000062C2 D4 F8 E4 00                   LDR.W           R0, [R4,#0xE4]
.text:000062C6 20 B1                         CBZ             R0, locret_62D2
.text:000062C6
.text:000062C8 FC F7 F2 EE                   BLX             pcm_close
.text:000062C8
.text:000062CC 00 20                         MOVS            R0, #0
.text:000062CE C4 F8 E4 00                   STR.W           R0, [R4,#0xE4]
.text:000062CE
.text:000062D2
.text:000062D2                               locret_62D2                   ; CODE XREF: sub_629C+2A↑j
.text:000062D2 10 BD                         POP             {R4,PC}
.text:000062D2
.text:000062D2                               ; End of function sub_629C
.text:000062D2
.text:000062D2                               ; ---------------------------------------------------------------------------
.text:000062D4 F3 57 00 00                   off_62D4 DCD aAudioHwPrimary - 0x62AC
.text:000062D4                                                             ; DATA XREF: sub_629C+2↑r
.text:000062D4                                                             ; "audio_hw_primary"
.text:000062D8 3E 66 00 00                   off_62D8 DCD aS_0 - 0x62AE    ; DATA XREF: sub_629C+6↑r
.text:000062D8                                                             ; "%s():..."
.text:000062DC B1 66 00 00                   off_62DC DCD aStopBackend - 0x62B0
.text:000062DC                                                             ; DATA XREF: sub_629C+A↑r
.text:000062DC                               ; } // starts at 629C         ; "stop_backend"
.text:000062E0
.text:000062E0                               ; =============== S U B R O U T I N E =======================================
.text:000062E0
.text:000062E0
.text:000062E0                               ; int __fastcall sub_62E0(int)
.text:000062E0                               sub_62E0                      ; CODE XREF: sub_4B48+C6↑p
.text:000062E0                                                             ; sub_5730+F8↑p
.text:000062E0
.text:000062E0                               var_38= -0x38
.text:000062E0                               nptr= -0x2C
.text:000062E0                               var_18= -0x18
.text:000062E0
.text:000062E0                               ; __unwind {
.text:000062E0 F0 B5                         PUSH            {R4-R7,LR}
.text:000062E2 89 B0                         SUB             SP, SP, #0x24
.text:000062E4 04 46                         MOV             R4, R0
.text:000062E6 B4 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x62EE)
.text:000062E8 00 21                         MOVS            R1, #0        ; oflag
.text:000062EA 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:000062EC 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:000062EE 00 68                         LDR             R0, [R0]
.text:000062F0 08 90                         STR             R0, [SP,#0x38+var_18]
.text:000062F2 B2 48                         LDR             R0, =(aSysClassArizon - 0x62F8) ; "/sys/class/arizona/wm8998_hp_impedance/"...
.text:000062F4 78 44                         ADD             R0, PC        ; "/sys/class/arizona/wm8998_hp_impedance/"...
.text:000062F6 FC F7 E4 EF                   BLX             open
.text:000062F6
.text:000062FA 06 46                         MOV             R6, R0
.text:000062FC 00 2E                         CMP             R6, #0
.text:000062FE 0E DB                         BLT             loc_631E
.text:000062FE
.text:00006300 03 A9                         ADD             R1, SP, #0x38+nptr
.text:00006302 30 46                         MOV             R0, R6
.text:00006304 14 22                         MOVS            R2, #0x14
.text:00006306 14 23                         MOVS            R3, #0x14
.text:00006308 FC F7 E0 EF                   BLX             __read_chk
.text:00006308
.text:0000630C 05 46                         MOV             R5, R0
.text:0000630E B5 F1 FF 3F                   CMP.W           R5, #0xFFFFFFFF
.text:00006312 16 DD                         BLE             loc_6342
.text:00006312
.text:00006314 03 A8                         ADD             R0, SP, #0x38+nptr ; nptr
.text:00006316 FC F7 30 EE                   BLX             atoi
.text:00006316
.text:0000631A 07 46                         MOV             R7, R0
.text:0000631C 1E E0                         B               loc_635C
.text:0000631C
.text:0000631E                               ; ---------------------------------------------------------------------------
.text:0000631E
.text:0000631E                               loc_631E                      ; CODE XREF: sub_62E0+1E↑j
.text:0000631E A8 48                         LDR             R0, =(aSysClassArizon - 0x6328) ; "/sys/class/arizona/wm8998_hp_impedance/"...
.text:00006320 A8 49                         LDR             R1, =(aAudioHwPrimary - 0x632C) ; "audio_hw_primary"
.text:00006322 A9 4A                         LDR             R2, =(aSFailedToOpenS - 0x6330) ; "%s(): failed to open %s\n"
.text:00006324 78 44                         ADD             R0, PC        ; "/sys/class/arizona/wm8998_hp_impedance/"...
.text:00006326 A9 4B                         LDR             R3, =(aReadImpedance - 0x6332) ; "read_impedance"
.text:00006328 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000632A 00 90                         STR             R0, [SP,#0x38+var_38]
.text:0000632C 7A 44                         ADD             R2, PC        ; "%s(): failed to open %s\n"
.text:0000632E 7B 44                         ADD             R3, PC        ; "read_impedance"
.text:00006330 06 20                         MOVS            R0, #6
.text:00006332 FC F7 52 EE                   BLX             __android_log_print
.text:00006332
.text:00006336 FC F7 44 EE                   BLX             __errno
.text:00006336
.text:0000633A 00 68                         LDR             R0, [R0]
.text:0000633C 80 27                         MOVS            R7, #0x80
.text:0000633E 45 42                         NEGS            R5, R0
.text:00006340 0F E0                         B               loc_6362
.text:00006340
.text:00006342                               ; ---------------------------------------------------------------------------
.text:00006342
.text:00006342                               loc_6342                      ; CODE XREF: sub_62E0+32↑j
.text:00006342 A3 48                         LDR             R0, =(aSysClassArizon - 0x634C) ; "/sys/class/arizona/wm8998_hp_impedance/"...
.text:00006344 A3 49                         LDR             R1, =(aAudioHwPrimary - 0x6350) ; "audio_hw_primary"
.text:00006346 A4 4A                         LDR             R2, =(aSFailedToReadS - 0x6354) ; "%s(): failed to read %s"
.text:00006348 78 44                         ADD             R0, PC        ; "/sys/class/arizona/wm8998_hp_impedance/"...
.text:0000634A A4 4B                         LDR             R3, =(aReadImpedance - 0x6356) ; "read_impedance"
.text:0000634C 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000634E 00 90                         STR             R0, [SP,#0x38+var_38]
.text:00006350 7A 44                         ADD             R2, PC        ; "%s(): failed to read %s"
.text:00006352 7B 44                         ADD             R3, PC        ; "read_impedance"
.text:00006354 06 20                         MOVS            R0, #6
.text:00006356 FC F7 40 EE                   BLX             __android_log_print
.text:00006356
.text:0000635A 80 27                         MOVS            R7, #0x80
.text:0000635A
.text:0000635C
.text:0000635C                               loc_635C                      ; CODE XREF: sub_62E0+3C↑j
.text:0000635C 30 46                         MOV             R0, R6        ; fd
.text:0000635E FC F7 BC EF                   BLX             close
.text:0000635E
.text:00006362
.text:00006362                               loc_6362                      ; CODE XREF: sub_62E0+60↑j
.text:00006362 B5 F1 FF 3F                   CMP.W           R5, #0xFFFFFFFF
.text:00006366 34 DD                         BLE             loc_63D2
.text:00006366
.text:00006368 A7 F1 23 00                   SUB.W           R0, R7, #0x23 ; '#'
.text:0000636C 9D 4A                         LDR             R2, =(aSHpImpedanceDG - 0x637A) ; "%s(): hp_impedance=%d, gain_state=%d"
.text:0000636E C4 F8 34 01                   STR.W           R0, [R4,#0x134]
.text:00006372 D4 F8 24 11                   LDR.W           R1, [R4,#0x124]
.text:00006376 7A 44                         ADD             R2, PC        ; "%s(): hp_impedance=%d, gain_state=%d"
.text:00006378 9B 4B                         LDR             R3, =(aSetHifiGain - 0x6382) ; "set_hifi_gain"
.text:0000637A CD E9 00 01                   STRD.W          R0, R1, [SP,#0x38+var_38]
.text:0000637E 7B 44                         ADD             R3, PC        ; "set_hifi_gain"
.text:00006380 02 20                         MOVS            R0, #2
.text:00006382 97 49                         LDR             R1, =(aAudioHwPrimary - 0x6388) ; "audio_hw_primary"
.text:00006384 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00006386 FC F7 28 EE                   BLX             __android_log_print
.text:00006386
.text:0000638A D4 F8 24 01                   LDR.W           R0, [R4,#0x124]
.text:0000638E 03 28                         CMP             R0, #3        ; switch 4 cases
.text:00006390 27 D8                         BHI             def_6392      ; jumptable 00006392 default case
.text:00006390
.text:00006392 DF E8 00 F0                   TBB.W           [PC,R0]       ; switch jump
.text:00006392
.text:00006392                               ; ---------------------------------------------------------------------------
.text:00006396 02                            jpt_6392 DCB 2                ; jump table for switch statement
.text:00006397 30                            DCB 0x30
.text:00006398 3C                            DCB 0x3C
.text:00006399 43                            DCB 0x43
.text:0000639A                               ; ---------------------------------------------------------------------------
.text:0000639A
.text:0000639A                               loc_639A                      ; CODE XREF: sub_62E0+B2↑j
.text:0000639A D4 F8 34 01                   LDR.W           R0, [R4,#0x134] ; jumptable 00006392 case 0
.text:0000639E 08 28                         CMP             R0, #8
.text:000063A0 39 D3                         BCC             loc_6416
.text:000063A0
.text:000063A2 A0 F1 08 01                   SUB.W           R1, R0, #8
.text:000063A6 05 29                         CMP             R1, #5
.text:000063A8 47 D3                         BCC             loc_643A
.text:000063A8
.text:000063AA A0 F1 32 01                   SUB.W           R1, R0, #0x32 ; '2'
.text:000063AE 01 25                         MOVS            R5, #1
.text:000063B0 00 26                         MOVS            R6, #0
.text:000063B2 0F 29                         CMP             R1, #0xF
.text:000063B4 6C D3                         BCC             loc_6490
.text:000063B4
.text:000063B6 A0 F1 0D 01                   SUB.W           R1, R0, #0xD
.text:000063BA 07 29                         CMP             R1, #7
.text:000063BC 24 BF                         ITT CS
.text:000063BE A0 F1 14 01                   SUBCS.W         R1, R0, #0x14
.text:000063C2 1E 29                         CMPCS           R1, #0x1E
.text:000063C4 64 D3                         BCC             loc_6490
.text:000063C4
.text:000063C6 01 25                         MOVS            R5, #1
.text:000063C8 40 28                         CMP             R0, #0x40 ; '@'
.text:000063CA C8 BF                         IT GT
.text:000063CC 02 25                         MOVGT           R5, #2
.text:000063CE 00 26                         MOVS            R6, #0
.text:000063D0 5E E0                         B               loc_6490
.text:000063D0
.text:000063D2                               ; ---------------------------------------------------------------------------
.text:000063D2
.text:000063D2                               loc_63D2                      ; CODE XREF: sub_62E0+86↑j
.text:000063D2 98 49                         LDR             R1, =(aAudioHwPrimary - 0x63DC) ; "audio_hw_primary"
.text:000063D4 98 4A                         LDR             R2, =(aSD - 0x63E0) ; "%s : %d"
.text:000063D6 99 4B                         LDR             R3, =(aSetHifiGain - 0x63E2) ; "set_hifi_gain"
.text:000063D8 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000063DA 00 95                         STR             R5, [SP,#0x38+var_38]
.text:000063DC 7A 44                         ADD             R2, PC        ; "%s : %d"
.text:000063DE 7B 44                         ADD             R3, PC        ; "set_hifi_gain"
.text:000063E0 05 E0                         B               loc_63EE
.text:000063E0
.text:000063E2                               ; ---------------------------------------------------------------------------
.text:000063E2
.text:000063E2                               def_6392                      ; CODE XREF: sub_62E0+B0↑j
.text:000063E2 91 49                         LDR             R1, =(aAudioHwPrimary - 0x63EC) ; jumptable 00006392 default case
.text:000063E4 91 4A                         LDR             R2, =(aSInvalidGainSt - 0x63EE) ; "%s(): invalid gain state"
.text:000063E6 92 4B                         LDR             R3, =(aSetHifiGain - 0x63F0) ; "set_hifi_gain"
.text:000063E8 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000063EA 7A 44                         ADD             R2, PC        ; "%s(): invalid gain state"
.text:000063EC 7B 44                         ADD             R3, PC        ; "set_hifi_gain"
.text:000063EC
.text:000063EE
.text:000063EE                               loc_63EE                      ; CODE XREF: sub_62E0+100↑j
.text:000063EE 06 20                         MOVS            R0, #6
.text:000063F0 FC F7 F2 ED                   BLX             __android_log_print
.text:000063F0
.text:000063F4 CE E0                         B               loc_6594
.text:000063F4
.text:000063F6                               ; ---------------------------------------------------------------------------
.text:000063F6
.text:000063F6                               loc_63F6                      ; CODE XREF: sub_62E0+B2↑j
.text:000063F6 D4 F8 34 01                   LDR.W           R0, [R4,#0x134] ; jumptable 00006392 case 1
.text:000063FA 08 28                         CMP             R0, #8
.text:000063FC 0B D3                         BCC             loc_6416
.text:000063FC
.text:000063FE A0 F1 08 01                   SUB.W           R1, R0, #8
.text:00006402 00 26                         MOVS            R6, #0
.text:00006404 05 29                         CMP             R1, #5
.text:00006406 38 BF                         IT CC
.text:00006408 06 26                         MOVCC           R6, #6
.text:0000640A 01 25                         MOVS            R5, #1
.text:0000640C 40 E0                         B               loc_6490
.text:0000640C
.text:0000640E                               ; ---------------------------------------------------------------------------
.text:0000640E
.text:0000640E                               loc_640E                      ; CODE XREF: sub_62E0+B2↑j
.text:0000640E D4 F8 34 01                   LDR.W           R0, [R4,#0x134] ; jumptable 00006392 case 2
.text:00006412 08 28                         CMP             R0, #8
.text:00006414 0D D2                         BCS             loc_6432
.text:00006414
.text:00006416
.text:00006416                               loc_6416                      ; CODE XREF: sub_62E0+C0↑j
.text:00006416                                                             ; sub_62E0+11C↑j
.text:00006416 01 25                         MOVS            R5, #1
.text:00006418 0C 26                         MOVS            R6, #0xC
.text:0000641A 39 E0                         B               loc_6490
.text:0000641A
.text:0000641C                               ; ---------------------------------------------------------------------------
.text:0000641C
.text:0000641C                               loc_641C                      ; CODE XREF: sub_62E0+B2↑j
.text:0000641C D4 F8 34 01                   LDR.W           R0, [R4,#0x134] ; jumptable 00006392 case 3
.text:00006420 03 21                         MOVS            R1, #3
.text:00006422 01 25                         MOVS            R5, #1
.text:00006424 C4 F8 28 11                   STR.W           R1, [R4,#0x128]
.text:00006428 31 28                         CMP             R0, #0x31 ; '1'
.text:0000642A C8 BF                         IT GT
.text:0000642C 02 25                         MOVGT           R5, #2
.text:0000642E 00 26                         MOVS            R6, #0
.text:00006430 2E E0                         B               loc_6490
.text:00006430
.text:00006432                               ; ---------------------------------------------------------------------------
.text:00006432
.text:00006432                               loc_6432                      ; CODE XREF: sub_62E0+134↑j
.text:00006432 A0 F1 08 01                   SUB.W           R1, R0, #8
.text:00006436 05 29                         CMP             R1, #5
.text:00006438 02 D2                         BCS             loc_6440
.text:00006438
.text:0000643A
.text:0000643A                               loc_643A                      ; CODE XREF: sub_62E0+C8↑j
.text:0000643A 01 25                         MOVS            R5, #1
.text:0000643C 06 26                         MOVS            R6, #6
.text:0000643E 27 E0                         B               loc_6490
.text:0000643E
.text:00006440                               ; ---------------------------------------------------------------------------
.text:00006440
.text:00006440                               loc_6440                      ; CODE XREF: sub_62E0+158↑j
.text:00006440 A0 F1 0D 01                   SUB.W           R1, R0, #0xD
.text:00006444 07 29                         CMP             R1, #7
.text:00006446 02 D2                         BCS             loc_644E
.text:00006446
.text:00006448 01 25                         MOVS            R5, #1
.text:0000644A 00 26                         MOVS            R6, #0
.text:0000644C 20 E0                         B               loc_6490
.text:0000644C
.text:0000644E                               ; ---------------------------------------------------------------------------
.text:0000644E
.text:0000644E                               loc_644E                      ; CODE XREF: sub_62E0+166↑j
.text:0000644E A0 F1 14 01                   SUB.W           R1, R0, #0x14
.text:00006452 0A 29                         CMP             R1, #0xA
.text:00006454 02 D2                         BCS             loc_645C
.text:00006454
.text:00006456 02 25                         MOVS            R5, #2
.text:00006458 0C 26                         MOVS            R6, #0xC
.text:0000645A 19 E0                         B               loc_6490
.text:0000645A
.text:0000645C                               ; ---------------------------------------------------------------------------
.text:0000645C
.text:0000645C                               loc_645C                      ; CODE XREF: sub_62E0+174↑j
.text:0000645C A0 F1 1E 01                   SUB.W           R1, R0, #0x1E
.text:00006460 0A 29                         CMP             R1, #0xA
.text:00006462 02 D2                         BCS             loc_646A
.text:00006462
.text:00006464 02 25                         MOVS            R5, #2
.text:00006466 08 26                         MOVS            R6, #8
.text:00006468 12 E0                         B               loc_6490
.text:00006468
.text:0000646A                               ; ---------------------------------------------------------------------------
.text:0000646A
.text:0000646A                               loc_646A                      ; CODE XREF: sub_62E0+182↑j
.text:0000646A A0 F1 28 01                   SUB.W           R1, R0, #0x28 ; '('
.text:0000646E 0A 29                         CMP             R1, #0xA
.text:00006470 02 D2                         BCS             loc_6478
.text:00006470
.text:00006472 02 25                         MOVS            R5, #2
.text:00006474 04 26                         MOVS            R6, #4
.text:00006476 0B E0                         B               loc_6490
.text:00006476
.text:00006478                               ; ---------------------------------------------------------------------------
.text:00006478
.text:00006478                               loc_6478                      ; CODE XREF: sub_62E0+190↑j
.text:00006478 A0 F1 32 01                   SUB.W           R1, R0, #0x32 ; '2'
.text:0000647C 0A 29                         CMP             R1, #0xA
.text:0000647E 02 D2                         BCS             loc_6486
.text:0000647E
.text:00006480 02 26                         MOVS            R6, #2
.text:00006482 02 25                         MOVS            R5, #2
.text:00006484 04 E0                         B               loc_6490
.text:00006484
.text:00006486                               ; ---------------------------------------------------------------------------
.text:00006486
.text:00006486                               loc_6486                      ; CODE XREF: sub_62E0+19E↑j
.text:00006486 01 25                         MOVS            R5, #1
.text:00006488 3B 28                         CMP             R0, #0x3B ; ';'
.text:0000648A C8 BF                         IT GT
.text:0000648C 02 25                         MOVGT           R5, #2
.text:0000648E 00 26                         MOVS            R6, #0
.text:0000648E
.text:00006490
.text:00006490                               loc_6490                      ; CODE XREF: sub_62E0+D4↑j
.text:00006490                                                             ; sub_62E0+E4↑j
.text:00006490                                                             ; sub_62E0+F0↑j
.text:00006490                                                             ; sub_62E0+12C↑j
.text:00006490                                                             ; sub_62E0+13A↑j
.text:00006490                                                             ; sub_62E0+150↑j
.text:00006490                                                             ; sub_62E0+15E↑j
.text:00006490                                                             ; sub_62E0+16C↑j
.text:00006490                                                             ; sub_62E0+17A↑j
.text:00006490                                                             ; sub_62E0+188↑j
.text:00006490                                                             ; sub_62E0+196↑j
.text:00006490                                                             ; sub_62E0+1A4↑j
.text:00006490 94 F8 30 11                   LDRB.W          R1, [R4,#0x130]
.text:00006494 56 4A                         LDR             R2, =(aSIsOverseaDImp - 0x64A0) ; "%s:is_oversea=%d,impedance=%d"
.text:00006496 57 4B                         LDR             R3, =(aSetHifiGain - 0x64A2) ; "set_hifi_gain"
.text:00006498 CD E9 00 10                   STRD.W          R1, R0, [SP,#0x38+var_38]
.text:0000649C 7A 44                         ADD             R2, PC        ; "%s:is_oversea=%d,impedance=%d"
.text:0000649E 7B 44                         ADD             R3, PC        ; "set_hifi_gain"
.text:000064A0 03 20                         MOVS            R0, #3
.text:000064A2 52 49                         LDR             R1, =(aAudioHwPrimary - 0x64A8) ; "audio_hw_primary"
.text:000064A4 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000064A6 FC F7 98 ED                   BLX             __android_log_print
.text:000064A6
.text:000064AA 94 F8 30 01                   LDRB.W          R0, [R4,#0x130]
.text:000064AE C8 B1                         CBZ             R0, loc_64E4
.text:000064AE
.text:000064B0 D4 F8 34 01                   LDR.W           R0, [R4,#0x134]
.text:000064B4 78 28                         CMP             R0, #0x78 ; 'x'
.text:000064B6 01 DD                         BLE             loc_64BC
.text:000064B6
.text:000064B8 00 26                         MOVS            R6, #0
.text:000064BA 13 E0                         B               loc_64E4
.text:000064BA
.text:000064BC                               ; ---------------------------------------------------------------------------
.text:000064BC
.text:000064BC                               loc_64BC                      ; CODE XREF: sub_62E0+1D6↑j
.text:000064BC 00 EE 10 0A                   VMOV            S0, R0
.text:000064C0 F8 EE C0 0B                   VCVT.F64.S32    D16, S0
.text:000064C4 51 EC 30 0B                   VMOV            R0, R1, D16   ; x
.text:000064C8 FC F7 0C EF                   BLX             log10
.text:000064C8
.text:000064CC DF ED 38 0B                   VLDR            D16, =43.0
.text:000064D0 FB EE 04 1B                   VMOV.F64        D17, #-20.0
.text:000064D4 41 EC 32 0B                   VMOV            D18, R0, R1
.text:000064D8 42 EE A1 0B                   VMLA.F64        D16, D18, D17
.text:000064DC BD EE E0 0B                   VCVT.S32.F64    S0, D16
.text:000064E0 10 EE 10 6A                   VMOV            R6, S0
.text:000064E0
.text:000064E4
.text:000064E4                               loc_64E4                      ; CODE XREF: sub_62E0+1CE↑j
.text:000064E4                                                             ; sub_62E0+1DA↑j
.text:000064E4 C4 F8 2C 61                   STR.W           R6, [R4,#0x12C]
.text:000064E8 D4 F8 28 01                   LDR.W           R0, [R4,#0x128]
.text:000064EC 42 49                         LDR             R1, =(aAudioHwPrimary - 0x64F6) ; "audio_hw_primary"
.text:000064EE 43 4A                         LDR             R2, =(aSGainDDVolumeC - 0x64FC) ; "%s(): gain: %d >> %d,volume_compensatio"...
.text:000064F0 43 4B                         LDR             R3, =(aSetHifiGain - 0x64FE) ; "set_hifi_gain"
.text:000064F2 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000064F4 8D E8 61 00                   STMEA.W         SP, {R0,R5,R6}
.text:000064F8 7A 44                         ADD             R2, PC        ; "%s(): gain: %d >> %d,volume_compensatio"...
.text:000064FA 7B 44                         ADD             R3, PC        ; "set_hifi_gain"
.text:000064FC 03 20                         MOVS            R0, #3
.text:000064FE FC F7 6C ED                   BLX             __android_log_print
.text:000064FE
.text:00006502 D4 F8 28 01                   LDR.W           R0, [R4,#0x128]
.text:00006506 85 42                         CMP             R5, R0
.text:00006508 44 D0                         BEQ             loc_6594
.text:00006508
.text:0000650A 3E 49                         LDR             R1, =(aFilterShape - 0x6516) ; "Filter Shape"
.text:0000650C 00 22                         MOVS            R2, #0
.text:0000650E D4 F8 C4 00                   LDR.W           R0, [R4,#0xC4]
.text:00006512 79 44                         ADD             R1, PC        ; "Filter Shape"
.text:00006514 FD F7 26 FF                   BL              sub_4364
.text:00006514
.text:00006518 3B 49                         LDR             R1, =(aBypassIir - 0x6524) ; "bypass IIR"
.text:0000651A 00 22                         MOVS            R2, #0
.text:0000651C D4 F8 C4 00                   LDR.W           R0, [R4,#0xC4]
.text:00006520 79 44                         ADD             R1, PC        ; "bypass IIR"
.text:00006522 FD F7 1F FF                   BL              sub_4364
.text:00006522
.text:00006526 39 49                         LDR             R1, =(aIirBandwidth - 0x6532) ; "IIR bandwidth"
.text:00006528 00 22                         MOVS            R2, #0
.text:0000652A D4 F8 C4 00                   LDR.W           R0, [R4,#0xC4]
.text:0000652E 79 44                         ADD             R1, PC        ; "IIR bandwidth"
.text:00006530 FD F7 18 FF                   BL              sub_4364
.text:00006530
.text:00006534 36 49                         LDR             R1, =(aGainSelection - 0x6540) ; "Gain selection"
.text:00006536 2A 46                         MOV             R2, R5
.text:00006538 D4 F8 C4 00                   LDR.W           R0, [R4,#0xC4]
.text:0000653C 79 44                         ADD             R1, PC        ; "Gain selection"
.text:0000653E FD F7 11 FF                   BL              sub_4364
.text:0000653E
.text:00006542 34 49                         LDR             R1, =(aThdCompensatio - 0x654E) ; "THD Compensation"
.text:00006544 01 22                         MOVS            R2, #1
.text:00006546 D4 F8 C4 00                   LDR.W           R0, [R4,#0xC4]
.text:0000654A 79 44                         ADD             R1, PC        ; "THD Compensation"
.text:0000654C FD F7 0A FF                   BL              sub_4364
.text:0000654C
.text:00006550 31 49                         LDR             R1, =(a2ndHarmonicCom - 0x655C) ; "2nd Harmonic Compensation"
.text:00006552 00 22                         MOVS            R2, #0
.text:00006554 D4 F8 C4 00                   LDR.W           R0, [R4,#0xC4]
.text:00006558 79 44                         ADD             R1, PC        ; "2nd Harmonic Compensation"
.text:0000655A FD F7 03 FF                   BL              sub_4364
.text:0000655A
.text:0000655E 2F 49                         LDR             R1, =(a3ndHarmonicCom - 0x656A) ; "3nd Harmonic Compensation"
.text:00006560 FE 22                         MOVS            R2, #0xFE
.text:00006562 D4 F8 C4 00                   LDR.W           R0, [R4,#0xC4]
.text:00006566 79 44                         ADD             R1, PC        ; "3nd Harmonic Compensation"
.text:00006568 FD F7 FC FE                   BL              sub_4364
.text:00006568
.text:0000656C 2C 49                         LDR             R1, =(aCustomFirEnabl - 0x6578) ; "custom FIR enable"
.text:0000656E 01 22                         MOVS            R2, #1
.text:00006570 D4 F8 C4 00                   LDR.W           R0, [R4,#0xC4]
.text:00006574 79 44                         ADD             R1, PC        ; "custom FIR enable"
.text:00006576 FD F7 F5 FE                   BL              sub_4364
.text:00006576
.text:0000657A 2A 49                         LDR             R1, =(aStage2FilterTy - 0x6586) ; "stage2 filter type"
.text:0000657C 00 22                         MOVS            R2, #0
.text:0000657E D4 F8 C4 00                   LDR.W           R0, [R4,#0xC4]
.text:00006582 79 44                         ADD             R1, PC        ; "stage2 filter type"
.text:00006584 FD F7 EE FE                   BL              sub_4364
.text:00006584
.text:00006588 D4 F8 24 01                   LDR.W           R0, [R4,#0x124]
.text:0000658C 03 28                         CMP             R0, #3
.text:0000658E 18 BF                         IT NE
.text:00006590 C4 F8 28 51                   STRNE.W         R5, [R4,#0x128]
.text:00006590
.text:00006594
.text:00006594                               loc_6594                      ; CODE XREF: sub_62E0+114↑j
.text:00006594                                                             ; sub_62E0+228↑j
.text:00006594 2A 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x659C)
.text:00006596 08 99                         LDR             R1, [SP,#0x38+var_18]
.text:00006598 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:0000659A 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:0000659C 00 68                         LDR             R0, [R0]
.text:0000659E 40 1A                         SUBS            R0, R0, R1
.text:000065A0 04 BF                         ITT EQ
.text:000065A2 09 B0                         ADDEQ           SP, SP, #0x24 ; '$'
.text:000065A4 F0 BD                         POPEQ           {R4-R7,PC}
.text:000065A4
.text:000065A6 FC F7 1E ED                   BLX             __stack_chk_fail
.text:000065A6
.text:000065A6                               ; End of function sub_62E0
.text:000065A6
.text:000065A6                               ; ---------------------------------------------------------------------------
.text:000065AA 00 BF                         ALIGN 4
.text:000065AC 00 BF 00 BF                   DCD 0xBF00BF00
.text:000065B0 00 00 00 00 00 80 45 40       dbl_65B0 DCFD 43.0            ; DATA XREF: sub_62E0+1EC↑r
.text:000065B8 A6 AA 00 00                   off_65B8 DCD __stack_chk_guard_ptr - 0x62EE
.text:000065B8                                                             ; DATA XREF: sub_62E0+6↑r
.text:000065BC 0E 68 00 00                   off_65BC DCD aSysClassArizon - 0x62F8
.text:000065BC                                                             ; DATA XREF: sub_62E0+12↑r
.text:000065BC                                                             ; "/sys/class/arizona/wm8998_hp_impedance/"...
.text:000065C0 DE 67 00 00                   off_65C0 DCD aSysClassArizon - 0x6328
.text:000065C0                                                             ; DATA XREF: sub_62E0:loc_631E↑r
.text:000065C0                                                             ; "/sys/class/arizona/wm8998_hp_impedance/"...
.text:000065C4 73 57 00 00                   off_65C4 DCD aAudioHwPrimary - 0x632C
.text:000065C4                                                             ; DATA XREF: sub_62E0+40↑r
.text:000065C4                                                             ; "audio_hw_primary"
.text:000065C8 02 69 00 00                   off_65C8 DCD aSFailedToOpenS - 0x6330
.text:000065C8                                                             ; DATA XREF: sub_62E0+42↑r
.text:000065C8                                                             ; "%s(): failed to open %s\n"
.text:000065CC F1 68 00 00                   off_65CC DCD aReadImpedance - 0x6332
.text:000065CC                                                             ; DATA XREF: sub_62E0+46↑r
.text:000065CC                                                             ; "read_impedance"
.text:000065D0 BA 67 00 00                   off_65D0 DCD aSysClassArizon - 0x634C
.text:000065D0                                                             ; DATA XREF: sub_62E0:loc_6342↑r
.text:000065D0                                                             ; "/sys/class/arizona/wm8998_hp_impedance/"...
.text:000065D4 4F 57 00 00                   off_65D4 DCD aAudioHwPrimary - 0x6350
.text:000065D4                                                             ; DATA XREF: sub_62E0+64↑r
.text:000065D4                                                             ; "audio_hw_primary"
.text:000065D8 B7 68 00 00                   off_65D8 DCD aSFailedToReadS - 0x6354
.text:000065D8                                                             ; DATA XREF: sub_62E0+66↑r
.text:000065D8                                                             ; "%s(): failed to read %s"
.text:000065DC CD 68 00 00                   off_65DC DCD aReadImpedance - 0x6356
.text:000065DC                                                             ; DATA XREF: sub_62E0+6A↑r
.text:000065DC                                                             ; "read_impedance"
.text:000065E0 17 57 00 00                   off_65E0 DCD aAudioHwPrimary - 0x6388
.text:000065E0                                                             ; DATA XREF: sub_62E0+A2↑r
.text:000065E0                                                             ; "audio_hw_primary"
.text:000065E4 D6 67 00 00                   off_65E4 DCD aSHpImpedanceDG - 0x637A
.text:000065E4                                                             ; DATA XREF: sub_62E0+8C↑r
.text:000065E4                                                             ; "%s(): hp_impedance=%d, gain_state=%d"
.text:000065E8 C0 67 00 00                   off_65E8 DCD aSetHifiGain - 0x6382
.text:000065E8                                                             ; DATA XREF: sub_62E0+98↑r
.text:000065E8                                                             ; "set_hifi_gain"
.text:000065EC F7 55 00 00                   off_65EC DCD aAudioHwPrimary - 0x64A8
.text:000065EC                                                             ; DATA XREF: sub_62E0+1C2↑r
.text:000065EC                                                             ; "audio_hw_primary"
.text:000065F0 EE 66 00 00                   off_65F0 DCD aSIsOverseaDImp - 0x64A0
.text:000065F0                                                             ; DATA XREF: sub_62E0+1B4↑r
.text:000065F0                                                             ; "%s:is_oversea=%d,impedance=%d"
.text:000065F4 A0 66 00 00                   off_65F4 DCD aSetHifiGain - 0x64A2
.text:000065F4                                                             ; DATA XREF: sub_62E0+1B6↑r
.text:000065F4                                                             ; "set_hifi_gain"
.text:000065F8 A9 55 00 00                   off_65F8 DCD aAudioHwPrimary - 0x64F6
.text:000065F8                                                             ; DATA XREF: sub_62E0+20C↑r
.text:000065F8                                                             ; "audio_hw_primary"
.text:000065FC B0 66 00 00                   off_65FC DCD aSGainDDVolumeC - 0x64FC
.text:000065FC                                                             ; DATA XREF: sub_62E0+20E↑r
.text:000065FC                                                             ; "%s(): gain: %d >> %d,volume_compensatio"...
.text:00006600 44 66 00 00                   off_6600 DCD aSetHifiGain - 0x64FE
.text:00006600                                                             ; DATA XREF: sub_62E0+210↑r
.text:00006600                                                             ; "set_hifi_gain"
.text:00006604 C2 5F 00 00                   off_6604 DCD aFilterShape - 0x6516
.text:00006604                                                             ; DATA XREF: sub_62E0+22A↑r
.text:00006604                                                             ; "Filter Shape"
.text:00006608 C1 5F 00 00                   off_6608 DCD aBypassIir - 0x6524
.text:00006608                                                             ; DATA XREF: sub_62E0+238↑r
.text:00006608                                                             ; "bypass IIR"
.text:0000660C A6 66 00 00                   off_660C DCD aIirBandwidth - 0x6532
.text:0000660C                                                             ; DATA XREF: sub_62E0+246↑r
.text:0000660C                                                             ; "IIR bandwidth"
.text:00006610 72 5F 00 00                   off_6610 DCD aGainSelection - 0x6540
.text:00006610                                                             ; DATA XREF: sub_62E0+254↑r
.text:00006610                                                             ; "Gain selection"
.text:00006614 A2 5F 00 00                   off_6614 DCD aThdCompensatio - 0x654E
.text:00006614                                                             ; DATA XREF: sub_62E0+262↑r
.text:00006614                                                             ; "THD Compensation"
.text:00006618 A5 5F 00 00                   off_6618 DCD a2ndHarmonicCom - 0x655C
.text:00006618                                                             ; DATA XREF: sub_62E0+270↑r
.text:00006618                                                             ; "2nd Harmonic Compensation"
.text:0000661C B1 5F 00 00                   off_661C DCD a3ndHarmonicCom - 0x656A
.text:0000661C                                                             ; DATA XREF: sub_62E0+27E↑r
.text:0000661C                                                             ; "3nd Harmonic Compensation"
.text:00006620 6E 66 00 00                   off_6620 DCD aCustomFirEnabl - 0x6578
.text:00006620                                                             ; DATA XREF: sub_62E0+28C↑r
.text:00006620                                                             ; "custom FIR enable"
.text:00006624 72 66 00 00                   off_6624 DCD aStage2FilterTy - 0x6586
.text:00006624                                                             ; DATA XREF: sub_62E0+29A↑r
.text:00006624                                                             ; "stage2 filter type"
.text:00006628 B3 56 00 00                   off_6628 DCD aAudioHwPrimary - 0x63EC
.text:00006628                                                             ; DATA XREF: sub_62E0:def_6392↑r
.text:00006628                                                             ; "audio_hw_primary"
.text:0000662C 87 67 00 00                   off_662C DCD aSInvalidGainSt - 0x63EE
.text:0000662C                                                             ; DATA XREF: sub_62E0+104↑r
.text:0000662C                                                             ; "%s(): invalid gain state"
.text:00006630 52 67 00 00                   off_6630 DCD aSetHifiGain - 0x63F0
.text:00006630                                                             ; DATA XREF: sub_62E0+106↑r
.text:00006630                                                             ; "set_hifi_gain"
.text:00006634 C3 56 00 00                   off_6634 DCD aAudioHwPrimary - 0x63DC
.text:00006634                                                             ; DATA XREF: sub_62E0:loc_63D2↑r
.text:00006634                                                             ; "audio_hw_primary"
.text:00006638 5A 67 00 00                   off_6638 DCD aSD - 0x63E0     ; DATA XREF: sub_62E0+F4↑r
.text:00006638                                                             ; "%s : %d"
.text:0000663C 60 67 00 00                   off_663C DCD aSetHifiGain - 0x63E2
.text:0000663C                                                             ; DATA XREF: sub_62E0+F6↑r
.text:0000663C                                                             ; "set_hifi_gain"
.text:00006640 F8 A7 00 00                   off_6640 DCD __stack_chk_guard_ptr - 0x659C
.text:00006640                                                             ; DATA XREF: sub_62E0:loc_6594↑r
.text:00006640                               ; } // starts at 62E0
.text:00006644
.text:00006644                               ; =============== S U B R O U T I N E =======================================
.text:00006644
.text:00006644
.text:00006644                               ; int __fastcall sub_6644(int)
.text:00006644                               sub_6644                      ; CODE XREF: sub_4B48+182↑p
.text:00006644                                                             ; sub_52B8+8↑p
.text:00006644                                                             ; sub_5520+5E↑p
.text:00006644                                                             ; DATA XREF: sub_5068+84↑o
.text:00006644                                                             ; sub_5068+86↑o
.text:00006644                                                             ; .text:off_527C↑o
.text:00006644                               ; __unwind {
.text:00006644 B0 B5                         PUSH            {R4,R5,R7,LR}
.text:00006646 04 46                         MOV             R4, R0
.text:00006648 D4 F8 CC 00                   LDR.W           R0, [R4,#0xCC]
.text:0000664C A4 30                         ADDS            R0, #0xA4     ; mutex
.text:0000664E FC F7 E8 EC                   BLX             pthread_mutex_lock
.text:0000664E
.text:00006652 04 F1 64 05                   ADD.W           R5, R4, #0x64 ; 'd'
.text:00006656 28 46                         MOV             R0, R5        ; mutex
.text:00006658 FC F7 E2 EC                   BLX             pthread_mutex_lock
.text:00006658
.text:0000665C 20 46                         MOV             R0, R4
.text:0000665E FF F7 AB FD                   BL              sub_61B8
.text:0000665E
.text:00006662 28 46                         MOV             R0, R5        ; mutex
.text:00006664 FC F7 EE EC                   BLX             pthread_mutex_unlock
.text:00006664
.text:00006668 D4 F8 CC 00                   LDR.W           R0, [R4,#0xCC]
.text:0000666C A4 30                         ADDS            R0, #0xA4     ; mutex
.text:0000666E FC F7 EA EC                   BLX             pthread_mutex_unlock
.text:0000666E
.text:00006672 00 20                         MOVS            R0, #0
.text:00006674 B0 BD                         POP             {R4,R5,R7,PC}
.text:00006674
.text:00006674                               ; End of function sub_6644
.text:00006674
.text:00006676
.text:00006676                               ; =============== S U B R O U T I N E =======================================
.text:00006676
.text:00006676
.text:00006676                               ; int __fastcall sub_6676(int)
.text:00006676                               sub_6676                      ; CODE XREF: sub_4B48+18E↑p
.text:00006676                                                             ; sub_5520+10↑p
.text:00006676                                                             ; DATA XREF: sub_52F4+126↑o
.text:00006676                                                             ; sub_52F4+128↑o
.text:00006676                                                             ; .text:off_54F0↑o
.text:00006676 B0 B5                         PUSH            {R4,R5,R7,LR}
.text:00006678 04 46                         MOV             R4, R0
.text:0000667A D4 F8 AC 00                   LDR.W           R0, [R4,#0xAC]
.text:0000667E A4 30                         ADDS            R0, #0xA4     ; mutex
.text:00006680 FC F7 CE EC                   BLX             pthread_mutex_lock
.text:00006680
.text:00006684 04 F1 74 05                   ADD.W           R5, R4, #0x74 ; 't'
.text:00006688 28 46                         MOV             R0, R5        ; mutex
.text:0000668A FC F7 CA EC                   BLX             pthread_mutex_lock
.text:0000668A
.text:0000668E 20 46                         MOV             R0, R4
.text:00006690 FF F7 E4 FC                   BL              sub_605C
.text:00006690
.text:00006694 28 46                         MOV             R0, R5        ; mutex
.text:00006696 FC F7 D6 EC                   BLX             pthread_mutex_unlock
.text:00006696
.text:0000669A D4 F8 AC 00                   LDR.W           R0, [R4,#0xAC]
.text:0000669E A4 30                         ADDS            R0, #0xA4     ; mutex
.text:000066A0 FC F7 D0 EC                   BLX             pthread_mutex_unlock
.text:000066A0
.text:000066A4 00 20                         MOVS            R0, #0
.text:000066A6 B0 BD                         POP             {R4,R5,R7,PC}
.text:000066A6
.text:000066A6                               ; End of function sub_6676
.text:000066A6
.text:000066A6                               ; ---------------------------------------------------------------------------
.text:000066A8 00 00 00 00 00 00 00 00       ALIGN 0x10
.text:000066A8                               ; } // starts at 6644
.text:000066B0
.text:000066B0                               ; =============== S U B R O U T I N E =======================================
.text:000066B0
.text:000066B0
.text:000066B0                               ; int __fastcall sub_66B0(int, int)
.text:000066B0                               sub_66B0                      ; CODE XREF: sub_4B48+1D0↑p
.text:000066B0                                                             ; sub_4E6C+9E↑p
.text:000066B0                                                             ; sub_4E6C+F0↑p
.text:000066B0
.text:000066B0                               newthread= -0x74
.text:000066B0                               var_70= -0x70
.text:000066B0                               var_50= -0x50
.text:000066B0                               anonymous_0= -0x4C
.text:000066B0                               s1= -0x48
.text:000066B0                               var_28= -0x28
.text:000066B0
.text:000066B0                               ; __unwind {
.text:000066B0 2D E9 F0 4F                   PUSH.W          {R4-R11,LR}
.text:000066B4 95 B0                         SUB             SP, SP, #0x54
.text:000066B6 04 46                         MOV             R4, R0
.text:000066B8 DF F8 14 05                   LDR.W           R0, =(__stack_chk_guard_ptr - 0x66C0)
.text:000066BC 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:000066BE 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:000066C0 00 68                         LDR             R0, [R0]
.text:000066C2 14 90                         STR             R0, [SP,#0x78+var_28]
.text:000066C4 08 46                         MOV             R0, R1
.text:000066C6 FC F7 96 ED                   BLX             str_parms_create_str
.text:000066C6
.text:000066CA 06 46                         MOV             R6, R0
.text:000066CC FC F7 10 EE                   BLX             j_is_headphone_on
.text:000066CC
.text:000066D0 DF F8 00 15                   LDR.W           R1, =(aFactoryTest - 0x66DE) ; "factory_test"
.text:000066D4 05 46                         MOV             R5, R0
.text:000066D6 0C AA                         ADD             R2, SP, #0x78+s1
.text:000066D8 30 46                         MOV             R0, R6
.text:000066DA 79 44                         ADD             R1, PC        ; "factory_test"
.text:000066DC 20 23                         MOVS            R3, #0x20 ; ' '
.text:000066DE FC F7 90 ED                   BLX             str_parms_get_str
.text:000066DE
.text:000066E2 06 46                         MOV             R6, R0
.text:000066E4 00 2E                         CMP             R6, #0
.text:000066E6 C0 F2 E5 81                   BLT.W           loc_6AB4
.text:000066E6
.text:000066EA DF F8 EC 14                   LDR.W           R1, =(aEarphone - 0x66F4) ; "earphone"
.text:000066EE 0C A8                         ADD             R0, SP, #0x78+s1 ; s1
.text:000066F0 79 44                         ADD             R1, PC        ; "earphone"
.text:000066F2 FC F7 56 ED                   BLX             strcmp
.text:000066F2
.text:000066F6 00 28                         CMP             R0, #0
.text:000066F8 63 D0                         BEQ             loc_67C2
.text:000066F8
.text:000066FA DF F8 E4 14                   LDR.W           R1, =(aHeadphone - 0x6704) ; "headphone"
.text:000066FE 0C A8                         ADD             R0, SP, #0x78+s1 ; s1
.text:00006700 79 44                         ADD             R1, PC        ; "headphone"
.text:00006702 FC F7 4E ED                   BLX             strcmp
.text:00006702
.text:00006706 00 28                         CMP             R0, #0
.text:00006708 61 D0                         BEQ             loc_67CE
.text:00006708
.text:0000670A DF F8 DC 14                   LDR.W           R1, =(aSpeaker - 0x6714) ; "speaker"
.text:0000670E 0C A8                         ADD             R0, SP, #0x78+s1 ; s1
.text:00006710 79 44                         ADD             R1, PC        ; "speaker"
.text:00006712 FC F7 46 ED                   BLX             strcmp
.text:00006712
.text:00006716 00 28                         CMP             R0, #0
.text:00006718 5F D0                         BEQ             loc_67DA
.text:00006718
.text:0000671A DF F8 D4 14                   LDR.W           R1, =(aPriMic - 0x6724) ; "pri_mic"
.text:0000671E 0C A8                         ADD             R0, SP, #0x78+s1 ; s1
.text:00006720 79 44                         ADD             R1, PC        ; "pri_mic"
.text:00006722 FC F7 3E ED                   BLX             strcmp
.text:00006722
.text:00006726 00 28                         CMP             R0, #0
.text:00006728 62 D0                         BEQ             loc_67F0
.text:00006728
.text:0000672A DF F8 CC 14                   LDR.W           R1, =(aSecMic - 0x6734) ; "sec_mic"
.text:0000672E 0C A8                         ADD             R0, SP, #0x78+s1 ; s1
.text:00006730 79 44                         ADD             R1, PC        ; "sec_mic"
.text:00006732 FC F7 36 ED                   BLX             strcmp
.text:00006732
.text:00006736 00 28                         CMP             R0, #0
.text:00006738 60 D0                         BEQ             loc_67FC
.text:00006738
.text:0000673A DF F8 C4 14                   LDR.W           R1, =(aTerMic - 0x6744) ; "ter_mic"
.text:0000673E 0C A8                         ADD             R0, SP, #0x78+s1 ; s1
.text:00006740 79 44                         ADD             R1, PC        ; "ter_mic"
.text:00006742 FC F7 2E ED                   BLX             strcmp
.text:00006742
.text:00006746 00 28                         CMP             R0, #0
.text:00006748 5E D0                         BEQ             loc_6808
.text:00006748
.text:0000674A DF F8 BC 14                   LDR.W           R1, =(aHifiHighGain - 0x6754) ; "hifi_high_gain"
.text:0000674E 0C A8                         ADD             R0, SP, #0x78+s1 ; s1
.text:00006750 79 44                         ADD             R1, PC        ; "hifi_high_gain"
.text:00006752 FC F7 26 ED                   BLX             strcmp
.text:00006752
.text:00006756 00 28                         CMP             R0, #0
.text:00006758 00 F0 CA 81                   BEQ.W           loc_6AF0
.text:00006758
.text:0000675C DF F8 AC 14                   LDR.W           R1, =(aHifiLowGain - 0x6766) ; "hifi_low_gain"
.text:00006760 0C A8                         ADD             R0, SP, #0x78+s1 ; s1
.text:00006762 79 44                         ADD             R1, PC        ; "hifi_low_gain"
.text:00006764 FC F7 1C ED                   BLX             strcmp
.text:00006764
.text:00006768 00 28                         CMP             R0, #0
.text:0000676A 00 F0 C8 81                   BEQ.W           loc_6AFE
.text:0000676A
.text:0000676E DF F8 A0 14                   LDR.W           R1, =(aPaCalibration - 0x6778) ; "pa_calibration"
.text:00006772 0C A8                         ADD             R0, SP, #0x78+s1 ; s1
.text:00006774 79 44                         ADD             R1, PC        ; "pa_calibration"
.text:00006776 FC F7 14 ED                   BLX             strcmp
.text:00006776
.text:0000677A 00 28                         CMP             R0, #0
.text:0000677C 00 F0 C6 81                   BEQ.W           loc_6B0C
.text:0000677C
.text:00006780 DF F8 90 14                   LDR.W           R1, =(aModemLoopback - 0x678A) ; "modem_loopback"
.text:00006784 0C A8                         ADD             R0, SP, #0x78+s1 ; s1
.text:00006786 79 44                         ADD             R1, PC        ; "modem_loopback"
.text:00006788 FC F7 0A ED                   BLX             strcmp
.text:00006788
.text:0000678C 00 28                         CMP             R0, #0
.text:0000678E 00 F0 C7 81                   BEQ.W           loc_6B20
.text:0000678E
.text:00006792 DF F8 84 14                   LDR.W           R1, =(aOff - 0x679C) ; "off"
.text:00006796 0C A8                         ADD             R0, SP, #0x78+s1 ; s1
.text:00006798 79 44                         ADD             R1, PC        ; "off"
.text:0000679A FC F7 02 ED                   BLX             strcmp
.text:0000679A
.text:0000679E 00 28                         CMP             R0, #0
.text:000067A0 00 F0 D3 81                   BEQ.W           loc_6B4A
.text:000067A0
.text:000067A4 DF F8 74 14                   LDR.W           R1, =(aAudioHwPrimary - 0x67B6) ; "audio_hw_primary"
.text:000067A8 06 20                         MOVS            R0, #6
.text:000067AA DF F8 74 24                   LDR.W           R2, =(aSUnsupportedFa - 0x67B8) ; "%s(): unsupported factory test command"
.text:000067AE DF F8 74 34                   LDR.W           R3, =(aAudioTest - 0x67BA) ; "audio_test"
.text:000067B2 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000067B4 7A 44                         ADD             R2, PC        ; "%s(): unsupported factory test command"
.text:000067B6 7B 44                         ADD             R3, PC        ; "audio_test"
.text:000067B8 FC F7 0E EC                   BLX             __android_log_print
.text:000067B8
.text:000067BC 6F F0 15 06                   MOV             R6, #0xFFFFFFEA
.text:000067C0 78 E1                         B               loc_6AB4
.text:000067C0
.text:000067C2                               ; ---------------------------------------------------------------------------
.text:000067C2
.text:000067C2                               loc_67C2                      ; CODE XREF: sub_66B0+48↑j
.text:000067C2 DF F8 18 04                   LDR.W           R0, =(test_earphones_ptr - 0x67CE)
.text:000067C6 4F F0 FF 37                   MOV.W           R7, #0xFFFFFFFF
.text:000067CA 78 44                         ADD             R0, PC        ; test_earphones_ptr
.text:000067CC 21 E0                         B               loc_6812
.text:000067CC
.text:000067CE                               ; ---------------------------------------------------------------------------
.text:000067CE
.text:000067CE                               loc_67CE                      ; CODE XREF: sub_66B0+58↑j
.text:000067CE DF F8 14 04                   LDR.W           R0, =(test_headphone_ptr - 0x67DA)
.text:000067D2 4F F0 FF 37                   MOV.W           R7, #0xFFFFFFFF
.text:000067D6 78 44                         ADD             R0, PC        ; test_headphone_ptr
.text:000067D8 1B E0                         B               loc_6812
.text:000067D8
.text:000067DA                               ; ---------------------------------------------------------------------------
.text:000067DA
.text:000067DA                               loc_67DA                      ; CODE XREF: sub_66B0+68↑j
.text:000067DA DF F8 10 04                   LDR.W           R0, =(test_speaker_ptr - 0x67EC)
.text:000067DE 4F F0 FF 37                   MOV.W           R7, #0xFFFFFFFF
.text:000067E2 00 26                         MOVS            R6, #0
.text:000067E4 4F F0 01 09                   MOV.W           R9, #1
.text:000067E8 78 44                         ADD             R0, PC        ; test_speaker_ptr
.text:000067EA D0 F8 00 80                   LDR.W           R8, [R0]      ; test_speaker
.text:000067EE 15 E0                         B               loc_681C
.text:000067EE
.text:000067F0                               ; ---------------------------------------------------------------------------
.text:000067F0
.text:000067F0                               loc_67F0                      ; CODE XREF: sub_66B0+78↑j
.text:000067F0 DF F8 00 04                   LDR.W           R0, =(test_pri_mic_ptr - 0x67FC)
.text:000067F4 4F F0 FF 37                   MOV.W           R7, #0xFFFFFFFF
.text:000067F8 78 44                         ADD             R0, PC        ; test_pri_mic_ptr
.text:000067FA 0A E0                         B               loc_6812
.text:000067FA
.text:000067FC                               ; ---------------------------------------------------------------------------
.text:000067FC
.text:000067FC                               loc_67FC                      ; CODE XREF: sub_66B0+88↑j
.text:000067FC DF F8 FC 03                   LDR.W           R0, =(test_sec_mic_ptr - 0x6808)
.text:00006800 4F F0 FF 37                   MOV.W           R7, #0xFFFFFFFF
.text:00006804 78 44                         ADD             R0, PC        ; test_sec_mic_ptr
.text:00006806 04 E0                         B               loc_6812
.text:00006806
.text:00006808                               ; ---------------------------------------------------------------------------
.text:00006808
.text:00006808                               loc_6808                      ; CODE XREF: sub_66B0+98↑j
.text:00006808 DF F8 F8 03                   LDR.W           R0, =(test_ter_mic_ptr - 0x6814)
.text:0000680C 4F F0 FF 37                   MOV.W           R7, #0xFFFFFFFF
.text:00006810 78 44                         ADD             R0, PC        ; test_ter_mic_ptr
.text:00006810
.text:00006812
.text:00006812                               loc_6812                      ; CODE XREF: sub_66B0+11C↑j
.text:00006812                                                             ; sub_66B0+128↑j
.text:00006812                                                             ; sub_66B0+14A↑j
.text:00006812                                                             ; sub_66B0+156↑j
.text:00006812                                                             ; sub_66B0+498↓j
.text:00006812                                                             ; sub_66B0+500↓j
.text:00006812 D0 F8 00 80                   LDR.W           R8, [R0]
.text:00006816 4F F0 00 09                   MOV.W           R9, #0
.text:0000681A 00 26                         MOVS            R6, #0
.text:0000681A
.text:0000681C
.text:0000681C                               loc_681C                      ; CODE XREF: sub_66B0+13E↑j
.text:0000681C                                                             ; sub_66B0+44C↓j
.text:0000681C                                                             ; sub_66B0+45A↓j
.text:0000681C 4F F0 00 0A                   MOV.W           R10, #0
.text:0000681C
.text:00006820
.text:00006820                               loc_6820                      ; CODE XREF: sub_66B0+46E↓j
.text:00006820 04 F1 A4 0B                   ADD.W           R11, R4, #0xA4
.text:00006824 58 46                         MOV             R0, R11       ; mutex
.text:00006826 FC F7 FC EB                   BLX             pthread_mutex_lock
.text:00006826
.text:0000682A 20 46                         MOV             R0, R4
.text:0000682C 00 F0 46 FA                   BL              sub_6CBC
.text:0000682C
.text:00006830 DF F8 20 04                   LDR.W           R0, =(default_settings_ptr - 0x683C)
.text:00006834 00 22                         MOVS            R2, #0
.text:00006836 00 25                         MOVS            R5, #0
.text:00006838 78 44                         ADD             R0, PC        ; default_settings_ptr
.text:0000683A 01 68                         LDR             R1, [R0]      ; default_settings
.text:0000683C D4 F8 C0 00                   LDR.W           R0, [R4,#0xC0]
.text:00006840 00 F0 88 FA                   BL              sub_6D54
.text:00006840
.text:00006844 DF F8 10 04                   LDR.W           R0, =(dword_116CC - 0x6850)
.text:00006848 01 21                         MOVS            R1, #1
.text:0000684A 01 2E                         CMP             R6, #1
.text:0000684C 78 44                         ADD             R0, PC        ; dword_116CC
.text:0000684E 01 60                         STR             R1, [R0]
.text:00006850 11 D1                         BNE             loc_6876
.text:00006850
.text:00006852 DF F8 5C 04                   LDR.W           R0, =(dword_116C8 - 0x6860)
.text:00006856 00 21                         MOVS            R1, #0        ; attr
.text:00006858 23 46                         MOV             R3, R4        ; arg
.text:0000685A 00 26                         MOVS            R6, #0
.text:0000685C 78 44                         ADD             R0, PC        ; dword_116C8
.text:0000685E 07 60                         STR             R7, [R0]
.text:00006860 DF F8 50 04                   LDR.W           R0, =(thread_test_hifi_ptr - 0x6868)
.text:00006864 78 44                         ADD             R0, PC        ; thread_test_hifi_ptr
.text:00006866 02 68                         LDR             R2, [R0]      ; thread_test_hifi ; start_routine
.text:00006868 01 A8                         ADD             R0, SP, #0x78+newthread ; newthread
.text:0000686A FC F7 48 ED                   BLX             pthread_create
.text:0000686A
.text:0000686E 58 46                         MOV             R0, R11       ; mutex
.text:00006870 FC F7 E8 EB                   BLX             pthread_mutex_unlock
.text:00006870
.text:00006874 1E E1                         B               loc_6AB4
.text:00006874
.text:00006876                               ; ---------------------------------------------------------------------------
.text:00006876
.text:00006876                               loc_6876                      ; CODE XREF: sub_66B0+1A0↑j
.text:00006876 C0 EF 50 00                   VMOV.I32        Q8, #0
.text:0000687A D1 A0                         ADR             R0, dword_6BC0
.text:0000687C 02 AB                         ADD             R3, SP, #0x78+var_70
.text:0000687E 60 F9 EF 2A                   VLD1.64         {D18-D19}, [R0@128]
.text:00006882 18 46                         MOV             R0, R3
.text:00006884 02 21                         MOVS            R1, #2
.text:00006886 40 F9 CD 0A                   VST1.64         {D16-D17}, [R0]!
.text:0000688A 00 22                         MOVS            R2, #0
.text:0000688C 40 F9 CF 0A                   VST1.64         {D16-D17}, [R0]
.text:00006890 00 20                         MOVS            R0, #0
.text:00006892 CD E9 0A 55                   STRD.W          R5, R5, [SP,#0x78+var_50]
.text:00006896 43 F9 CF 2A                   VST1.64         {D18-D19}, [R3]
.text:0000689A FC F7 DA EB                   BLX             pcm_open
.text:0000689A
.text:0000689E C4 F8 E4 00                   STR.W           R0, [R4,#0xE4]
.text:000068A2 00 28                         CMP             R0, #0
.text:000068A4 03 D0                         BEQ             loc_68AE
.text:000068A4
.text:000068A6 FC F7 DA EB                   BLX             pcm_is_ready
.text:000068A6
.text:000068AA 00 28                         CMP             R0, #0
.text:000068AC 6C D0                         BEQ             loc_6988
.text:000068AC
.text:000068AE
.text:000068AE                               loc_68AE                      ; CODE XREF: sub_66B0+1F4↑j
.text:000068AE 02 AB                         ADD             R3, SP, #0x78+var_70
.text:000068B0 00 20                         MOVS            R0, #0
.text:000068B2 02 21                         MOVS            R1, #2
.text:000068B4 4F F0 80 52                   MOV.W           R2, #0x10000000
.text:000068B8 FC F7 CA EB                   BLX             pcm_open
.text:000068B8
.text:000068BC C4 F8 E8 00                   STR.W           R0, [R4,#0xE8]
.text:000068C0 18 B1                         CBZ             R0, loc_68CA
.text:000068C0
.text:000068C2 FC F7 CC EB                   BLX             pcm_is_ready
.text:000068C2
.text:000068C6 00 28                         CMP             R0, #0
.text:000068C8 6B D0                         BEQ             loc_69A2
.text:000068C8
.text:000068CA
.text:000068CA                               loc_68CA                      ; CODE XREF: sub_66B0+210↑j
.text:000068CA 02 AB                         ADD             R3, SP, #0x78+var_70
.text:000068CC 00 20                         MOVS            R0, #0
.text:000068CE 03 21                         MOVS            R1, #3
.text:000068D0 00 22                         MOVS            R2, #0
.text:000068D2 FC F7 BE EB                   BLX             pcm_open
.text:000068D2
.text:000068D6 C4 F8 DC 00                   STR.W           R0, [R4,#0xDC]
.text:000068DA 18 B1                         CBZ             R0, loc_68E4
.text:000068DA
.text:000068DC FC F7 BE EB                   BLX             pcm_is_ready
.text:000068DC
.text:000068E0 00 28                         CMP             R0, #0
.text:000068E2 6B D0                         BEQ             loc_69BC
.text:000068E2
.text:000068E4
.text:000068E4                               loc_68E4                      ; CODE XREF: sub_66B0+22A↑j
.text:000068E4 02 AB                         ADD             R3, SP, #0x78+var_70
.text:000068E6 00 20                         MOVS            R0, #0
.text:000068E8 03 21                         MOVS            R1, #3
.text:000068EA 4F F0 80 52                   MOV.W           R2, #0x10000000
.text:000068EE FC F7 B0 EB                   BLX             pcm_open
.text:000068EE
.text:000068F2 C4 F8 E0 00                   STR.W           R0, [R4,#0xE0]
.text:000068F6 18 B1                         CBZ             R0, loc_6900
.text:000068F6
.text:000068F8 FC F7 B0 EB                   BLX             pcm_is_ready
.text:000068F8
.text:000068FC 00 28                         CMP             R0, #0
.text:000068FE 6A D0                         BEQ             loc_69D6
.text:000068FE
.text:00006900
.text:00006900                               loc_6900                      ; CODE XREF: sub_66B0+246↑j
.text:00006900 02 AB                         ADD             R3, SP, #0x78+var_70
.text:00006902 00 20                         MOVS            R0, #0
.text:00006904 06 21                         MOVS            R1, #6
.text:00006906 00 22                         MOVS            R2, #0
.text:00006908 FC F7 A2 EB                   BLX             pcm_open
.text:00006908
.text:0000690C C4 F8 F4 00                   STR.W           R0, [R4,#0xF4]
.text:00006910 20 B1                         CBZ             R0, loc_691C
.text:00006910
.text:00006912 FC F7 A4 EB                   BLX             pcm_is_ready
.text:00006912
.text:00006916 00 28                         CMP             R0, #0
.text:00006918 00 F0 82 80                   BEQ.W           loc_6A20
.text:00006918
.text:0000691C
.text:0000691C                               loc_691C                      ; CODE XREF: sub_66B0+260↑j
.text:0000691C 02 AB                         ADD             R3, SP, #0x78+var_70
.text:0000691E 00 20                         MOVS            R0, #0
.text:00006920 06 21                         MOVS            R1, #6
.text:00006922 4F F0 80 52                   MOV.W           R2, #0x10000000
.text:00006926 FC F7 94 EB                   BLX             pcm_open
.text:00006926
.text:0000692A C4 F8 F8 00                   STR.W           R0, [R4,#0xF8]
.text:0000692E 20 B1                         CBZ             R0, loc_693A
.text:0000692E
.text:00006930 FC F7 94 EB                   BLX             pcm_is_ready
.text:00006930
.text:00006934 00 28                         CMP             R0, #0
.text:00006936 00 F0 80 80                   BEQ.W           loc_6A3A
.text:00006936
.text:0000693A
.text:0000693A                               loc_693A                      ; CODE XREF: sub_66B0+27E↑j
.text:0000693A D4 F8 E4 00                   LDR.W           R0, [R4,#0xE4]
.text:0000693E FC F7 94 EB                   BLX             pcm_prepare
.text:0000693E
.text:00006942 D4 F8 E8 00                   LDR.W           R0, [R4,#0xE8]
.text:00006946 FC F7 90 EB                   BLX             pcm_prepare
.text:00006946
.text:0000694A D4 F8 DC 00                   LDR.W           R0, [R4,#0xDC]
.text:0000694E FC F7 8C EB                   BLX             pcm_prepare
.text:0000694E
.text:00006952 D4 F8 E0 00                   LDR.W           R0, [R4,#0xE0]
.text:00006956 FC F7 88 EB                   BLX             pcm_prepare
.text:00006956
.text:0000695A D4 F8 F4 00                   LDR.W           R0, [R4,#0xF4]
.text:0000695E FC F7 84 EB                   BLX             pcm_prepare
.text:0000695E
.text:00006962 D4 F8 F8 00                   LDR.W           R0, [R4,#0xF8]
.text:00006966 FC F7 80 EB                   BLX             pcm_prepare
.text:00006966
.text:0000696A BA F1 01 0F                   CMP.W           R10, #1
.text:0000696E 3F D1                         BNE             loc_69F0
.text:0000696E
.text:00006970 20 46                         MOV             R0, R4
.text:00006972 FC F7 CA EC                   BLX             j_amplifier_calibrate
.text:00006972
.text:00006976 06 46                         MOV             R6, R0
.text:00006978 58 46                         MOV             R0, R11       ; mutex
.text:0000697A FC F7 64 EB                   BLX             pthread_mutex_unlock
.text:0000697A
.text:0000697E 00 2E                         CMP             R6, #0
.text:00006980 18 BF                         IT NE
.text:00006982 4F F0 FF 36                   MOVNE.W         R6, #0xFFFFFFFF
.text:00006986 95 E0                         B               loc_6AB4
.text:00006986
.text:00006988                               ; ---------------------------------------------------------------------------
.text:00006988
.text:00006988                               loc_6988                      ; CODE XREF: sub_66B0+1FC↑j
.text:00006988 D4 F8 E4 00                   LDR.W           R0, [R4,#0xE4]
.text:0000698C FC F7 8A EB                   BLX             pcm_get_error
.text:0000698C
.text:00006990 B2 49                         LDR             R1, =(aAudioHwPrimary - 0x699C) ; "audio_hw_primary"
.text:00006992 03 46                         MOV             R3, R0
.text:00006994 B2 4A                         LDR             R2, =(aPcmOpenVoiceBe - 0x699E) ; "pcm_open(VOICE_BE_OUT) failed: %s"
.text:00006996 06 20                         MOVS            R0, #6
.text:00006998 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000699A 7A 44                         ADD             R2, PC        ; "pcm_open(VOICE_BE_OUT) failed: %s"
.text:0000699C FC F7 1C EB                   BLX             __android_log_print
.text:0000699C
.text:000069A0 7A E0                         B               loc_6A98
.text:000069A0
.text:000069A2                               ; ---------------------------------------------------------------------------
.text:000069A2
.text:000069A2                               loc_69A2                      ; CODE XREF: sub_66B0+218↑j
.text:000069A2 D4 F8 E8 00                   LDR.W           R0, [R4,#0xE8]
.text:000069A6 FC F7 7E EB                   BLX             pcm_get_error
.text:000069A6
.text:000069AA AE 49                         LDR             R1, =(aAudioHwPrimary - 0x69B6) ; "audio_hw_primary"
.text:000069AC 03 46                         MOV             R3, R0
.text:000069AE AE 4A                         LDR             R2, =(aPcmOpenVoiceBe_0 - 0x69B8) ; "pcm_open(VOICE_BE_IN) failed: %s"
.text:000069B0 06 20                         MOVS            R0, #6
.text:000069B2 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000069B4 7A 44                         ADD             R2, PC        ; "pcm_open(VOICE_BE_IN) failed: %s"
.text:000069B6 FC F7 10 EB                   BLX             __android_log_print
.text:000069B6
.text:000069BA 66 E0                         B               loc_6A8A
.text:000069BA
.text:000069BC                               ; ---------------------------------------------------------------------------
.text:000069BC
.text:000069BC                               loc_69BC                      ; CODE XREF: sub_66B0+232↑j
.text:000069BC D4 F8 DC 00                   LDR.W           R0, [R4,#0xDC]
.text:000069C0 FC F7 70 EB                   BLX             pcm_get_error
.text:000069C0
.text:000069C4 A9 49                         LDR             R1, =(aAudioHwPrimary - 0x69D0) ; "audio_hw_primary"
.text:000069C6 03 46                         MOV             R3, R0
.text:000069C8 A9 4A                         LDR             R2, =(aPcmOpenVoiceOu - 0x69D2) ; "pcm_open(VOICE_OUT) failed: %s"
.text:000069CA 06 20                         MOVS            R0, #6
.text:000069CC 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000069CE 7A 44                         ADD             R2, PC        ; "pcm_open(VOICE_OUT) failed: %s"
.text:000069D0 FC F7 02 EB                   BLX             __android_log_print
.text:000069D0
.text:000069D4 52 E0                         B               loc_6A7C
.text:000069D4
.text:000069D6                               ; ---------------------------------------------------------------------------
.text:000069D6
.text:000069D6                               loc_69D6                      ; CODE XREF: sub_66B0+24E↑j
.text:000069D6 D4 F8 E0 00                   LDR.W           R0, [R4,#0xE0]
.text:000069DA FC F7 64 EB                   BLX             pcm_get_error
.text:000069DA
.text:000069DE A5 49                         LDR             R1, =(aAudioHwPrimary - 0x69EA) ; "audio_hw_primary"
.text:000069E0 03 46                         MOV             R3, R0
.text:000069E2 A5 4A                         LDR             R2, =(aPcmOpenVoiceIn - 0x69EC) ; "pcm_open(VOICE_IN) failed: %s"
.text:000069E4 06 20                         MOVS            R0, #6
.text:000069E6 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000069E8 7A 44                         ADD             R2, PC        ; "pcm_open(VOICE_IN) failed: %s"
.text:000069EA FC F7 F6 EA                   BLX             __android_log_print
.text:000069EA
.text:000069EE 3E E0                         B               loc_6A6E
.text:000069EE
.text:000069F0                               ; ---------------------------------------------------------------------------
.text:000069F0
.text:000069F0                               loc_69F0                      ; CODE XREF: sub_66B0+2BE↑j
.text:000069F0 D4 F8 C0 00                   LDR.W           R0, [R4,#0xC0]
.text:000069F4 41 46                         MOV             R1, R8
.text:000069F6 01 22                         MOVS            R2, #1
.text:000069F8 00 F0 AC F9                   BL              sub_6D54
.text:000069F8
.text:000069FC B9 F1 01 0F                   CMP.W           R9, #1
.text:00006A00 65 D1                         BNE             loc_6ACE
.text:00006A00
.text:00006A02 00 20                         MOVS            R0, #0
.text:00006A04 4B F6 80 31                   MOVW            R1, #0xBB80
.text:00006A08 00 22                         MOVS            R2, #0
.text:00006A0A FC F7 42 EC                   BLX             NxpTfa98xx_PowerOn
.text:00006A0A
.text:00006A0E 00 28                         CMP             R0, #0
.text:00006A10 69 D0                         BEQ             loc_6AE6
.text:00006A10
.text:00006A12 A4 49                         LDR             R1, =(aAudioHwPrimary - 0x6A1C) ; "audio_hw_primary"
.text:00006A14 A4 4A                         LDR             R2, =(aSFailedToPower - 0x6A1E) ; "%s(): failed to power on tfa98xx"
.text:00006A16 A5 4B                         LDR             R3, =(aAudioTest - 0x6A20) ; "audio_test"
.text:00006A18 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00006A1A 7A 44                         ADD             R2, PC        ; "%s(): failed to power on tfa98xx"
.text:00006A1C 7B 44                         ADD             R3, PC        ; "audio_test"
.text:00006A1E 5F E0                         B               loc_6AE0
.text:00006A1E
.text:00006A20                               ; ---------------------------------------------------------------------------
.text:00006A20
.text:00006A20                               loc_6A20                      ; CODE XREF: sub_66B0+268↑j
.text:00006A20 D4 F8 F4 00                   LDR.W           R0, [R4,#0xF4]
.text:00006A24 FC F7 3E EB                   BLX             pcm_get_error
.text:00006A24
.text:00006A28 94 49                         LDR             R1, =(aAudioHwPrimary - 0x6A34) ; "audio_hw_primary"
.text:00006A2A 03 46                         MOV             R3, R0
.text:00006A2C 94 4A                         LDR             R2, =(aPcmOpenPaOutFa - 0x6A36) ; "pcm_open(PA_OUT) failed: %s"
.text:00006A2E 06 20                         MOVS            R0, #6
.text:00006A30 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00006A32 7A 44                         ADD             R2, PC        ; "pcm_open(PA_OUT) failed: %s"
.text:00006A34 FC F7 D0 EA                   BLX             __android_log_print
.text:00006A34
.text:00006A38 12 E0                         B               loc_6A60
.text:00006A38
.text:00006A3A                               ; ---------------------------------------------------------------------------
.text:00006A3A
.text:00006A3A                               loc_6A3A                      ; CODE XREF: sub_66B0+286↑j
.text:00006A3A D4 F8 F8 00                   LDR.W           R0, [R4,#0xF8]
.text:00006A3E FC F7 32 EB                   BLX             pcm_get_error
.text:00006A3E
.text:00006A42 90 49                         LDR             R1, =(aAudioHwPrimary - 0x6A4E) ; "audio_hw_primary"
.text:00006A44 03 46                         MOV             R3, R0
.text:00006A46 90 4A                         LDR             R2, =(aPcmOpenPaInFai - 0x6A50) ; "pcm_open(PA_IN) failed: %s"
.text:00006A48 06 20                         MOVS            R0, #6
.text:00006A4A 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00006A4C 7A 44                         ADD             R2, PC        ; "pcm_open(PA_IN) failed: %s"
.text:00006A4E FC F7 C4 EA                   BLX             __android_log_print
.text:00006A4E
.text:00006A52 D4 F8 F4 00                   LDR.W           R0, [R4,#0xF4]
.text:00006A56 FC F7 2C EB                   BLX             pcm_close
.text:00006A56
.text:00006A5A 00 20                         MOVS            R0, #0
.text:00006A5C C4 F8 F4 00                   STR.W           R0, [R4,#0xF4]
.text:00006A5C
.text:00006A60
.text:00006A60                               loc_6A60                      ; CODE XREF: sub_66B0+388↑j
.text:00006A60 D4 F8 E0 00                   LDR.W           R0, [R4,#0xE0]
.text:00006A64 FC F7 24 EB                   BLX             pcm_close
.text:00006A64
.text:00006A68 00 20                         MOVS            R0, #0
.text:00006A6A C4 F8 E0 00                   STR.W           R0, [R4,#0xE0]
.text:00006A6A
.text:00006A6E
.text:00006A6E                               loc_6A6E                      ; CODE XREF: sub_66B0+33E↑j
.text:00006A6E D4 F8 DC 00                   LDR.W           R0, [R4,#0xDC]
.text:00006A72 FC F7 1E EB                   BLX             pcm_close
.text:00006A72
.text:00006A76 00 20                         MOVS            R0, #0
.text:00006A78 C4 F8 DC 00                   STR.W           R0, [R4,#0xDC]
.text:00006A78
.text:00006A7C
.text:00006A7C                               loc_6A7C                      ; CODE XREF: sub_66B0+324↑j
.text:00006A7C D4 F8 E8 00                   LDR.W           R0, [R4,#0xE8]
.text:00006A80 FC F7 16 EB                   BLX             pcm_close
.text:00006A80
.text:00006A84 00 20                         MOVS            R0, #0
.text:00006A86 C4 F8 E8 00                   STR.W           R0, [R4,#0xE8]
.text:00006A86
.text:00006A8A
.text:00006A8A                               loc_6A8A                      ; CODE XREF: sub_66B0+30A↑j
.text:00006A8A D4 F8 E4 00                   LDR.W           R0, [R4,#0xE4]
.text:00006A8E FC F7 10 EB                   BLX             pcm_close
.text:00006A8E
.text:00006A92 00 20                         MOVS            R0, #0
.text:00006A94 C4 F8 E4 00                   STR.W           R0, [R4,#0xE4]
.text:00006A94
.text:00006A98
.text:00006A98                               loc_6A98                      ; CODE XREF: sub_66B0+2F0↑j
.text:00006A98 7C 49                         LDR             R1, =(aAudioHwPrimary - 0x6AA4) ; "audio_hw_primary"
.text:00006A9A 06 20                         MOVS            R0, #6
.text:00006A9C 7C 4A                         LDR             R2, =(aSFailedToStart - 0x6AA6) ; "%s(): failed to start pcms"
.text:00006A9E 7D 4B                         LDR             R3, =(aAudioTest - 0x6AA8) ; "audio_test"
.text:00006AA0 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00006AA2 7A 44                         ADD             R2, PC        ; "%s(): failed to start pcms"
.text:00006AA4 7B 44                         ADD             R3, PC        ; "audio_test"
.text:00006AA6 FC F7 98 EA                   BLX             __android_log_print
.text:00006AA6
.text:00006AAA 58 46                         MOV             R0, R11       ; mutex
.text:00006AAC FC F7 CA EA                   BLX             pthread_mutex_unlock
.text:00006AAC
.text:00006AB0 6F F0 15 06                   MOV             R6, #0xFFFFFFEA
.text:00006AB0
.text:00006AB4
.text:00006AB4                               loc_6AB4                      ; CODE XREF: sub_66B0+36↑j
.text:00006AB4                                                             ; sub_66B0+110↑j
.text:00006AB4                                                             ; sub_66B0+1C4↑j
.text:00006AB4                                                             ; sub_66B0+2D6↑j
.text:00006AB4                                                             ; sub_66B0+43E↓j
.text:00006AB4                                                             ; sub_66B0+4E8↓j
.text:00006AB4 80 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x6ABC)
.text:00006AB6 14 99                         LDR             R1, [SP,#0x78+var_28]
.text:00006AB8 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00006ABA 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00006ABC 00 68                         LDR             R0, [R0]
.text:00006ABE 40 1A                         SUBS            R0, R0, R1
.text:00006AC0 02 BF                         ITTT EQ
.text:00006AC2 30 46                         MOVEQ           R0, R6
.text:00006AC4 15 B0                         ADDEQ           SP, SP, #0x54 ; 'T'
.text:00006AC6 BD E8 F0 8F                   POPEQ.W         {R4-R11,PC}
.text:00006AC6
.text:00006ACA FC F7 8C EA                   BLX             __stack_chk_fail
.text:00006ACA
.text:00006ACE                               ; ---------------------------------------------------------------------------
.text:00006ACE
.text:00006ACE                               loc_6ACE                      ; CODE XREF: sub_66B0+350↑j
.text:00006ACE FC F7 F2 EB                   BLX             NxpTfa98xx_PowerOff
.text:00006ACE
.text:00006AD2 40 B1                         CBZ             R0, loc_6AE6
.text:00006AD2
.text:00006AD4 70 49                         LDR             R1, =(aAudioHwPrimary - 0x6ADE) ; "audio_hw_primary"
.text:00006AD6 71 4A                         LDR             R2, =(aSFailedToPower_0 - 0x6AE0) ; "%s(): failed to power off tfa98xx"
.text:00006AD8 71 4B                         LDR             R3, =(aAudioTest - 0x6AE2) ; "audio_test"
.text:00006ADA 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00006ADC 7A 44                         ADD             R2, PC        ; "%s(): failed to power off tfa98xx"
.text:00006ADE 7B 44                         ADD             R3, PC        ; "audio_test"
.text:00006ADE
.text:00006AE0
.text:00006AE0                               loc_6AE0                      ; CODE XREF: sub_66B0+36E↑j
.text:00006AE0 06 20                         MOVS            R0, #6
.text:00006AE2 FC F7 7A EA                   BLX             __android_log_print
.text:00006AE2
.text:00006AE6
.text:00006AE6                               loc_6AE6                      ; CODE XREF: sub_66B0+360↑j
.text:00006AE6                                                             ; sub_66B0+422↑j
.text:00006AE6 58 46                         MOV             R0, R11       ; mutex
.text:00006AE8 FC F7 AC EA                   BLX             pthread_mutex_unlock
.text:00006AE8
.text:00006AEC 00 26                         MOVS            R6, #0
.text:00006AEE E1 E7                         B               loc_6AB4
.text:00006AEE
.text:00006AF0                               ; ---------------------------------------------------------------------------
.text:00006AF0
.text:00006AF0                               loc_6AF0                      ; CODE XREF: sub_66B0+A8↑j
.text:00006AF0 02 27                         MOVS            R7, #2
.text:00006AF2 01 26                         MOVS            R6, #1
.text:00006AF4 4F F0 00 08                   MOV.W           R8, #0
.text:00006AF8 4F F0 00 09                   MOV.W           R9, #0
.text:00006AFC 8E E6                         B               loc_681C
.text:00006AFC
.text:00006AFE                               ; ---------------------------------------------------------------------------
.text:00006AFE
.text:00006AFE                               loc_6AFE                      ; CODE XREF: sub_66B0+BA↑j
.text:00006AFE 01 26                         MOVS            R6, #1
.text:00006B00 4F F0 00 08                   MOV.W           R8, #0
.text:00006B04 4F F0 00 09                   MOV.W           R9, #0
.text:00006B08 01 27                         MOVS            R7, #1
.text:00006B0A 87 E6                         B               loc_681C
.text:00006B0A
.text:00006B0C                               ; ---------------------------------------------------------------------------
.text:00006B0C
.text:00006B0C                               loc_6B0C                      ; CODE XREF: sub_66B0+CC↑j
.text:00006B0C 4F F0 01 0A                   MOV.W           R10, #1
.text:00006B10 4F F0 FF 37                   MOV.W           R7, #0xFFFFFFFF
.text:00006B14 4F F0 00 08                   MOV.W           R8, #0
.text:00006B18 4F F0 00 09                   MOV.W           R9, #0
.text:00006B1C 00 26                         MOVS            R6, #0
.text:00006B1E 7F E6                         B               loc_6820
.text:00006B1E
.text:00006B20                               ; ---------------------------------------------------------------------------
.text:00006B20
.text:00006B20                               loc_6B20                      ; CODE XREF: sub_66B0+DE↑j
.text:00006B20 01 20                         MOVS            R0, #1
.text:00006B22 01 21                         MOVS            R1, #1
.text:00006B24 FC F7 F6 EB                   BLX             SetAudioLoopback
.text:00006B24
.text:00006B28 0F 20                         MOVS            R0, #0xF
.text:00006B2A FC F7 94 EB                   BLX             SetAudioVolume
.text:00006B2A
.text:00006B2E 01 2D                         CMP             R5, #1
.text:00006B30 33 D1                         BNE             loc_6B9A
.text:00006B30
.text:00006B32 45 49                         LDR             R1, =(aAudioHwPrimary - 0x6B3C) ; "audio_hw_primary"
.text:00006B34 03 20                         MOVS            R0, #3
.text:00006B36 45 4A                         LDR             R2, =(aTestModemLoopb_1 - 0x6B3E) ; "test modem loopback: outdevice=headphon"...
.text:00006B38 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00006B3A 7A 44                         ADD             R2, PC        ; "test modem loopback: outdevice=headphon"...
.text:00006B3C FC F7 4C EA                   BLX             __android_log_print
.text:00006B3C
.text:00006B40 43 48                         LDR             R0, =(test_modem_loopback_headphone_ptr - 0x6B4A)
.text:00006B42 4F F0 FF 37                   MOV.W           R7, #0xFFFFFFFF
.text:00006B46 78 44                         ADD             R0, PC        ; test_modem_loopback_headphone_ptr
.text:00006B48 63 E6                         B               loc_6812
.text:00006B48
.text:00006B4A                               ; ---------------------------------------------------------------------------
.text:00006B4A
.text:00006B4A                               loc_6B4A                      ; CODE XREF: sub_66B0+F0↑j
.text:00006B4A 37 49                         LDR             R1, =(aAudioHwPrimary - 0x6B56) ; "audio_hw_primary"
.text:00006B4C 03 20                         MOVS            R0, #3
.text:00006B4E 37 4A                         LDR             R2, =(aSFactoryTestOv - 0x6B58) ; "%s(): factory test over, close all pcm "...
.text:00006B50 37 4B                         LDR             R3, =(aAudioTest - 0x6B5A) ; "audio_test"
.text:00006B52 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00006B54 7A 44                         ADD             R2, PC        ; "%s(): factory test over, close all pcm "...
.text:00006B56 7B 44                         ADD             R3, PC        ; "audio_test"
.text:00006B58 FC F7 3E EA                   BLX             __android_log_print
.text:00006B58
.text:00006B5C 04 F1 A4 05                   ADD.W           R5, R4, #0xA4
.text:00006B60 28 46                         MOV             R0, R5        ; mutex
.text:00006B62 FC F7 5E EA                   BLX             pthread_mutex_lock
.text:00006B62
.text:00006B66 FC F7 A6 EB                   BLX             NxpTfa98xx_PowerOff
.text:00006B66
.text:00006B6A 20 46                         MOV             R0, R4
.text:00006B6C 00 F0 A6 F8                   BL              sub_6CBC
.text:00006B6C
.text:00006B70 30 48                         LDR             R0, =(default_settings_ptr - 0x6B7A)
.text:00006B72 00 22                         MOVS            R2, #0
.text:00006B74 00 26                         MOVS            R6, #0
.text:00006B76 78 44                         ADD             R0, PC        ; default_settings_ptr
.text:00006B78 01 68                         LDR             R1, [R0]      ; default_settings
.text:00006B7A D4 F8 C0 00                   LDR.W           R0, [R4,#0xC0]
.text:00006B7E 00 F0 E9 F8                   BL              sub_6D54
.text:00006B7E
.text:00006B82 2D 48                         LDR             R0, =(dword_116CC - 0x6B8A)
.text:00006B84 01 21                         MOVS            R1, #1
.text:00006B86 78 44                         ADD             R0, PC        ; dword_116CC
.text:00006B88 01 60                         STR             R1, [R0]
.text:00006B8A 00 20                         MOVS            R0, #0
.text:00006B8C 00 21                         MOVS            R1, #0
.text:00006B8E FC F7 C2 EB                   BLX             SetAudioLoopback
.text:00006B8E
.text:00006B92 28 46                         MOV             R0, R5        ; mutex
.text:00006B94 FC F7 56 EA                   BLX             pthread_mutex_unlock
.text:00006B94
.text:00006B98 8C E7                         B               loc_6AB4
.text:00006B98
.text:00006B9A                               ; ---------------------------------------------------------------------------
.text:00006B9A
.text:00006B9A                               loc_6B9A                      ; CODE XREF: sub_66B0+480↑j
.text:00006B9A 28 49                         LDR             R1, =(aAudioHwPrimary - 0x6BA4) ; "audio_hw_primary"
.text:00006B9C 03 20                         MOVS            R0, #3
.text:00006B9E 28 4A                         LDR             R2, =(aTestModemLoopb_2 - 0x6BA6) ; "test modem loopback: outdevice=earphone"
.text:00006BA0 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00006BA2 7A 44                         ADD             R2, PC        ; "test modem loopback: outdevice=earphone"
.text:00006BA4 FC F7 18 EA                   BLX             __android_log_print
.text:00006BA4
.text:00006BA8 26 48                         LDR             R0, =(test_modem_loopback_earphone_ptr - 0x6BB2)
.text:00006BAA 4F F0 FF 37                   MOV.W           R7, #0xFFFFFFFF
.text:00006BAE 78 44                         ADD             R0, PC        ; test_modem_loopback_earphone_ptr
.text:00006BB0 2F E6                         B               loc_6812
.text:00006BB0
.text:00006BB0                               ; End of function sub_66B0
.text:00006BB0
.text:00006BB0                               ; ---------------------------------------------------------------------------
.text:00006BB2 00 BF                         ALIGN 4
.text:00006BB4 00 BF 00 BF 00 BF 00 BF 00 BF+DCD 0xBF00BF00, 0xBF00BF00, 0xBF00BF00
.text:00006BC0 02 00 00 00                   dword_6BC0 DCD 2              ; DATA XREF: sub_66B0+1CA↑o
.text:00006BC4 80 BB 00 00                   DCD aSVoiceCallWbDB+0x18      ; "bluetooth_nrec=%d"
.text:00006BC8 00 08 00 00                   DCD stru_800
.text:00006BCC 02 00 00 00                   DCD 2
.text:00006BD0 D4 A6 00 00                   off_6BD0 DCD __stack_chk_guard_ptr - 0x66C0
.text:00006BD0                                                             ; DATA XREF: sub_66B0+8↑r
.text:00006BD4 32 68 00 00                   off_6BD4 DCD aFactoryTest - 0x66DE
.text:00006BD4                                                             ; DATA XREF: sub_66B0+20↑r
.text:00006BD4                                                             ; "factory_test"
.text:00006BD8 4A 68 00 00                   off_6BD8 DCD aEarphone - 0x66F4
.text:00006BD8                                                             ; DATA XREF: sub_66B0+3A↑r
.text:00006BD8                                                             ; "earphone"
.text:00006BDC E6 A5 00 00                   off_6BDC DCD test_earphones_ptr - 0x67CE
.text:00006BDC                                                             ; DATA XREF: sub_66B0:loc_67C2↑r
.text:00006BE0 43 68 00 00                   off_6BE0 DCD aHeadphone - 0x6704
.text:00006BE0                                                             ; DATA XREF: sub_66B0+4A↑r
.text:00006BE0                                                             ; "headphone"
.text:00006BE4 DE A5 00 00                   off_6BE4 DCD test_headphone_ptr - 0x67DA
.text:00006BE4                                                             ; DATA XREF: sub_66B0:loc_67CE↑r
.text:00006BE8 1E 5C 00 00                   off_6BE8 DCD aSpeaker - 0x6714
.text:00006BE8                                                             ; DATA XREF: sub_66B0+5A↑r
.text:00006BE8                                                             ; "speaker"
.text:00006BEC D0 A5 00 00                   off_6BEC DCD test_speaker_ptr - 0x67EC
.text:00006BEC                                                             ; DATA XREF: sub_66B0:loc_67DA↑r
.text:00006BF0 2D 68 00 00                   off_6BF0 DCD aPriMic - 0x6724 ; DATA XREF: sub_66B0+6A↑r
.text:00006BF0                                                             ; "pri_mic"
.text:00006BF4 C4 A5 00 00                   off_6BF4 DCD test_pri_mic_ptr - 0x67FC
.text:00006BF4                                                             ; DATA XREF: sub_66B0:loc_67F0↑r
.text:00006BF8 25 68 00 00                   off_6BF8 DCD aSecMic - 0x6734 ; DATA XREF: sub_66B0+7A↑r
.text:00006BF8                                                             ; "sec_mic"
.text:00006BFC BC A5 00 00                   off_6BFC DCD test_sec_mic_ptr - 0x6808
.text:00006BFC                                                             ; DATA XREF: sub_66B0:loc_67FC↑r
.text:00006C00 1D 68 00 00                   off_6C00 DCD aTerMic - 0x6744 ; DATA XREF: sub_66B0+8A↑r
.text:00006C00                                                             ; "ter_mic"
.text:00006C04 B4 A5 00 00                   off_6C04 DCD test_ter_mic_ptr - 0x6814
.text:00006C04                                                             ; DATA XREF: sub_66B0:loc_6808↑r
.text:00006C08 15 68 00 00                   off_6C08 DCD aHifiHighGain - 0x6754
.text:00006C08                                                             ; DATA XREF: sub_66B0+9A↑r
.text:00006C08                                                             ; "hifi_high_gain"
.text:00006C0C 12 68 00 00                   off_6C0C DCD aHifiLowGain - 0x6766
.text:00006C0C                                                             ; DATA XREF: sub_66B0+AC↑r
.text:00006C0C                                                             ; "hifi_low_gain"
.text:00006C10 0E 68 00 00                   off_6C10 DCD aPaCalibration - 0x6778
.text:00006C10                                                             ; DATA XREF: sub_66B0+BE↑r
.text:00006C10                                                             ; "pa_calibration"
.text:00006C14 0B 68 00 00                   off_6C14 DCD aModemLoopback - 0x678A
.text:00006C14                                                             ; DATA XREF: sub_66B0+D0↑r
.text:00006C14                                                             ; "modem_loopback"
.text:00006C18 59 68 00 00                   off_6C18 DCD aOff - 0x679C    ; DATA XREF: sub_66B0+E2↑r
.text:00006C18                                                             ; "off"
.text:00006C1C E9 52 00 00                   off_6C1C DCD aAudioHwPrimary - 0x67B6
.text:00006C1C                                                             ; DATA XREF: sub_66B0+F4↑r
.text:00006C1C                                                             ; "audio_hw_primary"
.text:00006C20 7B 68 00 00                   off_6C20 DCD aSUnsupportedFa - 0x67B8
.text:00006C20                                                             ; DATA XREF: sub_66B0+FA↑r
.text:00006C20                                                             ; "%s(): unsupported factory test command"
.text:00006C24 6E 68 00 00                   off_6C24 DCD aAudioTest - 0x67BA
.text:00006C24                                                             ; DATA XREF: sub_66B0+FE↑r
.text:00006C24                                                             ; "audio_test"
.text:00006C28 49 4F 00 00                   off_6C28 DCD aAudioHwPrimary - 0x6B56
.text:00006C28                                                             ; DATA XREF: sub_66B0:loc_6B4A↑r
.text:00006C28                                                             ; "audio_hw_primary"
.text:00006C2C A1 64 00 00                   off_6C2C DCD aSFactoryTestOv - 0x6B58
.text:00006C2C                                                             ; DATA XREF: sub_66B0+49E↑r
.text:00006C2C                                                             ; "%s(): factory test over, close all pcm "...
.text:00006C30 CE 64 00 00                   off_6C30 DCD aAudioTest - 0x6B5A
.text:00006C30                                                             ; DATA XREF: sub_66B0+4A0↑r
.text:00006C30                                                             ; "audio_test"
.text:00006C34 52 A2 00 00                   off_6C34 DCD default_settings_ptr - 0x6B7A
.text:00006C34                                                             ; DATA XREF: sub_66B0+4C0↑r
.text:00006C38 42 AB 00 00                   off_6C38 DCD dword_116CC - 0x6B8A
.text:00006C38                                                             ; DATA XREF: sub_66B0+4D2↑r
.text:00006C3C FB 4E 00 00                   off_6C3C DCD aAudioHwPrimary - 0x6BA4
.text:00006C3C                                                             ; DATA XREF: sub_66B0:loc_6B9A↑r
.text:00006C3C                                                             ; "audio_hw_primary"
.text:00006C40 27 64 00 00                   off_6C40 DCD aTestModemLoopb_2 - 0x6BA6
.text:00006C40                                                             ; DATA XREF: sub_66B0+4EE↑r
.text:00006C40                                                             ; "test modem loopback: outdevice=earphone"
.text:00006C44 1E A2 00 00                   off_6C44 DCD test_modem_loopback_earphone_ptr - 0x6BB2
.text:00006C44                                                             ; DATA XREF: sub_66B0+4F8↑r
.text:00006C48 63 4F 00 00                   off_6C48 DCD aAudioHwPrimary - 0x6B3C
.text:00006C48                                                             ; DATA XREF: sub_66B0+482↑r
.text:00006C48                                                             ; "audio_hw_primary"
.text:00006C4C 66 64 00 00                   off_6C4C DCD aTestModemLoopb_1 - 0x6B3E
.text:00006C4C                                                             ; DATA XREF: sub_66B0+486↑r
.text:00006C4C                                                             ; "test modem loopback: outdevice=headphon"...
.text:00006C50 8A A2 00 00                   off_6C50 DCD test_modem_loopback_headphone_ptr - 0x6B4A
.text:00006C50                                                             ; DATA XREF: sub_66B0+490↑r
.text:00006C54 90 A5 00 00                   off_6C54 DCD default_settings_ptr - 0x683C
.text:00006C54                                                             ; DATA XREF: sub_66B0+180↑r
.text:00006C58 7C AE 00 00                   off_6C58 DCD dword_116CC - 0x6850
.text:00006C58                                                             ; DATA XREF: sub_66B0+194↑r
.text:00006C5C 03 51 00 00                   off_6C5C DCD aAudioHwPrimary - 0x699C
.text:00006C5C                                                             ; DATA XREF: sub_66B0+2E0↑r
.text:00006C5C                                                             ; "audio_hw_primary"
.text:00006C60 0B 67 00 00                   off_6C60 DCD aPcmOpenVoiceBe - 0x699E
.text:00006C60                                                             ; DATA XREF: sub_66B0+2E4↑r
.text:00006C60                                                             ; "pcm_open(VOICE_BE_OUT) failed: %s"
.text:00006C64 E9 50 00 00                   off_6C64 DCD aAudioHwPrimary - 0x69B6
.text:00006C64                                                             ; DATA XREF: sub_66B0+2FA↑r
.text:00006C64                                                             ; "audio_hw_primary"
.text:00006C68 13 67 00 00                   off_6C68 DCD aPcmOpenVoiceBe_0 - 0x69B8
.text:00006C68                                                             ; DATA XREF: sub_66B0+2FE↑r
.text:00006C68                                                             ; "pcm_open(VOICE_BE_IN) failed: %s"
.text:00006C6C CF 50 00 00                   off_6C6C DCD aAudioHwPrimary - 0x69D0
.text:00006C6C                                                             ; DATA XREF: sub_66B0+314↑r
.text:00006C6C                                                             ; "audio_hw_primary"
.text:00006C70 1A 67 00 00                   off_6C70 DCD aPcmOpenVoiceOu - 0x69D2
.text:00006C70                                                             ; DATA XREF: sub_66B0+318↑r
.text:00006C70                                                             ; "pcm_open(VOICE_OUT) failed: %s"
.text:00006C74 B5 50 00 00                   off_6C74 DCD aAudioHwPrimary - 0x69EA
.text:00006C74                                                             ; DATA XREF: sub_66B0+32E↑r
.text:00006C74                                                             ; "audio_hw_primary"
.text:00006C78 1F 67 00 00                   off_6C78 DCD aPcmOpenVoiceIn - 0x69EC
.text:00006C78                                                             ; DATA XREF: sub_66B0+332↑r
.text:00006C78                                                             ; "pcm_open(VOICE_IN) failed: %s"
.text:00006C7C 6B 50 00 00                   off_6C7C DCD aAudioHwPrimary - 0x6A34
.text:00006C7C                                                             ; DATA XREF: sub_66B0+378↑r
.text:00006C7C                                                             ; "audio_hw_primary"
.text:00006C80 F3 66 00 00                   off_6C80 DCD aPcmOpenPaOutFa - 0x6A36
.text:00006C80                                                             ; DATA XREF: sub_66B0+37C↑r
.text:00006C80                                                             ; "pcm_open(PA_OUT) failed: %s"
.text:00006C84 51 50 00 00                   off_6C84 DCD aAudioHwPrimary - 0x6A4E
.text:00006C84                                                             ; DATA XREF: sub_66B0+392↑r
.text:00006C84                                                             ; "audio_hw_primary"
.text:00006C88 F5 66 00 00                   off_6C88 DCD aPcmOpenPaInFai - 0x6A50
.text:00006C88                                                             ; DATA XREF: sub_66B0+396↑r
.text:00006C88                                                             ; "pcm_open(PA_IN) failed: %s"
.text:00006C8C FB 4F 00 00                   off_6C8C DCD aAudioHwPrimary - 0x6AA4
.text:00006C8C                                                             ; DATA XREF: sub_66B0:loc_6A98↑r
.text:00006C8C                                                             ; "audio_hw_primary"
.text:00006C90 B4 65 00 00                   off_6C90 DCD aSFailedToStart - 0x6AA6
.text:00006C90                                                             ; DATA XREF: sub_66B0+3EC↑r
.text:00006C90                                                             ; "%s(): failed to start pcms"
.text:00006C94 80 65 00 00                   off_6C94 DCD aAudioTest - 0x6AA8
.text:00006C94                                                             ; DATA XREF: sub_66B0+3EE↑r
.text:00006C94                                                             ; "audio_test"
.text:00006C98 C1 4F 00 00                   off_6C98 DCD aAudioHwPrimary - 0x6ADE
.text:00006C98                                                             ; DATA XREF: sub_66B0+424↑r
.text:00006C98                                                             ; "audio_hw_primary"
.text:00006C9C 41 5E 00 00                   off_6C9C DCD aSFailedToPower_0 - 0x6AE0
.text:00006C9C                                                             ; DATA XREF: sub_66B0+426↑r
.text:00006C9C                                                             ; "%s(): failed to power off tfa98xx"
.text:00006CA0 46 65 00 00                   off_6CA0 DCD aAudioTest - 0x6AE2
.text:00006CA0                                                             ; DATA XREF: sub_66B0+428↑r
.text:00006CA0                                                             ; "audio_test"
.text:00006CA4 83 50 00 00                   off_6CA4 DCD aAudioHwPrimary - 0x6A1C
.text:00006CA4                                                             ; DATA XREF: sub_66B0+362↑r
.text:00006CA4                                                             ; "audio_hw_primary"
.text:00006CA8 95 63 00 00                   off_6CA8 DCD aSFailedToPower - 0x6A1E
.text:00006CA8                                                             ; DATA XREF: sub_66B0+364↑r
.text:00006CA8                                                             ; "%s(): failed to power on tfa98xx"
.text:00006CAC 08 66 00 00                   off_6CAC DCD aAudioTest - 0x6A20
.text:00006CAC                                                             ; DATA XREF: sub_66B0+366↑r
.text:00006CAC                                                             ; "audio_test"
.text:00006CB0 68 AE 00 00                   off_6CB0 DCD dword_116C8 - 0x6860
.text:00006CB0                                                             ; DATA XREF: sub_66B0+1A2↑r
.text:00006CB4 70 A5 00 00                   off_6CB4 DCD thread_test_hifi_ptr - 0x6868
.text:00006CB4                                                             ; DATA XREF: sub_66B0+1B0↑r
.text:00006CB8 D8 A2 00 00                   off_6CB8 DCD __stack_chk_guard_ptr - 0x6ABC
.text:00006CB8                                                             ; DATA XREF: sub_66B0:loc_6AB4↑r
.text:00006CB8                               ; } // starts at 66B0
.text:00006CBC
.text:00006CBC                               ; =============== S U B R O U T I N E =======================================
.text:00006CBC
.text:00006CBC
.text:00006CBC                               ; int __fastcall sub_6CBC(_DWORD *)
.text:00006CBC                               sub_6CBC                      ; CODE XREF: sub_66B0+17C↑p
.text:00006CBC                                                             ; sub_66B0+4BC↑p
.text:00006CBC                               ; __unwind {
.text:00006CBC 10 B5                         PUSH            {R4,LR}
.text:00006CBE 04 46                         MOV             R4, R0
.text:00006CC0 D4 F8 E4 00                   LDR.W           R0, [R4,#0xE4]
.text:00006CC4 40 B1                         CBZ             R0, loc_6CD8
.text:00006CC4
.text:00006CC6 FC F7 8A EA                   BLX             pcm_stop
.text:00006CC6
.text:00006CCA D4 F8 E4 00                   LDR.W           R0, [R4,#0xE4]
.text:00006CCE FC F7 F0 E9                   BLX             pcm_close
.text:00006CCE
.text:00006CD2 00 20                         MOVS            R0, #0
.text:00006CD4 C4 F8 E4 00                   STR.W           R0, [R4,#0xE4]
.text:00006CD4
.text:00006CD8
.text:00006CD8                               loc_6CD8                      ; CODE XREF: sub_6CBC+8↑j
.text:00006CD8 D4 F8 E8 00                   LDR.W           R0, [R4,#0xE8]
.text:00006CDC 40 B1                         CBZ             R0, loc_6CF0
.text:00006CDC
.text:00006CDE FC F7 7E EA                   BLX             pcm_stop
.text:00006CDE
.text:00006CE2 D4 F8 E8 00                   LDR.W           R0, [R4,#0xE8]
.text:00006CE6 FC F7 E4 E9                   BLX             pcm_close
.text:00006CE6
.text:00006CEA 00 20                         MOVS            R0, #0
.text:00006CEC C4 F8 E8 00                   STR.W           R0, [R4,#0xE8]
.text:00006CEC
.text:00006CF0
.text:00006CF0                               loc_6CF0                      ; CODE XREF: sub_6CBC+20↑j
.text:00006CF0 D4 F8 DC 00                   LDR.W           R0, [R4,#0xDC]
.text:00006CF4 40 B1                         CBZ             R0, loc_6D08
.text:00006CF4
.text:00006CF6 FC F7 72 EA                   BLX             pcm_stop
.text:00006CF6
.text:00006CFA D4 F8 DC 00                   LDR.W           R0, [R4,#0xDC]
.text:00006CFE FC F7 D8 E9                   BLX             pcm_close
.text:00006CFE
.text:00006D02 00 20                         MOVS            R0, #0
.text:00006D04 C4 F8 DC 00                   STR.W           R0, [R4,#0xDC]
.text:00006D04
.text:00006D08
.text:00006D08                               loc_6D08                      ; CODE XREF: sub_6CBC+38↑j
.text:00006D08 D4 F8 E0 00                   LDR.W           R0, [R4,#0xE0]
.text:00006D0C 40 B1                         CBZ             R0, loc_6D20
.text:00006D0C
.text:00006D0E FC F7 66 EA                   BLX             pcm_stop
.text:00006D0E
.text:00006D12 D4 F8 E0 00                   LDR.W           R0, [R4,#0xE0]
.text:00006D16 FC F7 CC E9                   BLX             pcm_close
.text:00006D16
.text:00006D1A 00 20                         MOVS            R0, #0
.text:00006D1C C4 F8 E0 00                   STR.W           R0, [R4,#0xE0]
.text:00006D1C
.text:00006D20
.text:00006D20                               loc_6D20                      ; CODE XREF: sub_6CBC+50↑j
.text:00006D20 D4 F8 F4 00                   LDR.W           R0, [R4,#0xF4]
.text:00006D24 40 B1                         CBZ             R0, loc_6D38
.text:00006D24
.text:00006D26 FC F7 5A EA                   BLX             pcm_stop
.text:00006D26
.text:00006D2A D4 F8 F4 00                   LDR.W           R0, [R4,#0xF4]
.text:00006D2E FC F7 C0 E9                   BLX             pcm_close
.text:00006D2E
.text:00006D32 00 20                         MOVS            R0, #0
.text:00006D34 C4 F8 F4 00                   STR.W           R0, [R4,#0xF4]
.text:00006D34
.text:00006D38
.text:00006D38                               loc_6D38                      ; CODE XREF: sub_6CBC+68↑j
.text:00006D38 D4 F8 F8 00                   LDR.W           R0, [R4,#0xF8]
.text:00006D3C 40 B1                         CBZ             R0, locret_6D50
.text:00006D3C
.text:00006D3E FC F7 4E EA                   BLX             pcm_stop
.text:00006D3E
.text:00006D42 D4 F8 F8 00                   LDR.W           R0, [R4,#0xF8]
.text:00006D46 FC F7 B4 E9                   BLX             pcm_close
.text:00006D46
.text:00006D4A 00 20                         MOVS            R0, #0
.text:00006D4C C4 F8 F8 00                   STR.W           R0, [R4,#0xF8]
.text:00006D4C
.text:00006D50
.text:00006D50                               locret_6D50                   ; CODE XREF: sub_6CBC+80↑j
.text:00006D50 10 BD                         POP             {R4,PC}
.text:00006D50
.text:00006D50                               ; End of function sub_6CBC
.text:00006D50
.text:00006D50                               ; ---------------------------------------------------------------------------
.text:00006D52 00 00                         ALIGN 4
.text:00006D52                               ; } // starts at 6CBC
.text:00006D54
.text:00006D54                               ; =============== S U B R O U T I N E =======================================
.text:00006D54
.text:00006D54
.text:00006D54                               ; int __fastcall sub_6D54(int result, const char **, int)
.text:00006D54                               sub_6D54                      ; CODE XREF: sub_66B0+190↑p
.text:00006D54                                                             ; sub_66B0+348↑p
.text:00006D54                                                             ; sub_66B0+4CE↑p
.text:00006D54
.text:00006D54                               var_28= -0x28
.text:00006D54
.text:00006D54                               ; __unwind {
.text:00006D54 2D E9 F0 4F                   PUSH.W          {R4-R11,LR}
.text:00006D58 81 B0                         SUB             SP, SP, #4
.text:00006D5A 8A 46                         MOV             R10, R1
.text:00006D5C 93 46                         MOV             R11, R2
.text:00006D5E DA F8 00 10                   LDR.W           R1, [R10]
.text:00006D62 81 46                         MOV             R9, R0
.text:00006D64 00 29                         CMP             R1, #0
.text:00006D66 44 D0                         BEQ             loc_6DF2
.text:00006D66
.text:00006D68 DF F8 8C 80                   LDR.W           R8, =(aOff_0 - 0x6D74) ; "Off"
.text:00006D6C 00 25                         MOVS            R5, #0
.text:00006D6E 54 46                         MOV             R4, R10
.text:00006D70 F8 44                         ADD             R8, PC        ; "Off"
.text:00006D70
.text:00006D72
.text:00006D72                               loc_6D72                      ; CODE XREF: sub_6D54+84↓j
.text:00006D72 48 46                         MOV             R0, R9
.text:00006D74 FC F7 42 E9                   BLX             mixer_get_ctl_by_name
.text:00006D74
.text:00006D78 07 46                         MOV             R7, R0
.text:00006D7A 7F B3                         CBZ             R7, loc_6DDC
.text:00006D7A
.text:00006D7C 05 EB 45 00                   ADD.W           R0, R5, R5,LSL#1
.text:00006D80 0A EB 80 04                   ADD.W           R4, R10, R0,LSL#2
.text:00006D84 A1 68                         LDR             R1, [R4,#8]
.text:00006D86 39 B1                         CBZ             R1, loc_6D98
.text:00006D86
.text:00006D88 BB F1 00 0F                   CMP.W           R11, #0
.text:00006D8C 38 46                         MOV             R0, R7
.text:00006D8E 08 BF                         IT EQ
.text:00006D90 41 46                         MOVEQ           R1, R8
.text:00006D92 FC F7 C6 EA                   BLX             mixer_ctl_set_enum_by_string
.text:00006D92
.text:00006D96 17 E0                         B               loc_6DC8
.text:00006D96
.text:00006D98                               ; ---------------------------------------------------------------------------
.text:00006D98
.text:00006D98                               loc_6D98                      ; CODE XREF: sub_6D54+32↑j
.text:00006D98 38 46                         MOV             R0, R7
.text:00006D9A FC F7 EA E9                   BLX             mixer_ctl_get_num_values
.text:00006D9A
.text:00006D9E 98 B1                         CBZ             R0, loc_6DC8
.text:00006D9E
.text:00006DA0 04 34                         ADDS            R4, #4
.text:00006DA2 00 26                         MOVS            R6, #0
.text:00006DA2
.text:00006DA4
.text:00006DA4                               loc_6DA4                      ; CODE XREF: sub_6D54+72↓j
.text:00006DA4 BB F1 00 0F                   CMP.W           R11, #0
.text:00006DA8 03 D0                         BEQ             loc_6DB2
.text:00006DA8
.text:00006DAA 22 68                         LDR             R2, [R4]
.text:00006DAC 38 46                         MOV             R0, R7
.text:00006DAE 31 46                         MOV             R1, R6
.text:00006DB0 02 E0                         B               loc_6DB8
.text:00006DB0
.text:00006DB2                               ; ---------------------------------------------------------------------------
.text:00006DB2
.text:00006DB2                               loc_6DB2                      ; CODE XREF: sub_6D54+54↑j
.text:00006DB2 38 46                         MOV             R0, R7
.text:00006DB4 31 46                         MOV             R1, R6
.text:00006DB6 00 22                         MOVS            R2, #0
.text:00006DB6
.text:00006DB8
.text:00006DB8                               loc_6DB8                      ; CODE XREF: sub_6D54+5C↑j
.text:00006DB8 FC F7 E0 E9                   BLX             mixer_ctl_set_value
.text:00006DB8
.text:00006DBC 38 46                         MOV             R0, R7
.text:00006DBE 01 36                         ADDS            R6, #1
.text:00006DC0 FC F7 D6 E9                   BLX             mixer_ctl_get_num_values
.text:00006DC0
.text:00006DC4 86 42                         CMP             R6, R0
.text:00006DC6 ED D3                         BCC             loc_6DA4
.text:00006DC6
.text:00006DC8
.text:00006DC8                               loc_6DC8                      ; CODE XREF: sub_6D54+42↑j
.text:00006DC8                                                             ; sub_6D54+4A↑j
.text:00006DC8 01 35                         ADDS            R5, #1
.text:00006DCA 05 EB 45 00                   ADD.W           R0, R5, R5,LSL#1
.text:00006DCE 5A F8 20 10                   LDR.W           R1, [R10,R0,LSL#2]
.text:00006DD2 0A EB 80 04                   ADD.W           R4, R10, R0,LSL#2
.text:00006DD6 00 29                         CMP             R1, #0
.text:00006DD8 CB D1                         BNE             loc_6D72
.text:00006DD8
.text:00006DDA 0A E0                         B               loc_6DF2
.text:00006DDA
.text:00006DDC                               ; ---------------------------------------------------------------------------
.text:00006DDC
.text:00006DDC                               loc_6DDC                      ; CODE XREF: sub_6D54+26↑j
.text:00006DDC 20 68                         LDR             R0, [R4]
.text:00006DDE 07 49                         LDR             R1, =(aAudioHwPrimary - 0x6DE8) ; "audio_hw_primary"
.text:00006DE0 07 4A                         LDR             R2, =(aSFailedToSetCt - 0x6DEC) ; "%s(): failed to set ctl: %s "
.text:00006DE2 08 4B                         LDR             R3, =(aSetRouteByArra - 0x6DEE) ; "set_route_by_array"
.text:00006DE4 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00006DE6 00 90                         STR             R0, [SP,#0x28+var_28]
.text:00006DE8 7A 44                         ADD             R2, PC        ; "%s(): failed to set ctl: %s "
.text:00006DEA 7B 44                         ADD             R3, PC        ; "set_route_by_array"
.text:00006DEC 06 20                         MOVS            R0, #6
.text:00006DEE FC F7 F4 E8                   BLX             __android_log_print
.text:00006DEE
.text:00006DF2
.text:00006DF2                               loc_6DF2                      ; CODE XREF: sub_6D54+12↑j
.text:00006DF2                                                             ; sub_6D54+86↑j
.text:00006DF2 01 B0                         ADD             SP, SP, #4
.text:00006DF4 BD E8 F0 8F                   POP.W           {R4-R11,PC}
.text:00006DF4
.text:00006DF4                               ; End of function sub_6D54
.text:00006DF4
.text:00006DF4                               ; ---------------------------------------------------------------------------
.text:00006DF8 31 63 00 00                   off_6DF8 DCD aOff_0 - 0x6D74  ; DATA XREF: sub_6D54+14↑r
.text:00006DF8                                                             ; "Off"
.text:00006DFC B7 4C 00 00                   off_6DFC DCD aAudioHwPrimary - 0x6DE8
.text:00006DFC                                                             ; DATA XREF: sub_6D54+8A↑r
.text:00006DFC                                                             ; "audio_hw_primary"
.text:00006E00 89 62 00 00                   off_6E00 DCD aSFailedToSetCt - 0x6DEC
.text:00006E00                                                             ; DATA XREF: sub_6D54+8C↑r
.text:00006E00                                                             ; "%s(): failed to set ctl: %s "
.text:00006E04 A4 62 00 00                   off_6E04 DCD aSetRouteByArra - 0x6DEE
.text:00006E04                                                             ; DATA XREF: sub_6D54+8E↑r
.text:00006E04                               ; } // starts at 6D54         ; "set_route_by_array"
.text:00006E08
.text:00006E08                               ; =============== S U B R O U T I N E =======================================
.text:00006E08
.text:00006E08
.text:00006E08                               ; int __fastcall sub_6E08(int)
.text:00006E08                               sub_6E08                      ; DATA XREF: sub_5068+5E↑o
.text:00006E08                                                             ; sub_5068+62↑o
.text:00006E08                                                             ; .text:off_5264↑o
.text:00006E08                               ; __unwind {
.text:00006E08 D0 F8 B8 00                   LDR.W           R0, [R0,#0xB8]
.text:00006E0C 70 47                         BX              LR
.text:00006E0C
.text:00006E0C                               ; End of function sub_6E08
.text:00006E0C
.text:00006E0E
.text:00006E0E                               ; =============== S U B R O U T I N E =======================================
.text:00006E0E
.text:00006E0E
.text:00006E0E                               ; int __fastcall sub_6E0E(int, int)
.text:00006E0E                               sub_6E0E                      ; DATA XREF: sub_5068+66↑o
.text:00006E0E                                                             ; sub_5068+68↑o
.text:00006E0E                                                             ; .text:off_5268↑o
.text:00006E0E C0 F8 B8 10                   STR.W           R1, [R0,#0xB8]
.text:00006E12 00 20                         MOVS            R0, #0
.text:00006E14 70 47                         BX              LR
.text:00006E14
.text:00006E14                               ; End of function sub_6E0E
.text:00006E14
.text:00006E16
.text:00006E16                               ; =============== S U B R O U T I N E =======================================
.text:00006E16
.text:00006E16
.text:00006E16                               ; unsigned int __fastcall sub_6E16(int)
.text:00006E16                               sub_6E16                      ; DATA XREF: sub_5068+6C↑o
.text:00006E16                                                             ; sub_5068+6E↑o
.text:00006E16                                                             ; .text:off_526C↑o
.text:00006E16 D0 F8 C0 00                   LDR.W           R0, [R0,#0xC0]
.text:00006E1A 0F 30                         ADDS            R0, #0xF
.text:00006E1C 20 F0 0F 00                   BIC.W           R0, R0, #0xF
.text:00006E20 70 47                         BX              LR
.text:00006E20
.text:00006E20                               ; End of function sub_6E16
.text:00006E20
.text:00006E22
.text:00006E22                               ; =============== S U B R O U T I N E =======================================
.text:00006E22
.text:00006E22
.text:00006E22                               ; int __fastcall sub_6E22(int)
.text:00006E22                               sub_6E22                      ; DATA XREF: sub_5068+72↑o
.text:00006E22                                                             ; sub_5068+74↑o
.text:00006E22                                                             ; .text:off_5270↑o
.text:00006E22 D0 F8 A8 00                   LDR.W           R0, [R0,#0xA8]
.text:00006E26 70 47                         BX              LR
.text:00006E26
.text:00006E26                               ; End of function sub_6E22
.text:00006E26
.text:00006E28
.text:00006E28                               ; =============== S U B R O U T I N E =======================================
.text:00006E28
.text:00006E28
.text:00006E28                               ; int __fastcall sub_6E28(int)
.text:00006E28                               sub_6E28                      ; DATA XREF: sub_5068+78↑o
.text:00006E28                                                             ; sub_5068+7A↑o
.text:00006E28                                                             ; .text:off_5274↑o
.text:00006E28 D0 F8 BC 00                   LDR.W           R0, [R0,#0xBC]
.text:00006E2C 70 47                         BX              LR
.text:00006E2C
.text:00006E2C                               ; End of function sub_6E28
.text:00006E2C
.text:00006E2E
.text:00006E2E                               ; =============== S U B R O U T I N E =======================================
.text:00006E2E
.text:00006E2E
.text:00006E2E                               ; int sub_6E2E()
.text:00006E2E                               sub_6E2E                      ; DATA XREF: sub_5068+7E↑o
.text:00006E2E                                                             ; sub_5068+80↑o
.text:00006E2E                                                             ; .text:off_5278↑o
.text:00006E2E 6F F0 25 00                   MOV             R0, #0xFFFFFFDA
.text:00006E32 70 47                         BX              LR
.text:00006E32
.text:00006E32                               ; End of function sub_6E2E
.text:00006E32
.text:00006E34
.text:00006E34                               ; =============== S U B R O U T I N E =======================================
.text:00006E34
.text:00006E34
.text:00006E34                               ; int sub_6E34()
.text:00006E34                               sub_6E34                      ; DATA XREF: sub_5068+8A↑o
.text:00006E34                                                             ; sub_5068+8C↑o
.text:00006E34                                                             ; .text:off_5280↑o
.text:00006E34 00 20                         MOVS            R0, #0
.text:00006E36 70 47                         BX              LR
.text:00006E36                               ; } // starts at 6E08
.text:00006E36
.text:00006E36                               ; End of function sub_6E34
.text:00006E36
.text:00006E38
.text:00006E38                               ; =============== S U B R O U T I N E =======================================
.text:00006E38
.text:00006E38
.text:00006E38                               ; int __fastcall sub_6E38(int, int)
.text:00006E38                               sub_6E38                      ; DATA XREF: sub_5068+90↑o
.text:00006E38                                                             ; sub_5068+92↑o
.text:00006E38                                                             ; .text:off_5284↑o
.text:00006E38
.text:00006E38                               var_58= -0x58
.text:00006E38                               mutex= -0x4C
.text:00006E38                               nptr= -0x48
.text:00006E38                               var_28= -0x28
.text:00006E38
.text:00006E38                               ; __unwind {
.text:00006E38 2D E9 F0 4F                   PUSH.W          {R4-R11,LR}
.text:00006E3C 8D B0                         SUB             SP, SP, #0x34
.text:00006E3E 07 46                         MOV             R7, R0
.text:00006E40 DF F8 8C 03                   LDR.W           R0, =(__stack_chk_guard_ptr - 0x6E48)
.text:00006E44 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00006E46 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00006E48 00 68                         LDR             R0, [R0]
.text:00006E4A 0C 90                         STR             R0, [SP,#0x58+var_28]
.text:00006E4C 08 46                         MOV             R0, R1
.text:00006E4E D7 F8 CC 50                   LDR.W           R5, [R7,#0xCC]
.text:00006E52 D5 F8 FC A0                   LDR.W           R10, [R5,#0xFC]
.text:00006E56 FC F7 CE E9                   BLX             str_parms_create_str
.text:00006E56
.text:00006E5A 04 46                         MOV             R4, R0
.text:00006E5C 05 F1 A4 00                   ADD.W           R0, R5, #0xA4 ; mutex
.text:00006E60 03 90                         STR             R0, [SP,#0x58+mutex]
.text:00006E62 FC F7 DE E8                   BLX             pthread_mutex_lock
.text:00006E62
.text:00006E66 07 F1 64 09                   ADD.W           R9, R7, #0x64 ; 'd'
.text:00006E6A 48 46                         MOV             R0, R9        ; mutex
.text:00006E6C FC F7 D8 E8                   BLX             pthread_mutex_lock
.text:00006E6C
.text:00006E70 D8 49                         LDR             R1, =(aRouting - 0x6E7C) ; "routing"
.text:00006E72 04 AA                         ADD             R2, SP, #0x58+nptr
.text:00006E74 20 46                         MOV             R0, R4
.text:00006E76 20 23                         MOVS            R3, #0x20 ; ' '
.text:00006E78 79 44                         ADD             R1, PC        ; "routing"
.text:00006E7A FC F7 C2 E9                   BLX             str_parms_get_str
.text:00006E7A
.text:00006E7E 00 28                         CMP             R0, #0
.text:00006E80 1A DB                         BLT             loc_6EB8
.text:00006E80
.text:00006E82 04 A8                         ADD             R0, SP, #0x58+nptr ; nptr
.text:00006E84 FC F7 78 E8                   BLX             atoi
.text:00006E84
.text:00006E88 06 46                         MOV             R6, R0
.text:00006E8A 4F F0 00 08                   MOV.W           R8, #0
.text:00006E8E AE B1                         CBZ             R6, loc_6EBC
.text:00006E8E
.text:00006E90 D5 F8 AC 00                   LDR.W           R0, [R5,#0xAC]
.text:00006E94 4F F0 00 0B                   MOV.W           R11, #0
.text:00006E98 B0 42                         CMP             R0, R6
.text:00006E9A 00 F0 CF 80                   BEQ.W           loc_703C
.text:00006E9A
.text:00006E9E 00 F4 80 51                   AND.W           R1, R0, #0x1000
.text:00006EA2 06 F4 80 52                   AND.W           R2, R6, #0x1000
.text:00006EA6 8A 42                         CMP             R2, R1
.text:00006EA8 08 BF                         IT EQ
.text:00006EAA 00 29                         CMPEQ           R1, #0
.text:00006EAC 09 D1                         BNE             loc_6EC2
.text:00006EAC
.text:00006EAE 4F F0 00 08                   MOV.W           R8, #0
.text:00006EB2 4F F0 00 0B                   MOV.W           R11, #0
.text:00006EB6 11 E0                         B               loc_6EDC
.text:00006EB6
.text:00006EB8                               ; ---------------------------------------------------------------------------
.text:00006EB8
.text:00006EB8                               loc_6EB8                      ; CODE XREF: sub_6E38+48↑j
.text:00006EB8 4F F0 00 08                   MOV.W           R8, #0
.text:00006EB8
.text:00006EBC
.text:00006EBC                               loc_6EBC                      ; CODE XREF: sub_6E38+56↑j
.text:00006EBC 4F F0 00 0B                   MOV.W           R11, #0
.text:00006EC0 BC E0                         B               loc_703C
.text:00006EC0
.text:00006EC2                               ; ---------------------------------------------------------------------------
.text:00006EC2
.text:00006EC2                               loc_6EC2                      ; CODE XREF: sub_6E38+74↑j
.text:00006EC2 B9 6E                         LDR             R1, [R7,#0x68]
.text:00006EC4 52 46                         MOV             R2, R10
.text:00006EC6 BA F1 00 0F                   CMP.W           R10, #0
.text:00006ECA 18 BF                         IT NE
.text:00006ECC 01 22                         MOVNE           R2, #1
.text:00006ECE 00 29                         CMP             R1, #0
.text:00006ED0 18 BF                         IT NE
.text:00006ED2 01 21                         MOVNE           R1, #1
.text:00006ED4 02 EA 01 08                   AND.W           R8, R2, R1
.text:00006ED8 4F F0 01 0B                   MOV.W           R11, #1
.text:00006ED8
.text:00006EDC
.text:00006EDC                               loc_6EDC                      ; CODE XREF: sub_6E38+7E↑j
.text:00006EDC 08 28                         CMP             R0, #8
.text:00006EDE 18 BF                         IT NE
.text:00006EE0 04 28                         CMPNE           R0, #4
.text:00006EE2 08 D1                         BNE             loc_6EF6
.text:00006EE2
.text:00006EE4 D5 F8 00 01                   LDR.W           R0, [R5,#0x100]
.text:00006EE8 28 B1                         CBZ             R0, loc_6EF6
.text:00006EE8
.text:00006EEA 95 F8 21 01                   LDRB.W          R0, [R5,#0x121]
.text:00006EEE 10 B1                         CBZ             R0, loc_6EF6
.text:00006EEE
.text:00006EF0 38 46                         MOV             R0, R7
.text:00006EF2 FF F7 61 F9                   BL              sub_61B8
.text:00006EF2
.text:00006EF6
.text:00006EF6                               loc_6EF6                      ; CODE XREF: sub_6E38+AA↑j
.text:00006EF6                                                             ; sub_6E38+B0↑j
.text:00006EF6                                                             ; sub_6E38+B6↑j
.text:00006EF6 08 2E                         CMP             R6, #8
.text:00006EF8 18 BF                         IT NE
.text:00006EFA 04 2E                         CMPNE           R6, #4
.text:00006EFC 18 D1                         BNE             loc_6F30
.text:00006EFC
.text:00006EFE D5 F8 AC 00                   LDR.W           R0, [R5,#0xAC]
.text:00006F02 B5 49                         LDR             R1, =(aAudioHwPrimary - 0x6F0C) ; "audio_hw_primary"
.text:00006F04 B5 4A                         LDR             R2, =(aSOutDeviceChan - 0x6F12) ; "%s(): out_device change: (0x%x >> 0x%x)"
.text:00006F06 B6 4B                         LDR             R3, =(aOutSetParamete - 0x6F14) ; "out_set_parameters"
.text:00006F08 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00006F0A CD E9 00 06                   STRD.W          R0, R6, [SP,#0x58+var_58]
.text:00006F0E 7A 44                         ADD             R2, PC        ; "%s(): out_device change: (0x%x >> 0x%x)"
.text:00006F10 7B 44                         ADD             R3, PC        ; "out_set_parameters"
.text:00006F12 03 20                         MOVS            R0, #3
.text:00006F14 FC F7 60 E8                   BLX             __android_log_print
.text:00006F14
.text:00006F18 D5 F8 00 01                   LDR.W           R0, [R5,#0x100]
.text:00006F1C 40 B1                         CBZ             R0, loc_6F30
.text:00006F1C
.text:00006F1E D5 F8 A8 00                   LDR.W           R0, [R5,#0xA8]
.text:00006F22 28 B9                         CBNZ            R0, loc_6F30
.text:00006F22
.text:00006F24 95 F8 20 01                   LDRB.W          R0, [R5,#0x120]
.text:00006F28 00 28                         CMP             R0, #0
.text:00006F2A 18 BF                         IT NE
.text:00006F2C 4F F0 01 0B                   MOVNE.W         R11, #1
.text:00006F2C
.text:00006F30
.text:00006F30                               loc_6F30                      ; CODE XREF: sub_6E38+C4↑j
.text:00006F30                                                             ; sub_6E38+E4↑j
.text:00006F30                                                             ; sub_6E38+EA↑j
.text:00006F30 97 F8 A0 00                   LDRB.W          R0, [R7,#0xA0]
.text:00006F34 00 28                         CMP             R0, #0
.text:00006F36 41 D1                         BNE             loc_6FBC
.text:00006F36
.text:00006F38 D5 F8 A8 00                   LDR.W           R0, [R5,#0xA8]
.text:00006F3C 02 28                         CMP             R0, #2
.text:00006F3E 3D D0                         BEQ             loc_6FBC
.text:00006F3E
.text:00006F40 D7 F8 CC 10                   LDR.W           R1, [R7,#0xCC]
.text:00006F44 D5 F8 AC 00                   LDR.W           R0, [R5,#0xAC]
.text:00006F48 D1 F8 00 21                   LDR.W           R2, [R1,#0x100]
.text:00006F4C 00 21                         MOVS            R1, #0
.text:00006F4E 42 B1                         CBZ             R2, loc_6F62
.text:00006F4E
.text:00006F50 BA 42                         CMP             R2, R7
.text:00006F52 06 D0                         BEQ             loc_6F62
.text:00006F52
.text:00006F54 92 F8 A0 10                   LDRB.W          R1, [R2,#0xA0]
.text:00006F58 00 29                         CMP             R1, #0
.text:00006F5A 0C BF                         ITE EQ
.text:00006F5C D2 F8 A4 10                   LDREQ.W         R1, [R2,#0xA4]
.text:00006F60 00 21                         MOVNE           R1, #0
.text:00006F60
.text:00006F62
.text:00006F62                               loc_6F62                      ; CODE XREF: sub_6E38+116↑j
.text:00006F62                                                             ; sub_6E38+11A↑j
.text:00006F62 31 43                         ORRS            R1, R6
.text:00006F64 A0 4A                         LDR             R2, =(aSOutDeviceChan - 0x6F70) ; "%s(): out_device change: (0x%x >> 0x%x)"
.text:00006F66 CD E9 00 01                   STRD.W          R0, R1, [SP,#0x58+var_58]
.text:00006F6A 03 20                         MOVS            R0, #3
.text:00006F6C 7A 44                         ADD             R2, PC        ; "%s(): out_device change: (0x%x >> 0x%x)"
.text:00006F6E 9D 49                         LDR             R1, =(aAudioHwPrimary - 0x6F76) ; "audio_hw_primary"
.text:00006F70 9E 4B                         LDR             R3, =(aOutSetParamete - 0x6F78) ; "out_set_parameters"
.text:00006F72 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00006F74 7B 44                         ADD             R3, PC        ; "out_set_parameters"
.text:00006F76 FC F7 30 E8                   BLX             __android_log_print
.text:00006F76
.text:00006F7A D7 F8 CC 00                   LDR.W           R0, [R7,#0xCC]
.text:00006F7E D0 F8 00 11                   LDR.W           R1, [R0,#0x100]
.text:00006F82 00 20                         MOVS            R0, #0
.text:00006F84 41 B1                         CBZ             R1, loc_6F98
.text:00006F84
.text:00006F86 B9 42                         CMP             R1, R7
.text:00006F88 06 D0                         BEQ             loc_6F98
.text:00006F88
.text:00006F8A 91 F8 A0 00                   LDRB.W          R0, [R1,#0xA0]
.text:00006F8E 00 28                         CMP             R0, #0
.text:00006F90 0C BF                         ITE EQ
.text:00006F92 D1 F8 A4 00                   LDREQ.W         R0, [R1,#0xA4]
.text:00006F96 00 20                         MOVNE           R0, #0
.text:00006F96
.text:00006F98
.text:00006F98                               loc_6F98                      ; CODE XREF: sub_6E38+14C↑j
.text:00006F98                                                             ; sub_6E38+150↑j
.text:00006F98 30 43                         ORRS            R0, R6
.text:00006F9A C5 F8 AC 00                   STR.W           R0, [R5,#0xAC]
.text:00006F9E 28 46                         MOV             R0, R5
.text:00006FA0 FE F7 C6 FB                   BL              sub_5730
.text:00006FA0
.text:00006FA4 B8 6E                         LDR             R0, [R7,#0x68]
.text:00006FA6 4F F0 01 0B                   MOV.W           R11, #1
.text:00006FAA 00 28                         CMP             R0, #0
.text:00006FAC 40 46                         MOV             R0, R8
.text:00006FAE 18 BF                         IT NE
.text:00006FB0 4F F0 01 08                   MOVNE.W         R8, #1
.text:00006FB4 BA F1 00 0F                   CMP.W           R10, #0
.text:00006FB8 08 BF                         IT EQ
.text:00006FBA 80 46                         MOVEQ           R8, R0
.text:00006FBA
.text:00006FBC
.text:00006FBC                               loc_6FBC                      ; CODE XREF: sub_6E38+FE↑j
.text:00006FBC                                                             ; sub_6E38+106↑j
.text:00006FBC D5 F8 A8 00                   LDR.W           R0, [R5,#0xA8]
.text:00006FC0 02 28                         CMP             R0, #2
.text:00006FC2 34 D1                         BNE             loc_702E
.text:00006FC2
.text:00006FC4 04 20                         MOVS            R0, #4
.text:00006FC6 C5 F8 C8 00                   STR.W           R0, [R5,#0xC8]
.text:00006FCA D7 F8 CC 10                   LDR.W           R1, [R7,#0xCC]
.text:00006FCE D5 F8 AC 00                   LDR.W           R0, [R5,#0xAC]
.text:00006FD2 D1 F8 00 21                   LDR.W           R2, [R1,#0x100]
.text:00006FD6 00 21                         MOVS            R1, #0
.text:00006FD8 42 B1                         CBZ             R2, loc_6FEC
.text:00006FD8
.text:00006FDA BA 42                         CMP             R2, R7
.text:00006FDC 06 D0                         BEQ             loc_6FEC
.text:00006FDC
.text:00006FDE 92 F8 A0 10                   LDRB.W          R1, [R2,#0xA0]
.text:00006FE2 00 29                         CMP             R1, #0
.text:00006FE4 0C BF                         ITE EQ
.text:00006FE6 D2 F8 A4 10                   LDREQ.W         R1, [R2,#0xA4]
.text:00006FEA 00 21                         MOVNE           R1, #0
.text:00006FEA
.text:00006FEC
.text:00006FEC                               loc_6FEC                      ; CODE XREF: sub_6E38+1A0↑j
.text:00006FEC                                                             ; sub_6E38+1A4↑j
.text:00006FEC 31 43                         ORRS            R1, R6
.text:00006FEE 81 4A                         LDR             R2, =(aSOutDeviceChan - 0x6FFA) ; "%s(): out_device change: (0x%x >> 0x%x)"
.text:00006FF0 CD E9 00 01                   STRD.W          R0, R1, [SP,#0x58+var_58]
.text:00006FF4 03 20                         MOVS            R0, #3
.text:00006FF6 7A 44                         ADD             R2, PC        ; "%s(): out_device change: (0x%x >> 0x%x)"
.text:00006FF8 7D 49                         LDR             R1, =(aAudioHwPrimary - 0x7000) ; "audio_hw_primary"
.text:00006FFA 7F 4B                         LDR             R3, =(aOutSetParamete - 0x7002) ; "out_set_parameters"
.text:00006FFC 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00006FFE 7B 44                         ADD             R3, PC        ; "out_set_parameters"
.text:00007000 FB F7 EA EF                   BLX             __android_log_print
.text:00007000
.text:00007004 D7 F8 CC 00                   LDR.W           R0, [R7,#0xCC]
.text:00007008 D0 F8 00 11                   LDR.W           R1, [R0,#0x100]
.text:0000700C 00 20                         MOVS            R0, #0
.text:0000700E 41 B1                         CBZ             R1, loc_7022
.text:0000700E
.text:00007010 B9 42                         CMP             R1, R7
.text:00007012 06 D0                         BEQ             loc_7022
.text:00007012
.text:00007014 91 F8 A0 00                   LDRB.W          R0, [R1,#0xA0]
.text:00007018 00 28                         CMP             R0, #0
.text:0000701A 0C BF                         ITE EQ
.text:0000701C D1 F8 A4 00                   LDREQ.W         R0, [R1,#0xA4]
.text:00007020 00 20                         MOVNE           R0, #0
.text:00007020
.text:00007022
.text:00007022                               loc_7022                      ; CODE XREF: sub_6E38+1D6↑j
.text:00007022                                                             ; sub_6E38+1DA↑j
.text:00007022 30 43                         ORRS            R0, R6
.text:00007024 C5 F8 AC 00                   STR.W           R0, [R5,#0xAC]
.text:00007028 28 46                         MOV             R0, R5
.text:0000702A FE F7 81 FB                   BL              sub_5730
.text:0000702A
.text:0000702E
.text:0000702E                               loc_702E                      ; CODE XREF: sub_6E38+18A↑j
.text:0000702E C5 F8 AC 60                   STR.W           R6, [R5,#0xAC]
.text:00007032 B8 F1 00 0F                   CMP.W           R8, #0
.text:00007036 18 BF                         IT NE
.text:00007038 4F F0 01 08                   MOVNE.W         R8, #1
.text:00007038
.text:0000703C
.text:0000703C                               loc_703C                      ; CODE XREF: sub_6E38+62↑j
.text:0000703C                                                             ; sub_6E38+88↑j
.text:0000703C 6F 49                         LDR             R1, =(aSamplingRate - 0x7048) ; "sampling_rate"
.text:0000703E 04 AA                         ADD             R2, SP, #0x58+nptr
.text:00007040 20 46                         MOV             R0, R4
.text:00007042 20 23                         MOVS            R3, #0x20 ; ' '
.text:00007044 79 44                         ADD             R1, PC        ; "sampling_rate"
.text:00007046 FC F7 DC E8                   BLX             str_parms_get_str
.text:00007046
.text:0000704A 00 28                         CMP             R0, #0
.text:0000704C 29 DB                         BLT             loc_70A2
.text:0000704C
.text:0000704E 04 A8                         ADD             R0, SP, #0x58+nptr ; nptr
.text:00007050 FB F7 92 EF                   BLX             atoi
.text:00007050
.text:00007054 06 46                         MOV             R6, R0
.text:00007056 26 B3                         CBZ             R6, loc_70A2
.text:00007056
.text:00007058 D7 F8 B8 00                   LDR.W           R0, [R7,#0xB8]
.text:0000705C B0 42                         CMP             R0, R6
.text:0000705E 20 D0                         BEQ             loc_70A2
.text:0000705E
.text:00007060 67 49                         LDR             R1, =(aAudioHwPrimary - 0x706A) ; "audio_hw_primary"
.text:00007062 68 4A                         LDR             R2, =(aSSampleRateCha - 0x7070) ; "%s(): sample_rate change: (%d >> %d)"
.text:00007064 68 4B                         LDR             R3, =(aOutSetParamete - 0x7072) ; "out_set_parameters"
.text:00007066 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00007068 CD E9 00 06                   STRD.W          R0, R6, [SP,#0x58+var_58]
.text:0000706C 7A 44                         ADD             R2, PC        ; "%s(): sample_rate change: (%d >> %d)"
.text:0000706E 7B 44                         ADD             R3, PC        ; "out_set_parameters"
.text:00007070 03 20                         MOVS            R0, #3
.text:00007072 FB F7 B2 EF                   BLX             __android_log_print
.text:00007072
.text:00007076 38 46                         MOV             R0, R7
.text:00007078 C7 F8 B8 60                   STR.W           R6, [R7,#0xB8]
.text:0000707C 00 F0 56 FE                   BL              sub_7D2C
.text:0000707C
.text:00007080 C7 F8 C0 00                   STR.W           R0, [R7,#0xC0]
.text:00007084 51 46                         MOV             R1, R10
.text:00007086 B8 6E                         LDR             R0, [R7,#0x68]
.text:00007088 BA F1 00 0F                   CMP.W           R10, #0
.text:0000708C 18 BF                         IT NE
.text:0000708E 01 21                         MOVNE           R1, #1
.text:00007090 4F F0 01 0B                   MOV.W           R11, #1
.text:00007094 00 28                         CMP             R0, #0
.text:00007096 18 BF                         IT NE
.text:00007098 01 20                         MOVNE           R0, #1
.text:0000709A 00 EA 01 00                   AND.W           R0, R0, R1
.text:0000709E 48 EA 00 08                   ORR.W           R8, R8, R0
.text:0000709E
.text:000070A2
.text:000070A2                               loc_70A2                      ; CODE XREF: sub_6E38+214↑j
.text:000070A2                                                             ; sub_6E38+21E↑j
.text:000070A2                                                             ; sub_6E38+226↑j
.text:000070A2 5A 49                         LDR             R1, =(aFormat - 0x70AE) ; "format"
.text:000070A4 04 AA                         ADD             R2, SP, #0x58+nptr
.text:000070A6 20 46                         MOV             R0, R4
.text:000070A8 20 23                         MOVS            R3, #0x20 ; ' '
.text:000070AA 79 44                         ADD             R1, PC        ; "format"
.text:000070AC FC F7 A8 E8                   BLX             str_parms_get_str
.text:000070AC
.text:000070B0 00 28                         CMP             R0, #0
.text:000070B2 2B DB                         BLT             loc_710C
.text:000070B2
.text:000070B4 04 A8                         ADD             R0, SP, #0x58+nptr ; nptr
.text:000070B6 FB F7 60 EF                   BLX             atoi
.text:000070B6
.text:000070BA 06 46                         MOV             R6, R0
.text:000070BC D7 F8 BC 00                   LDR.W           R0, [R7,#0xBC]
.text:000070C0 53 49                         LDR             R1, =(aAudioHwPrimary - 0x70CA) ; "audio_hw_primary"
.text:000070C2 54 4A                         LDR             R2, =(aSFormatChangeD - 0x70D0) ; "%s(): format change: (%d >> %d)"
.text:000070C4 54 4B                         LDR             R3, =(aOutSetParamete - 0x70D2) ; "out_set_parameters"
.text:000070C6 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000070C8 CD E9 00 06                   STRD.W          R0, R6, [SP,#0x58+var_58]
.text:000070CC 7A 44                         ADD             R2, PC        ; "%s(): format change: (%d >> %d)"
.text:000070CE 7B 44                         ADD             R3, PC        ; "out_set_parameters"
.text:000070D0 03 20                         MOVS            R0, #3
.text:000070D2 FB F7 82 EF                   BLX             __android_log_print
.text:000070D2
.text:000070D6 CE B1                         CBZ             R6, loc_710C
.text:000070D6
.text:000070D8 D7 F8 BC 00                   LDR.W           R0, [R7,#0xBC]
.text:000070DC B0 42                         CMP             R0, R6
.text:000070DE 15 D0                         BEQ             loc_710C
.text:000070DE
.text:000070E0 38 46                         MOV             R0, R7
.text:000070E2 C7 F8 BC 60                   STR.W           R6, [R7,#0xBC]
.text:000070E6 00 F0 21 FE                   BL              sub_7D2C
.text:000070E6
.text:000070EA C7 F8 C0 00                   STR.W           R0, [R7,#0xC0]
.text:000070EE 51 46                         MOV             R1, R10
.text:000070F0 B8 6E                         LDR             R0, [R7,#0x68]
.text:000070F2 BA F1 00 0F                   CMP.W           R10, #0
.text:000070F6 18 BF                         IT NE
.text:000070F8 01 21                         MOVNE           R1, #1
.text:000070FA 4F F0 01 0B                   MOV.W           R11, #1
.text:000070FE 00 28                         CMP             R0, #0
.text:00007100 18 BF                         IT NE
.text:00007102 01 20                         MOVNE           R0, #1
.text:00007104 00 EA 01 00                   AND.W           R0, R0, R1
.text:00007108 48 EA 00 08                   ORR.W           R8, R8, R0
.text:00007108
.text:0000710C
.text:0000710C                               loc_710C                      ; CODE XREF: sub_6E38+27A↑j
.text:0000710C                                                             ; sub_6E38+29E↑j
.text:0000710C                                                             ; sub_6E38+2A6↑j
.text:0000710C 43 49                         LDR             R1, =(aHifiState - 0x7118) ; "hifi_state"
.text:0000710E 04 AA                         ADD             R2, SP, #0x58+nptr
.text:00007110 20 46                         MOV             R0, R4
.text:00007112 20 23                         MOVS            R3, #0x20 ; ' '
.text:00007114 79 44                         ADD             R1, PC        ; "hifi_state"
.text:00007116 FC F7 74 E8                   BLX             str_parms_get_str
.text:00007116
.text:0000711A 00 28                         CMP             R0, #0
.text:0000711C 2E DB                         BLT             loc_717C
.text:0000711C
.text:0000711E 40 49                         LDR             R1, =(aOn - 0x7126) ; "on"
.text:00007120 04 A8                         ADD             R0, SP, #0x58+nptr ; s1
.text:00007122 79 44                         ADD             R1, PC        ; "on"
.text:00007124 FC F7 3C E8                   BLX             strcmp
.text:00007124
.text:00007128 06 46                         MOV             R6, R0
.text:0000712A 3E 48                         LDR             R0, =(aEnable - 0x7134) ; "Enable"
.text:0000712C 3E 49                         LDR             R1, =(aDisable_0 - 0x7138) ; "Disable"
.text:0000712E 00 2E                         CMP             R6, #0
.text:00007130 78 44                         ADD             R0, PC        ; "Enable"
.text:00007132 3F 4A                         LDR             R2, =(aSSHifiCard - 0x7140) ; "%s(): %s hifi_card"
.text:00007134 79 44                         ADD             R1, PC        ; "Disable"
.text:00007136 3F 4B                         LDR             R3, =(aOutSetParamete - 0x7144) ; "out_set_parameters"
.text:00007138 08 BF                         IT EQ
.text:0000713A 01 46                         MOVEQ           R1, R0
.text:0000713C 7A 44                         ADD             R2, PC        ; "%s(): %s hifi_card"
.text:0000713E 00 91                         STR             R1, [SP,#0x58+var_58]
.text:00007140 7B 44                         ADD             R3, PC        ; "out_set_parameters"
.text:00007142 3A 49                         LDR             R1, =(aAudioHwPrimary - 0x714A) ; "audio_hw_primary"
.text:00007144 03 20                         MOVS            R0, #3
.text:00007146 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00007148 FB F7 46 EF                   BLX             __android_log_print
.text:00007148
.text:0000714C 95 F8 20 11                   LDRB.W          R1, [R5,#0x120]
.text:00007150 00 22                         MOVS            R2, #0
.text:00007152 00 20                         MOVS            R0, #0
.text:00007154 00 2E                         CMP             R6, #0
.text:00007156 08 BF                         IT EQ
.text:00007158 01 22                         MOVEQ           R2, #1
.text:0000715A 91 42                         CMP             R1, R2
.text:0000715C 09 D0                         BEQ             loc_7172
.text:0000715C
.text:0000715E D5 F8 A8 10                   LDR.W           R1, [R5,#0xA8]
.text:00007162 31 B9                         CBNZ            R1, loc_7172
.text:00007162
.text:00007164 95 F8 AC 10                   LDRB.W          R1, [R5,#0xAC]
.text:00007168 11 F0 0C 0F                   TST.W           R1, #0xC
.text:0000716C 18 BF                         IT NE
.text:0000716E 4F F0 01 0B                   MOVNE.W         R11, #1
.text:0000716E
.text:00007172
.text:00007172                               loc_7172                      ; CODE XREF: sub_6E38+324↑j
.text:00007172                                                             ; sub_6E38+32A↑j
.text:00007172 00 2E                         CMP             R6, #0
.text:00007174 08 BF                         IT EQ
.text:00007176 01 20                         MOVEQ           R0, #1
.text:00007178 85 F8 20 01                   STRB.W          R0, [R5,#0x120]
.text:00007178
.text:0000717C
.text:0000717C                               loc_717C                      ; CODE XREF: sub_6E38+2E4↑j
.text:0000717C BB F1 01 0F                   CMP.W           R11, #1
.text:00007180 02 D1                         BNE             loc_7188
.text:00007180
.text:00007182 38 46                         MOV             R0, R7
.text:00007184 FF F7 18 F8                   BL              sub_61B8
.text:00007184
.text:00007188
.text:00007188                               loc_7188                      ; CODE XREF: sub_6E38+348↑j
.text:00007188 48 46                         MOV             R0, R9        ; mutex
.text:0000718A FB F7 5C EF                   BLX             pthread_mutex_unlock
.text:0000718A
.text:0000718E B8 F1 01 0F                   CMP.W           R8, #1
.text:00007192 0A D1                         BNE             loc_71AA
.text:00007192
.text:00007194 0A F1 74 05                   ADD.W           R5, R10, #0x74 ; 't'
.text:00007198 28 46                         MOV             R0, R5        ; mutex
.text:0000719A FB F7 42 EF                   BLX             pthread_mutex_lock
.text:0000719A
.text:0000719E 50 46                         MOV             R0, R10
.text:000071A0 FE F7 5C FF                   BL              sub_605C
.text:000071A0
.text:000071A4 28 46                         MOV             R0, R5        ; mutex
.text:000071A6 FB F7 4E EF                   BLX             pthread_mutex_unlock
.text:000071A6
.text:000071AA
.text:000071AA                               loc_71AA                      ; CODE XREF: sub_6E38+35A↑j
.text:000071AA 03 98                         LDR             R0, [SP,#0x58+mutex] ; mutex
.text:000071AC FB F7 4A EF                   BLX             pthread_mutex_unlock
.text:000071AC
.text:000071B0 20 46                         MOV             R0, R4
.text:000071B2 FC F7 2C E8                   BLX             str_parms_destroy
.text:000071B2
.text:000071B6 20 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x71BE)
.text:000071B8 0C 99                         LDR             R1, [SP,#0x58+var_28]
.text:000071BA 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:000071BC 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:000071BE 00 68                         LDR             R0, [R0]
.text:000071C0 40 1A                         SUBS            R0, R0, R1
.text:000071C2 02 BF                         ITTT EQ
.text:000071C4 00 20                         MOVEQ           R0, #0
.text:000071C6 0D B0                         ADDEQ           SP, SP, #0x34 ; '4'
.text:000071C8 BD E8 F0 8F                   POPEQ.W         {R4-R11,PC}
.text:000071C8
.text:000071CC FB F7 0A EF                   BLX             __stack_chk_fail
.text:000071CC
.text:000071CC                               ; End of function sub_6E38
.text:000071CC
.text:000071CC                               ; ---------------------------------------------------------------------------
.text:000071D0 4C 9F 00 00                   off_71D0 DCD __stack_chk_guard_ptr - 0x6E48
.text:000071D0                                                             ; DATA XREF: sub_6E38+8↑r
.text:000071D4 A1 60 00 00                   off_71D4 DCD aRouting - 0x6E7C
.text:000071D4                                                             ; DATA XREF: sub_6E38+38↑r
.text:000071D4                                                             ; "routing"
.text:000071D8 93 4B 00 00                   off_71D8 DCD aAudioHwPrimary - 0x6F0C
.text:000071D8                                                             ; DATA XREF: sub_6E38+CA↑r
.text:000071D8                                                             ; "audio_hw_primary"
.text:000071DC 35 63 00 00                   off_71DC DCD aSOutDeviceChan - 0x6F12
.text:000071DC                                                             ; DATA XREF: sub_6E38+CC↑r
.text:000071DC                                                             ; "%s(): out_device change: (0x%x >> 0x%x)"
.text:000071E0 5B 63 00 00                   off_71E0 DCD aOutSetParamete - 0x6F14
.text:000071E0                                                             ; DATA XREF: sub_6E38+CE↑r
.text:000071E0                                                             ; "out_set_parameters"
.text:000071E4 29 4B 00 00                   off_71E4 DCD aAudioHwPrimary - 0x6F76
.text:000071E4                                                             ; DATA XREF: sub_6E38+136↑r
.text:000071E4                                                             ; "audio_hw_primary"
.text:000071E8 D7 62 00 00                   off_71E8 DCD aSOutDeviceChan - 0x6F70
.text:000071E8                                                             ; DATA XREF: sub_6E38+12C↑r
.text:000071E8                                                             ; "%s(): out_device change: (0x%x >> 0x%x)"
.text:000071EC F7 62 00 00                   off_71EC DCD aOutSetParamete - 0x6F78
.text:000071EC                                                             ; DATA XREF: sub_6E38+138↑r
.text:000071EC                                                             ; "out_set_parameters"
.text:000071F0 9F 4A 00 00                   off_71F0 DCD aAudioHwPrimary - 0x7000
.text:000071F0                                                             ; DATA XREF: sub_6E38+1C0↑r
.text:000071F0                                                             ; "audio_hw_primary"
.text:000071F4 4D 62 00 00                   off_71F4 DCD aSOutDeviceChan - 0x6FFA
.text:000071F4                                                             ; DATA XREF: sub_6E38+1B6↑r
.text:000071F4                                                             ; "%s(): out_device change: (0x%x >> 0x%x)"
.text:000071F8 6D 62 00 00                   off_71F8 DCD aOutSetParamete - 0x7002
.text:000071F8                                                             ; DATA XREF: sub_6E38+1C2↑r
.text:000071F8                                                             ; "out_set_parameters"
.text:000071FC 3A 62 00 00                   off_71FC DCD aSamplingRate - 0x7048
.text:000071FC                                                             ; DATA XREF: sub_6E38:loc_703C↑r
.text:000071FC                                                             ; "sampling_rate"
.text:00007200 35 4A 00 00                   off_7200 DCD aAudioHwPrimary - 0x706A
.text:00007200                                                             ; DATA XREF: sub_6E38+228↑r
.text:00007200                                                             ; "audio_hw_primary"
.text:00007204 20 62 00 00                   off_7204 DCD aSSampleRateCha - 0x7070
.text:00007204                                                             ; DATA XREF: sub_6E38+22A↑r
.text:00007204                                                             ; "%s(): sample_rate change: (%d >> %d)"
.text:00007208 FD 61 00 00                   off_7208 DCD aOutSetParamete - 0x7072
.text:00007208                                                             ; DATA XREF: sub_6E38+22C↑r
.text:00007208                                                             ; "out_set_parameters"
.text:0000720C 07 62 00 00                   off_720C DCD aFormat - 0x70AE ; DATA XREF: sub_6E38:loc_70A2↑r
.text:0000720C                                                             ; "format"
.text:00007210 D5 49 00 00                   off_7210 DCD aAudioHwPrimary - 0x70CA
.text:00007210                                                             ; DATA XREF: sub_6E38+288↑r
.text:00007210                                                             ; "audio_hw_primary"
.text:00007214 EC 61 00 00                   off_7214 DCD aSFormatChangeD - 0x70D0
.text:00007214                                                             ; DATA XREF: sub_6E38+28A↑r
.text:00007214                                                             ; "%s(): format change: (%d >> %d)"
.text:00007218 9D 61 00 00                   off_7218 DCD aOutSetParamete - 0x70D2
.text:00007218                                                             ; DATA XREF: sub_6E38+28C↑r
.text:00007218                                                             ; "out_set_parameters"
.text:0000721C C4 61 00 00                   off_721C DCD aHifiState - 0x7118
.text:0000721C                                                             ; DATA XREF: sub_6E38:loc_710C↑r
.text:0000721C                                                             ; "hifi_state"
.text:00007220 38 5D 00 00                   off_7220 DCD aOn - 0x7126     ; DATA XREF: sub_6E38+2E6↑r
.text:00007220                                                             ; "on"
.text:00007224 C6 61 00 00                   off_7224 DCD aEnable - 0x7134 ; DATA XREF: sub_6E38+2F2↑r
.text:00007224                                                             ; "Enable"
.text:00007228 C9 61 00 00                   off_7228 DCD aDisable_0 - 0x7138
.text:00007228                                                             ; DATA XREF: sub_6E38+2F4↑r
.text:00007228                                                             ; "Disable"
.text:0000722C 55 49 00 00                   off_722C DCD aAudioHwPrimary - 0x714A
.text:0000722C                                                             ; DATA XREF: sub_6E38+30A↑r
.text:0000722C                                                             ; "audio_hw_primary"
.text:00007230 A7 61 00 00                   off_7230 DCD aSSHifiCard - 0x7140
.text:00007230                                                             ; DATA XREF: sub_6E38+2FA↑r
.text:00007230                                                             ; "%s(): %s hifi_card"
.text:00007234 2B 61 00 00                   off_7234 DCD aOutSetParamete - 0x7144
.text:00007234                                                             ; DATA XREF: sub_6E38+2FE↑r
.text:00007234                                                             ; "out_set_parameters"
.text:00007238 D6 9B 00 00                   off_7238 DCD __stack_chk_guard_ptr - 0x71BE
.text:00007238                                                             ; DATA XREF: sub_6E38+37E↑r
.text:00007238                               ; } // starts at 6E38
.text:0000723C
.text:0000723C                               ; =============== S U B R O U T I N E =======================================
.text:0000723C
.text:0000723C
.text:0000723C                               ; char *__fastcall sub_723C(int, const char *)
.text:0000723C                               sub_723C                      ; DATA XREF: sub_5068+96↑o
.text:0000723C                                                             ; sub_5068+98↑o
.text:0000723C                                                             ; .text:off_5288↑o
.text:0000723C
.text:0000723C                               var_128= -0x128
.text:0000723C                               var_28= -0x28
.text:0000723C
.text:0000723C                               ; __unwind {
.text:0000723C 2D E9 F0 4F                   PUSH.W          {R4-R11,LR}
.text:00007240 C1 B0                         SUB             SP, SP, #0x104
.text:00007242 06 46                         MOV             R6, R0
.text:00007244 31 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x724C)
.text:00007246 0C 46                         MOV             R4, R1
.text:00007248 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:0000724A 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:0000724C 00 68                         LDR             R0, [R0]
.text:0000724E 40 90                         STR             R0, [SP,#0x128+var_28]
.text:00007250 20 46                         MOV             R0, R4
.text:00007252 FB F7 D0 EF                   BLX             str_parms_create_str
.text:00007252
.text:00007256 80 46                         MOV             R8, R0
.text:00007258 FC F7 68 E8                   BLX             str_parms_create
.text:00007258
.text:0000725C 2C 49                         LDR             R1, =(aSupChannels - 0x7268) ; "sup_channels"
.text:0000725E EB 46                         MOV             R11, SP
.text:00007260 81 46                         MOV             R9, R0
.text:00007262 40 46                         MOV             R0, R8
.text:00007264 79 44                         ADD             R1, PC        ; "sup_channels"
.text:00007266 5A 46                         MOV             R2, R11
.text:00007268 4F F4 80 73                   MOV.W           R3, #0x100
.text:0000726C FB F7 C8 EF                   BLX             str_parms_get_str
.text:0000726C
.text:00007270 00 28                         CMP             R0, #0
.text:00007272 34 DB                         BLT             loc_72DE
.text:00007272
.text:00007274 00 24                         MOVS            R4, #0
.text:00007276 8D F8 00 40                   STRB.W          R4, [SP,#0x128+var_128]
.text:0000727A 56 F8 AC 1F                   LDR.W           R1, [R6,#0xAC]!
.text:0000727E 21 B3                         CBZ             R1, loc_72CA
.text:0000727E
.text:00007280 24 4A                         LDR             R2, =(out_channels_name_to_enum_table_ptr - 0x728C)
.text:00007282 01 20                         MOVS            R0, #1
.text:00007284 4F F0 7C 0A                   MOV.W           R10, #0x7C ; '|'
.text:00007288 7A 44                         ADD             R2, PC        ; out_channels_name_to_enum_table_ptr
.text:0000728A 15 68                         LDR             R5, [R2]      ; out_channels_name_to_enum_table
.text:0000728A
.text:0000728C
.text:0000728C                               loc_728C                      ; CODE XREF: sub_723C+8C↓j
.text:0000728C 00 27                         MOVS            R7, #0
.text:0000728C
.text:0000728E
.text:0000728E                               loc_728E                      ; CODE XREF: sub_723C+60↓j
.text:0000728E 05 EB C7 02                   ADD.W           R2, R5, R7,LSL#3
.text:00007292 52 68                         LDR             R2, [R2,#4]
.text:00007294 8A 42                         CMP             R2, R1
.text:00007296 03 D0                         BEQ             loc_72A0
.text:00007296
.text:00007298 01 37                         ADDS            R7, #1
.text:0000729A 03 2F                         CMP             R7, #3
.text:0000729C F7 D3                         BCC             loc_728E
.text:0000729C
.text:0000729E 0F E0                         B               loc_72C0
.text:0000729E
.text:000072A0                               ; ---------------------------------------------------------------------------
.text:000072A0
.text:000072A0                               loc_72A0                      ; CODE XREF: sub_723C+5A↑j
.text:000072A0 10 F0 01 0F                   TST.W           R0, #1
.text:000072A4 04 D1                         BNE             loc_72B0
.text:000072A4
.text:000072A6 58 46                         MOV             R0, R11       ; s
.text:000072A8 FC F7 46 E8                   BLX             strlen
.text:000072A8
.text:000072AC 2B F8 00 A0                   STRH.W          R10, [R11,R0]
.text:000072AC
.text:000072B0
.text:000072B0                               loc_72B0                      ; CODE XREF: sub_723C+68↑j
.text:000072B0 55 F8 37 10                   LDR.W           R1, [R5,R7,LSL#3]
.text:000072B4 58 46                         MOV             R0, R11
.text:000072B6 4F F4 80 72                   MOV.W           R2, #0x100
.text:000072BA FC F7 44 E8                   BLX             __strcat_chk
.text:000072BA
.text:000072BE 00 20                         MOVS            R0, #0
.text:000072BE
.text:000072C0
.text:000072C0                               loc_72C0                      ; CODE XREF: sub_723C+62↑j
.text:000072C0 01 34                         ADDS            R4, #1
.text:000072C2 56 F8 24 10                   LDR.W           R1, [R6,R4,LSL#2]
.text:000072C6 00 29                         CMP             R1, #0
.text:000072C8 E0 D1                         BNE             loc_728C
.text:000072C8
.text:000072CA
.text:000072CA                               loc_72CA                      ; CODE XREF: sub_723C+42↑j
.text:000072CA 13 49                         LDR             R1, =(aSupChannels - 0x72D4) ; "sup_channels"
.text:000072CC 6A 46                         MOV             R2, SP
.text:000072CE 48 46                         MOV             R0, R9
.text:000072D0 79 44                         ADD             R1, PC        ; "sup_channels"
.text:000072D2 FC F7 3E E8                   BLX             str_parms_add_str
.text:000072D2
.text:000072D6 48 46                         MOV             R0, R9
.text:000072D8 FB F7 9E EF                   BLX             str_parms_to_str
.text:000072D8
.text:000072DC 02 E0                         B               loc_72E4
.text:000072DC
.text:000072DE                               ; ---------------------------------------------------------------------------
.text:000072DE
.text:000072DE                               loc_72DE                      ; CODE XREF: sub_723C+36↑j
.text:000072DE 20 46                         MOV             R0, R4        ; s
.text:000072E0 FB F7 A0 EF                   BLX             strdup
.text:000072E0
.text:000072E4
.text:000072E4                               loc_72E4                      ; CODE XREF: sub_723C+A0↑j
.text:000072E4 04 46                         MOV             R4, R0
.text:000072E6 40 46                         MOV             R0, R8
.text:000072E8 FB F7 90 EF                   BLX             str_parms_destroy
.text:000072E8
.text:000072EC 48 46                         MOV             R0, R9
.text:000072EE FB F7 8E EF                   BLX             str_parms_destroy
.text:000072EE
.text:000072F2 0A 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x72FA)
.text:000072F4 40 99                         LDR             R1, [SP,#0x128+var_28]
.text:000072F6 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:000072F8 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:000072FA 00 68                         LDR             R0, [R0]
.text:000072FC 40 1A                         SUBS            R0, R0, R1
.text:000072FE 02 BF                         ITTT EQ
.text:00007300 20 46                         MOVEQ           R0, R4
.text:00007302 41 B0                         ADDEQ           SP, SP, #0x104
.text:00007304 BD E8 F0 8F                   POPEQ.W         {R4-R11,PC}
.text:00007304
.text:00007308 FB F7 6C EE                   BLX             __stack_chk_fail
.text:00007308
.text:00007308                               ; End of function sub_723C
.text:00007308
.text:00007308                               ; ---------------------------------------------------------------------------
.text:0000730C 48 9B 00 00                   off_730C DCD __stack_chk_guard_ptr - 0x724C
.text:0000730C                                                             ; DATA XREF: sub_723C+8↑r
.text:00007310 A1 60 00 00                   off_7310 DCD aSupChannels - 0x7268
.text:00007310                                                             ; DATA XREF: sub_723C+20↑r
.text:00007310                                                             ; "sup_channels"
.text:00007314 50 9B 00 00                   off_7314 DCD out_channels_name_to_enum_table_ptr - 0x728C
.text:00007314                                                             ; DATA XREF: sub_723C+44↑r
.text:00007318 35 60 00 00                   off_7318 DCD aSupChannels - 0x72D4
.text:00007318                                                             ; DATA XREF: sub_723C:loc_72CA↑r
.text:00007318                                                             ; "sup_channels"
.text:0000731C 9A 9A 00 00                   off_731C DCD __stack_chk_guard_ptr - 0x72FA
.text:0000731C                                                             ; DATA XREF: sub_723C+B6↑r
.text:0000731C                               ; } // starts at 723C
.text:00007320
.text:00007320                               ; =============== S U B R O U T I N E =======================================
.text:00007320
.text:00007320
.text:00007320                               ; int sub_7320()
.text:00007320                               sub_7320                      ; DATA XREF: sub_5068+9C↑o
.text:00007320                                                             ; sub_5068+9E↑o
.text:00007320                                                             ; .text:off_528C↑o
.text:00007320                               ; __unwind {
.text:00007320 00 20                         MOVS            R0, #0
.text:00007322 70 47                         BX              LR
.text:00007322
.text:00007322                               ; End of function sub_7320
.text:00007322
.text:00007324
.text:00007324                               ; =============== S U B R O U T I N E =======================================
.text:00007324
.text:00007324
.text:00007324                               ; int sub_7324()
.text:00007324                               sub_7324                      ; DATA XREF: sub_5068+A2↑o
.text:00007324                                                             ; sub_5068+A4↑o
.text:00007324                                                             ; .text:off_5290↑o
.text:00007324 00 20                         MOVS            R0, #0
.text:00007326 70 47                         BX              LR
.text:00007326
.text:00007326                               ; End of function sub_7324
.text:00007326
.text:00007328
.text:00007328                               ; =============== S U B R O U T I N E =======================================
.text:00007328
.text:00007328
.text:00007328                               ; unsigned int __fastcall sub_7328(_DWORD *)
.text:00007328                               sub_7328                      ; DATA XREF: sub_5068+A8↑o
.text:00007328                                                             ; sub_5068+AA↑o
.text:00007328                                                             ; .text:off_5294↑o
.text:00007328 D0 E9 1F 21                   LDRD.W          R2, R1, [R0,#0x7C]
.text:0000732C D0 F8 B8 00                   LDR.W           R0, [R0,#0xB8]
.text:00007330 51 43                         MULS            R1, R2
.text:00007332 4F F4 7A 72                   MOV.W           R2, #0x3E8
.text:00007336 51 43                         MULS            R1, R2
.text:00007338 B1 FB F0 F0                   UDIV.W          R0, R1, R0
.text:0000733C 70 47                         BX              LR
.text:0000733C
.text:0000733C                               ; End of function sub_7328
.text:0000733C
.text:0000733E
.text:0000733E                               ; =============== S U B R O U T I N E =======================================
.text:0000733E
.text:0000733E
.text:0000733E                               ; int sub_733E()
.text:0000733E                               sub_733E                      ; DATA XREF: sub_5068+AE↑o
.text:0000733E                                                             ; sub_5068+B0↑o
.text:0000733E                                                             ; .text:off_5298↑o
.text:0000733E 6F F0 25 00                   MOV             R0, #0xFFFFFFDA
.text:00007342 70 47                         BX              LR
.text:00007342                               ; } // starts at 7320
.text:00007342
.text:00007342                               ; End of function sub_733E
.text:00007342
.text:00007344
.text:00007344                               ; =============== S U B R O U T I N E =======================================
.text:00007344
.text:00007344
.text:00007344                               ; unsigned int __fastcall sub_7344(int, int, unsigned int)
.text:00007344                               sub_7344                      ; DATA XREF: sub_5068+B4↑o
.text:00007344                                                             ; sub_5068+B6↑o
.text:00007344                                                             ; .text:off_529C↑o
.text:00007344
.text:00007344                               var_88= -0x88
.text:00007344                               var_80= -0x80
.text:00007344                               var_78= -0x78
.text:00007344                               var_70= -0x70
.text:00007344                               var_6C= -0x6C
.text:00007344                               var_68= -0x68
.text:00007344                               var_64= -0x64
.text:00007344                               mutex= -0x60
.text:00007344                               var_5C= -0x5C
.text:00007344                               var_58= -0x58
.text:00007344                               var_54= -0x54
.text:00007344                               var_50= -0x50
.text:00007344                               var_48= -0x48
.text:00007344                               anonymous_0= -0x40
.text:00007344                               anonymous_1= -0x38
.text:00007344                               var_30= -0x30
.text:00007344                               anonymous_2= -0x2C
.text:00007344                               var_28= -0x28
.text:00007344
.text:00007344                               ; __unwind {
.text:00007344 2D E9 F0 4F                   PUSH.W          {R4-R11,LR}
.text:00007348 99 B0                         SUB             SP, SP, #0x64
.text:0000734A 81 46                         MOV             R9, R0
.text:0000734C DF F8 94 08                   LDR.W           R0, =(__stack_chk_guard_ptr - 0x7358)
.text:00007350 0B 92                         STR             R2, [SP,#0x88+var_5C]
.text:00007352 88 46                         MOV             R8, R1
.text:00007354 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00007356 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00007358 00 68                         LDR             R0, [R0]
.text:0000735A 18 90                         STR             R0, [SP,#0x88+var_28]
.text:0000735C 48 46                         MOV             R0, R9
.text:0000735E D9 F8 10 10                   LDR.W           R1, [R9,#0x10]
.text:00007362 D9 F8 CC B0                   LDR.W           R11, [R9,#0xCC]
.text:00007366 88 47                         BLX             R1
.text:00007366
.text:00007368 00 F0 7F 41                   AND.W           R1, R0, #0xFF000000
.text:0000736C B1 F1 50 6F                   CMP.W           R1, #0xD000000
.text:00007370 18 BF                         IT NE
.text:00007372 00 29                         CMPNE           R1, #0
.text:00007374 09 D1                         BNE             loc_738A
.text:00007374
.text:00007376 41 1E                         SUBS            R1, R0, #1    ; switch 6 cases
.text:00007378 05 29                         CMP             R1, #5
.text:0000737A 08 D8                         BHI             def_737C      ; jumptable 0000737C default case
.text:0000737A
.text:0000737C DF E8 01 F0                   TBB.W           [PC,R1]       ; switch jump
.text:0000737C
.text:0000737C                               ; ---------------------------------------------------------------------------
.text:00007380 0A                            jpt_737C DCB 0xA              ; jump table for switch statement
.text:00007381 0C                            DCB 0xC
.text:00007382 03                            DCB 3
.text:00007383 03                            DCB 3
.text:00007384 03                            DCB 3
.text:00007385 0E                            DCB 0xE
.text:00007386                               ; ---------------------------------------------------------------------------
.text:00007386
.text:00007386                               loc_7386                      ; CODE XREF: sub_7344+38↑j
.text:00007386 04 25                         MOVS            R5, #4        ; jumptable 0000737C cases 3-5
.text:00007388 0B E0                         B               loc_73A2
.text:00007388
.text:0000738A                               ; ---------------------------------------------------------------------------
.text:0000738A
.text:0000738A                               loc_738A                      ; CODE XREF: sub_7344+30↑j
.text:0000738A 01 24                         MOVS            R4, #1
.text:0000738C 30 E0                         B               loc_73F0
.text:0000738C
.text:0000738E                               ; ---------------------------------------------------------------------------
.text:0000738E
.text:0000738E                               def_737C                      ; CODE XREF: sub_7344+36↑j
.text:0000738E B0 F1 50 6F                   CMP.W           R0, #0xD000000 ; jumptable 0000737C default case
.text:00007392 05 D1                         BNE             loc_73A0
.text:00007392
.text:00007394
.text:00007394                               loc_7394                      ; CODE XREF: sub_7344+38↑j
.text:00007394 02 25                         MOVS            R5, #2        ; jumptable 0000737C case 1
.text:00007396 04 E0                         B               loc_73A2
.text:00007396
.text:00007398                               ; ---------------------------------------------------------------------------
.text:00007398
.text:00007398                               loc_7398                      ; CODE XREF: sub_7344+38↑j
.text:00007398 01 25                         MOVS            R5, #1        ; jumptable 0000737C case 2
.text:0000739A 02 E0                         B               loc_73A2
.text:0000739A
.text:0000739C                               ; ---------------------------------------------------------------------------
.text:0000739C
.text:0000739C                               loc_739C                      ; CODE XREF: sub_7344+38↑j
.text:0000739C 03 25                         MOVS            R5, #3        ; jumptable 0000737C case 6
.text:0000739E 00 E0                         B               loc_73A2
.text:0000739E
.text:000073A0                               ; ---------------------------------------------------------------------------
.text:000073A0
.text:000073A0                               loc_73A0                      ; CODE XREF: sub_7344+4E↑j
.text:000073A0 00 25                         MOVS            R5, #0
.text:000073A0
.text:000073A2
.text:000073A2                               loc_73A2                      ; CODE XREF: sub_7344+44↑j
.text:000073A2                                                             ; sub_7344+52↑j
.text:000073A2                                                             ; sub_7344+56↑j
.text:000073A2                                                             ; sub_7344+5A↑j
.text:000073A2 D9 F8 0C 10                   LDR.W           R1, [R9,#0xC]
.text:000073A6 48 46                         MOV             R0, R9
.text:000073A8 88 47                         BLX             R1
.text:000073A8
.text:000073AA 02 21                         MOVS            R1, #2
.text:000073AC B1 EB 90 7F                   CMP.W           R1, R0,LSR#30
.text:000073B0 04 D0                         BEQ             loc_73BC
.text:000073B0
.text:000073B2 81 0F                         LSRS            R1, R0, #0x1E
.text:000073B4 C9 B9                         CBNZ            R1, loc_73EA
.text:000073B4
.text:000073B6 6F F3 9F 40                   BFC.W           R0, #0x12, #0xE
.text:000073BA 01 E0                         B               loc_73C0
.text:000073BA
.text:000073BC                               ; ---------------------------------------------------------------------------
.text:000073BC
.text:000073BC                               loc_73BC                      ; CODE XREF: sub_7344+6C↑j
.text:000073BC 20 F0 40 40                   BIC.W           R0, R0, #0xC0000000
.text:000073BC
.text:000073C0
.text:000073C0                               loc_73C0                      ; CODE XREF: sub_7344+76↑j
.text:000073C0 4F F0 55 31                   MOV.W           R1, #0x55555555
.text:000073C4 01 EA 50 01                   AND.W           R1, R1, R0,LSR#1
.text:000073C8 40 1A                         SUBS            R0, R0, R1
.text:000073CA 4F F0 33 31                   MOV.W           R1, #0x33333333
.text:000073CE 01 EA 90 01                   AND.W           R1, R1, R0,LSR#2
.text:000073D2 20 F0 CC 30                   BIC.W           R0, R0, #0xCCCCCCCC
.text:000073D6 08 44                         ADD             R0, R1
.text:000073D8 4F F0 01 31                   MOV.W           R1, #0x1010101
.text:000073DC 00 EB 10 10                   ADD.W           R0, R0, R0,LSR#4
.text:000073E0 20 F0 F0 30                   BIC.W           R0, R0, #0xF0F0F0F0
.text:000073E4 48 43                         MULS            R0, R1
.text:000073E6 00 0E                         LSRS            R0, R0, #0x18
.text:000073E8 00 E0                         B               loc_73EC
.text:000073E8
.text:000073EA                               ; ---------------------------------------------------------------------------
.text:000073EA
.text:000073EA                               loc_73EA                      ; CODE XREF: sub_7344+70↑j
.text:000073EA 00 20                         MOVS            R0, #0
.text:000073EA
.text:000073EC
.text:000073EC                               loc_73EC                      ; CODE XREF: sub_7344+A4↑j
.text:000073EC 00 FB 05 F4                   MUL.W           R4, R0, R5
.text:000073EC
.text:000073F0
.text:000073F0                               loc_73F0                      ; CODE XREF: sub_7344+48↑j
.text:000073F0 DF F8 F4 17                   LDR.W           R1, =(pcm_config_ptr - 0x73FE)
.text:000073F4 0B F1 A4 0A                   ADD.W           R10, R11, #0xA4
.text:000073F8 0B 98                         LDR             R0, [SP,#0x88+var_5C]
.text:000073FA 79 44                         ADD             R1, PC        ; pcm_config_ptr
.text:000073FC 09 68                         LDR             R1, [R1]      ; pcm_config
.text:000073FE B0 FB F4 F0                   UDIV.W          R0, R0, R4
.text:00007402 0D 90                         STR             R0, [SP,#0x88+var_54]
.text:00007404 D1 E9 02 01                   LDRD.W          R0, R1, [R1,#8]
.text:00007408 48 43                         MULS            R0, R1
.text:0000740A 80 00                         LSLS            R0, R0, #2
.text:0000740C B0 FB F4 F0                   UDIV.W          R0, R0, R4
.text:00007410 0C 90                         STR             R0, [SP,#0x88+var_58]
.text:00007412 50 46                         MOV             R0, R10       ; mutex
.text:00007414 FB F7 04 EE                   BLX             pthread_mutex_lock
.text:00007414
.text:00007418 09 F1 64 00                   ADD.W           R0, R9, #0x64 ; 'd' ; mutex
.text:0000741C 0A 90                         STR             R0, [SP,#0x88+mutex]
.text:0000741E FB F7 00 EE                   BLX             pthread_mutex_lock
.text:0000741E
.text:00007422 99 F8 A0 00                   LDRB.W          R0, [R9,#0xA0]
.text:00007426 00 28                         CMP             R0, #0
.text:00007428 00 F0 70 82                   BEQ.W           loc_790C
.text:00007428
.text:0000742C 06 94                         STR             R4, [SP,#0x88+var_70]
.text:0000742E 0E AE                         ADD             R6, SP, #0x88+var_50
.text:00007430 D9 F8 CC 40                   LDR.W           R4, [R9,#0xCC]
.text:00007434 30 46                         MOV             R0, R6
.text:00007436 C0 EF 50 00                   VMOV.I32        Q8, #0
.text:0000743A CD F8 24 A0                   STR.W           R10, [SP,#0x88+var_64]
.text:0000743E 4F F0 00 0A                   MOV.W           R10, #0
.text:00007442 D4 F8 FC 50                   LDR.W           R5, [R4,#0xFC]
.text:00007446 40 F9 CD 0A                   VST1.64         {D16-D17}, [R0]!
.text:0000744A 40 F9 CF 0A                   VST1.64         {D16-D17}, [R0]
.text:0000744E CD E9 16 AA                   STRD.W          R10, R10, [SP,#0x88+var_30]
.text:00007452 C4 F8 00 91                   STR.W           R9, [R4,#0x100]
.text:00007456 D4 E9 2A 01                   LDRD.W          R0, R1, [R4,#0xA8]
.text:0000745A DF F8 94 27                   LDR.W           R2, =(aSModeDOutDevic - 0x7468) ; "%s(): mode=%d, out_device=0x%x"
.text:0000745E CD E9 00 01                   STRD.W          R0, R1, [SP,#0x88+var_88]
.text:00007462 03 20                         MOVS            R0, #3
.text:00007464 7A 44                         ADD             R2, PC        ; "%s(): mode=%d, out_device=0x%x"
.text:00007466 DF F8 84 17                   LDR.W           R1, =(aAudioHwPrimary - 0x7472) ; "audio_hw_primary"
.text:0000746A DF F8 88 37                   LDR.W           R3, =(aStartOutputStr - 0x7474) ; "start_output_stream"
.text:0000746E 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00007470 7B 44                         ADD             R3, PC        ; "start_output_stream"
.text:00007472 FB F7 B2 ED                   BLX             __android_log_print
.text:00007472
.text:00007476 D4 F8 A8 00                   LDR.W           R0, [R4,#0xA8]
.text:0000747A 01 28                         CMP             R0, #1
.text:0000747C 0D D0                         BEQ             loc_749A
.text:0000747C
.text:0000747E 03 28                         CMP             R0, #3
.text:00007480 17 D0                         BEQ             loc_74B2
.text:00007480
.text:00007482 02 28                         CMP             R0, #2
.text:00007484 22 D1                         BNE             loc_74CC
.text:00007484
.text:00007486 DF F8 70 07                   LDR.W           R0, =(pcm_config_voice_call_ptr - 0x7496)
.text:0000748A 4F F0 00 0A                   MOV.W           R10, #0
.text:0000748E 84 F8 21 A1                   STRB.W          R10, [R4,#0x121]
.text:00007492 78 44                         ADD             R0, PC        ; pcm_config_voice_call_ptr
.text:00007494 00 68                         LDR             R0, [R0]      ; pcm_config_voice_call
.text:00007496 40 68                         LDR             R0, [R0,#(dword_1105C - 0x11058)]
.text:00007498 11 E0                         B               loc_74BE
.text:00007498
.text:0000749A                               ; ---------------------------------------------------------------------------
.text:0000749A
.text:0000749A                               loc_749A                      ; CODE XREF: sub_7344+138↑j
.text:0000749A 84 F8 21 A1                   STRB.W          R10, [R4,#0x121]
.text:0000749E 4A 46                         MOV             R2, R9
.text:000074A0 09 F1 78 01                   ADD.W           R1, R9, #0x78 ; 'x'
.text:000074A4 D9 F8 B8 00                   LDR.W           R0, [R9,#0xB8]
.text:000074A8 C9 F8 78 00                   STR.W           R0, [R9,#0x78]
.text:000074AC 42 F8 84 AF                   STR.W           R10, [R2,#0x84]!
.text:000074B0 38 E0                         B               loc_7524
.text:000074B0
.text:000074B2                               ; ---------------------------------------------------------------------------
.text:000074B2
.text:000074B2                               loc_74B2                      ; CODE XREF: sub_7344+13C↑j
.text:000074B2 4F F0 00 0A                   MOV.W           R10, #0
.text:000074B6 4B F6 80 30                   MOVW            R0, #0xBB80
.text:000074BA 84 F8 21 A1                   STRB.W          R10, [R4,#0x121]
.text:000074BA
.text:000074BE
.text:000074BE                               loc_74BE                      ; CODE XREF: sub_7344+154↑j
.text:000074BE 49 46                         MOV             R1, R9
.text:000074C0 4A 46                         MOV             R2, R9
.text:000074C2 41 F8 78 0F                   STR.W           R0, [R1,#0x78]!
.text:000074C6 42 F8 84 AF                   STR.W           R10, [R2,#0x84]!
.text:000074CA 2B E0                         B               loc_7524
.text:000074CA
.text:000074CC                               ; ---------------------------------------------------------------------------
.text:000074CC
.text:000074CC                               loc_74CC                      ; CODE XREF: sub_7344+140↑j
.text:000074CC 94 F8 20 01                   LDRB.W          R0, [R4,#0x120]
.text:000074D0 40 B1                         CBZ             R0, loc_74E4
.text:000074D0
.text:000074D2 D4 F8 AC 00                   LDR.W           R0, [R4,#0xAC]
.text:000074D6 00 22                         MOVS            R2, #0
.text:000074D8 4F F0 01 0A                   MOV.W           R10, #1
.text:000074DC 04 28                         CMP             R0, #4
.text:000074DE 18 BF                         IT NE
.text:000074E0 08 28                         CMPNE           R0, #8
.text:000074E2 04 D0                         BEQ             loc_74EE
.text:000074E2
.text:000074E4
.text:000074E4                               loc_74E4                      ; CODE XREF: sub_7344+18C↑j
.text:000074E4 4F F0 00 0A                   MOV.W           R10, #0
.text:000074E8 01 22                         MOVS            R2, #1
.text:000074EA 84 F8 21 A1                   STRB.W          R10, [R4,#0x121]
.text:000074EA
.text:000074EE
.text:000074EE                               loc_74EE                      ; CODE XREF: sub_7344+19E↑j
.text:000074EE D9 F8 B8 00                   LDR.W           R0, [R9,#0xB8]
.text:000074F2 C9 F8 78 00                   STR.W           R0, [R9,#0x78]
.text:000074F6 D9 F8 BC 10                   LDR.W           R1, [R9,#0xBC]
.text:000074FA 03 29                         CMP             R1, #3
.text:000074FC 01 D1                         BNE             loc_7502
.text:000074FC
.text:000074FE 01 21                         MOVS            R1, #1
.text:00007500 03 E0                         B               loc_750A
.text:00007500
.text:00007502                               ; ---------------------------------------------------------------------------
.text:00007502
.text:00007502                               loc_7502                      ; CODE XREF: sub_7344+1B8↑j
.text:00007502 04 29                         CMP             R1, #4
.text:00007504 14 BF                         ITE NE
.text:00007506 00 21                         MOVNE           R1, #0
.text:00007508 03 21                         MOVEQ           R1, #3
.text:00007508
.text:0000750A
.text:0000750A                               loc_750A                      ; CODE XREF: sub_7344+1BC↑j
.text:0000750A C9 F8 84 10                   STR.W           R1, [R9,#0x84]
.text:0000750E BA F1 00 0F                   CMP.W           R10, #0
.text:00007512 18 BF                         IT NE
.text:00007514 4F F0 01 0A                   MOVNE.W         R10, #1
.text:00007518 00 2A                         CMP             R2, #0
.text:0000751A 48 D0                         BEQ             loc_75AE
.text:0000751A
.text:0000751C 09 F1 78 01                   ADD.W           R1, R9, #0x78 ; 'x'
.text:00007520 09 F1 84 02                   ADD.W           R2, R9, #0x84
.text:00007520
.text:00007524
.text:00007524                               loc_7524                      ; CODE XREF: sub_7344+16C↑j
.text:00007524                                                             ; sub_7344+186↑j
.text:00007524 DF F8 D4 06                   LDR.W           R0, =(pcm_config_voice_call_ptr - 0x7532)
.text:00007528 01 27                         MOVS            R7, #1
.text:0000752A D4 F8 A8 30                   LDR.W           R3, [R4,#0xA8]
.text:0000752E 78 44                         ADD             R0, PC        ; pcm_config_voice_call_ptr
.text:00007530 00 68                         LDR             R0, [R0]      ; pcm_config_voice_call
.text:00007532 02 2B                         CMP             R3, #2
.text:00007534 40 68                         LDR             R0, [R0,#(dword_1105C - 0x11058)]
.text:00007536 18 BF                         IT NE
.text:00007538 4B F6 80 30                   MOVWNE          R0, #0xBB80
.text:0000753C 08 60                         STR             R0, [R1]
.text:0000753E 00 21                         MOVS            R1, #0
.text:00007540 11 60                         STR             R1, [R2]
.text:00007540
.text:00007542
.text:00007542                               loc_7542                      ; CODE XREF: sub_7344+26C↓j
.text:00007542 8D B1                         CBZ             R5, loc_7568
.text:00007542
.text:00007544 BA F1 00 0F                   CMP.W           R10, #0
.text:00007548 0E D1                         BNE             loc_7568
.text:00007548
.text:0000754A DF F8 B4 26                   LDR.W           R2, =(pcm_config_in_ptr - 0x7552)
.text:0000754E 7A 44                         ADD             R2, PC        ; pcm_config_in_ptr
.text:00007550 13 68                         LDR             R3, [R2]      ; pcm_config_in
.text:00007552 5A 68                         LDR             R2, [R3,#(off_11034 - 0x11030)] ; "bluetooth_nrec=%d"
.text:00007554 82 42                         CMP             R2, R0
.text:00007556 04 BF                         ITT EQ
.text:00007558 18 69                         LDREQ           R0, [R3,#(dword_11040 - 0x11030)]
.text:0000755A 88 42                         CMPEQ           R0, R1
.text:0000755C 04 D0                         BEQ             loc_7568
.text:0000755C
.text:0000755E 00 20                         MOVS            R0, #0
.text:00007560 C9 F8 78 20                   STR.W           R2, [R9,#0x78]
.text:00007564 C9 F8 84 00                   STR.W           R0, [R9,#0x84]
.text:00007564
.text:00007568
.text:00007568                               loc_7568                      ; CODE XREF: sub_7344:loc_7542↑j
.text:00007568                                                             ; sub_7344+204↑j
.text:00007568                                                             ; sub_7344+218↑j
.text:00007568 D9 F8 10 10                   LDR.W           R1, [R9,#0x10]
.text:0000756C 48 46                         MOV             R0, R9
.text:0000756E D9 F8 C0 50                   LDR.W           R5, [R9,#0xC0]
.text:00007572 88 47                         BLX             R1
.text:00007572
.text:00007574 00 F0 7F 41                   AND.W           R1, R0, #0xFF000000
.text:00007578 B1 F1 50 6F                   CMP.W           R1, #0xD000000
.text:0000757C 18 BF                         IT NE
.text:0000757E 00 29                         CMPNE           R1, #0
.text:00007580 0B D1                         BNE             loc_759A
.text:00007580
.text:00007582 41 1E                         SUBS            R1, R0, #1    ; switch 6 cases
.text:00007584 46 46                         MOV             R6, R8
.text:00007586 05 29                         CMP             R1, #5
.text:00007588 0B D8                         BHI             def_758A      ; jumptable 0000758A default case
.text:00007588
.text:0000758A DF E8 01 F0                   TBB.W           [PC,R1]       ; switch jump
.text:0000758A
.text:0000758A                               ; ---------------------------------------------------------------------------
.text:0000758E 0D                            jpt_758A DCB 0xD              ; jump table for switch statement
.text:0000758F 12                            DCB 0x12
.text:00007590 03                            DCB 3
.text:00007591 03                            DCB 3
.text:00007592 03                            DCB 3
.text:00007593 15                            DCB 0x15
.text:00007594                               ; ---------------------------------------------------------------------------
.text:00007594
.text:00007594                               loc_7594                      ; CODE XREF: sub_7344+246↑j
.text:00007594 4F F0 04 08                   MOV.W           R8, #4        ; jumptable 0000758A cases 3-5
.text:00007598 13 E0                         B               loc_75C2
.text:00007598
.text:0000759A                               ; ---------------------------------------------------------------------------
.text:0000759A
.text:0000759A                               loc_759A                      ; CODE XREF: sub_7344+23C↑j
.text:0000759A 08 94                         STR             R4, [SP,#0x88+var_68]
.text:0000759C 01 20                         MOVS            R0, #1
.text:0000759E 3C 46                         MOV             R4, R7
.text:000075A0 3B E0                         B               loc_761A
.text:000075A0
.text:000075A2                               ; ---------------------------------------------------------------------------
.text:000075A2
.text:000075A2                               def_758A                      ; CODE XREF: sub_7344+244↑j
.text:000075A2 B0 F1 50 6F                   CMP.W           R0, #0xD000000 ; jumptable 0000758A default case
.text:000075A6 0A D1                         BNE             loc_75BE
.text:000075A6
.text:000075A8
.text:000075A8                               loc_75A8                      ; CODE XREF: sub_7344+246↑j
.text:000075A8 4F F0 02 08                   MOV.W           R8, #2        ; jumptable 0000758A case 1
.text:000075AC 09 E0                         B               loc_75C2
.text:000075AC
.text:000075AE                               ; ---------------------------------------------------------------------------
.text:000075AE
.text:000075AE                               loc_75AE                      ; CODE XREF: sub_7344+1D6↑j
.text:000075AE 00 27                         MOVS            R7, #0
.text:000075B0 C7 E7                         B               loc_7542
.text:000075B0
.text:000075B2                               ; ---------------------------------------------------------------------------
.text:000075B2
.text:000075B2                               loc_75B2                      ; CODE XREF: sub_7344+246↑j
.text:000075B2 4F F0 01 08                   MOV.W           R8, #1        ; jumptable 0000758A case 2
.text:000075B6 04 E0                         B               loc_75C2
.text:000075B6
.text:000075B8                               ; ---------------------------------------------------------------------------
.text:000075B8
.text:000075B8                               loc_75B8                      ; CODE XREF: sub_7344+246↑j
.text:000075B8 4F F0 03 08                   MOV.W           R8, #3        ; jumptable 0000758A case 6
.text:000075BC 01 E0                         B               loc_75C2
.text:000075BC
.text:000075BE                               ; ---------------------------------------------------------------------------
.text:000075BE
.text:000075BE                               loc_75BE                      ; CODE XREF: sub_7344+262↑j
.text:000075BE 4F F0 00 08                   MOV.W           R8, #0
.text:000075BE
.text:000075C2
.text:000075C2                               loc_75C2                      ; CODE XREF: sub_7344+254↑j
.text:000075C2                                                             ; sub_7344+268↑j
.text:000075C2                                                             ; sub_7344+272↑j
.text:000075C2                                                             ; sub_7344+278↑j
.text:000075C2 D9 F8 0C 10                   LDR.W           R1, [R9,#0xC]
.text:000075C6 48 46                         MOV             R0, R9
.text:000075C8 08 94                         STR             R4, [SP,#0x88+var_68]
.text:000075CA 88 47                         BLX             R1
.text:000075CA
.text:000075CC 02 21                         MOVS            R1, #2
.text:000075CE B1 EB 90 7F                   CMP.W           R1, R0,LSR#30
.text:000075D2 05 D0                         BEQ             loc_75E0
.text:000075D2
.text:000075D4 81 0F                         LSRS            R1, R0, #0x1E
.text:000075D6 3C 46                         MOV             R4, R7
.text:000075D8 D1 B9                         CBNZ            R1, loc_7610
.text:000075D8
.text:000075DA 6F F3 9F 40                   BFC.W           R0, #0x12, #0xE
.text:000075DE 02 E0                         B               loc_75E6
.text:000075DE
.text:000075E0                               ; ---------------------------------------------------------------------------
.text:000075E0
.text:000075E0                               loc_75E0                      ; CODE XREF: sub_7344+28E↑j
.text:000075E0 20 F0 40 40                   BIC.W           R0, R0, #0xC0000000
.text:000075E4 3C 46                         MOV             R4, R7
.text:000075E4
.text:000075E6
.text:000075E6                               loc_75E6                      ; CODE XREF: sub_7344+29A↑j
.text:000075E6 4F F0 55 31                   MOV.W           R1, #0x55555555
.text:000075EA 01 EA 50 01                   AND.W           R1, R1, R0,LSR#1
.text:000075EE 40 1A                         SUBS            R0, R0, R1
.text:000075F0 4F F0 33 31                   MOV.W           R1, #0x33333333
.text:000075F4 01 EA 90 01                   AND.W           R1, R1, R0,LSR#2
.text:000075F8 20 F0 CC 30                   BIC.W           R0, R0, #0xCCCCCCCC
.text:000075FC 08 44                         ADD             R0, R1
.text:000075FE 4F F0 01 31                   MOV.W           R1, #0x1010101
.text:00007602 00 EB 10 10                   ADD.W           R0, R0, R0,LSR#4
.text:00007606 20 F0 F0 30                   BIC.W           R0, R0, #0xF0F0F0F0
.text:0000760A 48 43                         MULS            R0, R1
.text:0000760C 00 0E                         LSRS            R0, R0, #0x18
.text:0000760E 00 E0                         B               loc_7612
.text:0000760E
.text:00007610                               ; ---------------------------------------------------------------------------
.text:00007610
.text:00007610                               loc_7610                      ; CODE XREF: sub_7344+294↑j
.text:00007610 00 20                         MOVS            R0, #0
.text:00007610
.text:00007612
.text:00007612                               loc_7612                      ; CODE XREF: sub_7344+2CA↑j
.text:00007612 00 FB 08 F0                   MUL.W           R0, R0, R8
.text:00007616 B0 46                         MOV             R8, R6
.text:00007618 0E AE                         ADD             R6, SP, #0x88+var_50
.text:00007618
.text:0000761A
.text:0000761A                               loc_761A                      ; CODE XREF: sub_7344+25C↑j
.text:0000761A B5 FB F0 F0                   UDIV.W          R0, R5, R0
.text:0000761E 01 2C                         CMP             R4, #1
.text:00007620 C9 F8 7C 00                   STR.W           R0, [R9,#0x7C]
.text:00007624 D9 F8 80 10                   LDR.W           R1, [R9,#0x80]
.text:00007628 01 FB 00 F0                   MUL.W           R0, R1, R0
.text:0000762C 09 F1 74 01                   ADD.W           R1, R9, #0x74 ; 't'
.text:00007630 07 91                         STR             R1, [SP,#0x88+var_6C]
.text:00007632 C9 F8 88 00                   STR.W           R0, [R9,#0x88]
.text:00007636 30 46                         MOV             R0, R6
.text:00007638 EC C9                         LDM             R1!, {R2,R3,R5-R7}
.text:0000763A EC C0                         STM             R0!, {R2,R3,R5-R7}
.text:0000763C 91 E8 EC 00                   LDM.W           R1, {R2,R3,R5-R7}
.text:00007640 EC C0                         STM             R0!, {R2,R3,R5-R7}
.text:00007642 4F F4 80 50                   MOV.W           R0, #0x1000
.text:00007646 10 90                         STR             R0, [SP,#0x88+var_48]
.text:00007648 2C D1                         BNE             loc_76A4
.text:00007648
.text:0000764A D9 F8 78 10                   LDR.W           R1, [R9,#0x78]
.text:0000764E 00 25                         MOVS            R5, #0
.text:00007650 D9 F8 84 20                   LDR.W           R2, [R9,#0x84]
.text:00007654 D9 F8 9C 30                   LDR.W           R3, [R9,#0x9C]
.text:00007658 CD E9 00 53                   STRD.W          R5, R3, [SP,#0x88+var_88]
.text:0000765C CD E9 02 12                   STRD.W          R1, R2, [SP,#0x88+var_80]
.text:00007660 DF F8 A0 15                   LDR.W           R1, =(aAudioHwPrimary - 0x7670) ; "audio_hw_primary"
.text:00007664 DF F8 A0 25                   LDR.W           R2, =(aSPrimaryPcmOpe - 0x7674) ; "%s(): primary: pcm_open card=%d, device"...
.text:00007668 DF F8 A0 35                   LDR.W           R3, =(aStartOutputStr - 0x7676) ; "start_output_stream"
.text:0000766C 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000766E 04 90                         STR             R0, [SP,#0x88+var_78]
.text:00007670 7A 44                         ADD             R2, PC        ; "%s(): primary: pcm_open card=%d, device"...
.text:00007672 7B 44                         ADD             R3, PC        ; "start_output_stream"
.text:00007674 03 20                         MOVS            R0, #3
.text:00007676 FB F7 B0 EC                   BLX             __android_log_print
.text:00007676
.text:0000767A D9 F8 9C 10                   LDR.W           R1, [R9,#0x9C]
.text:0000767E 0E AB                         ADD             R3, SP, #0x88+var_50
.text:00007680 00 20                         MOVS            R0, #0
.text:00007682 08 22                         MOVS            R2, #8
.text:00007684 FB F7 E4 EC                   BLX             pcm_open
.text:00007684
.text:00007688 C9 F8 68 00                   STR.W           R0, [R9,#0x68]
.text:0000768C 38 B1                         CBZ             R0, loc_769E
.text:0000768C
.text:0000768E 09 F1 68 07                   ADD.W           R7, R9, #0x68 ; 'h'
.text:00007692 FB F7 E4 EC                   BLX             pcm_is_ready
.text:00007692
.text:00007696 3D 68                         LDR             R5, [R7]
.text:00007698 00 28                         CMP             R0, #0
.text:0000769A 00 F0 D5 80                   BEQ.W           loc_7848
.text:0000769A
.text:0000769E
.text:0000769E                               loc_769E                      ; CODE XREF: sub_7344+348↑j
.text:0000769E 28 46                         MOV             R0, R5
.text:000076A0 FB F7 E2 EC                   BLX             pcm_prepare
.text:000076A0
.text:000076A4
.text:000076A4                               loc_76A4                      ; CODE XREF: sub_7344+304↑j
.text:000076A4 BA F1 01 0F                   CMP.W           R10, #1
.text:000076A8 DD E9 08 4A                   LDRD.W          R4, R10, [SP,#0x88+var_68]
.text:000076AC 5A D1                         BNE             loc_7764
.text:000076AC
.text:000076AE D9 F8 84 00                   LDR.W           R0, [R9,#0x84]
.text:000076B2 08 B1                         CBZ             R0, loc_76B8
.text:000076B2
.text:000076B4 10 99                         LDR             R1, [SP,#0x88+var_48]
.text:000076B6 2B E0                         B               loc_7710
.text:000076B6
.text:000076B8                               ; ---------------------------------------------------------------------------
.text:000076B8
.text:000076B8                               loc_76B8                      ; CODE XREF: sub_7344+36E↑j
.text:000076B8 DF F8 60 15                   LDR.W           R1, =(pcm_config_ptr - 0x76C8)
.text:000076BC 03 20                         MOVS            R0, #3
.text:000076BE C9 F8 84 00                   STR.W           R0, [R9,#0x84]
.text:000076C2 01 20                         MOVS            R0, #1
.text:000076C4 79 44                         ADD             R1, PC        ; pcm_config_ptr
.text:000076C6 84 F8 3A 01                   STRB.W          R0, [R4,#0x13A]
.text:000076CA 09 68                         LDR             R1, [R1]      ; pcm_config
.text:000076CC D1 E9 02 01                   LDRD.W          R0, R1, [R1,#8]
.text:000076D0 48 43                         MULS            R0, R1
.text:000076D2 80 00                         LSLS            R0, R0, #2    ; size
.text:000076D4 FB F7 1C ED                   BLX             malloc
.text:000076D4
.text:000076D8 C4 F8 3C 01                   STR.W           R0, [R4,#0x13C]
.text:000076DC 00 28                         CMP             R0, #0
.text:000076DE 00 F0 F8 80                   BEQ.W           loc_78D2
.text:000076DE
.text:000076E2 DF F8 3C 15                   LDR.W           R1, =(pcm_config_ptr - 0x76EA)
.text:000076E6 79 44                         ADD             R1, PC        ; pcm_config_ptr
.text:000076E8 09 68                         LDR             R1, [R1]      ; pcm_config
.text:000076EA D1 E9 02 12                   LDRD.W          R1, R2, [R1,#8]
.text:000076EE 51 43                         MULS            R1, R2
.text:000076F0 89 00                         LSLS            R1, R1, #2
.text:000076F2 FB F7 34 EE                   BLX             __aeabi_memclr
.text:000076F2
.text:000076F6 07 98                         LDR             R0, [SP,#0x88+var_6C]
.text:000076F8 0E A9                         ADD             R1, SP, #0x88+var_50
.text:000076FA 0D 46                         MOV             R5, R1
.text:000076FC CE C8                         LDM             R0!, {R1-R3,R6,R7}
.text:000076FE CE C5                         STM             R5!, {R1-R3,R6,R7}
.text:00007700 90 E8 CE 00                   LDM.W           R0, {R1-R3,R6,R7}
.text:00007704 CE C5                         STM             R5!, {R1-R3,R6,R7}
.text:00007706 4F F4 80 51                   MOV.W           R1, #0x1000
.text:0000770A 10 91                         STR             R1, [SP,#0x88+var_48]
.text:0000770C D9 F8 84 00                   LDR.W           R0, [R9,#0x84]
.text:0000770C
.text:00007710
.text:00007710                               loc_7710                      ; CODE XREF: sub_7344+372↑j
.text:00007710 D9 F8 78 20                   LDR.W           R2, [R9,#0x78]
.text:00007714 00 25                         MOVS            R5, #0
.text:00007716 01 26                         MOVS            R6, #1
.text:00007718 DF F8 10 35                   LDR.W           R3, =(aStartOutputStr - 0x7724) ; "start_output_stream"
.text:0000771C CD E9 00 65                   STRD.W          R6, R5, [SP,#0x88+var_88]
.text:00007720 7B 44                         ADD             R3, PC        ; "start_output_stream"
.text:00007722 CD E9 02 20                   STRD.W          R2, R0, [SP,#0x88+var_80]
.text:00007726 03 20                         MOVS            R0, #3
.text:00007728 DF F8 FC 24                   LDR.W           R2, =(aSHifiPcmOpenCa - 0x7736) ; "%s(): hifi: pcm_open card=%d, device=%d"...
.text:0000772C 04 91                         STR             R1, [SP,#0x88+var_78]
.text:0000772E DF F8 F4 14                   LDR.W           R1, =(aAudioHwPrimary - 0x7738) ; "audio_hw_primary"
.text:00007732 7A 44                         ADD             R2, PC        ; "%s(): hifi: pcm_open card=%d, device=%d"...
.text:00007734 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00007736 FB F7 50 EC                   BLX             __android_log_print
.text:00007736
.text:0000773A 0E AB                         ADD             R3, SP, #0x88+var_50
.text:0000773C 01 20                         MOVS            R0, #1
.text:0000773E 00 21                         MOVS            R1, #0
.text:00007740 08 22                         MOVS            R2, #8
.text:00007742 FB F7 86 EC                   BLX             pcm_open
.text:00007742
.text:00007746 C9 F8 6C 00                   STR.W           R0, [R9,#0x6C]
.text:0000774A 30 B1                         CBZ             R0, loc_775A
.text:0000774A
.text:0000774C FB F7 86 EC                   BLX             pcm_is_ready
.text:0000774C
.text:00007750 D9 F8 6C 50                   LDR.W           R5, [R9,#0x6C]
.text:00007754 00 28                         CMP             R0, #0
.text:00007756 00 F0 8A 80                   BEQ.W           loc_786E
.text:00007756
.text:0000775A
.text:0000775A                               loc_775A                      ; CODE XREF: sub_7344+406↑j
.text:0000775A 28 46                         MOV             R0, R5
.text:0000775C FB F7 84 EC                   BLX             pcm_prepare
.text:0000775C
.text:00007760 84 F8 21 61                   STRB.W          R6, [R4,#0x121]
.text:00007760
.text:00007764
.text:00007764                               loc_7764                      ; CODE XREF: sub_7344+368↑j
.text:00007764 94 F8 AD 00                   LDRB.W          R0, [R4,#0xAD]
.text:00007768 10 F0 10 0F                   TST.W           R0, #0x10
.text:0000776C 21 D0                         BEQ             loc_77B2
.text:0000776C
.text:0000776E D9 F8 9C 10                   LDR.W           R1, [R9,#0x9C]
.text:00007772 02 22                         MOVS            R2, #2
.text:00007774 D9 F8 78 00                   LDR.W           R0, [R9,#0x78]
.text:00007778 DF F8 C8 34                   LDR.W           R3, =(aStartOutputStr - 0x7784) ; "start_output_stream"
.text:0000777C CD E9 00 21                   STRD.W          R2, R1, [SP,#0x88+var_88]
.text:00007780 7B 44                         ADD             R3, PC        ; "start_output_stream"
.text:00007782 DF F8 B8 14                   LDR.W           R1, =(aAudioHwPrimary - 0x7790) ; "audio_hw_primary"
.text:00007786 DF F8 B8 24                   LDR.W           R2, =(aSSpdifPcmOpenC - 0x7792) ; "%s(): spdif: pcm_open card=%d, device=%"...
.text:0000778A 02 90                         STR             R0, [SP,#0x88+var_80]
.text:0000778C 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000778E 7A 44                         ADD             R2, PC        ; "%s(): spdif: pcm_open card=%d, device=%"...
.text:00007790 02 20                         MOVS            R0, #2
.text:00007792 FB F7 22 EC                   BLX             __android_log_print
.text:00007792
.text:00007796 D9 F8 9C 10                   LDR.W           R1, [R9,#0x9C]
.text:0000779A 02 20                         MOVS            R0, #2
.text:0000779C 07 9B                         LDR             R3, [SP,#0x88+var_6C]
.text:0000779E 08 22                         MOVS            R2, #8
.text:000077A0 FB F7 56 EC                   BLX             pcm_open
.text:000077A0
.text:000077A4 C9 F8 70 00                   STR.W           R0, [R9,#0x70]
.text:000077A8 18 B1                         CBZ             R0, loc_77B2
.text:000077A8
.text:000077AA FB F7 58 EC                   BLX             pcm_is_ready
.text:000077AA
.text:000077AE 00 28                         CMP             R0, #0
.text:000077B0 6E D0                         BEQ             loc_7890
.text:000077B0
.text:000077B2
.text:000077B2                               loc_77B2                      ; CODE XREF: sub_7344+428↑j
.text:000077B2                                                             ; sub_7344+464↑j
.text:000077B2 D4 F8 A8 00                   LDR.W           R0, [R4,#0xA8]
.text:000077B6 02 28                         CMP             R0, #2
.text:000077B8 04 BF                         ITT EQ
.text:000077BA 04 20                         MOVEQ           R0, #4
.text:000077BC C4 F8 C8 00                   STREQ.W         R0, [R4,#0xC8]
.text:000077C0 20 46                         MOV             R0, R4
.text:000077C2 FD F7 B5 FF                   BL              sub_5730
.text:000077C2
.text:000077C6 D9 F8 78 00                   LDR.W           R0, [R9,#0x78]
.text:000077CA D9 F8 B8 10                   LDR.W           R1, [R9,#0xB8]
.text:000077CE 88 42                         CMP             R0, R1
.text:000077D0 00 F0 98 80                   BEQ.W           loc_7904
.text:000077D0
.text:000077D4 CD E9 00 10                   STRD.W          R1, R0, [SP,#0x88+var_88]
.text:000077D8 03 20                         MOVS            R0, #3
.text:000077DA DF F8 78 14                   LDR.W           R1, =(aAudioHwPrimary - 0x77EA) ; "audio_hw_primary"
.text:000077DE DF F8 78 24                   LDR.W           R2, =(aSCreateResampl - 0x77EC) ; "%s(): create_resampler: (%d >> %d)"
.text:000077E2 DF F8 78 34                   LDR.W           R3, =(aStartOutputStr - 0x77EE) ; "start_output_stream"
.text:000077E6 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000077E8 7A 44                         ADD             R2, PC        ; "%s(): create_resampler: (%d >> %d)"
.text:000077EA 7B 44                         ADD             R3, PC        ; "start_output_stream"
.text:000077EC FB F7 F4 EB                   BLX             __android_log_print
.text:000077EC
.text:000077F0 DF F8 6C 04                   LDR.W           R0, =(pcm_config_ptr - 0x77F8)
.text:000077F4 78 44                         ADD             R0, PC        ; pcm_config_ptr
.text:000077F6 00 68                         LDR             R0, [R0]      ; pcm_config
.text:000077F8 D0 E9 02 01                   LDRD.W          R0, R1, [R0,#8]
.text:000077FC 48 43                         MULS            R0, R1
.text:000077FE 80 00                         LSLS            R0, R0, #2    ; size
.text:00007800 FB F7 86 EC                   BLX             malloc
.text:00007800
.text:00007804 C9 F8 C8 00                   STR.W           R0, [R9,#0xC8]
.text:00007808 00 28                         CMP             R0, #0
.text:0000780A 52 D0                         BEQ             loc_78B2
.text:0000780A
.text:0000780C DF F8 54 14                   LDR.W           R1, =(pcm_config_ptr - 0x7814)
.text:00007810 79 44                         ADD             R1, PC        ; pcm_config_ptr
.text:00007812 09 68                         LDR             R1, [R1]      ; pcm_config
.text:00007814 D1 E9 02 12                   LDRD.W          R1, R2, [R1,#8]
.text:00007818 51 43                         MULS            R1, R2
.text:0000781A 89 00                         LSLS            R1, R1, #2
.text:0000781C FB F7 9E ED                   BLX             __aeabi_memclr
.text:0000781C
.text:00007820 D9 F8 78 10                   LDR.W           R1, [R9,#0x78]
.text:00007824 09 F1 C4 05                   ADD.W           R5, R9, #0xC4
.text:00007828 D9 F8 B8 00                   LDR.W           R0, [R9,#0xB8]
.text:0000782C 00 22                         MOVS            R2, #0
.text:0000782E CD E9 00 25                   STRD.W          R2, R5, [SP,#0x88+var_88]
.text:00007832 02 22                         MOVS            R2, #2
.text:00007834 04 23                         MOVS            R3, #4
.text:00007836 FB F7 98 ED                   BLX             create_resampler
.text:00007836
.text:0000783A 00 28                         CMP             R0, #0
.text:0000783C 5F D0                         BEQ             loc_78FE
.text:0000783C
.text:0000783E D9 F8 C8 00                   LDR.W           R0, [R9,#0xC8] ; ptr
.text:00007842 FB F7 72 EC                   BLX             free
.text:00007842
.text:00007846 34 E0                         B               loc_78B2
.text:00007846
.text:00007848                               ; ---------------------------------------------------------------------------
.text:00007848
.text:00007848                               loc_7848                      ; CODE XREF: sub_7344+356↑j
.text:00007848 28 46                         MOV             R0, R5
.text:0000784A FB F7 2C EC                   BLX             pcm_get_error
.text:0000784A
.text:0000784E DF F8 C0 13                   LDR.W           R1, =(aAudioHwPrimary - 0x785E) ; "audio_hw_primary"
.text:00007852 DF F8 C0 23                   LDR.W           R2, =(aSPcmOpenPcmCar - 0x7862) ; "%s(): pcm_open(PCM_CARD_PRIMARY) failed"...
.text:00007856 DF F8 C0 33                   LDR.W           R3, =(aStartOutputStr - 0x7864) ; "start_output_stream"
.text:0000785A 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000785C 00 90                         STR             R0, [SP,#0x88+var_88]
.text:0000785E 7A 44                         ADD             R2, PC        ; "%s(): pcm_open(PCM_CARD_PRIMARY) failed"...
.text:00007860 7B 44                         ADD             R3, PC        ; "start_output_stream"
.text:00007862 06 20                         MOVS            R0, #6
.text:00007864 FB F7 B8 EB                   BLX             __android_log_print
.text:00007864
.text:00007868 DD E9 08 4A                   LDRD.W          R4, R10, [SP,#0x88+var_68]
.text:0000786C 37 E0                         B               loc_78DE
.text:0000786C
.text:0000786E                               ; ---------------------------------------------------------------------------
.text:0000786E
.text:0000786E                               loc_786E                      ; CODE XREF: sub_7344+412↑j
.text:0000786E 28 46                         MOV             R0, R5
.text:00007870 FB F7 18 EC                   BLX             pcm_get_error
.text:00007870
.text:00007874 DF F8 B8 13                   LDR.W           R1, =(aAudioHwPrimary - 0x7884) ; "audio_hw_primary"
.text:00007878 DF F8 B8 23                   LDR.W           R2, =(aSPcmOpenPcmCar_0 - 0x7888) ; "%s(): pcm_open(PCM_CARD_HIFI) failed: %"...
.text:0000787C DF F8 B8 33                   LDR.W           R3, =(aStartOutputStr - 0x788A) ; "start_output_stream"
.text:00007880 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00007882 00 90                         STR             R0, [SP,#0x88+var_88]
.text:00007884 7A 44                         ADD             R2, PC        ; "%s(): pcm_open(PCM_CARD_HIFI) failed: %"...
.text:00007886 7B 44                         ADD             R3, PC        ; "start_output_stream"
.text:00007888 06 20                         MOVS            R0, #6
.text:0000788A FB F7 A6 EB                   BLX             __android_log_print
.text:0000788A
.text:0000788E 18 E0                         B               loc_78C2
.text:0000788E
.text:00007890                               ; ---------------------------------------------------------------------------
.text:00007890
.text:00007890                               loc_7890                      ; CODE XREF: sub_7344+46C↑j
.text:00007890 D9 F8 70 00                   LDR.W           R0, [R9,#0x70]
.text:00007894 FB F7 06 EC                   BLX             pcm_get_error
.text:00007894
.text:00007898 DF F8 AC 13                   LDR.W           R1, =(aAudioHwPrimary - 0x78A8) ; "audio_hw_primary"
.text:0000789C DF F8 AC 23                   LDR.W           R2, =(aSPcmOpenPcmCar_1 - 0x78AC) ; "%s(): pcm_open(PCM_CARD_SPDIF) failed: "...
.text:000078A0 DF F8 AC 33                   LDR.W           R3, =(aStartOutputStr - 0x78AE) ; "start_output_stream"
.text:000078A4 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000078A6 00 90                         STR             R0, [SP,#0x88+var_88]
.text:000078A8 7A 44                         ADD             R2, PC        ; "%s(): pcm_open(PCM_CARD_SPDIF) failed: "...
.text:000078AA 7B 44                         ADD             R3, PC        ; "start_output_stream"
.text:000078AC 06 20                         MOVS            R0, #6
.text:000078AE FB F7 94 EB                   BLX             __android_log_print
.text:000078AE
.text:000078B2
.text:000078B2                               loc_78B2                      ; CODE XREF: sub_7344+4C6↑j
.text:000078B2                                                             ; sub_7344+502↑j
.text:000078B2 D9 F8 70 00                   LDR.W           R0, [R9,#0x70]
.text:000078B6 20 B1                         CBZ             R0, loc_78C2
.text:000078B6
.text:000078B8 FB F7 FA EB                   BLX             pcm_close
.text:000078B8
.text:000078BC 00 20                         MOVS            R0, #0
.text:000078BE C9 F8 70 00                   STR.W           R0, [R9,#0x70]
.text:000078BE
.text:000078C2
.text:000078C2                               loc_78C2                      ; CODE XREF: sub_7344+54A↑j
.text:000078C2                                                             ; sub_7344+572↑j
.text:000078C2 D9 F8 6C 00                   LDR.W           R0, [R9,#0x6C]
.text:000078C6 20 B1                         CBZ             R0, loc_78D2
.text:000078C6
.text:000078C8 FB F7 F2 EB                   BLX             pcm_close
.text:000078C8
.text:000078CC 00 20                         MOVS            R0, #0
.text:000078CE C9 F8 6C 00                   STR.W           R0, [R9,#0x6C]
.text:000078CE
.text:000078D2
.text:000078D2                               loc_78D2                      ; CODE XREF: sub_7344+39A↑j
.text:000078D2                                                             ; sub_7344+582↑j
.text:000078D2 D4 F8 3C 01                   LDR.W           R0, [R4,#0x13C] ; ptr
.text:000078D6 FB F7 28 EC                   BLX             free
.text:000078D6
.text:000078DA 09 F1 68 07                   ADD.W           R7, R9, #0x68 ; 'h'
.text:000078DA
.text:000078DE
.text:000078DE                               loc_78DE                      ; CODE XREF: sub_7344+528↑j
.text:000078DE 38 68                         LDR             R0, [R7]
.text:000078E0 18 B1                         CBZ             R0, loc_78EA
.text:000078E0
.text:000078E2 FB F7 E6 EB                   BLX             pcm_close
.text:000078E2
.text:000078E6 00 20                         MOVS            R0, #0
.text:000078E8 38 60                         STR             R0, [R7]
.text:000078E8
.text:000078EA
.text:000078EA                               loc_78EA                      ; CODE XREF: sub_7344+59C↑j
.text:000078EA 00 20                         MOVS            R0, #0
.text:000078EC C4 F8 00 01                   STR.W           R0, [R4,#0x100]
.text:000078F0 50 46                         MOV             R0, R10       ; mutex
.text:000078F2 FB F7 A8 EB                   BLX             pthread_mutex_unlock
.text:000078F2
.text:000078F6 0A 98                         LDR             R0, [SP,#0x88+mutex] ; mutex
.text:000078F8 FB F7 A4 EB                   BLX             pthread_mutex_unlock
.text:000078F8
.text:000078FC 0E E1                         B               loc_7B1C
.text:000078FC
.text:000078FE                               ; ---------------------------------------------------------------------------
.text:000078FE
.text:000078FE                               loc_78FE                      ; CODE XREF: sub_7344+4F8↑j
.text:000078FE 28 68                         LDR             R0, [R5]
.text:00007900 01 68                         LDR             R1, [R0]
.text:00007902 88 47                         BLX             R1
.text:00007902
.text:00007904
.text:00007904                               loc_7904                      ; CODE XREF: sub_7344+48C↑j
.text:00007904 06 9C                         LDR             R4, [SP,#0x88+var_70]
.text:00007906 00 20                         MOVS            R0, #0
.text:00007908 89 F8 A0 00                   STRB.W          R0, [R9,#0xA0]
.text:00007908
.text:0000790C
.text:0000790C                               loc_790C                      ; CODE XREF: sub_7344+E4↑j
.text:0000790C 50 46                         MOV             R0, R10       ; mutex
.text:0000790E FB F7 9A EB                   BLX             pthread_mutex_unlock
.text:0000790E
.text:00007912 D5 48                         LDR             R0, =(aSdcardAndroidL - 0x791E) ; "/sdcard/Android/log/audio_dump/audio_hw"...
.text:00007914 41 46                         MOV             R1, R8
.text:00007916 D5 4B                         LDR             R3, =(aAudioHwPcmDump - 0x7920) ; "audio.hw.pcm.dump"
.text:00007918 0B 9A                         LDR             R2, [SP,#0x88+var_5C]
.text:0000791A 78 44                         ADD             R0, PC        ; "/sdcard/Android/log/audio_dump/audio_hw"...
.text:0000791C 7B 44                         ADD             R3, PC        ; "audio.hw.pcm.dump"
.text:0000791E FB F7 2A ED                   BLX             j_pcm_data_dump
.text:0000791E
.text:00007922 D9 F8 BC 10                   LDR.W           R1, [R9,#0xBC]
.text:00007926 01 29                         CMP             R1, #1
.text:00007928 2B D0                         BEQ             loc_7982
.text:00007928
.text:0000792A D9 F8 84 00                   LDR.W           R0, [R9,#0x84]
.text:0000792E 40 BB                         CBNZ            R0, loc_7982
.text:0000792E
.text:00007930 10 20                         MOVS            R0, #0x10
.text:00007932 04 29                         CMP             R1, #4
.text:00007934 08 BF                         IT EQ
.text:00007936 08 20                         MOVEQ           R0, #8
.text:00007938 0B 9A                         LDR             R2, [SP,#0x88+var_5C]
.text:0000793A 00 21                         MOVS            R1, #0
.text:0000793C B1 EB 92 0F                   CMP.W           R1, R2,LSR#2
.text:00007940 0C D0                         BEQ             loc_795C
.text:00007940
.text:00007942 0B 99                         LDR             R1, [SP,#0x88+var_5C]
.text:00007944 00 22                         MOVS            R2, #0
.text:00007946 4F EA 91 01                   MOV.W           R1, R1,LSR#2
.text:00007946
.text:0000794A
.text:0000794A                               loc_794A                      ; CODE XREF: sub_7344+616↓j
.text:0000794A 58 F8 22 30                   LDR.W           R3, [R8,R2,LSL#2]
.text:0000794E 43 FA 00 F3                   ASR.W           R3, R3, R0
.text:00007952 28 F8 12 30                   STRH.W          R3, [R8,R2,LSL#1]
.text:00007956 01 32                         ADDS            R2, #1
.text:00007958 91 42                         CMP             R1, R2
.text:0000795A F6 D1                         BNE             loc_794A
.text:0000795A
.text:0000795C
.text:0000795C                               loc_795C                      ; CODE XREF: sub_7344+5FC↑j
.text:0000795C C4 48                         LDR             R0, =(pcm_config_ptr - 0x7966)
.text:0000795E 64 08                         LSRS            R4, R4, #1
.text:00007960 0B 99                         LDR             R1, [SP,#0x88+var_5C]
.text:00007962 78 44                         ADD             R0, PC        ; pcm_config_ptr
.text:00007964 00 68                         LDR             R0, [R0]      ; pcm_config
.text:00007966 4F EA 51 01                   MOV.W           R1, R1,LSR#1
.text:0000796A B1 FB F4 F1                   UDIV.W          R1, R1, R4
.text:0000796E 0D 91                         STR             R1, [SP,#0x88+var_54]
.text:00007970 D0 E9 02 01                   LDRD.W          R0, R1, [R0,#8]
.text:00007974 01 FB 00 F0                   MUL.W           R0, R1, R0
.text:00007978 4F EA 80 00                   MOV.W           R0, R0,LSL#2
.text:0000797C B0 FB F4 F0                   UDIV.W          R0, R0, R4
.text:00007980 0C 90                         STR             R0, [SP,#0x88+var_58]
.text:00007980
.text:00007982
.text:00007982                               loc_7982                      ; CODE XREF: sub_7344+5E4↑j
.text:00007982                                                             ; sub_7344+5EA↑j
.text:00007982 9B F8 3A 01                   LDRB.W          R0, [R11,#0x13A]
.text:00007986 00 28                         CMP             R0, #0
.text:00007988 48 D0                         BEQ             loc_7A1C
.text:00007988
.text:0000798A 9B F8 21 01                   LDRB.W          R0, [R11,#0x121]
.text:0000798E 00 28                         CMP             R0, #0
.text:00007990 44 D0                         BEQ             loc_7A1C
.text:00007990
.text:00007992 0B 99                         LDR             R1, [SP,#0x88+var_5C]
.text:00007994 00 20                         MOVS            R0, #0
.text:00007996 B0 EB 51 0F                   CMP.W           R0, R1,LSR#1
.text:0000799A 2C D0                         BEQ             loc_79F6
.text:0000799A
.text:0000799C 0B 99                         LDR             R1, [SP,#0x88+var_5C]
.text:0000799E FF 22                         MOVS            R2, #0xFF
.text:000079A0 00 23                         MOVS            R3, #0
.text:000079A2 4F EA 51 01                   MOV.W           R1, R1,LSR#1
.text:000079A2
.text:000079A6
.text:000079A6                               loc_79A6                      ; CODE XREF: sub_7344+6B0↓j
.text:000079A6 38 F9 13 70                   LDRSH.W         R7, [R8,R3,LSL#1]
.text:000079AA DB F8 3C 61                   LDR.W           R6, [R11,#0x13C]
.text:000079AE 06 EB 83 06                   ADD.W           R6, R6, R3,LSL#2
.text:000079B2 C7 EB C7 17                   RSB.W           R7, R7, R7,LSL#7
.text:000079B6 FD 09                         LSRS            R5, R7, #7
.text:000079B8 75 70                         STRB            R5, [R6,#1]
.text:000079BA 4F EA D7 35                   MOV.W           R5, R7,LSR#15
.text:000079BE 4F EA 47 07                   MOV.W           R7, R7,LSL#1
.text:000079C2 DB F8 3C 61                   LDR.W           R6, [R11,#0x13C]
.text:000079C6 06 EB 83 06                   ADD.W           R6, R6, R3,LSL#2
.text:000079CA B5 70                         STRB            R5, [R6,#2]
.text:000079CC 08 EB 43 05                   ADD.W           R5, R8, R3,LSL#1
.text:000079D0 DB F8 3C 61                   LDR.W           R6, [R11,#0x13C]
.text:000079D4 95 F9 01 50                   LDRSB.W         R5, [R5,#1]
.text:000079D8 06 EB 83 06                   ADD.W           R6, R6, R3,LSL#2
.text:000079DC B5 F1 FF 3F                   CMP.W           R5, #0xFFFFFFFF
.text:000079E0 01 DD                         BLE             loc_79E6
.text:000079E0
.text:000079E2 F0 70                         STRB            R0, [R6,#3]
.text:000079E4 00 E0                         B               loc_79E8
.text:000079E4
.text:000079E6                               ; ---------------------------------------------------------------------------
.text:000079E6
.text:000079E6                               loc_79E6                      ; CODE XREF: sub_7344+69C↑j
.text:000079E6 F2 70                         STRB            R2, [R6,#3]
.text:000079E6
.text:000079E8
.text:000079E8                               loc_79E8                      ; CODE XREF: sub_7344+6A0↑j
.text:000079E8 DB F8 3C 61                   LDR.W           R6, [R11,#0x13C]
.text:000079EC 06 F8 23 70                   STRB.W          R7, [R6,R3,LSL#2]
.text:000079F0 01 33                         ADDS            R3, #1
.text:000079F2 99 42                         CMP             R1, R3
.text:000079F4 D7 D1                         BNE             loc_79A6
.text:000079F4
.text:000079F6
.text:000079F6                               loc_79F6                      ; CODE XREF: sub_7344+656↑j
.text:000079F6 9F 48                         LDR             R0, =(pcm_config_ptr - 0x7A00)
.text:000079F8 64 00                         LSLS            R4, R4, #1
.text:000079FA 0B 99                         LDR             R1, [SP,#0x88+var_5C]
.text:000079FC 78 44                         ADD             R0, PC        ; pcm_config_ptr
.text:000079FE 00 68                         LDR             R0, [R0]      ; pcm_config
.text:00007A00 4F EA 41 01                   MOV.W           R1, R1,LSL#1
.text:00007A04 B1 FB F4 F1                   UDIV.W          R1, R1, R4
.text:00007A08 0D 91                         STR             R1, [SP,#0x88+var_54]
.text:00007A0A D0 E9 02 01                   LDRD.W          R0, R1, [R0,#8]
.text:00007A0E 01 FB 00 F0                   MUL.W           R0, R1, R0
.text:00007A12 4F EA 80 00                   MOV.W           R0, R0,LSL#2
.text:00007A16 B0 FB F4 F0                   UDIV.W          R0, R0, R4
.text:00007A1A 0C 90                         STR             R0, [SP,#0x88+var_58]
.text:00007A1A
.text:00007A1C
.text:00007A1C                               loc_7A1C                      ; CODE XREF: sub_7344+644↑j
.text:00007A1C                                                             ; sub_7344+64C↑j
.text:00007A1C D9 F8 C4 00                   LDR.W           R0, [R9,#0xC4]
.text:00007A20 98 B1                         CBZ             R0, loc_7A4A
.text:00007A20
.text:00007A22 9B F8 3A 11                   LDRB.W          R1, [R11,#0x13A]
.text:00007A26 21 B1                         CBZ             R1, loc_7A32
.text:00007A26
.text:00007A28 9B F8 21 11                   LDRB.W          R1, [R11,#0x121]
.text:00007A2C 09 B1                         CBZ             R1, loc_7A32
.text:00007A2C
.text:00007A2E DB F8 3C 81                   LDR.W           R8, [R11,#0x13C]
.text:00007A2E
.text:00007A32
.text:00007A32                               loc_7A32                      ; CODE XREF: sub_7344+6E2↑j
.text:00007A32                                                             ; sub_7344+6E8↑j
.text:00007A32 D9 F8 C8 30                   LDR.W           R3, [R9,#0xC8]
.text:00007A36 0C A9                         ADD             R1, SP, #0x88+var_58
.text:00007A38 87 68                         LDR             R7, [R0,#8]
.text:00007A3A 0D AA                         ADD             R2, SP, #0x88+var_54
.text:00007A3C 00 91                         STR             R1, [SP,#0x88+var_88]
.text:00007A3E 41 46                         MOV             R1, R8
.text:00007A40 B8 47                         BLX             R7
.text:00007A40
.text:00007A42 D9 F8 C8 80                   LDR.W           R8, [R9,#0xC8]
.text:00007A46 0C 98                         LDR             R0, [SP,#0x88+var_58]
.text:00007A48 09 E0                         B               loc_7A5E
.text:00007A48
.text:00007A4A                               ; ---------------------------------------------------------------------------
.text:00007A4A
.text:00007A4A                               loc_7A4A                      ; CODE XREF: sub_7344+6DC↑j
.text:00007A4A 0D 98                         LDR             R0, [SP,#0x88+var_54]
.text:00007A4C 0C 90                         STR             R0, [SP,#0x88+var_58]
.text:00007A4E 9B F8 3A 11                   LDRB.W          R1, [R11,#0x13A]
.text:00007A52 21 B1                         CBZ             R1, loc_7A5E
.text:00007A52
.text:00007A54 9B F8 21 11                   LDRB.W          R1, [R11,#0x121]
.text:00007A58 09 B1                         CBZ             R1, loc_7A5E
.text:00007A58
.text:00007A5A DB F8 3C 81                   LDR.W           R8, [R11,#0x13C]
.text:00007A5A
.text:00007A5E
.text:00007A5E                               loc_7A5E                      ; CODE XREF: sub_7344+704↑j
.text:00007A5E                                                             ; sub_7344+70E↑j
.text:00007A5E                                                             ; sub_7344+714↑j
.text:00007A5E 00 FB 04 F2                   MUL.W           R2, R0, R4
.text:00007A62 85 48                         LDR             R0, =(aSdcardAndroidL_0 - 0x7A6C) ; "/sdcard/Android/log/audio_dump/audio_hw"...
.text:00007A64 85 4B                         LDR             R3, =(aAudioHwPcmDump - 0x7A70) ; "audio.hw.pcm.dump"
.text:00007A66 41 46                         MOV             R1, R8
.text:00007A68 78 44                         ADD             R0, PC        ; "/sdcard/Android/log/audio_dump/audio_hw"...
.text:00007A6A 4F 46                         MOV             R7, R9
.text:00007A6C 7B 44                         ADD             R3, PC        ; "audio.hw.pcm.dump"
.text:00007A6E C1 46                         MOV             R9, R8
.text:00007A70 FB F7 80 EC                   BLX             j_pcm_data_dump
.text:00007A70
.text:00007A74 82 4E                         LDR             R6, =(aOutWrite - 0x7A84) ; "out_write"
.text:00007A76 07 F1 68 0B                   ADD.W           R11, R7, #0x68 ; 'h'
.text:00007A7A 07 F1 D0 0A                   ADD.W           R10, R7, #0xD0
.text:00007A7E 00 25                         MOVS            R5, #0
.text:00007A80 7E 44                         ADD             R6, PC        ; "out_write"
.text:00007A82 4F F0 00 08                   MOV.W           R8, #0
.text:00007A82
.text:00007A86
.text:00007A86                               loc_7A86                      ; CODE XREF: sub_7344+7CA↓j
.text:00007A86 5B F8 28 00                   LDR.W           R0, [R11,R8,LSL#2]
.text:00007A8A 00 28                         CMP             R0, #0
.text:00007A8C 3B D0                         BEQ             loc_7B06
.text:00007A8C
.text:00007A8E 0C 99                         LDR             R1, [SP,#0x88+var_58]
.text:00007A90 01 FB 04 F2                   MUL.W           R2, R1, R4
.text:00007A94 49 46                         MOV             R1, R9
.text:00007A96 FB F7 4E EB                   BLX             pcm_write
.text:00007A96
.text:00007A9A 05 46                         MOV             R5, R0
.text:00007A9C 7D B1                         CBZ             R5, loc_7ABE
.text:00007A9C
.text:00007A9E 5B F8 28 00                   LDR.W           R0, [R11,R8,LSL#2]
.text:00007AA2 FB F7 00 EB                   BLX             pcm_get_error
.text:00007AA2
.text:00007AA6 78 49                         LDR             R1, =(aAudioHwPrimary - 0x7AB4) ; "audio_hw_primary"
.text:00007AA8 33 46                         MOV             R3, R6
.text:00007AAA 78 4A                         LDR             R2, =(aSRetDCardDevic - 0x7AB6) ; "%s: ret=%d, card_device = %d, error=%s"
.text:00007AAC CD E9 00 58                   STRD.W          R5, R8, [SP,#0x88+var_88]
.text:00007AB0 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00007AB2 7A 44                         ADD             R2, PC        ; "%s: ret=%d, card_device = %d, error=%s"
.text:00007AB4 02 90                         STR             R0, [SP,#0x88+var_80]
.text:00007AB6 06 20                         MOVS            R0, #6
.text:00007AB8 FB F7 8E EA                   BLX             __android_log_print
.text:00007AB8
.text:00007ABC 23 E0                         B               loc_7B06
.text:00007ABC
.text:00007ABE                               ; ---------------------------------------------------------------------------
.text:00007ABE
.text:00007ABE                               loc_7ABE                      ; CODE XREF: sub_7344+758↑j
.text:00007ABE D7 F8 BC 20                   LDR.W           R2, [R7,#0xBC]
.text:00007AC2 78 6F                         LDR             R0, [R7,#0x74]
.text:00007AC4 51 1E                         SUBS            R1, R2, #1    ; switch 6 cases
.text:00007AC6 05 29                         CMP             R1, #5
.text:00007AC8 06 D8                         BHI             def_7ACA      ; jumptable 00007ACA default case
.text:00007AC8
.text:00007ACA DF E8 01 F0                   TBB.W           [PC,R1]       ; switch jump
.text:00007ACA
.text:00007ACA                               ; ---------------------------------------------------------------------------
.text:00007ACE 08                            jpt_7ACA DCB 8                ; jump table for switch statement
.text:00007ACF 0A                            DCB 0xA
.text:00007AD0 03                            DCB 3
.text:00007AD1 03                            DCB 3
.text:00007AD2 03                            DCB 3
.text:00007AD3 0C                            DCB 0xC
.text:00007AD4                               ; ---------------------------------------------------------------------------
.text:00007AD4
.text:00007AD4                               loc_7AD4                      ; CODE XREF: sub_7344+786↑j
.text:00007AD4 04 21                         MOVS            R1, #4        ; jumptable 00007ACA cases 3-5
.text:00007AD6 09 E0                         B               loc_7AEC
.text:00007AD6
.text:00007AD8                               ; ---------------------------------------------------------------------------
.text:00007AD8
.text:00007AD8                               def_7ACA                      ; CODE XREF: sub_7344+784↑j
.text:00007AD8 B2 F1 50 6F                   CMP.W           R2, #0xD000000 ; jumptable 00007ACA default case
.text:00007ADC 05 D1                         BNE             loc_7AEA
.text:00007ADC
.text:00007ADE
.text:00007ADE                               loc_7ADE                      ; CODE XREF: sub_7344+786↑j
.text:00007ADE 02 21                         MOVS            R1, #2        ; jumptable 00007ACA case 1
.text:00007AE0 04 E0                         B               loc_7AEC
.text:00007AE0
.text:00007AE2                               ; ---------------------------------------------------------------------------
.text:00007AE2
.text:00007AE2                               loc_7AE2                      ; CODE XREF: sub_7344+786↑j
.text:00007AE2 01 21                         MOVS            R1, #1        ; jumptable 00007ACA case 2
.text:00007AE4 02 E0                         B               loc_7AEC
.text:00007AE4
.text:00007AE6                               ; ---------------------------------------------------------------------------
.text:00007AE6
.text:00007AE6                               loc_7AE6                      ; CODE XREF: sub_7344+786↑j
.text:00007AE6 03 21                         MOVS            R1, #3        ; jumptable 00007ACA case 6
.text:00007AE8 00 E0                         B               loc_7AEC
.text:00007AE8
.text:00007AEA                               ; ---------------------------------------------------------------------------
.text:00007AEA
.text:00007AEA                               loc_7AEA                      ; CODE XREF: sub_7344+798↑j
.text:00007AEA 00 21                         MOVS            R1, #0
.text:00007AEA
.text:00007AEC
.text:00007AEC                               loc_7AEC                      ; CODE XREF: sub_7344+792↑j
.text:00007AEC                                                             ; sub_7344+79C↑j
.text:00007AEC                                                             ; sub_7344+7A0↑j
.text:00007AEC                                                             ; sub_7344+7A4↑j
.text:00007AEC 48 43                         MULS            R0, R1
.text:00007AEE 0B 9B                         LDR             R3, [SP,#0x88+var_5C]
.text:00007AF0 DA E9 00 12                   LDRD.W          R1, R2, [R10]
.text:00007AF4 4F F0 00 05                   MOV.W           R5, #0
.text:00007AF8 B3 FB F0 F0                   UDIV.W          R0, R3, R0
.text:00007AFC 40 18                         ADDS            R0, R0, R1
.text:00007AFE 42 F1 00 01                   ADC.W           R1, R2, #0
.text:00007B02 CA E9 00 01                   STRD.W          R0, R1, [R10]
.text:00007B02
.text:00007B06
.text:00007B06                               loc_7B06                      ; CODE XREF: sub_7344+748↑j
.text:00007B06                                                             ; sub_7344+778↑j
.text:00007B06 08 F1 01 08                   ADD.W           R8, R8, #1
.text:00007B0A B8 F1 03 0F                   CMP.W           R8, #3
.text:00007B0E BA D1                         BNE             loc_7A86
.text:00007B0E
.text:00007B10 0A 98                         LDR             R0, [SP,#0x88+mutex] ; mutex
.text:00007B12 FB F7 98 EA                   BLX             pthread_mutex_unlock
.text:00007B12
.text:00007B16 B9 46                         MOV             R9, R7
.text:00007B18 00 2D                         CMP             R5, #0
.text:00007B1A 55 D0                         BEQ             loc_7BC8
.text:00007B1A
.text:00007B1C
.text:00007B1C                               loc_7B1C                      ; CODE XREF: sub_7344+5B8↑j
.text:00007B1C 0B 9A                         LDR             R2, [SP,#0x88+var_5C]
.text:00007B1E 44 F2 40 20                   MOVW            R0, #0x4240
.text:00007B22 D9 F8 10 10                   LDR.W           R1, [R9,#0x10]
.text:00007B26 C0 F2 0F 00                   MOVT            R0, #0xF
.text:00007B2A 02 FB 00 F4                   MUL.W           R4, R2, R0
.text:00007B2E 48 46                         MOV             R0, R9
.text:00007B30 88 47                         BLX             R1
.text:00007B30
.text:00007B32 00 F0 7F 41                   AND.W           R1, R0, #0xFF000000
.text:00007B36 B1 F1 50 6F                   CMP.W           R1, #0xD000000
.text:00007B3A 18 BF                         IT NE
.text:00007B3C 00 29                         CMPNE           R1, #0
.text:00007B3E 09 D1                         BNE             loc_7B54
.text:00007B3E
.text:00007B40 41 1E                         SUBS            R1, R0, #1    ; switch 6 cases
.text:00007B42 05 29                         CMP             R1, #5
.text:00007B44 08 D8                         BHI             def_7B46      ; jumptable 00007B46 default case
.text:00007B44
.text:00007B46 DF E8 01 F0                   TBB.W           [PC,R1]       ; switch jump
.text:00007B46
.text:00007B46                               ; ---------------------------------------------------------------------------
.text:00007B4A 0A                            jpt_7B46 DCB 0xA              ; jump table for switch statement
.text:00007B4B 0C                            DCB 0xC
.text:00007B4C 03                            DCB 3
.text:00007B4D 03                            DCB 3
.text:00007B4E 03                            DCB 3
.text:00007B4F 0E                            DCB 0xE
.text:00007B50                               ; ---------------------------------------------------------------------------
.text:00007B50
.text:00007B50                               loc_7B50                      ; CODE XREF: sub_7344+802↑j
.text:00007B50 04 25                         MOVS            R5, #4        ; jumptable 00007B46 cases 3-5
.text:00007B52 0B E0                         B               loc_7B6C
.text:00007B52
.text:00007B54                               ; ---------------------------------------------------------------------------
.text:00007B54
.text:00007B54                               loc_7B54                      ; CODE XREF: sub_7344+7FA↑j
.text:00007B54 01 20                         MOVS            R0, #1
.text:00007B56 2F E0                         B               loc_7BB8
.text:00007B56
.text:00007B58                               ; ---------------------------------------------------------------------------
.text:00007B58
.text:00007B58                               def_7B46                      ; CODE XREF: sub_7344+800↑j
.text:00007B58 B0 F1 50 6F                   CMP.W           R0, #0xD000000 ; jumptable 00007B46 default case
.text:00007B5C 05 D1                         BNE             loc_7B6A
.text:00007B5C
.text:00007B5E
.text:00007B5E                               loc_7B5E                      ; CODE XREF: sub_7344+802↑j
.text:00007B5E 02 25                         MOVS            R5, #2        ; jumptable 00007B46 case 1
.text:00007B60 04 E0                         B               loc_7B6C
.text:00007B60
.text:00007B62                               ; ---------------------------------------------------------------------------
.text:00007B62
.text:00007B62                               loc_7B62                      ; CODE XREF: sub_7344+802↑j
.text:00007B62 01 25                         MOVS            R5, #1        ; jumptable 00007B46 case 2
.text:00007B64 02 E0                         B               loc_7B6C
.text:00007B64
.text:00007B66                               ; ---------------------------------------------------------------------------
.text:00007B66
.text:00007B66                               loc_7B66                      ; CODE XREF: sub_7344+802↑j
.text:00007B66 03 25                         MOVS            R5, #3        ; jumptable 00007B46 case 6
.text:00007B68 00 E0                         B               loc_7B6C
.text:00007B68
.text:00007B6A                               ; ---------------------------------------------------------------------------
.text:00007B6A
.text:00007B6A                               loc_7B6A                      ; CODE XREF: sub_7344+818↑j
.text:00007B6A 00 25                         MOVS            R5, #0
.text:00007B6A
.text:00007B6C
.text:00007B6C                               loc_7B6C                      ; CODE XREF: sub_7344+80E↑j
.text:00007B6C                                                             ; sub_7344+81C↑j
.text:00007B6C                                                             ; sub_7344+820↑j
.text:00007B6C                                                             ; sub_7344+824↑j
.text:00007B6C D9 F8 0C 10                   LDR.W           R1, [R9,#0xC]
.text:00007B70 48 46                         MOV             R0, R9
.text:00007B72 88 47                         BLX             R1
.text:00007B72
.text:00007B74 02 21                         MOVS            R1, #2
.text:00007B76 B1 EB 90 7F                   CMP.W           R1, R0,LSR#30
.text:00007B7A 04 D0                         BEQ             loc_7B86
.text:00007B7A
.text:00007B7C 81 0F                         LSRS            R1, R0, #0x1E
.text:00007B7E C9 B9                         CBNZ            R1, loc_7BB4
.text:00007B7E
.text:00007B80 6F F3 9F 40                   BFC.W           R0, #0x12, #0xE
.text:00007B84 01 E0                         B               loc_7B8A
.text:00007B84
.text:00007B86                               ; ---------------------------------------------------------------------------
.text:00007B86
.text:00007B86                               loc_7B86                      ; CODE XREF: sub_7344+836↑j
.text:00007B86 20 F0 40 40                   BIC.W           R0, R0, #0xC0000000
.text:00007B86
.text:00007B8A
.text:00007B8A                               loc_7B8A                      ; CODE XREF: sub_7344+840↑j
.text:00007B8A 4F F0 55 31                   MOV.W           R1, #0x55555555
.text:00007B8E 01 EA 50 01                   AND.W           R1, R1, R0,LSR#1
.text:00007B92 40 1A                         SUBS            R0, R0, R1
.text:00007B94 4F F0 33 31                   MOV.W           R1, #0x33333333
.text:00007B98 01 EA 90 01                   AND.W           R1, R1, R0,LSR#2
.text:00007B9C 20 F0 CC 30                   BIC.W           R0, R0, #0xCCCCCCCC
.text:00007BA0 08 44                         ADD             R0, R1
.text:00007BA2 4F F0 01 31                   MOV.W           R1, #0x1010101
.text:00007BA6 00 EB 10 10                   ADD.W           R0, R0, R0,LSR#4
.text:00007BAA 20 F0 F0 30                   BIC.W           R0, R0, #0xF0F0F0F0
.text:00007BAE 48 43                         MULS            R0, R1
.text:00007BB0 00 0E                         LSRS            R0, R0, #0x18
.text:00007BB2 00 E0                         B               loc_7BB6
.text:00007BB2
.text:00007BB4                               ; ---------------------------------------------------------------------------
.text:00007BB4
.text:00007BB4                               loc_7BB4                      ; CODE XREF: sub_7344+83A↑j
.text:00007BB4 00 20                         MOVS            R0, #0
.text:00007BB4
.text:00007BB6
.text:00007BB6                               loc_7BB6                      ; CODE XREF: sub_7344+86E↑j
.text:00007BB6 68 43                         MULS            R0, R5
.text:00007BB6
.text:00007BB8
.text:00007BB8                               loc_7BB8                      ; CODE XREF: sub_7344+812↑j
.text:00007BB8 D9 F8 B8 10                   LDR.W           R1, [R9,#0xB8]
.text:00007BBC 01 FB 00 F0                   MUL.W           R0, R1, R0
.text:00007BC0 B4 FB F0 F0                   UDIV.W          R0, R4, R0    ; useconds
.text:00007BC4 FB F7 26 EA                   BLX             usleep
.text:00007BC4
.text:00007BC8
.text:00007BC8                               loc_7BC8                      ; CODE XREF: sub_7344+7D6↑j
.text:00007BC8 2E 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x7BD0)
.text:00007BCA 18 99                         LDR             R1, [SP,#0x88+var_28]
.text:00007BCC 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00007BCE 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00007BD0 00 68                         LDR             R0, [R0]
.text:00007BD2 40 1A                         SUBS            R0, R0, R1
.text:00007BD4 02 BF                         ITTT EQ
.text:00007BD6 0B 98                         LDREQ           R0, [SP,#0x88+var_5C]
.text:00007BD8 19 B0                         ADDEQ           SP, SP, #0x64 ; 'd'
.text:00007BDA BD E8 F0 8F                   POPEQ.W         {R4-R11,PC}
.text:00007BDA
.text:00007BDE FB F7 02 EA                   BLX             __stack_chk_fail
.text:00007BDE
.text:00007BDE                               ; End of function sub_7344
.text:00007BDE
.text:00007BDE                               ; ---------------------------------------------------------------------------
.text:00007BE2 00 BF                         ALIGN 4
.text:00007BE4 3C 9A 00 00                   off_7BE4 DCD __stack_chk_guard_ptr - 0x7358
.text:00007BE4                                                             ; DATA XREF: sub_7344+8↑r
.text:00007BE8 AA 99 00 00                   off_7BE8 DCD pcm_config_ptr - 0x73FE
.text:00007BE8                                                             ; DATA XREF: sub_7344:loc_73F0↑r
.text:00007BEC 2D 46 00 00                   off_7BEC DCD aAudioHwPrimary - 0x7472
.text:00007BEC                                                             ; DATA XREF: sub_7344+122↑r
.text:00007BEC                                                             ; "audio_hw_primary"
.text:00007BF0 53 5F 00 00                   off_7BF0 DCD aSModeDOutDevic - 0x7468
.text:00007BF0                                                             ; DATA XREF: sub_7344+116↑r
.text:00007BF0                                                             ; "%s(): mode=%d, out_device=0x%x"
.text:00007BF4 66 5F 00 00                   off_7BF4 DCD aStartOutputStr - 0x7474
.text:00007BF4                                                             ; DATA XREF: sub_7344+126↑r
.text:00007BF4                                                             ; "start_output_stream"
.text:00007BF8 0E 99 00 00                   off_7BF8 DCD pcm_config_voice_call_ptr - 0x7496
.text:00007BF8                                                             ; DATA XREF: sub_7344+142↑r
.text:00007BFC 72 98 00 00                   off_7BFC DCD pcm_config_voice_call_ptr - 0x7532
.text:00007BFC                                                             ; DATA XREF: sub_7344:loc_7524↑r
.text:00007C00 46 98 00 00                   off_7C00 DCD pcm_config_in_ptr - 0x7552
.text:00007C00                                                             ; DATA XREF: sub_7344+206↑r
.text:00007C04 2F 44 00 00                   off_7C04 DCD aAudioHwPrimary - 0x7670
.text:00007C04                                                             ; DATA XREF: sub_7344+31C↑r
.text:00007C04                                                             ; "audio_hw_primary"
.text:00007C08 7A 5D 00 00                   off_7C08 DCD aSPrimaryPcmOpe - 0x7674
.text:00007C08                                                             ; DATA XREF: sub_7344+320↑r
.text:00007C08                                                             ; "%s(): primary: pcm_open card=%d, device"...
.text:00007C0C 64 5D 00 00                   off_7C0C DCD aStartOutputStr - 0x7676
.text:00007C0C                                                             ; DATA XREF: sub_7344+324↑r
.text:00007C0C                                                             ; "start_output_stream"
.text:00007C10 41 42 00 00                   off_7C10 DCD aAudioHwPrimary - 0x785E
.text:00007C10                                                             ; DATA XREF: sub_7344+50A↑r
.text:00007C10                                                             ; "audio_hw_primary"
.text:00007C14 E2 5B 00 00                   off_7C14 DCD aSPcmOpenPcmCar - 0x7862
.text:00007C14                                                             ; DATA XREF: sub_7344+50E↑r
.text:00007C14                                                             ; "%s(): pcm_open(PCM_CARD_PRIMARY) failed"...
.text:00007C18 76 5B 00 00                   off_7C18 DCD aStartOutputStr - 0x7864
.text:00007C18                                                             ; DATA XREF: sub_7344+512↑r
.text:00007C18                                                             ; "start_output_stream"
.text:00007C1C E0 96 00 00                   off_7C1C DCD pcm_config_ptr - 0x76C8
.text:00007C1C                                                             ; DATA XREF: sub_7344:loc_76B8↑r
.text:00007C20 BE 96 00 00                   off_7C20 DCD pcm_config_ptr - 0x76EA
.text:00007C20                                                             ; DATA XREF: sub_7344+39E↑r
.text:00007C24 67 43 00 00                   off_7C24 DCD aAudioHwPrimary - 0x7738
.text:00007C24                                                             ; DATA XREF: sub_7344+3EA↑r
.text:00007C24                                                             ; "audio_hw_primary"
.text:00007C28 3A 5D 00 00                   off_7C28 DCD aSHifiPcmOpenCa - 0x7736
.text:00007C28                                                             ; DATA XREF: sub_7344+3E4↑r
.text:00007C28                                                             ; "%s(): hifi: pcm_open card=%d, device=%d"...
.text:00007C2C B6 5C 00 00                   off_7C2C DCD aStartOutputStr - 0x7724
.text:00007C2C                                                             ; DATA XREF: sub_7344+3D4↑r
.text:00007C2C                                                             ; "start_output_stream"
.text:00007C30 1B 42 00 00                   off_7C30 DCD aAudioHwPrimary - 0x7884
.text:00007C30                                                             ; DATA XREF: sub_7344+530↑r
.text:00007C30                                                             ; "audio_hw_primary"
.text:00007C34 3A 5C 00 00                   off_7C34 DCD aSPcmOpenPcmCar_0 - 0x7888
.text:00007C34                                                             ; DATA XREF: sub_7344+534↑r
.text:00007C34                                                             ; "%s(): pcm_open(PCM_CARD_HIFI) failed: %"...
.text:00007C38 50 5B 00 00                   off_7C38 DCD aStartOutputStr - 0x788A
.text:00007C38                                                             ; DATA XREF: sub_7344+538↑r
.text:00007C38                                                             ; "start_output_stream"
.text:00007C3C 0F 43 00 00                   off_7C3C DCD aAudioHwPrimary - 0x7790
.text:00007C3C                                                             ; DATA XREF: sub_7344+43E↑r
.text:00007C3C                                                             ; "audio_hw_primary"
.text:00007C40 59 5D 00 00                   off_7C40 DCD aSSpdifPcmOpenC - 0x7792
.text:00007C40                                                             ; DATA XREF: sub_7344+442↑r
.text:00007C40                                                             ; "%s(): spdif: pcm_open card=%d, device=%"...
.text:00007C44 56 5C 00 00                   off_7C44 DCD aStartOutputStr - 0x7784
.text:00007C44                                                             ; DATA XREF: sub_7344+434↑r
.text:00007C44                                                             ; "start_output_stream"
.text:00007C48 F7 41 00 00                   off_7C48 DCD aAudioHwPrimary - 0x78A8
.text:00007C48                                                             ; DATA XREF: sub_7344+554↑r
.text:00007C48                                                             ; "audio_hw_primary"
.text:00007C4C 78 5C 00 00                   off_7C4C DCD aSPcmOpenPcmCar_1 - 0x78AC
.text:00007C4C                                                             ; DATA XREF: sub_7344+558↑r
.text:00007C4C                                                             ; "%s(): pcm_open(PCM_CARD_SPDIF) failed: "...
.text:00007C50 2C 5B 00 00                   off_7C50 DCD aStartOutputStr - 0x78AE
.text:00007C50                                                             ; DATA XREF: sub_7344+55C↑r
.text:00007C50                                                             ; "start_output_stream"
.text:00007C54 B5 42 00 00                   off_7C54 DCD aAudioHwPrimary - 0x77EA
.text:00007C54                                                             ; DATA XREF: sub_7344+496↑r
.text:00007C54                                                             ; "audio_hw_primary"
.text:00007C58 62 5D 00 00                   off_7C58 DCD aSCreateResampl - 0x77EC
.text:00007C58                                                             ; DATA XREF: sub_7344+49A↑r
.text:00007C58                                                             ; "%s(): create_resampler: (%d >> %d)"
.text:00007C5C EC 5B 00 00                   off_7C5C DCD aStartOutputStr - 0x77EE
.text:00007C5C                                                             ; DATA XREF: sub_7344+49E↑r
.text:00007C5C                                                             ; "start_output_stream"
.text:00007C60 B0 95 00 00                   off_7C60 DCD pcm_config_ptr - 0x77F8
.text:00007C60                                                             ; DATA XREF: sub_7344+4AC↑r
.text:00007C64 94 95 00 00                   off_7C64 DCD pcm_config_ptr - 0x7814
.text:00007C64                                                             ; DATA XREF: sub_7344+4C8↑r
.text:00007C68 F8 59 00 00                   off_7C68 DCD aSdcardAndroidL - 0x791E
.text:00007C68                                                             ; DATA XREF: sub_7344+5CE↑r
.text:00007C68                                                             ; "/sdcard/Android/log/audio_dump/audio_hw"...
.text:00007C6C 27 5A 00 00                   off_7C6C DCD aAudioHwPcmDump - 0x7920
.text:00007C6C                                                             ; DATA XREF: sub_7344+5D2↑r
.text:00007C6C                                                             ; "audio.hw.pcm.dump"
.text:00007C70 42 94 00 00                   off_7C70 DCD pcm_config_ptr - 0x7966
.text:00007C70                                                             ; DATA XREF: sub_7344:loc_795C↑r
.text:00007C74 A8 93 00 00                   off_7C74 DCD pcm_config_ptr - 0x7A00
.text:00007C74                                                             ; DATA XREF: sub_7344:loc_79F6↑r
.text:00007C78 ED 58 00 00                   off_7C78 DCD aSdcardAndroidL_0 - 0x7A6C
.text:00007C78                                                             ; DATA XREF: sub_7344+71E↑r
.text:00007C78                                                             ; "/sdcard/Android/log/audio_dump/audio_hw"...
.text:00007C7C D7 58 00 00                   off_7C7C DCD aAudioHwPcmDump - 0x7A70
.text:00007C7C                                                             ; DATA XREF: sub_7344+720↑r
.text:00007C7C                                                             ; "audio.hw.pcm.dump"
.text:00007C80 2D 59 00 00                   off_7C80 DCD aOutWrite - 0x7A84
.text:00007C80                                                             ; DATA XREF: sub_7344+730↑r
.text:00007C80                                                             ; "out_write"
.text:00007C84 C4 91 00 00                   off_7C84 DCD __stack_chk_guard_ptr - 0x7BD0
.text:00007C84                                                             ; DATA XREF: sub_7344:loc_7BC8↑r
.text:00007C88 EB 3F 00 00                   off_7C88 DCD aAudioHwPrimary - 0x7AB4
.text:00007C88                                                             ; DATA XREF: sub_7344+762↑r
.text:00007C88                                                             ; "audio_hw_primary"
.text:00007C8C D4 58 00 00                   off_7C8C DCD aSRetDCardDevic - 0x7AB6
.text:00007C8C                                                             ; DATA XREF: sub_7344+766↑r
.text:00007C8C                               ; } // starts at 7344         ; "%s: ret=%d, card_device = %d, error=%s"
.text:00007C90
.text:00007C90                               ; =============== S U B R O U T I N E =======================================
.text:00007C90
.text:00007C90
.text:00007C90                               ; int sub_7C90()
.text:00007C90                               sub_7C90                      ; DATA XREF: sub_5068+BA↑o
.text:00007C90                                                             ; sub_5068+BC↑o
.text:00007C90                                                             ; .text:off_52A0↑o
.text:00007C90                               ; __unwind {
.text:00007C90 6F F0 15 00                   MOV             R0, #0xFFFFFFEA
.text:00007C94 70 47                         BX              LR
.text:00007C94
.text:00007C94                               ; End of function sub_7C90
.text:00007C94
.text:00007C96
.text:00007C96                               ; =============== S U B R O U T I N E =======================================
.text:00007C96
.text:00007C96
.text:00007C96                               ; int sub_7C96()
.text:00007C96                               sub_7C96                      ; DATA XREF: sub_5068+C0↑o
.text:00007C96                                                             ; sub_5068+C2↑o
.text:00007C96                                                             ; .text:off_52A4↑o
.text:00007C96 6F F0 15 00                   MOV             R0, #0xFFFFFFEA
.text:00007C9A 70 47                         BX              LR
.text:00007C9A                               ; } // starts at 7C90
.text:00007C9A
.text:00007C9A                               ; End of function sub_7C96
.text:00007C9A
.text:00007C9C
.text:00007C9C                               ; =============== S U B R O U T I N E =======================================
.text:00007C9C
.text:00007C9C
.text:00007C9C                               ; int __fastcall sub_7C9C(int, _QWORD *, int)
.text:00007C9C                               sub_7C9C                      ; DATA XREF: sub_5068+C6↑o
.text:00007C9C                                                             ; sub_5068+C8↑o
.text:00007C9C                                                             ; .text:off_52A8↑o
.text:00007C9C
.text:00007C9C                               var_28= -0x28
.text:00007C9C                               var_24= -0x24
.text:00007C9C
.text:00007C9C                               ; __unwind {
.text:00007C9C 2D E9 F0 47                   PUSH.W          {R4-R10,LR}
.text:00007CA0 82 B0                         SUB             SP, SP, #8
.text:00007CA2 82 46                         MOV             R10, R0
.text:00007CA4 1F 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x7CB0)
.text:00007CA6 0A F1 64 09                   ADD.W           R9, R10, #0x64 ; 'd'
.text:00007CAA 17 46                         MOV             R7, R2
.text:00007CAC 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00007CAE 88 46                         MOV             R8, R1
.text:00007CB0 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00007CB2 00 68                         LDR             R0, [R0]
.text:00007CB4 01 90                         STR             R0, [SP,#0x28+var_24]
.text:00007CB6 48 46                         MOV             R0, R9        ; mutex
.text:00007CB8 FB F7 B2 E9                   BLX             pthread_mutex_lock
.text:00007CB8
.text:00007CBC 0A F1 68 04                   ADD.W           R4, R10, #0x68 ; 'h'
.text:00007CC0 00 26                         MOVS            R6, #0
.text:00007CC2 6D 46                         MOV             R5, SP
.text:00007CC2
.text:00007CC4
.text:00007CC4                               loc_7CC4                      ; CODE XREF: sub_7C9C+3C↓j
.text:00007CC4 54 F8 26 00                   LDR.W           R0, [R4,R6,LSL#2]
.text:00007CC8 20 B1                         CBZ             R0, loc_7CD4
.text:00007CC8
.text:00007CCA 29 46                         MOV             R1, R5
.text:00007CCC 3A 46                         MOV             R2, R7
.text:00007CCE FB F7 58 EB                   BLX             pcm_get_htimestamp
.text:00007CCE
.text:00007CD2 18 B1                         CBZ             R0, loc_7CDC
.text:00007CD2
.text:00007CD4
.text:00007CD4                               loc_7CD4                      ; CODE XREF: sub_7C9C+2C↑j
.text:00007CD4 01 36                         ADDS            R6, #1
.text:00007CD6 03 2E                         CMP             R6, #3
.text:00007CD8 F4 DB                         BLT             loc_7CC4
.text:00007CD8
.text:00007CDA 11 E0                         B               loc_7D00
.text:00007CDA
.text:00007CDC                               ; ---------------------------------------------------------------------------
.text:00007CDC
.text:00007CDC                               loc_7CDC                      ; CODE XREF: sub_7C9C+36↑j
.text:00007CDC DA E9 1F 10                   LDRD.W          R1, R0, [R10,#0x7C]
.text:00007CE0 DA E9 34 23                   LDRD.W          R2, R3, [R10,#0xD0]
.text:00007CE4 48 43                         MULS            R0, R1
.text:00007CE6 00 99                         LDR             R1, [SP,#0x28+var_28]
.text:00007CE8 10 1A                         SUBS            R0, R2, R0
.text:00007CEA 63 F1 00 02                   SBC.W           R2, R3, #0
.text:00007CEE 40 18                         ADDS            R0, R0, R1
.text:00007CF0 42 F1 00 01                   ADC.W           R1, R2, #0
.text:00007CF4 00 29                         CMP             R1, #0
.text:00007CF6 03 DB                         BLT             loc_7D00
.text:00007CF6
.text:00007CF8 C8 E9 00 01                   STRD.W          R0, R1, [R8]
.text:00007CFC 00 25                         MOVS            R5, #0
.text:00007CFE 01 E0                         B               loc_7D04
.text:00007CFE
.text:00007D00                               ; ---------------------------------------------------------------------------
.text:00007D00
.text:00007D00                               loc_7D00                      ; CODE XREF: sub_7C9C+3E↑j
.text:00007D00                                                             ; sub_7C9C+5A↑j
.text:00007D00 4F F0 FF 35                   MOV.W           R5, #0xFFFFFFFF
.text:00007D00
.text:00007D04
.text:00007D04                               loc_7D04                      ; CODE XREF: sub_7C9C+62↑j
.text:00007D04 48 46                         MOV             R0, R9        ; mutex
.text:00007D06 FB F7 9E E9                   BLX             pthread_mutex_unlock
.text:00007D06
.text:00007D0A 07 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x7D12)
.text:00007D0C 01 99                         LDR             R1, [SP,#0x28+var_24]
.text:00007D0E 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00007D10 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00007D12 00 68                         LDR             R0, [R0]
.text:00007D14 40 1A                         SUBS            R0, R0, R1
.text:00007D16 02 BF                         ITTT EQ
.text:00007D18 28 46                         MOVEQ           R0, R5
.text:00007D1A 02 B0                         ADDEQ           SP, SP, #8
.text:00007D1C BD E8 F0 87                   POPEQ.W         {R4-R10,PC}
.text:00007D1C
.text:00007D20 FB F7 60 E9                   BLX             __stack_chk_fail
.text:00007D20
.text:00007D20                               ; End of function sub_7C9C
.text:00007D20
.text:00007D20                               ; ---------------------------------------------------------------------------
.text:00007D24 E4 90 00 00                   off_7D24 DCD __stack_chk_guard_ptr - 0x7CB0
.text:00007D24                                                             ; DATA XREF: sub_7C9C+8↑r
.text:00007D28 82 90 00 00                   off_7D28 DCD __stack_chk_guard_ptr - 0x7D12
.text:00007D28                                                             ; DATA XREF: sub_7C9C+6E↑r
.text:00007D28                               ; } // starts at 7C9C
.text:00007D2C
.text:00007D2C                               ; =============== S U B R O U T I N E =======================================
.text:00007D2C
.text:00007D2C
.text:00007D2C                               ; unsigned int __fastcall sub_7D2C(int)
.text:00007D2C                               sub_7D2C                      ; CODE XREF: sub_5068+DA↑p
.text:00007D2C                                                             ; sub_6E38+244↑p
.text:00007D2C                                                             ; sub_6E38+2AE↑p
.text:00007D2C
.text:00007D2C                               var_10= -0x10
.text:00007D2C
.text:00007D2C                               ; __unwind {
.text:00007D2C 10 B5                         PUSH            {R4,LR}
.text:00007D2E 82 B0                         SUB             SP, SP, #8
.text:00007D30 16 4A                         LDR             R2, =(off_ED40 - 0x7D3C)
.text:00007D32 00 21                         MOVS            R1, #0
.text:00007D34 D0 F8 B8 00                   LDR.W           R0, [R0,#0xB8]
.text:00007D38 7A 44                         ADD             R2, PC        ; off_ED40
.text:00007D38
.text:00007D3A
.text:00007D3A                               loc_7D3A                      ; CODE XREF: sub_7D2C+1A↓j
.text:00007D3A 52 F8 31 30                   LDR.W           R3, [R2,R1,LSL#3]
.text:00007D3E 98 42                         CMP             R0, R3
.text:00007D40 0E D0                         BEQ             loc_7D60
.text:00007D40
.text:00007D42 01 31                         ADDS            R1, #1
.text:00007D44 0F 29                         CMP             R1, #0xF
.text:00007D46 F8 D3                         BCC             loc_7D3A
.text:00007D46
.text:00007D48 11 49                         LDR             R1, =(aAudioHwPrimary - 0x7D52) ; "audio_hw_primary"
.text:00007D4A 12 4A                         LDR             R2, =(aSInvalidSampli - 0x7D56) ; "%s(): invalid sampling rate: %d"
.text:00007D4C 12 4B                         LDR             R3, =(aGetOutputBuffe - 0x7D58) ; "get_output_buffer_size"
.text:00007D4E 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00007D50 00 90                         STR             R0, [SP,#0x10+var_10]
.text:00007D52 7A 44                         ADD             R2, PC        ; "%s(): invalid sampling rate: %d"
.text:00007D54 7B 44                         ADD             R3, PC        ; "get_output_buffer_size"
.text:00007D56 06 20                         MOVS            R0, #6
.text:00007D58 FB F7 3E E9                   BLX             __android_log_print
.text:00007D58
.text:00007D5C 00 24                         MOVS            R4, #0
.text:00007D5E 12 E0                         B               loc_7D86
.text:00007D5E
.text:00007D60                               ; ---------------------------------------------------------------------------
.text:00007D60
.text:00007D60                               loc_7D60                      ; CODE XREF: sub_7D2C+14↑j
.text:00007D60 0E 48                         LDR             R0, =(off_ED40 - 0x7D68)
.text:00007D62 10 4A                         LDR             R2, =(aSBufferSizeD - 0x7D74) ; "%s(): buffer_size=%d"
.text:00007D64 78 44                         ADD             R0, PC        ; off_ED40
.text:00007D66 10 4B                         LDR             R3, =(aGetOutputBuffe - 0x7D78) ; "get_output_buffer_size"
.text:00007D68 00 EB C1 00                   ADD.W           R0, R0, R1,LSL#3
.text:00007D6C 4F F4 80 41                   MOV.W           R1, #0x4000
.text:00007D70 7A 44                         ADD             R2, PC        ; "%s(): buffer_size=%d"
.text:00007D72 40 68                         LDR             R0, [R0,#4]
.text:00007D74 7B 44                         ADD             R3, PC        ; "get_output_buffer_size"
.text:00007D76 B1 FB F0 F4                   UDIV.W          R4, R1, R0
.text:00007D7A 09 49                         LDR             R1, =(aAudioHwPrimary - 0x7D84) ; "audio_hw_primary"
.text:00007D7C 02 20                         MOVS            R0, #2
.text:00007D7E 00 94                         STR             R4, [SP,#0x10+var_10]
.text:00007D80 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00007D82 FB F7 2A E9                   BLX             __android_log_print
.text:00007D82
.text:00007D86
.text:00007D86                               loc_7D86                      ; CODE XREF: sub_7D2C+32↑j
.text:00007D86 20 46                         MOV             R0, R4
.text:00007D88 02 B0                         ADD             SP, SP, #8
.text:00007D8A 10 BD                         POP             {R4,PC}
.text:00007D8A
.text:00007D8A                               ; End of function sub_7D2C
.text:00007D8A
.text:00007D8A                               ; ---------------------------------------------------------------------------
.text:00007D8C 04 70 00 00                   off_7D8C DCD off_ED40 - 0x7D3C
.text:00007D8C                                                             ; DATA XREF: sub_7D2C+4↑r
.text:00007D90 4D 3D 00 00                   off_7D90 DCD aAudioHwPrimary - 0x7D52
.text:00007D90                                                             ; DATA XREF: sub_7D2C+1C↑r
.text:00007D90                                                             ; "audio_hw_primary"
.text:00007D94 47 58 00 00                   off_7D94 DCD aSInvalidSampli - 0x7D56
.text:00007D94                                                             ; DATA XREF: sub_7D2C+1E↑r
.text:00007D94                                                             ; "%s(): invalid sampling rate: %d"
.text:00007D98 2E 58 00 00                   off_7D98 DCD aGetOutputBuffe - 0x7D58
.text:00007D98                                                             ; DATA XREF: sub_7D2C+20↑r
.text:00007D98                                                             ; "get_output_buffer_size"
.text:00007D9C D8 6F 00 00                   off_7D9C DCD off_ED40 - 0x7D68
.text:00007D9C                                                             ; DATA XREF: sub_7D2C:loc_7D60↑r
.text:00007DA0 1B 3D 00 00                   off_7DA0 DCD aAudioHwPrimary - 0x7D84
.text:00007DA0                                                             ; DATA XREF: sub_7D2C+4E↑r
.text:00007DA0                                                             ; "audio_hw_primary"
.text:00007DA4 FD 57 00 00                   off_7DA4 DCD aSBufferSizeD - 0x7D74
.text:00007DA4                                                             ; DATA XREF: sub_7D2C+36↑r
.text:00007DA4                                                             ; "%s(): buffer_size=%d"
.text:00007DA8 0E 58 00 00                   off_7DA8 DCD aGetOutputBuffe - 0x7D78
.text:00007DA8                                                             ; DATA XREF: sub_7D2C+3A↑r
.text:00007DA8                               ; } // starts at 7D2C         ; "get_output_buffer_size"
.text:00007DAC
.text:00007DAC                               ; =============== S U B R O U T I N E =======================================
.text:00007DAC
.text:00007DAC
.text:00007DAC                               ; int __fastcall sub_7DAC(int)
.text:00007DAC                               sub_7DAC                      ; DATA XREF: sub_52F4+102↑o
.text:00007DAC                                                             ; sub_52F4+104↑o
.text:00007DAC                                                             ; .text:off_54D8↑o
.text:00007DAC                               ; __unwind {
.text:00007DAC D0 F8 80 00                   LDR.W           R0, [R0,#0x80]
.text:00007DB0 70 47                         BX              LR
.text:00007DB0
.text:00007DB0                               ; End of function sub_7DAC
.text:00007DB0
.text:00007DB2
.text:00007DB2                               ; =============== S U B R O U T I N E =======================================
.text:00007DB2
.text:00007DB2
.text:00007DB2                               ; int sub_7DB2()
.text:00007DB2                               sub_7DB2                      ; DATA XREF: sub_52F4+108↑o
.text:00007DB2                                                             ; sub_52F4+10A↑o
.text:00007DB2                                                             ; .text:off_54DC↑o
.text:00007DB2 00 20                         MOVS            R0, #0
.text:00007DB4 70 47                         BX              LR
.text:00007DB4
.text:00007DB4                               ; End of function sub_7DB2
.text:00007DB4
.text:00007DB4                               ; ---------------------------------------------------------------------------
.text:00007DB6 00 00                         ALIGN 4
.text:00007DB8
.text:00007DB8                               ; =============== S U B R O U T I N E =======================================
.text:00007DB8
.text:00007DB8
.text:00007DB8                               sub_7DB8                      ; DATA XREF: sub_52F4+10E↑o
.text:00007DB8                                                             ; sub_52F4+110↑o
.text:00007DB8                                                             ; .text:off_54E0↑o
.text:00007DB8 08 49                         LDR             R1, =(pcm_config_in_ptr - 0x7DC2)
.text:00007DBA D0 F8 80 00                   LDR.W           R0, [R0,#0x80]
.text:00007DBE 79 44                         ADD             R1, PC        ; pcm_config_in_ptr
.text:00007DC0 09 68                         LDR             R1, [R1]      ; pcm_config_in
.text:00007DC2 D1 E9 01 21                   LDRD.W          R2, R1, [R1,#4]
.text:00007DC6 48 43                         MULS            R0, R1
.text:00007DC8 4F F0 1E 01                   MOV.W           R1, #0x1E
.text:00007DCC B0 FB F2 F0                   UDIV.W          R0, R0, R2
.text:00007DD0 01 EB 40 00                   ADD.W           R0, R1, R0,LSL#1
.text:00007DD4 20 F0 1F 00                   BIC.W           R0, R0, #0x1F
.text:00007DD8 70 47                         BX              LR
.text:00007DD8
.text:00007DD8                               ; End of function sub_7DB8
.text:00007DD8
.text:00007DD8                               ; ---------------------------------------------------------------------------
.text:00007DDA 00 BF                         ALIGN 4
.text:00007DDC D6 8F 00 00                   off_7DDC DCD pcm_config_in_ptr - 0x7DC2
.text:00007DDC                                                             ; DATA XREF: sub_7DB8↑r
.text:00007DE0
.text:00007DE0                               ; =============== S U B R O U T I N E =======================================
.text:00007DE0
.text:00007DE0
.text:00007DE0                               ; int sub_7DE0()
.text:00007DE0                               sub_7DE0                      ; DATA XREF: sub_52F4+114↑o
.text:00007DE0                                                             ; sub_52F4+116↑o
.text:00007DE0                                                             ; .text:off_54E4↑o
.text:00007DE0 10 20                         MOVS            R0, #0x10
.text:00007DE2 70 47                         BX              LR
.text:00007DE2
.text:00007DE2                               ; End of function sub_7DE0
.text:00007DE2
.text:00007DE4
.text:00007DE4                               ; =============== S U B R O U T I N E =======================================
.text:00007DE4
.text:00007DE4
.text:00007DE4                               ; int sub_7DE4()
.text:00007DE4                               sub_7DE4                      ; DATA XREF: sub_52F4+11A↑o
.text:00007DE4                                                             ; sub_52F4+11C↑o
.text:00007DE4                                                             ; .text:off_54E8↑o
.text:00007DE4 01 20                         MOVS            R0, #1
.text:00007DE6 70 47                         BX              LR
.text:00007DE6
.text:00007DE6                               ; End of function sub_7DE4
.text:00007DE6
.text:00007DE8
.text:00007DE8                               ; =============== S U B R O U T I N E =======================================
.text:00007DE8
.text:00007DE8
.text:00007DE8                               ; int sub_7DE8()
.text:00007DE8                               sub_7DE8                      ; DATA XREF: sub_52F4+120↑o
.text:00007DE8                                                             ; sub_52F4+122↑o
.text:00007DE8                                                             ; .text:off_54EC↑o
.text:00007DE8 6F F0 25 00                   MOV             R0, #0xFFFFFFDA
.text:00007DEC 70 47                         BX              LR
.text:00007DEC
.text:00007DEC                               ; End of function sub_7DE8
.text:00007DEC
.text:00007DEE
.text:00007DEE                               ; =============== S U B R O U T I N E =======================================
.text:00007DEE
.text:00007DEE
.text:00007DEE                               ; int sub_7DEE()
.text:00007DEE                               sub_7DEE                      ; DATA XREF: sub_52F4+12C↑o
.text:00007DEE                                                             ; sub_52F4+12E↑o
.text:00007DEE                                                             ; .text:off_54F4↑o
.text:00007DEE 00 20                         MOVS            R0, #0
.text:00007DF0 70 47                         BX              LR
.text:00007DF0
.text:00007DF0                               ; End of function sub_7DEE
.text:00007DF0
.text:00007DF0                               ; ---------------------------------------------------------------------------
.text:00007DF2 00 00                         ALIGN 4
.text:00007DF2                               ; } // starts at 7DAC
.text:00007DF4
.text:00007DF4                               ; =============== S U B R O U T I N E =======================================
.text:00007DF4
.text:00007DF4
.text:00007DF4                               ; int __fastcall sub_7DF4(int, int)
.text:00007DF4                               sub_7DF4                      ; DATA XREF: sub_52F4+132↑o
.text:00007DF4                                                             ; sub_52F4+134↑o
.text:00007DF4                                                             ; .text:off_54F8↑o
.text:00007DF4
.text:00007DF4                               var_50= -0x50
.text:00007DF4                               nptr= -0x48
.text:00007DF4                               var_28= -0x28
.text:00007DF4
.text:00007DF4                               ; __unwind {
.text:00007DF4 2D E9 F0 4F                   PUSH.W          {R4-R11,LR}
.text:00007DF8 8B B0                         SUB             SP, SP, #0x2C
.text:00007DFA 06 46                         MOV             R6, R0
.text:00007DFC 54 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x7E02)
.text:00007DFE 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00007E00 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00007E02 00 68                         LDR             R0, [R0]
.text:00007E04 0A 90                         STR             R0, [SP,#0x50+var_28]
.text:00007E06 08 46                         MOV             R0, R1
.text:00007E08 D6 F8 AC B0                   LDR.W           R11, [R6,#0xAC]
.text:00007E0C FB F7 F2 E9                   BLX             str_parms_create_str
.text:00007E0C
.text:00007E10 0B F1 A4 08                   ADD.W           R8, R11, #0xA4
.text:00007E14 82 46                         MOV             R10, R0
.text:00007E16 40 46                         MOV             R0, R8        ; mutex
.text:00007E18 FB F7 02 E9                   BLX             pthread_mutex_lock
.text:00007E18
.text:00007E1C 06 F1 74 09                   ADD.W           R9, R6, #0x74 ; 't'
.text:00007E20 48 46                         MOV             R0, R9        ; mutex
.text:00007E22 FB F7 FE E8                   BLX             pthread_mutex_lock
.text:00007E22
.text:00007E26 4B 49                         LDR             R1, =(aInputSource - 0x7E32) ; "input_source"
.text:00007E28 02 AA                         ADD             R2, SP, #0x50+nptr
.text:00007E2A 50 46                         MOV             R0, R10
.text:00007E2C 20 23                         MOVS            R3, #0x20 ; ' '
.text:00007E2E 79 44                         ADD             R1, PC        ; "input_source"
.text:00007E30 FB F7 E6 E9                   BLX             str_parms_get_str
.text:00007E30
.text:00007E34 00 28                         CMP             R0, #0
.text:00007E36 1F DB                         BLT             loc_7E78
.text:00007E36
.text:00007E38 02 A8                         ADD             R0, SP, #0x50+nptr ; nptr
.text:00007E3A FB F7 9E E8                   BLX             atoi
.text:00007E3A
.text:00007E3E 07 46                         MOV             R7, R0
.text:00007E40 D6 F8 9C 00                   LDR.W           R0, [R6,#0x9C]
.text:00007E44 44 49                         LDR             R1, =(aAudioHwPrimary - 0x7E4E) ; "audio_hw_primary"
.text:00007E46 45 4A                         LDR             R2, =(aSInputSourceCh - 0x7E54) ; "%s(): input_source change: (0x%x >> 0x%"...
.text:00007E48 45 4B                         LDR             R3, =(aInSetParameter - 0x7E56) ; "in_set_parameters"
.text:00007E4A 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00007E4C CD E9 00 07                   STRD.W          R0, R7, [SP,#0x50+var_50]
.text:00007E50 7A 44                         ADD             R2, PC        ; "%s(): input_source change: (0x%x >> 0x%"...
.text:00007E52 7B 44                         ADD             R3, PC        ; "in_set_parameters"
.text:00007E54 03 20                         MOVS            R0, #3
.text:00007E56 FB F7 C0 E8                   BLX             __android_log_print
.text:00007E56
.text:00007E5A 00 25                         MOVS            R5, #0
.text:00007E5C 6F B1                         CBZ             R7, loc_7E7A
.text:00007E5C
.text:00007E5E D6 F8 9C 00                   LDR.W           R0, [R6,#0x9C]
.text:00007E62 B8 42                         CMP             R0, R7
.text:00007E64 09 D0                         BEQ             loc_7E7A
.text:00007E64
.text:00007E66 C6 F8 9C 70                   STR.W           R7, [R6,#0x9C]
.text:00007E6A 00 25                         MOVS            R5, #0
.text:00007E6C 96 F8 7C 00                   LDRB.W          R0, [R6,#0x7C]
.text:00007E70 00 28                         CMP             R0, #0
.text:00007E72 08 BF                         IT EQ
.text:00007E74 01 25                         MOVEQ           R5, #1
.text:00007E76 00 E0                         B               loc_7E7A
.text:00007E76
.text:00007E78                               ; ---------------------------------------------------------------------------
.text:00007E78
.text:00007E78                               loc_7E78                      ; CODE XREF: sub_7DF4+42↑j
.text:00007E78 00 25                         MOVS            R5, #0
.text:00007E78
.text:00007E7A
.text:00007E7A                               loc_7E7A                      ; CODE XREF: sub_7DF4+68↑j
.text:00007E7A                                                             ; sub_7DF4+70↑j
.text:00007E7A                                                             ; sub_7DF4+82↑j
.text:00007E7A 3A 49                         LDR             R1, =(aRouting - 0x7E86) ; "routing"
.text:00007E7C 02 AA                         ADD             R2, SP, #0x50+nptr
.text:00007E7E 50 46                         MOV             R0, R10
.text:00007E80 20 23                         MOVS            R3, #0x20 ; ' '
.text:00007E82 79 44                         ADD             R1, PC        ; "routing"
.text:00007E84 FB F7 BC E9                   BLX             str_parms_get_str
.text:00007E84
.text:00007E88 07 46                         MOV             R7, R0
.text:00007E8A 00 2F                         CMP             R7, #0
.text:00007E8C 1B DB                         BLT             loc_7EC6
.text:00007E8C
.text:00007E8E 02 A8                         ADD             R0, SP, #0x50+nptr ; nptr
.text:00007E90 FB F7 72 E8                   BLX             atoi
.text:00007E90
.text:00007E94 04 46                         MOV             R4, R0
.text:00007E96 DB F8 B0 00                   LDR.W           R0, [R11,#0xB0]
.text:00007E9A 33 49                         LDR             R1, =(aAudioHwPrimary - 0x7EA4) ; "audio_hw_primary"
.text:00007E9C 33 4A                         LDR             R2, =(aSInDeviceChang - 0x7EAA) ; "%s(): in_device change: (0x%x >> 0x%x)"
.text:00007E9E 34 4B                         LDR             R3, =(aInSetParameter - 0x7EAC) ; "in_set_parameters"
.text:00007EA0 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00007EA2 CD E9 00 04                   STRD.W          R0, R4, [SP,#0x50+var_50]
.text:00007EA6 7A 44                         ADD             R2, PC        ; "%s(): in_device change: (0x%x >> 0x%x)"
.text:00007EA8 7B 44                         ADD             R3, PC        ; "in_set_parameters"
.text:00007EAA 03 20                         MOVS            R0, #3
.text:00007EAC FB F7 94 E8                   BLX             __android_log_print
.text:00007EAC
.text:00007EB0 4C B1                         CBZ             R4, loc_7EC6
.text:00007EB0
.text:00007EB2 D6 F8 A0 00                   LDR.W           R0, [R6,#0xA0]
.text:00007EB6 A0 42                         CMP             R0, R4
.text:00007EB8 05 D0                         BEQ             loc_7EC6
.text:00007EB8
.text:00007EBA C6 F8 A0 40                   STR.W           R4, [R6,#0xA0]
.text:00007EBE 96 F8 7C 00                   LDRB.W          R0, [R6,#0x7C]
.text:00007EC2 70 BB                         CBNZ            R0, loc_7F22
.text:00007EC2
.text:00007EC4 01 E0                         B               loc_7ECA
.text:00007EC4
.text:00007EC6                               ; ---------------------------------------------------------------------------
.text:00007EC6
.text:00007EC6                               loc_7EC6                      ; CODE XREF: sub_7DF4+98↑j
.text:00007EC6                                                             ; sub_7DF4+BC↑j
.text:00007EC6                                                             ; sub_7DF4+C4↑j
.text:00007EC6 01 2D                         CMP             R5, #1
.text:00007EC8 2B D1                         BNE             loc_7F22
.text:00007EC8
.text:00007ECA
.text:00007ECA                               loc_7ECA                      ; CODE XREF: sub_7DF4+D0↑j
.text:00007ECA DB F8 A8 10                   LDR.W           R1, [R11,#0xA8]
.text:00007ECE 02 29                         CMP             R1, #2
.text:00007ED0 14 BF                         ITE NE
.text:00007ED2 D6 F8 9C 00                   LDRNE.W         R0, [R6,#0x9C]
.text:00007ED6 04 20                         MOVEQ           R0, #4
.text:00007ED8 00 29                         CMP             R1, #0
.text:00007EDA CB F8 C8 00                   STR.W           R0, [R11,#0xC8]
.text:00007EDE D6 F8 A0 00                   LDR.W           R0, [R6,#0xA0]
.text:00007EE2 CB F8 B0 00                   STR.W           R0, [R11,#0xB0]
.text:00007EE6 DB F8 AC 40                   LDR.W           R4, [R11,#0xAC]
.text:00007EEA 15 D1                         BNE             loc_7F18
.text:00007EEA
.text:00007EEC 04 21 C8 F2 00 01             MOVS            R1, #0x80000004
.text:00007EF2 88 42                         CMP             R0, R1
.text:00007EF4 0B D0                         BEQ             loc_7F0E
.text:00007EF4
.text:00007EF6 08 21 C8 F2 00 01             MOVS            R1, #0x80000008
.text:00007EFC 88 42                         CMP             R0, R1
.text:00007EFE 08 D0                         BEQ             loc_7F12
.text:00007EFE
.text:00007F00 10 21 C8 F2 00 01             MOVS            R1, #0x80000010
.text:00007F06 88 42                         CMP             R0, R1
.text:00007F08 06 D1                         BNE             loc_7F18
.text:00007F08
.text:00007F0A 04 20                         MOVS            R0, #4
.text:00007F0C 02 E0                         B               loc_7F14
.text:00007F0C
.text:00007F0E                               ; ---------------------------------------------------------------------------
.text:00007F0E
.text:00007F0E                               loc_7F0E                      ; CODE XREF: sub_7DF4+100↑j
.text:00007F0E 02 20                         MOVS            R0, #2
.text:00007F10 00 E0                         B               loc_7F14
.text:00007F10
.text:00007F12                               ; ---------------------------------------------------------------------------
.text:00007F12
.text:00007F12                               loc_7F12                      ; CODE XREF: sub_7DF4+10A↑j
.text:00007F12 20 20                         MOVS            R0, #0x20 ; ' '
.text:00007F12
.text:00007F14
.text:00007F14                               loc_7F14                      ; CODE XREF: sub_7DF4+118↑j
.text:00007F14                                                             ; sub_7DF4+11C↑j
.text:00007F14 CB F8 AC 00                   STR.W           R0, [R11,#0xAC]
.text:00007F14
.text:00007F18
.text:00007F18                               loc_7F18                      ; CODE XREF: sub_7DF4+F6↑j
.text:00007F18                                                             ; sub_7DF4+114↑j
.text:00007F18 58 46                         MOV             R0, R11
.text:00007F1A FD F7 09 FC                   BL              sub_5730
.text:00007F1A
.text:00007F1E CB F8 AC 40                   STR.W           R4, [R11,#0xAC]
.text:00007F1E
.text:00007F22
.text:00007F22                               loc_7F22                      ; CODE XREF: sub_7DF4+CE↑j
.text:00007F22                                                             ; sub_7DF4+D4↑j
.text:00007F22 48 46                         MOV             R0, R9        ; mutex
.text:00007F24 FB F7 8E E8                   BLX             pthread_mutex_unlock
.text:00007F24
.text:00007F28 40 46                         MOV             R0, R8        ; mutex
.text:00007F2A FB F7 8C E8                   BLX             pthread_mutex_unlock
.text:00007F2A
.text:00007F2E 50 46                         MOV             R0, R10
.text:00007F30 FB F7 6C E9                   BLX             str_parms_destroy
.text:00007F30
.text:00007F34 0F 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x7F3C)
.text:00007F36 0A 99                         LDR             R1, [SP,#0x50+var_28]
.text:00007F38 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00007F3A 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00007F3C 00 68                         LDR             R0, [R0]
.text:00007F3E 40 1A                         SUBS            R0, R0, R1
.text:00007F40 02 BF                         ITTT EQ
.text:00007F42 38 46                         MOVEQ           R0, R7
.text:00007F44 0B B0                         ADDEQ           SP, SP, #0x2C ; ','
.text:00007F46 BD E8 F0 8F                   POPEQ.W         {R4-R11,PC}
.text:00007F46
.text:00007F4A FB F7 4C E8                   BLX             __stack_chk_fail
.text:00007F4A
.text:00007F4A                               ; End of function sub_7DF4
.text:00007F4A
.text:00007F4A                               ; ---------------------------------------------------------------------------
.text:00007F4E 00 BF                         ALIGN 0x10
.text:00007F50 92 8F 00 00                   off_7F50 DCD __stack_chk_guard_ptr - 0x7E02
.text:00007F50                                                             ; DATA XREF: sub_7DF4+8↑r
.text:00007F54 23 58 00 00                   off_7F54 DCD aInputSource - 0x7E32
.text:00007F54                                                             ; DATA XREF: sub_7DF4+32↑r
.text:00007F54                                                             ; "input_source"
.text:00007F58 51 3C 00 00                   off_7F58 DCD aAudioHwPrimary - 0x7E4E
.text:00007F58                                                             ; DATA XREF: sub_7DF4+50↑r
.text:00007F58                                                             ; "audio_hw_primary"
.text:00007F5C 0E 58 00 00                   off_7F5C DCD aSInputSourceCh - 0x7E54
.text:00007F5C                                                             ; DATA XREF: sub_7DF4+52↑r
.text:00007F5C                                                             ; "%s(): input_source change: (0x%x >> 0x%"...
.text:00007F60 36 58 00 00                   off_7F60 DCD aInSetParameter - 0x7E56
.text:00007F60                                                             ; DATA XREF: sub_7DF4+54↑r
.text:00007F60                                                             ; "in_set_parameters"
.text:00007F64 97 50 00 00                   off_7F64 DCD aRouting - 0x7E86
.text:00007F64                                                             ; DATA XREF: sub_7DF4:loc_7E7A↑r
.text:00007F64                                                             ; "routing"
.text:00007F68 FB 3B 00 00                   off_7F68 DCD aAudioHwPrimary - 0x7EA4
.text:00007F68                                                             ; DATA XREF: sub_7DF4+A6↑r
.text:00007F68                                                             ; "audio_hw_primary"
.text:00007F6C F4 57 00 00                   off_7F6C DCD aSInDeviceChang - 0x7EAA
.text:00007F6C                                                             ; DATA XREF: sub_7DF4+A8↑r
.text:00007F6C                                                             ; "%s(): in_device change: (0x%x >> 0x%x)"
.text:00007F70 E0 57 00 00                   off_7F70 DCD aInSetParameter - 0x7EAC
.text:00007F70                                                             ; DATA XREF: sub_7DF4+AA↑r
.text:00007F70                                                             ; "in_set_parameters"
.text:00007F74 58 8E 00 00                   off_7F74 DCD __stack_chk_guard_ptr - 0x7F3C
.text:00007F74                                                             ; DATA XREF: sub_7DF4+140↑r
.text:00007F74                               ; } // starts at 7DF4
.text:00007F78
.text:00007F78                               ; =============== S U B R O U T I N E =======================================
.text:00007F78
.text:00007F78
.text:00007F78                               sub_7F78                      ; DATA XREF: sub_52F4+138↑o
.text:00007F78                                                             ; sub_52F4+13A↑o
.text:00007F78                                                             ; .text:off_54FC↑o
.text:00007F78                               ; __unwind {
.text:00007F78 01 48                         LDR             R0, =(unk_D192 - 0x7F7E)
.text:00007F7A 78 44                         ADD             R0, PC        ; unk_D192
.text:00007F7C 03 F0 58 BB                   B.W             j_strdup
.text:00007F7C
.text:00007F7C                               ; End of function sub_7F78
.text:00007F7C
.text:00007F7C                               ; ---------------------------------------------------------------------------
.text:00007F80 14 52 00 00                   off_7F80 DCD unk_D192 - 0x7F7E
.text:00007F80                                                             ; DATA XREF: sub_7F78↑r
.text:00007F84
.text:00007F84                               ; =============== S U B R O U T I N E =======================================
.text:00007F84
.text:00007F84
.text:00007F84                               ; int sub_7F84()
.text:00007F84                               sub_7F84                      ; DATA XREF: sub_52F4+13E↑o
.text:00007F84                                                             ; sub_52F4+140↑o
.text:00007F84                                                             ; .text:off_5500↑o
.text:00007F84 00 20                         MOVS            R0, #0
.text:00007F86 70 47                         BX              LR
.text:00007F86
.text:00007F86                               ; End of function sub_7F84
.text:00007F86
.text:00007F88
.text:00007F88                               ; =============== S U B R O U T I N E =======================================
.text:00007F88
.text:00007F88
.text:00007F88                               ; int sub_7F88()
.text:00007F88                               sub_7F88                      ; DATA XREF: sub_52F4+144↑o
.text:00007F88                                                             ; sub_52F4+146↑o
.text:00007F88                                                             ; .text:off_5504↑o
.text:00007F88 00 20                         MOVS            R0, #0
.text:00007F8A 70 47                         BX              LR
.text:00007F8A
.text:00007F8A                               ; End of function sub_7F88
.text:00007F8A
.text:00007F8C
.text:00007F8C                               ; =============== S U B R O U T I N E =======================================
.text:00007F8C
.text:00007F8C
.text:00007F8C                               ; int sub_7F8C()
.text:00007F8C                               sub_7F8C                      ; DATA XREF: sub_52F4+14A↑o
.text:00007F8C                                                             ; sub_52F4+14C↑o
.text:00007F8C                                                             ; .text:off_5508↑o
.text:00007F8C 00 20                         MOVS            R0, #0
.text:00007F8E 70 47                         BX              LR
.text:00007F8E                               ; } // starts at 7F78
.text:00007F8E
.text:00007F8E                               ; End of function sub_7F8C
.text:00007F8E
.text:00007F90
.text:00007F90                               ; =============== S U B R O U T I N E =======================================
.text:00007F90
.text:00007F90
.text:00007F90                               ; unsigned int __fastcall sub_7F90(int, char *, unsigned int)
.text:00007F90                               sub_7F90                      ; DATA XREF: sub_52F4+150↑o
.text:00007F90                                                             ; sub_52F4+152↑o
.text:00007F90                                                             ; .text:off_550C↑o
.text:00007F90
.text:00007F90                               var_60= -0x60
.text:00007F90                               var_58= -0x58
.text:00007F90                               var_4C= -0x4C
.text:00007F90                               var_48= -0x48
.text:00007F90                               var_44= -0x44
.text:00007F90                               newthread= -0x40
.text:00007F90                               mutex= -0x3C
.text:00007F90                               var_38= -0x38
.text:00007F90                               var_34= -0x34
.text:00007F90                               var_30= -0x30
.text:00007F90                               var_2C= -0x2C
.text:00007F90                               var_28= -0x28
.text:00007F90
.text:00007F90                               ; __unwind {
.text:00007F90 2D E9 F0 4F                   PUSH.W          {R4-R11,LR}
.text:00007F94 8F B0                         SUB             SP, SP, #0x3C
.text:00007F96 05 46                         MOV             R5, R0
.text:00007F98 DF F8 C4 09                   LDR.W           R0, =(__stack_chk_guard_ptr - 0x7FA4)
.text:00007F9C 0C 46                         MOV             R4, R1
.text:00007F9E 90 46                         MOV             R8, R2
.text:00007FA0 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00007FA2 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00007FA4 00 68                         LDR             R0, [R0]
.text:00007FA6 0E 90                         STR             R0, [SP,#0x60+var_28]
.text:00007FA8 28 46                         MOV             R0, R5
.text:00007FAA 29 69                         LDR             R1, [R5,#0x10]
.text:00007FAC D5 F8 AC 70                   LDR.W           R7, [R5,#0xAC]
.text:00007FB0 88 47                         BLX             R1
.text:00007FB0
.text:00007FB2 00 F0 7F 41                   AND.W           R1, R0, #0xFF000000
.text:00007FB6 B1 F1 50 6F                   CMP.W           R1, #0xD000000
.text:00007FBA 18 BF                         IT NE
.text:00007FBC 00 29                         CMPNE           R1, #0
.text:00007FBE 0A D1                         BNE             loc_7FD6
.text:00007FBE
.text:00007FC0 41 1E                         SUBS            R1, R0, #1    ; switch 6 cases
.text:00007FC2 05 29                         CMP             R1, #5
.text:00007FC4 0B D8                         BHI             def_7FC8      ; jumptable 00007FC8 default case
.text:00007FC4
.text:00007FC6 0A 94                         STR             R4, [SP,#0x60+var_38]
.text:00007FC8 DF E8 01 F0                   TBB.W           [PC,R1]       ; switch jump
.text:00007FC8
.text:00007FC8                               ; ---------------------------------------------------------------------------
.text:00007FCC 0D                            jpt_7FC8 DCB 0xD              ; jump table for switch statement
.text:00007FCD 0F                            DCB 0xF
.text:00007FCE 03                            DCB 3
.text:00007FCF 03                            DCB 3
.text:00007FD0 03                            DCB 3
.text:00007FD1 11                            DCB 0x11
.text:00007FD2                               ; ---------------------------------------------------------------------------
.text:00007FD2
.text:00007FD2                               loc_7FD2                      ; CODE XREF: sub_7F90+38↑j
.text:00007FD2 04 24                         MOVS            R4, #4        ; jumptable 00007FC8 cases 3-5
.text:00007FD4 0E E0                         B               loc_7FF4
.text:00007FD4
.text:00007FD6                               ; ---------------------------------------------------------------------------
.text:00007FD6
.text:00007FD6                               loc_7FD6                      ; CODE XREF: sub_7F90+2E↑j
.text:00007FD6 0A 94                         STR             R4, [SP,#0x60+var_38]
.text:00007FD8 4F F0 01 0B                   MOV.W           R11, #1
.text:00007FDC 31 E0                         B               loc_8042
.text:00007FDC
.text:00007FDE                               ; ---------------------------------------------------------------------------
.text:00007FDE
.text:00007FDE                               def_7FC8                      ; CODE XREF: sub_7F90+34↑j
.text:00007FDE 0A 94                         STR             R4, [SP,#0x60+var_38] ; jumptable 00007FC8 default case
.text:00007FE0 B0 F1 50 6F                   CMP.W           R0, #0xD000000
.text:00007FE4 05 D1                         BNE             loc_7FF2
.text:00007FE4
.text:00007FE6
.text:00007FE6                               loc_7FE6                      ; CODE XREF: sub_7F90+38↑j
.text:00007FE6 02 24                         MOVS            R4, #2        ; jumptable 00007FC8 case 1
.text:00007FE8 04 E0                         B               loc_7FF4
.text:00007FE8
.text:00007FEA                               ; ---------------------------------------------------------------------------
.text:00007FEA
.text:00007FEA                               loc_7FEA                      ; CODE XREF: sub_7F90+38↑j
.text:00007FEA 01 24                         MOVS            R4, #1        ; jumptable 00007FC8 case 2
.text:00007FEC 02 E0                         B               loc_7FF4
.text:00007FEC
.text:00007FEE                               ; ---------------------------------------------------------------------------
.text:00007FEE
.text:00007FEE                               loc_7FEE                      ; CODE XREF: sub_7F90+38↑j
.text:00007FEE 03 24                         MOVS            R4, #3        ; jumptable 00007FC8 case 6
.text:00007FF0 00 E0                         B               loc_7FF4
.text:00007FF0
.text:00007FF2                               ; ---------------------------------------------------------------------------
.text:00007FF2
.text:00007FF2                               loc_7FF2                      ; CODE XREF: sub_7F90+54↑j
.text:00007FF2 00 24                         MOVS            R4, #0
.text:00007FF2
.text:00007FF4
.text:00007FF4                               loc_7FF4                      ; CODE XREF: sub_7F90+44↑j
.text:00007FF4                                                             ; sub_7F90+58↑j
.text:00007FF4                                                             ; sub_7F90+5C↑j
.text:00007FF4                                                             ; sub_7F90+60↑j
.text:00007FF4 E9 68                         LDR             R1, [R5,#0xC]
.text:00007FF6 28 46                         MOV             R0, R5
.text:00007FF8 88 47                         BLX             R1
.text:00007FF8
.text:00007FFA 02 21                         MOVS            R1, #2
.text:00007FFC B1 EB 90 7F                   CMP.W           R1, R0,LSR#30
.text:00008000 05 D0                         BEQ             loc_800E
.text:00008000
.text:00008002 81 0F                         LSRS            R1, R0, #0x1E
.text:00008004 D1 B9                         CBNZ            R1, loc_803C
.text:00008004
.text:00008006 4F F6 FC 71                   MOVW            R1, #0xFFFC
.text:0000800A 08 40                         ANDS            R0, R1
.text:0000800C 01 E0                         B               loc_8012
.text:0000800C
.text:0000800E                               ; ---------------------------------------------------------------------------
.text:0000800E
.text:0000800E                               loc_800E                      ; CODE XREF: sub_7F90+70↑j
.text:0000800E 20 F0 40 40                   BIC.W           R0, R0, #0xC0000000
.text:0000800E
.text:00008012
.text:00008012                               loc_8012                      ; CODE XREF: sub_7F90+7C↑j
.text:00008012 4F F0 55 31                   MOV.W           R1, #0x55555555
.text:00008016 01 EA 50 01                   AND.W           R1, R1, R0,LSR#1
.text:0000801A 40 1A                         SUBS            R0, R0, R1
.text:0000801C 4F F0 33 31                   MOV.W           R1, #0x33333333
.text:00008020 01 EA 90 01                   AND.W           R1, R1, R0,LSR#2
.text:00008024 20 F0 CC 30                   BIC.W           R0, R0, #0xCCCCCCCC
.text:00008028 08 44                         ADD             R0, R1
.text:0000802A 4F F0 01 31                   MOV.W           R1, #0x1010101
.text:0000802E 00 EB 10 10                   ADD.W           R0, R0, R0,LSR#4
.text:00008032 20 F0 F0 30                   BIC.W           R0, R0, #0xF0F0F0F0
.text:00008036 48 43                         MULS            R0, R1
.text:00008038 00 0E                         LSRS            R0, R0, #0x18
.text:0000803A 00 E0                         B               loc_803E
.text:0000803A
.text:0000803C                               ; ---------------------------------------------------------------------------
.text:0000803C
.text:0000803C                               loc_803C                      ; CODE XREF: sub_7F90+74↑j
.text:0000803C 00 20                         MOVS            R0, #0
.text:0000803C
.text:0000803E
.text:0000803E                               loc_803E                      ; CODE XREF: sub_7F90+AA↑j
.text:0000803E 00 FB 04 FB                   MUL.W           R11, R0, R4
.text:0000803E
.text:00008042
.text:00008042                               loc_8042                      ; CODE XREF: sub_7F90+4C↑j
.text:00008042 07 F1 A4 09                   ADD.W           R9, R7, #0xA4
.text:00008046 6E 6C                         LDR             R6, [R5,#0x44]
.text:00008048 48 46                         MOV             R0, R9        ; mutex
.text:0000804A 05 97                         STR             R7, [SP,#0x60+var_4C]
.text:0000804C FA F7 E8 EF                   BLX             pthread_mutex_lock
.text:0000804C
.text:00008050 05 F1 74 00                   ADD.W           R0, R5, #0x74 ; 't' ; mutex
.text:00008054 09 90                         STR             R0, [SP,#0x60+mutex]
.text:00008056 FA F7 E4 EF                   BLX             pthread_mutex_lock
.text:00008056
.text:0000805A 95 F8 7C 00                   LDRB.W          R0, [R5,#0x7C]
.text:0000805E 00 28                         CMP             R0, #0
.text:00008060 00 F0 7A 81                   BEQ.W           loc_8358
.text:00008060
.text:00008064 DF F8 FC 18                   LDR.W           R1, =(aAudioHwPrimary - 0x8076) ; "audio_hw_primary"
.text:00008068 03 20                         MOVS            R0, #3
.text:0000806A DF F8 FC 28                   LDR.W           R2, =(aS_0 - 0x807C) ; "%s():..."
.text:0000806E DF F8 FC 38                   LDR.W           R3, =(aStartInputStre - 0x807E) ; "start_input_stream"
.text:00008072 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00008074 D5 F8 AC A0                   LDR.W           R10, [R5,#0xAC]
.text:00008078 7A 44                         ADD             R2, PC        ; "%s():..."
.text:0000807A 7B 44                         ADD             R3, PC        ; "start_input_stream"
.text:0000807C DA F8 00 41                   LDR.W           R4, [R10,#0x100]
.text:00008080 FA F7 AA EF                   BLX             __android_log_print
.text:00008080
.text:00008084 CA F8 FC 50                   STR.W           R5, [R10,#0xFC]
.text:00008088 DA F8 A8 00                   LDR.W           R0, [R10,#0xA8]
.text:0000808C 02 28                         CMP             R0, #2
.text:0000808E 09 D1                         BNE             loc_80A4
.text:0000808E
.text:00008090 DF F8 E8 08                   LDR.W           R0, =(pcm_config_voice_call_ptr - 0x809C)
.text:00008094 DF F8 E8 18                   LDR.W           R1, =(pcm_config_in_ptr - 0x80A0)
.text:00008098 78 44                         ADD             R0, PC        ; pcm_config_voice_call_ptr
.text:0000809A 00 68                         LDR             R0, [R0]      ; pcm_config_voice_call
.text:0000809C 79 44                         ADD             R1, PC        ; pcm_config_in_ptr
.text:0000809E 09 68                         LDR             R1, [R1]      ; pcm_config_in
.text:000080A0 40 68                         LDR             R0, [R0,#(dword_1105C - 0x11058)]
.text:000080A2 27 E0                         B               loc_80F4
.text:000080A2
.text:000080A4                               ; ---------------------------------------------------------------------------
.text:000080A4
.text:000080A4                               loc_80A4                      ; CODE XREF: sub_7F90+FE↑j
.text:000080A4 D5 F8 9C 00                   LDR.W           R0, [R5,#0x9C]
.text:000080A8 06 28                         CMP             R0, #6
.text:000080AA 09 D1                         BNE             loc_80C0
.text:000080AA
.text:000080AC A8 6C                         LDR             R0, [R5,#0x48]
.text:000080AE 01 28                         CMP             R0, #1
.text:000080B0 06 D1                         BNE             loc_80C0
.text:000080B0
.text:000080B2 DF F8 C4 08                   LDR.W           R0, =(pcm_config_in_ptr - 0x80BA)
.text:000080B6 78 44                         ADD             R0, PC        ; pcm_config_in_ptr
.text:000080B8 01 68                         LDR             R1, [R0]      ; pcm_config_in
.text:000080BA 4F F4 7A 50                   MOV.W           R0, #0x3E80
.text:000080BE 19 E0                         B               loc_80F4
.text:000080BE
.text:000080C0                               ; ---------------------------------------------------------------------------
.text:000080C0
.text:000080C0                               loc_80C0                      ; CODE XREF: sub_7F90+11A↑j
.text:000080C0                                                             ; sub_7F90+120↑j
.text:000080C0 94 B1                         CBZ             R4, loc_80E8
.text:000080C0
.text:000080C2 21 46                         MOV             R1, R4
.text:000080C4 51 F8 68 0F                   LDR.W           R0, [R1,#0x68]!
.text:000080C8 70 B1                         CBZ             R0, loc_80E8
.text:000080C8
.text:000080CA A0 6F                         LDR             R0, [R4,#0x78]
.text:000080CC 4B F6 80 32                   MOVW            R2, #0xBB80
.text:000080D0 90 42                         CMP             R0, R2
.text:000080D2 1C BF                         ITT NE
.text:000080D4 4A F6 44 42                   MOVWNE          R2, #0xAC44
.text:000080D8 90 42                         CMPNE           R0, R2
.text:000080DA 05 D1                         BNE             loc_80E8
.text:000080DA
.text:000080DC DF F8 90 28                   LDR.W           R2, =(pcm_config_in_ptr - 0x80E4)
.text:000080E0 7A 44                         ADD             R2, PC        ; pcm_config_in_ptr
.text:000080E2 12 68                         LDR             R2, [R2]      ; pcm_config_in
.text:000080E4 50 60                         STR             R0, [R2,#(off_11034 - 0x11030)] ; "bluetooth_nrec=%d"
.text:000080E6 09 E0                         B               loc_80FC
.text:000080E6
.text:000080E8                               ; ---------------------------------------------------------------------------
.text:000080E8
.text:000080E8                               loc_80E8                      ; CODE XREF: sub_7F90:loc_80C0↑j
.text:000080E8                                                             ; sub_7F90+138↑j
.text:000080E8                                                             ; sub_7F90+14A↑j
.text:000080E8 DF F8 88 08                   LDR.W           R0, =(pcm_config_in_ptr - 0x80F0)
.text:000080EC 78 44                         ADD             R0, PC        ; pcm_config_in_ptr
.text:000080EE 01 68                         LDR             R1, [R0]      ; pcm_config_in
.text:000080F0 4B F6 80 30                   MOVW            R0, #0xBB80
.text:000080F0
.text:000080F4
.text:000080F4                               loc_80F4                      ; CODE XREF: sub_7F90+112↑j
.text:000080F4                                                             ; sub_7F90+12E↑j
.text:000080F4 48 60                         STR             R0, [R1,#(off_11034 - 0x11030)] ; "bluetooth_nrec=%d"
.text:000080F6 5C B3                         CBZ             R4, loc_8150
.text:000080F6
.text:000080F8 04 F1 68 01                   ADD.W           R1, R4, #0x68 ; 'h'
.text:000080F8
.text:000080FC
.text:000080FC                               loc_80FC                      ; CODE XREF: sub_7F90+156↑j
.text:000080FC 09 68                         LDR             R1, [R1]
.text:000080FE 39 B3                         CBZ             R1, loc_8150
.text:000080FE
.text:00008100 DF F8 80 18                   LDR.W           R1, =(pcm_config_in_ptr - 0x810C)
.text:00008104 D4 F8 84 20                   LDR.W           R2, [R4,#0x84]
.text:00008108 79 44                         ADD             R1, PC        ; pcm_config_in_ptr
.text:0000810A 09 68                         LDR             R1, [R1]      ; pcm_config_in
.text:0000810C 09 69                         LDR             R1, [R1,#(dword_11040 - 0x11030)]
.text:0000810E 8A 42                         CMP             R2, R1
.text:00008110 02 D1                         BNE             loc_8118
.text:00008110
.text:00008112 A1 6F                         LDR             R1, [R4,#0x78]
.text:00008114 81 42                         CMP             R1, R0
.text:00008116 1B D0                         BEQ             loc_8150
.text:00008116
.text:00008118
.text:00008118                               loc_8118                      ; CODE XREF: sub_7F90+180↑j
.text:00008118 04 F1 64 07                   ADD.W           R7, R4, #0x64 ; 'd'
.text:0000811C 38 46                         MOV             R0, R7        ; mutex
.text:0000811E FA F7 80 EF                   BLX             pthread_mutex_lock
.text:0000811E
.text:00008122 DF F8 64 18                   LDR.W           R1, =(aAudioHwPrimary - 0x8134) ; "audio_hw_primary"
.text:00008126 02 20                         MOVS            R0, #2
.text:00008128 DF F8 60 28                   LDR.W           R2, =(aSSyncWithInput - 0x8136) ; "%s(): sync with input stream, standby o"...
.text:0000812C DF F8 60 38                   LDR.W           R3, =(aStartInputStre - 0x8138) ; "start_input_stream"
.text:00008130 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00008132 7A 44                         ADD             R2, PC        ; "%s(): sync with input stream, standby o"...
.text:00008134 7B 44                         ADD             R3, PC        ; "start_input_stream"
.text:00008136 FA F7 50 EF                   BLX             __android_log_print
.text:00008136
.text:0000813A 20 46                         MOV             R0, R4
.text:0000813C FE F7 3C F8                   BL              sub_61B8
.text:0000813C
.text:00008140 38 46                         MOV             R0, R7        ; mutex
.text:00008142 FA F7 80 EF                   BLX             pthread_mutex_unlock
.text:00008142
.text:00008146 DF F8 4C 08                   LDR.W           R0, =(pcm_config_in_ptr - 0x814E)
.text:0000814A 78 44                         ADD             R0, PC        ; pcm_config_in_ptr
.text:0000814C 00 68                         LDR             R0, [R0]      ; pcm_config_in
.text:0000814E 40 68                         LDR             R0, [R0,#(off_11034 - 0x11030)] ; "bluetooth_nrec=%d"
.text:0000814E
.text:00008150
.text:00008150                               loc_8150                      ; CODE XREF: sub_7F90+166↑j
.text:00008150                                                             ; sub_7F90+16E↑j
.text:00008150                                                             ; sub_7F90+186↑j
.text:00008150 DF F8 44 18                   LDR.W           R1, =(pcm_config_in_ptr - 0x815A)
.text:00008154 00 23                         MOVS            R3, #0
.text:00008156 79 44                         ADD             R1, PC        ; pcm_config_in_ptr
.text:00008158 0C 68                         LDR             R4, [R1]      ; pcm_config_in
.text:0000815A 21 68                         LDR             R1, [R4]
.text:0000815C 22 69                         LDR             R2, [R4,#(dword_11040 - 0x11030)]
.text:0000815E CD E9 00 33                   STRD.W          R3, R3, [SP,#0x60+var_60]
.text:00008162 02 AB                         ADD             R3, SP, #0x60+var_58
.text:00008164 07 C3                         STM             R3!, {R0-R2}
.text:00008166 02 20                         MOVS            R0, #2
.text:00008168 DF F8 30 18                   LDR.W           R1, =(aAudioHwPrimary - 0x8178) ; "audio_hw_primary"
.text:0000816C DF F8 30 28                   LDR.W           R2, =(aSPcmOpenCardDD - 0x817A) ; "%s(): pcm_open card=%d, device=%d, samp"...
.text:00008170 DF F8 30 38                   LDR.W           R3, =(aStartInputStre - 0x817C) ; "start_input_stream"
.text:00008174 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00008176 7A 44                         ADD             R2, PC        ; "%s(): pcm_open card=%d, device=%d, samp"...
.text:00008178 7B 44                         ADD             R3, PC        ; "start_input_stream"
.text:0000817A FA F7 2E EF                   BLX             __android_log_print
.text:0000817A
.text:0000817E 00 20                         MOVS            R0, #0
.text:00008180 00 21                         MOVS            R1, #0
.text:00008182 4F F0 80 52                   MOV.W           R2, #0x10000000
.text:00008186 23 46                         MOV             R3, R4
.text:00008188 FA F7 62 EF                   BLX             pcm_open
.text:00008188
.text:0000818C A8 67                         STR             R0, [R5,#0x78]
.text:0000818E 10 B1                         CBZ             R0, loc_8196
.text:0000818E
.text:00008190 FA F7 64 EF                   BLX             pcm_is_ready
.text:00008190
.text:00008194 E0 B1                         CBZ             R0, loc_81D0
.text:00008194
.text:00008196
.text:00008196                               loc_8196                      ; CODE XREF: sub_7F90+1FE↑j
.text:00008196 DF F8 1C 08                   LDR.W           R0, =(pcm_config_in_ptr - 0x81A0)
.text:0000819A 29 69                         LDR             R1, [R5,#0x10]
.text:0000819C 78 44                         ADD             R0, PC        ; pcm_config_in_ptr
.text:0000819E 00 68                         LDR             R0, [R0]      ; pcm_config_in
.text:000081A0 04 68                         LDR             R4, [R0]
.text:000081A2 87 68                         LDR             R7, [R0,#(off_11038 - 0x11030)] ; stru_400
.text:000081A4 28 46                         MOV             R0, R5
.text:000081A6 88 47                         BLX             R1
.text:000081A6
.text:000081A8 7C 43                         MULS            R4, R7
.text:000081AA 00 F0 7F 41                   AND.W           R1, R0, #0xFF000000
.text:000081AE B1 F1 50 6F                   CMP.W           R1, #0xD000000
.text:000081B2 18 BF                         IT NE
.text:000081B4 00 29                         CMPNE           R1, #0
.text:000081B6 09 D1                         BNE             loc_81CC
.text:000081B6
.text:000081B8 41 1E                         SUBS            R1, R0, #1    ; switch 6 cases
.text:000081BA 05 29                         CMP             R1, #5
.text:000081BC 19 D8                         BHI             def_81BE      ; jumptable 000081BE default case
.text:000081BC
.text:000081BE DF E8 01 F0                   TBB.W           [PC,R1]       ; switch jump
.text:000081BE
.text:000081BE                               ; ---------------------------------------------------------------------------
.text:000081C2 1B                            jpt_81BE DCB 0x1B             ; jump table for switch statement
.text:000081C3 1D                            DCB 0x1D
.text:000081C4 03                            DCB 3
.text:000081C5 03                            DCB 3
.text:000081C6 03                            DCB 3
.text:000081C7 1F                            DCB 0x1F
.text:000081C8                               ; ---------------------------------------------------------------------------
.text:000081C8
.text:000081C8                               loc_81C8                      ; CODE XREF: sub_7F90+22E↑j
.text:000081C8 04 27                         MOVS            R7, #4        ; jumptable 000081BE cases 3-5
.text:000081CA 1C E0                         B               loc_8206
.text:000081CA
.text:000081CC                               ; ---------------------------------------------------------------------------
.text:000081CC
.text:000081CC                               loc_81CC                      ; CODE XREF: sub_7F90+226↑j
.text:000081CC 01 20                         MOVS            R0, #1
.text:000081CE 40 E0                         B               loc_8252
.text:000081CE
.text:000081D0                               ; ---------------------------------------------------------------------------
.text:000081D0
.text:000081D0                               loc_81D0                      ; CODE XREF: sub_7F90+204↑j
.text:000081D0 A8 6F                         LDR             R0, [R5,#0x78]
.text:000081D2 FA F7 68 EF                   BLX             pcm_get_error
.text:000081D2
.text:000081D6 DF F8 D0 17                   LDR.W           R1, =(aAudioHwPrimary - 0x81E6) ; "audio_hw_primary"
.text:000081DA DF F8 D0 27                   LDR.W           R2, =(aSPcmOpenPcmCar - 0x81EA) ; "%s(): pcm_open(PCM_CARD_PRIMARY) failed"...
.text:000081DE DF F8 D0 37                   LDR.W           R3, =(aStartInputStre - 0x81EC) ; "start_input_stream"
.text:000081E2 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000081E4 00 90                         STR             R0, [SP,#0x60+var_60]
.text:000081E6 7A 44                         ADD             R2, PC        ; "%s(): pcm_open(PCM_CARD_PRIMARY) failed"...
.text:000081E8 7B 44                         ADD             R3, PC        ; "start_input_stream"
.text:000081EA 06 20                         MOVS            R0, #6
.text:000081EC FA F7 F4 EE                   BLX             __android_log_print
.text:000081EC
.text:000081F0 6B E0                         B               loc_82CA
.text:000081F0
.text:000081F2                               ; ---------------------------------------------------------------------------
.text:000081F2
.text:000081F2                               def_81BE                      ; CODE XREF: sub_7F90+22C↑j
.text:000081F2 B0 F1 50 6F                   CMP.W           R0, #0xD000000 ; jumptable 000081BE default case
.text:000081F6 05 D1                         BNE             loc_8204
.text:000081F6
.text:000081F8
.text:000081F8                               loc_81F8                      ; CODE XREF: sub_7F90+22E↑j
.text:000081F8 02 27                         MOVS            R7, #2        ; jumptable 000081BE case 1
.text:000081FA 04 E0                         B               loc_8206
.text:000081FA
.text:000081FC                               ; ---------------------------------------------------------------------------
.text:000081FC
.text:000081FC                               loc_81FC                      ; CODE XREF: sub_7F90+22E↑j
.text:000081FC 01 27                         MOVS            R7, #1        ; jumptable 000081BE case 2
.text:000081FE 02 E0                         B               loc_8206
.text:000081FE
.text:00008200                               ; ---------------------------------------------------------------------------
.text:00008200
.text:00008200                               loc_8200                      ; CODE XREF: sub_7F90+22E↑j
.text:00008200 03 27                         MOVS            R7, #3        ; jumptable 000081BE case 6
.text:00008202 00 E0                         B               loc_8206
.text:00008202
.text:00008204                               ; ---------------------------------------------------------------------------
.text:00008204
.text:00008204                               loc_8204                      ; CODE XREF: sub_7F90+266↑j
.text:00008204 00 27                         MOVS            R7, #0
.text:00008204
.text:00008206
.text:00008206                               loc_8206                      ; CODE XREF: sub_7F90+23A↑j
.text:00008206                                                             ; sub_7F90+26A↑j
.text:00008206                                                             ; sub_7F90+26E↑j
.text:00008206                                                             ; sub_7F90+272↑j
.text:00008206 E9 68                         LDR             R1, [R5,#0xC]
.text:00008208 28 46                         MOV             R0, R5
.text:0000820A 88 47                         BLX             R1
.text:0000820A
.text:0000820C 02 21                         MOVS            R1, #2
.text:0000820E B1 EB 90 7F                   CMP.W           R1, R0,LSR#30
.text:00008212 05 D0                         BEQ             loc_8220
.text:00008212
.text:00008214 81 0F                         LSRS            R1, R0, #0x1E
.text:00008216 D1 B9                         CBNZ            R1, loc_824E
.text:00008216
.text:00008218 4F F6 FC 71                   MOVW            R1, #0xFFFC
.text:0000821C 08 40                         ANDS            R0, R1
.text:0000821E 01 E0                         B               loc_8224
.text:0000821E
.text:00008220                               ; ---------------------------------------------------------------------------
.text:00008220
.text:00008220                               loc_8220                      ; CODE XREF: sub_7F90+282↑j
.text:00008220 20 F0 40 40                   BIC.W           R0, R0, #0xC0000000
.text:00008220
.text:00008224
.text:00008224                               loc_8224                      ; CODE XREF: sub_7F90+28E↑j
.text:00008224 4F F0 55 31                   MOV.W           R1, #0x55555555
.text:00008228 01 EA 50 01                   AND.W           R1, R1, R0,LSR#1
.text:0000822C 40 1A                         SUBS            R0, R0, R1
.text:0000822E 4F F0 33 31                   MOV.W           R1, #0x33333333
.text:00008232 01 EA 90 01                   AND.W           R1, R1, R0,LSR#2
.text:00008236 20 F0 CC 30                   BIC.W           R0, R0, #0xCCCCCCCC
.text:0000823A 08 44                         ADD             R0, R1
.text:0000823C 4F F0 01 31                   MOV.W           R1, #0x1010101
.text:00008240 00 EB 10 10                   ADD.W           R0, R0, R0,LSR#4
.text:00008244 20 F0 F0 30                   BIC.W           R0, R0, #0xF0F0F0F0
.text:00008248 48 43                         MULS            R0, R1
.text:0000824A 00 0E                         LSRS            R0, R0, #0x18
.text:0000824C 00 E0                         B               loc_8250
.text:0000824C
.text:0000824E                               ; ---------------------------------------------------------------------------
.text:0000824E
.text:0000824E                               loc_824E                      ; CODE XREF: sub_7F90+286↑j
.text:0000824E 00 20                         MOVS            R0, #0
.text:0000824E
.text:00008250
.text:00008250                               loc_8250                      ; CODE XREF: sub_7F90+2BC↑j
.text:00008250 78 43                         MULS            R0, R7
.text:00008250
.text:00008252
.text:00008252                               loc_8252                      ; CODE XREF: sub_7F90+23E↑j
.text:00008252 04 FB 00 F0                   MUL.W           R0, R4, R0    ; size
.text:00008256 FA F7 5C EF                   BLX             malloc
.text:00008256
.text:0000825A C5 F8 90 00                   STR.W           R0, [R5,#0x90]
.text:0000825E D8 B3                         CBZ             R0, loc_82D8
.text:0000825E
.text:00008260 DF F8 54 07                   LDR.W           R0, =(pcm_config_in_ptr - 0x8268)
.text:00008264 78 44                         ADD             R0, PC        ; pcm_config_in_ptr
.text:00008266 01 68                         LDR             R1, [R0]      ; pcm_config_in
.text:00008268 D5 F8 80 00                   LDR.W           R0, [R5,#0x80]
.text:0000826C 49 68                         LDR             R1, [R1,#(off_11034 - 0x11030)] ; "bluetooth_nrec=%d"
.text:0000826E 88 42                         CMP             R0, R1
.text:00008270 3B D0                         BEQ             loc_82EA
.text:00008270
.text:00008272 DF F8 48 17                   LDR.W           R1, =(sub_8BD4+1 - 0x8280)
.text:00008276 2F 46                         MOV             R7, R5
.text:00008278 DF F8 44 27                   LDR.W           R2, =(pcm_config_in_ptr - 0x8286)
.text:0000827C 79 44                         ADD             R1, PC        ; sub_8BD4
.text:0000827E DF F8 50 37                   LDR.W           R3, =(aStartInputStre - 0x8290) ; "start_input_stream"
.text:00008282 7A 44                         ADD             R2, PC        ; pcm_config_in_ptr
.text:00008284 47 F8 88 1F                   STR.W           R1, [R7,#0x88]!
.text:00008288 DF F8 38 17                   LDR.W           R1, =(sub_8C90+1 - 0x8294)
.text:0000828C 7B 44                         ADD             R3, PC        ; "start_input_stream"
.text:0000828E 14 68                         LDR             R4, [R2]      ; pcm_config_in
.text:00008290 79 44                         ADD             R1, PC        ; sub_8C90
.text:00008292 DF F8 38 27                   LDR.W           R2, =(aSCreateResampl - 0x829E) ; "%s(): create_resampler: (%d >> %d)"
.text:00008296 79 60                         STR             R1, [R7,#4]
.text:00008298 61 68                         LDR             R1, [R4,#(off_11034 - 0x11030)] ; "bluetooth_nrec=%d"
.text:0000829A 7A 44                         ADD             R2, PC        ; "%s(): create_resampler: (%d >> %d)"
.text:0000829C CD E9 00 10                   STRD.W          R1, R0, [SP,#0x60+var_60]
.text:000082A0 03 20                         MOVS            R0, #3
.text:000082A2 DF F8 24 17                   LDR.W           R1, =(aAudioHwPrimary - 0x82AA) ; "audio_hw_primary"
.text:000082A6 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000082A8 FA F7 96 EE                   BLX             __android_log_print
.text:000082A8
.text:000082AC 60 68                         LDR             R0, [R4,#(off_11034 - 0x11030)] ; "bluetooth_nrec=%d"
.text:000082AE 3C 1F                         SUBS            R4, R7, #4
.text:000082B0 57 F8 08 1C                   LDR.W           R1, [R7,#-8]
.text:000082B4 01 22                         MOVS            R2, #1
.text:000082B6 04 23                         MOVS            R3, #4
.text:000082B8 CD E9 00 74                   STRD.W          R7, R4, [SP,#0x60+var_60]
.text:000082BC FB F7 54 E8                   BLX             create_resampler
.text:000082BC
.text:000082C0 80 B1                         CBZ             R0, loc_82E4
.text:000082C0
.text:000082C2 D5 F8 90 00                   LDR.W           R0, [R5,#0x90] ; ptr
.text:000082C6 FA F7 30 EF                   BLX             free
.text:000082C6
.text:000082CA
.text:000082CA                               loc_82CA                      ; CODE XREF: sub_7F90+260↑j
.text:000082CA A8 6F                         LDR             R0, [R5,#0x78]
.text:000082CC FA F7 F0 EE                   BLX             pcm_close
.text:000082CC
.text:000082D0 00 20                         MOVS            R0, #0
.text:000082D2 A8 67                         STR             R0, [R5,#0x78]
.text:000082D4 CA F8 FC 00                   STR.W           R0, [R10,#0xFC]
.text:000082D4
.text:000082D8
.text:000082D8                               loc_82D8                      ; CODE XREF: sub_7F90+2CE↑j
.text:000082D8 48 46                         MOV             R0, R9        ; mutex
.text:000082DA FA F7 B4 EE                   BLX             pthread_mutex_unlock
.text:000082DA
.text:000082DE DD F8 24 90                   LDR.W           R9, [SP,#0x60+mutex]
.text:000082E2 D4 E2                         B               loc_888E
.text:000082E2
.text:000082E4                               ; ---------------------------------------------------------------------------
.text:000082E4
.text:000082E4                               loc_82E4                      ; CODE XREF: sub_7F90+330↑j
.text:000082E4 20 68                         LDR             R0, [R4]
.text:000082E6 01 68                         LDR             R1, [R0]
.text:000082E8 88 47                         BLX             R1
.text:000082E8
.text:000082EA
.text:000082EA                               loc_82EA                      ; CODE XREF: sub_7F90+2E0↑j
.text:000082EA 00 20                         MOVS            R0, #0
.text:000082EC C5 F8 94 00                   STR.W           R0, [R5,#0x94]
.text:000082F0 DA F8 A8 00                   LDR.W           R0, [R10,#0xA8]
.text:000082F4 02 28                         CMP             R0, #2
.text:000082F6 03 D1                         BNE             loc_8300
.text:000082F6
.text:000082F8 04 20                         MOVS            R0, #4
.text:000082FA CA F8 C8 00                   STR.W           R0, [R10,#0xC8]
.text:000082FE 06 E0                         B               loc_830E
.text:000082FE
.text:00008300                               ; ---------------------------------------------------------------------------
.text:00008300
.text:00008300                               loc_8300                      ; CODE XREF: sub_7F90+366↑j
.text:00008300 D5 F8 9C 10                   LDR.W           R1, [R5,#0x9C]
.text:00008304 00 28                         CMP             R0, #0
.text:00008306 CA F8 C8 10                   STR.W           R1, [R10,#0xC8]
.text:0000830A 00 F0 F2 81                   BEQ.W           loc_86F2
.text:0000830A
.text:0000830E
.text:0000830E                               loc_830E                      ; CODE XREF: sub_7F90+36E↑j
.text:0000830E D5 F8 A0 00                   LDR.W           R0, [R5,#0xA0]
.text:00008312 54 46                         MOV             R4, R10
.text:00008314 CA F8 B0 00                   STR.W           R0, [R10,#0xB0]
.text:00008318 54 F8 AC 7F                   LDR.W           R7, [R4,#0xAC]!
.text:00008318
.text:0000831C
.text:0000831C                               loc_831C                      ; CODE XREF: sub_7F90+79A↓j
.text:0000831C                                                             ; sub_7F90+9CE↓j
.text:0000831C 50 46                         MOV             R0, R10
.text:0000831E FD F7 07 FA                   BL              sub_5730
.text:0000831E
.text:00008322 27 60                         STR             R7, [R4]
.text:00008324 64 21                         MOVS            R1, #0x64 ; 'd'
.text:00008326 D5 F8 80 00                   LDR.W           R0, [R5,#0x80]
.text:0000832A 48 43                         MULS            R0, R1
.text:0000832C 44 F6 D3 51 C1 F2 62 01       MOV             R1, #0x10624DD3
.text:00008334 A0 FB 01 01                   UMULL.W         R0, R1, R0, R1
.text:00008338 4F EA 91 10                   MOV.W           R0, R1,LSR#6
.text:0000833C 4F F6 FF 71                   MOVW            R1, #0xFFFF
.text:00008340 C5 F8 A8 00                   STR.W           R0, [R5,#0xA8]
.text:00008344 B1 FB F0 F0                   UDIV.W          R0, R1, R0
.text:00008348 A5 F8 A6 00                   STRH.W          R0, [R5,#0xA6]
.text:0000834C 4F F0 00 00                   MOV.W           R0, #0
.text:00008350 A5 F8 A4 00                   STRH.W          R0, [R5,#0xA4]
.text:00008354 85 F8 7C 00                   STRB.W          R0, [R5,#0x7C]
.text:00008354
.text:00008358
.text:00008358                               loc_8358                      ; CODE XREF: sub_7F90+D0↑j
.text:00008358 48 46                         MOV             R0, R9        ; mutex
.text:0000835A FA F7 74 EE                   BLX             pthread_mutex_unlock
.text:0000835A
.text:0000835E A8 6C                         LDR             R0, [R5,#0x48]
.text:00008360 00 28                         CMP             R0, #0
.text:00008362 00 F0 30 81                   BEQ.W           loc_85C6
.text:00008362
.text:00008366 06 F5 9C 20                   ADD.W           R0, R6, #0x4E000
.text:0000836A DF F8 68 A6                   LDR.W           R10, =(aAudioHwPrimary - 0x838A) ; "audio_hw_primary"
.text:0000836E 00 F5 17 77                   ADD.W           R7, R0, #0x25C
.text:00008372 06 F5 9C 20                   ADD.W           R0, R6, #0x4E000
.text:00008376 00 F5 15 70                   ADD.W           R0, R0, #0x254
.text:0000837A 0A 9C                         LDR             R4, [SP,#0x60+var_38]
.text:0000837C 07 90                         STR             R0, [SP,#0x60+var_44]
.text:0000837E 06 F5 9C 20                   ADD.W           R0, R6, #0x4E000
.text:00008382 00 F5 13 70                   ADD.W           R0, R0, #0x24C
.text:00008386 FA 44                         ADD             R10, PC       ; "audio_hw_primary"
.text:00008388 06 90                         STR             R0, [SP,#0x60+var_48]
.text:0000838A 05 F1 50 00                   ADD.W           R0, R5, #0x50 ; 'P'
.text:0000838E 08 90                         STR             R0, [SP,#0x60+newthread]
.text:00008390 0A E0                         B               loc_83A8
.text:00008390
.text:00008392                               ; ---------------------------------------------------------------------------
.text:00008392
.text:00008392                               loc_8392                      ; CODE XREF: sub_7F90+5FA↓j
.text:00008392 DF F8 A4 26                   LDR.W           R2, =(aCvqDataNotRead - 0x839E) ; "CVQ data not ready!"
.text:00008396 03 20                         MOVS            R0, #3
.text:00008398 51 46                         MOV             R1, R10
.text:0000839A 7A 44                         ADD             R2, PC        ; "CVQ data not ready!"
.text:0000839C FA F7 1C EE                   BLX             __android_log_print
.text:0000839C
.text:000083A0 42 F2 10 70                   MOVW            R0, #0x2710   ; useconds
.text:000083A4 FA F7 36 EE                   BLX             usleep
.text:000083A4
.text:000083A8
.text:000083A8                               loc_83A8                      ; CODE XREF: sub_7F90+400↑j
.text:000083A8 C5 F8 58 80                   STR.W           R8, [R5,#0x58]
.text:000083AC 68 6D                         LDR             R0, [R5,#0x54]
.text:000083AE 10 BB                         CBNZ            R0, loc_83F6
.text:000083AE
.text:000083B0 DF F8 6C 26                   LDR.W           R2, =(aStartPcmReadTh - 0x83BC) ; "#### start pcm read thread ####"
.text:000083B4 04 20                         MOVS            R0, #4
.text:000083B6 51 46                         MOV             R1, R10
.text:000083B8 7A 44                         ADD             R2, PC        ; "#### start pcm read thread ####"
.text:000083BA FA F7 0E EE                   BLX             __android_log_print
.text:000083BA
.text:000083BE DF F8 64 26                   LDR.W           R2, =(sub_8A58+1 - 0x83CC)
.text:000083C2 00 21                         MOVS            R1, #0        ; attr
.text:000083C4 08 98                         LDR             R0, [SP,#0x60+newthread] ; newthread
.text:000083C6 2B 46                         MOV             R3, R5        ; arg
.text:000083C8 7A 44                         ADD             R2, PC        ; sub_8A58 ; start_routine
.text:000083CA FA F7 98 EF                   BLX             pthread_create
.text:000083CA
.text:000083CE B0 F1 FF 3F                   CMP.W           R0, #0xFFFFFFFF
.text:000083D2 09 DD                         BLE             loc_83E8
.text:000083D2
.text:000083D4 DF F8 54 26                   LDR.W           R2, =(aPcmReadThreadC - 0x83E8) ; "#### Pcm read thread created successful"...
.text:000083D8 00 20                         MOVS            R0, #0
.text:000083DA E8 64                         STR             R0, [R5,#0x4C]
.text:000083DC 01 20                         MOVS            R0, #1
.text:000083DE 68 65                         STR             R0, [R5,#0x54]
.text:000083E0 04 20                         MOVS            R0, #4
.text:000083E2 51 46                         MOV             R1, R10
.text:000083E4 7A 44                         ADD             R2, PC        ; "#### Pcm read thread created successful"...
.text:000083E6 04 E0                         B               loc_83F2
.text:000083E6
.text:000083E8                               ; ---------------------------------------------------------------------------
.text:000083E8
.text:000083E8                               loc_83E8                      ; CODE XREF: sub_7F90+442↑j
.text:000083E8 DF F8 3C 26                   LDR.W           R2, =(aPcmReadThreadT - 0x83F4) ; "#### pcm_read_thread() thread creation "...
.text:000083EC 06 20                         MOVS            R0, #6
.text:000083EE 51 46                         MOV             R1, R10
.text:000083F0 7A 44                         ADD             R2, PC        ; "#### pcm_read_thread() thread creation "...
.text:000083F0
.text:000083F2
.text:000083F2                               loc_83F2                      ; CODE XREF: sub_7F90+456↑j
.text:000083F2 FA F7 F2 ED                   BLX             __android_log_print
.text:000083F2
.text:000083F6
.text:000083F6                               loc_83F6                      ; CODE XREF: sub_7F90+41E↑j
.text:000083F6 A8 6E                         LDR             R0, [R5,#0x68]
.text:000083F8 C0 B1                         CBZ             R0, loc_842C
.text:000083F8
.text:000083FA 69 6E                         LDR             R1, [R5,#0x64]
.text:000083FC B1 B1                         CBZ             R1, loc_842C
.text:000083FC
.text:000083FE 88 42                         CMP             R0, R1
.text:00008400 14 DB                         BLT             loc_842C
.text:00008400
.text:00008402 41 1A                         SUBS            R1, R0, R1
.text:00008404 41 45                         CMP             R1, R8
.text:00008406 11 D8                         BHI             loc_842C
.text:00008406
.text:00008408 71 68                         LDR             R1, [R6,#4]
.text:0000840A 79 B1                         CBZ             R1, loc_842C
.text:0000840A
.text:0000840C E9 6C                         LDR             R1, [R5,#0x4C]
.text:0000840E 81 B9                         CBNZ            R1, loc_8432
.text:0000840E
.text:00008410 01 20                         MOVS            R0, #1
.text:00008412 00 21                         MOVS            R1, #0        ; thread_return
.text:00008414 E8 64                         STR             R0, [R5,#0x4C]
.text:00008416 28 6D                         LDR             R0, [R5,#0x50] ; th
.text:00008418 FA F7 40 EF                   BLX             pthread_join
.text:00008418
.text:0000841C DF F8 30 26                   LDR.W           R2, =(aPcmReadThreadS - 0x8428) ; "#### Pcm read thread stopped successful"...
.text:00008420 03 20                         MOVS            R0, #3
.text:00008422 51 46                         MOV             R1, R10
.text:00008424 7A 44                         ADD             R2, PC        ; "#### Pcm read thread stopped successful"...
.text:00008426 FA F7 D8 ED                   BLX             __android_log_print
.text:00008426
.text:0000842A 78 E0                         B               loc_851E
.text:0000842A
.text:0000842C                               ; ---------------------------------------------------------------------------
.text:0000842C
.text:0000842C                               loc_842C                      ; CODE XREF: sub_7F90+468↑j
.text:0000842C                                                             ; sub_7F90+46C↑j
.text:0000842C                                                             ; sub_7F90+470↑j
.text:0000842C                                                             ; sub_7F90+476↑j
.text:0000842C                                                             ; sub_7F90+47A↑j
.text:0000842C E9 6C                         LDR             R1, [R5,#0x4C]
.text:0000842E 00 29                         CMP             R1, #0
.text:00008430 75 D0                         BEQ             loc_851E
.text:00008430
.text:00008432
.text:00008432                               loc_8432                      ; CODE XREF: sub_7F90+47E↑j
.text:00008432 69 6E                         LDR             R1, [R5,#0x64]
.text:00008434 40 1A                         SUBS            R0, R0, R1
.text:00008436 40 45                         CMP             R0, R8
.text:00008438 71 D2                         BCS             loc_851E
.text:00008438
.text:0000843A DF F8 00 26                   LDR.W           R2, =(aBeforeSlimRead - 0x8446) ; "before slim read"
.text:0000843E 02 20                         MOVS            R0, #2
.text:00008440 51 46                         MOV             R1, R10
.text:00008442 7A 44                         ADD             R2, PC        ; "before slim read"
.text:00008444 FA F7 C8 ED                   BLX             __android_log_print
.text:00008444
.text:00008448 E8 6E                         LDR             R0, [R5,#0x6C]
.text:0000844A 29 6E                         LDR             R1, [R5,#0x60]
.text:0000844C 40 44                         ADD             R0, R8
.text:0000844E 88 42                         CMP             R0, R1
.text:00008450 40 D2                         BCS             loc_84D4
.text:00008450
.text:00008452 AA 6E                         LDR             R2, [R5,#0x68]
.text:00008454 A8 6F                         LDR             R0, [R5,#0x78]
.text:00008456 02 EB 08 03                   ADD.W           R3, R2, R8
.text:0000845A 8B 42                         CMP             R3, R1
.text:0000845C 42 D9                         BLS             loc_84E4
.text:0000845C
.text:0000845E 21 46                         MOV             R1, R4
.text:00008460 42 46                         MOV             R2, R8
.text:00008462 0A 97                         STR             R7, [SP,#0x60+var_38]
.text:00008464 FA F7 92 EF                   BLX             pcm_read
.text:00008464
.text:00008468 83 46                         MOV             R11, R0
.text:0000846A 28 6E                         LDR             R0, [R5,#0x60]
.text:0000846C DF F8 D0 25                   LDR.W           R2, =(aBeforeWriteOve - 0x847C) ; "before write overflow - (write offset, "...
.text:00008470 51 46                         MOV             R1, R10
.text:00008472 AB 6E                         LDR             R3, [R5,#0x68]
.text:00008474 00 90                         STR             R0, [SP,#0x60+var_60]
.text:00008476 03 20                         MOVS            R0, #3
.text:00008478 7A 44                         ADD             R2, PC        ; "before write overflow - (write offset, "...
.text:0000847A FA F7 AE ED                   BLX             __android_log_print
.text:0000847A
.text:0000847E A1 46                         MOV             R9, R4
.text:00008480 A8 6E                         LDR             R0, [R5,#0x68]
.text:00008482 00 24                         MOVS            R4, #0
.text:00008484 29 6E                         LDR             R1, [R5,#0x60]
.text:00008486 BB F1 00 0F                   CMP.W           R11, #0
.text:0000848A 08 BF                         IT EQ
.text:0000848C 44 46                         MOVEQ           R4, R8
.text:0000848E 02 19                         ADDS            R2, R0, R4
.text:00008490 57 1A                         SUBS            R7, R2, R1
.text:00008492 E2 1B                         SUBS            R2, R4, R7
.text:00008494 01 2A                         CMP             R2, #1
.text:00008496 04 DB                         BLT             loc_84A2
.text:00008496
.text:00008498 E9 6D                         LDR             R1, [R5,#0x5C]
.text:0000849A 08 44                         ADD             R0, R1
.text:0000849C 49 46                         MOV             R1, R9
.text:0000849E FA F7 7C EF                   BLX             __aeabi_memcpy
.text:0000849E
.text:000084A2
.text:000084A2                               loc_84A2                      ; CODE XREF: sub_7F90+506↑j
.text:000084A2 00 20                         MOVS            R0, #0
.text:000084A4 09 EB 04 01                   ADD.W           R1, R9, R4
.text:000084A8 A8 66                         STR             R0, [R5,#0x68]
.text:000084AA C9 1B                         SUBS            R1, R1, R7
.text:000084AC E8 6D                         LDR             R0, [R5,#0x5C]
.text:000084AE 3A 46                         MOV             R2, R7
.text:000084B0 FA F7 72 EF                   BLX             __aeabi_memcpy
.text:000084B0
.text:000084B4 A8 6E                         LDR             R0, [R5,#0x68]
.text:000084B6 51 46                         MOV             R1, R10
.text:000084B8 DF F8 88 25                   LDR.W           R2, =(aAfterWriteOver - 0x84C4) ; "after write overflow - (write offset, m"...
.text:000084BC C3 19                         ADDS            R3, R0, R7
.text:000084BE AB 66                         STR             R3, [R5,#0x68]
.text:000084C0 7A 44                         ADD             R2, PC        ; "after write overflow - (write offset, m"...
.text:000084C2 E8 6E                         LDR             R0, [R5,#0x6C]
.text:000084C4 20 44                         ADD             R0, R4
.text:000084C6 E8 66                         STR             R0, [R5,#0x6C]
.text:000084C8 03 20                         MOVS            R0, #3
.text:000084CA 00 94                         STR             R4, [SP,#0x60+var_60]
.text:000084CC FA F7 84 ED                   BLX             __android_log_print
.text:000084CC
.text:000084D0 0A 9F                         LDR             R7, [SP,#0x60+var_38]
.text:000084D2 19 E0                         B               loc_8508
.text:000084D2
.text:000084D4                               ; ---------------------------------------------------------------------------
.text:000084D4
.text:000084D4                               loc_84D4                      ; CODE XREF: sub_7F90+4C0↑j
.text:000084D4 DF F8 74 25                   LDR.W           R2, =(aAfterSlimRead - 0x84E0) ; "after slim read"
.text:000084D8 02 20                         MOVS            R0, #2
.text:000084DA 51 46                         MOV             R1, R10
.text:000084DC 7A 44                         ADD             R2, PC        ; "after slim read"
.text:000084DE FA F7 7C ED                   BLX             __android_log_print
.text:000084DE
.text:000084E2 1C E0                         B               loc_851E
.text:000084E2
.text:000084E4                               ; ---------------------------------------------------------------------------
.text:000084E4
.text:000084E4                               loc_84E4                      ; CODE XREF: sub_7F90+4CC↑j
.text:000084E4 E9 6D                         LDR             R1, [R5,#0x5C]
.text:000084E6 A1 46                         MOV             R9, R4
.text:000084E8 11 44                         ADD             R1, R2
.text:000084EA 42 46                         MOV             R2, R8
.text:000084EC FA F7 4E EF                   BLX             pcm_read
.text:000084EC
.text:000084F0 83 46                         MOV             R11, R0
.text:000084F2 A8 6E                         LDR             R0, [R5,#0x68]
.text:000084F4 00 21                         MOVS            R1, #0
.text:000084F6 BB F1 00 0F                   CMP.W           R11, #0
.text:000084FA 08 BF                         IT EQ
.text:000084FC 41 46                         MOVEQ           R1, R8
.text:000084FE 08 44                         ADD             R0, R1
.text:00008500 A8 66                         STR             R0, [R5,#0x68]
.text:00008502 E8 6E                         LDR             R0, [R5,#0x6C]
.text:00008504 08 44                         ADD             R0, R1
.text:00008506 E8 66                         STR             R0, [R5,#0x6C]
.text:00008506
.text:00008508
.text:00008508                               loc_8508                      ; CODE XREF: sub_7F90+542↑j
.text:00008508 DF F8 3C 25                   LDR.W           R2, =(aAfterSlimRead - 0x8514) ; "after slim read"
.text:0000850C 02 20                         MOVS            R0, #2
.text:0000850E 51 46                         MOV             R1, R10
.text:00008510 7A 44                         ADD             R2, PC        ; "after slim read"
.text:00008512 FA F7 62 ED                   BLX             __android_log_print
.text:00008512
.text:00008516 4C 46                         MOV             R4, R9
.text:00008518 BB F1 00 0F                   CMP.W           R11, #0
.text:0000851C 23 D1                         BNE             loc_8566
.text:0000851C
.text:0000851E
.text:0000851E                               loc_851E                      ; CODE XREF: sub_7F90+49A↑j
.text:0000851E                                                             ; sub_7F90+4A0↑j
.text:0000851E                                                             ; sub_7F90+4A8↑j
.text:0000851E                                                             ; sub_7F90+552↑j
.text:0000851E 30 68                         LDR             R0, [R6]
.text:00008520 F8 B9                         CBNZ            R0, loc_8562
.text:00008520
.text:00008522 DF F8 0C 25                   LDR.W           R2, =(aBeforeWaitingF - 0x8530) ; "#### before waiting for first read - %d"...
.text:00008526 02 20                         MOVS            R0, #2
.text:00008528 AB 6E                         LDR             R3, [R5,#0x68]
.text:0000852A 51 46                         MOV             R1, R10
.text:0000852C 7A 44                         ADD             R2, PC        ; "#### before waiting for first read - %d"...
.text:0000852E FA F7 54 ED                   BLX             __android_log_print
.text:0000852E
.text:00008532
.text:00008532                               loc_8532                      ; CODE XREF: sub_7F90+5AE↓j
.text:00008532 4F F4 7A 70                   MOV.W           R0, #0x3E8    ; useconds
.text:00008536 FA F7 6E ED                   BLX             usleep
.text:00008536
.text:0000853A AB 6E                         LDR             R3, [R5,#0x68]
.text:0000853C 00 2B                         CMP             R3, #0
.text:0000853E F8 D0                         BEQ             loc_8532
.text:0000853E
.text:00008540 DF F8 F0 24                   LDR.W           R2, =(aAfterWaitingFo - 0x854C) ; "#### after waiting for first read  - %d"...
.text:00008544 02 20                         MOVS            R0, #2
.text:00008546 51 46                         MOV             R1, R10
.text:00008548 7A 44                         ADD             R2, PC        ; "#### after waiting for first read  - %d"...
.text:0000854A FA F7 46 ED                   BLX             __android_log_print
.text:0000854A
.text:0000854E 06 98                         LDR             R0, [SP,#0x60+var_48]
.text:00008550 01 68                         LDR             R1, [R0]
.text:00008552 30 46                         MOV             R0, R6
.text:00008554 88 47                         BLX             R1
.text:00008554
.text:00008556 07 98                         LDR             R0, [SP,#0x60+var_44]
.text:00008558 01 68                         LDR             R1, [R0]
.text:0000855A 30 46                         MOV             R0, R6
.text:0000855C 88 47                         BLX             R1
.text:0000855C
.text:0000855E 01 20                         MOVS            R0, #1
.text:00008560 30 60                         STR             R0, [R6]
.text:00008560
.text:00008562
.text:00008562                               loc_8562                      ; CODE XREF: sub_7F90+590↑j
.text:00008562 4F F0 00 0B                   MOV.W           R11, #0
.text:00008562
.text:00008566
.text:00008566                               loc_8566                      ; CODE XREF: sub_7F90+58C↑j
.text:00008566 70 68                         LDR             R0, [R6,#4]
.text:00008568 00 28                         CMP             R0, #0
.text:0000856A 54 D1                         BNE             loc_8616
.text:0000856A
.text:0000856C 30 68                         LDR             R0, [R6]
.text:0000856E 01 28                         CMP             R0, #1
.text:00008570 40 F0 BC 80                   BNE.W           loc_86EC
.text:00008570
.text:00008574 3B 68                         LDR             R3, [R7]
.text:00008576 30 46                         MOV             R0, R6
.text:00008578 21 46                         MOV             R1, R4
.text:0000857A 42 46                         MOV             R2, R8
.text:0000857C 98 47                         BLX             R3
.text:0000857C
.text:0000857E 81 46                         MOV             R9, R0
.text:00008580 B9 F1 00 0F                   CMP.W           R9, #0
.text:00008584 05 D1                         BNE             loc_8592
.text:00008584
.text:00008586 B0 68                         LDR             R0, [R6,#8]
.text:00008588 00 28                         CMP             R0, #0
.text:0000858A 3F F4 02 AF                   BEQ.W           loc_8392
.text:0000858A
.text:0000858E 4F F0 00 09                   MOV.W           R9, #0
.text:0000858E
.text:00008592
.text:00008592                               loc_8592                      ; CODE XREF: sub_7F90+5F4↑j
.text:00008592 C1 45                         CMP             R9, R8
.text:00008594 2C D2                         BCS             loc_85F0
.text:00008594
.text:00008596 B0 68                         LDR             R0, [R6,#8]
.text:00008598 50 B3                         CBZ             R0, loc_85F0
.text:00008598
.text:0000859A DF F8 3C 14                   LDR.W           R1, =(aAudioHwPrimary - 0x85A8) ; "audio_hw_primary"
.text:0000859E 03 20                         MOVS            R0, #3
.text:000085A0 DF F8 38 24                   LDR.W           R2, =(aEndOfUartstrea - 0x85AA) ; "end of uartstreaming"
.text:000085A4 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000085A6 7A 44                         ADD             R2, PC        ; "end of uartstreaming"
.text:000085A8 FA F7 16 ED                   BLX             __android_log_print
.text:000085A8
.text:000085AC 01 20                         MOVS            R0, #1
.text:000085AE 70 60                         STR             R0, [R6,#4]
.text:000085B0 4E F2 50 20 C0 F2 04 00       MOV             R0, #0x4E250
.text:000085B8 31 58                         LDR             R1, [R6,R0]
.text:000085BA 30 46                         MOV             R0, R6
.text:000085BC 88 47                         BLX             R1
.text:000085BC
.text:000085BE C8 46                         MOV             R8, R9
.text:000085C0 DD F8 24 90                   LDR.W           R9, [SP,#0x60+mutex]
.text:000085C4 60 E1                         B               loc_8888
.text:000085C4
.text:000085C6                               ; ---------------------------------------------------------------------------
.text:000085C6
.text:000085C6                               loc_85C6                      ; CODE XREF: sub_7F90+3D2↑j
.text:000085C6 29 69                         LDR             R1, [R5,#0x10]
.text:000085C8 28 46                         MOV             R0, R5
.text:000085CA 88 47                         BLX             R1
.text:000085CA
.text:000085CC 00 F0 7F 41                   AND.W           R1, R0, #0xFF000000
.text:000085D0 B1 F1 50 6F                   CMP.W           R1, #0xD000000
.text:000085D4 18 BF                         IT NE
.text:000085D6 00 29                         CMPNE           R1, #0
.text:000085D8 1A D1                         BNE             loc_8610
.text:000085D8
.text:000085DA 41 1E                         SUBS            R1, R0, #1    ; switch 6 cases
.text:000085DC 05 29                         CMP             R1, #5
.text:000085DE 00 F2 A8 80                   BHI.W           def_85E2      ; jumptable 000085E2 default case
.text:000085DE
.text:000085E2 DF E8 01 F0                   TBB.W           [PC,R1]       ; switch jump
.text:000085E2
.text:000085E2                               ; ---------------------------------------------------------------------------
.text:000085E6 A9                            jpt_85E2 DCB 0xA9             ; jump table for switch statement
.text:000085E7 AB                            DCB 0xAB
.text:000085E8 03                            DCB 3
.text:000085E9 03                            DCB 3
.text:000085EA 03                            DCB 3
.text:000085EB AD                            DCB 0xAD
.text:000085EC                               ; ---------------------------------------------------------------------------
.text:000085EC
.text:000085EC                               loc_85EC                      ; CODE XREF: sub_7F90+652↑j
.text:000085EC 04 24                         MOVS            R4, #4        ; jumptable 000085E2 cases 3-5
.text:000085EE AA E0                         B               loc_8746
.text:000085EE
.text:000085F0                               ; ---------------------------------------------------------------------------
.text:000085F0
.text:000085F0                               loc_85F0                      ; CODE XREF: sub_7F90+604↑j
.text:000085F0                                                             ; sub_7F90+608↑j
.text:000085F0 DF F8 EC 13                   LDR.W           R1, =(aAudioHwPrimary - 0x8600) ; "audio_hw_primary"
.text:000085F4 02 20                         MOVS            R0, #2
.text:000085F6 DF F8 EC 23                   LDR.W           R2, =(aHalReadStrmEnd - 0x8602) ; "hal read strm end cvq %d"
.text:000085FA 4B 46                         MOV             R3, R9
.text:000085FC 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000085FE 7A 44                         ADD             R2, PC        ; "hal read strm end cvq %d"
.text:00008600 FA F7 EA EC                   BLX             __android_log_print
.text:00008600
.text:00008604 70 68                         LDR             R0, [R6,#4]
.text:00008606 00 28                         CMP             R0, #0
.text:00008608 70 D0                         BEQ             loc_86EC
.text:00008608
.text:0000860A A8 EB 09 06                   SUB.W           R6, R8, R9
.text:0000860E 05 E0                         B               loc_861C
.text:0000860E
.text:00008610                               ; ---------------------------------------------------------------------------
.text:00008610
.text:00008610                               loc_8610                      ; CODE XREF: sub_7F90+648↑j
.text:00008610 4F F0 01 09                   MOV.W           R9, #1
.text:00008614 BE E0                         B               loc_8794
.text:00008614
.text:00008616                               ; ---------------------------------------------------------------------------
.text:00008616
.text:00008616                               loc_8616                      ; CODE XREF: sub_7F90+5DA↑j
.text:00008616 4F F0 00 09                   MOV.W           R9, #0
.text:0000861A 46 46                         MOV             R6, R8
.text:0000861A
.text:0000861C
.text:0000861C                               loc_861C                      ; CODE XREF: sub_7F90+67E↑j
.text:0000861C EB 6E                         LDR             R3, [R5,#0x6C]
.text:0000861E B3 42                         CMP             R3, R6
.text:00008620 08 DA                         BGE             loc_8634
.text:00008620
.text:00008622 DF F8 E8 13                   LDR.W           R1, =(aAudioHwPrimary - 0x8630) ; "audio_hw_primary"
.text:00008626 06 20                         MOVS            R0, #6
.text:00008628 DF F8 E4 23                   LDR.W           R2, =(aNotEnoughDataF - 0x8634) ; "#### Not enough data for reading in cir"...
.text:0000862C 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000862E 00 96                         STR             R6, [SP,#0x60+var_60]
.text:00008630 7A 44                         ADD             R2, PC        ; "#### Not enough data for reading in cir"...
.text:00008632 59 E0                         B               loc_86E8
.text:00008632
.text:00008634                               ; ---------------------------------------------------------------------------
.text:00008634
.text:00008634                               loc_8634                      ; CODE XREF: sub_7F90+690↑j
.text:00008634 DF F8 B0 13                   LDR.W           R1, =(aAudioHwPrimary - 0x8644) ; "audio_hw_primary"
.text:00008638 03 20                         MOVS            R0, #3
.text:0000863A DF F8 B0 23                   LDR.W           R2, =(aHalReadMemcpyC - 0x8646) ; "hal read memcpy cvq %d"
.text:0000863E 33 46                         MOV             R3, R6
.text:00008640 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00008642 7A 44                         ADD             R2, PC        ; "hal read memcpy cvq %d"
.text:00008644 FA F7 C8 EC                   BLX             __android_log_print
.text:00008644
.text:00008648 D5 E9 18 03                   LDRD.W          R0, R3, [R5,#0x60]
.text:0000864C 99 19                         ADDS            R1, R3, R6
.text:0000864E 81 42                         CMP             R1, R0
.text:00008650 2D DD                         BLE             loc_86AE
.text:00008650
.text:00008652 DF F8 9C 13                   LDR.W           R1, =(aAudioHwPrimary - 0x8660) ; "audio_hw_primary"
.text:00008656 DF F8 9C 23                   LDR.W           R2, =(aBeforeReadOver - 0x8662) ; "before read overflow - (read offset, ma"...
.text:0000865A 00 90                         STR             R0, [SP,#0x60+var_60]
.text:0000865C 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:0000865E 7A 44                         ADD             R2, PC        ; "before read overflow - (read offset, ma"...
.text:00008660 03 20                         MOVS            R0, #3
.text:00008662 FA F7 BA EC                   BLX             __android_log_print
.text:00008662
.text:00008666 D5 E9 18 01                   LDRD.W          R0, R1, [R5,#0x60]
.text:0000866A 8A 19                         ADDS            R2, R1, R6
.text:0000866C 17 1A                         SUBS            R7, R2, R0
.text:0000866E F2 1B                         SUBS            R2, R6, R7
.text:00008670 01 2A                         CMP             R2, #1
.text:00008672 05 DB                         BLT             loc_8680
.text:00008672
.text:00008674 EB 6D                         LDR             R3, [R5,#0x5C]
.text:00008676 04 EB 09 00                   ADD.W           R0, R4, R9
.text:0000867A 19 44                         ADD             R1, R3
.text:0000867C FA F7 8C EE                   BLX             __aeabi_memcpy
.text:0000867C
.text:00008680
.text:00008680                               loc_8680                      ; CODE XREF: sub_7F90+6E2↑j
.text:00008680 04 EB 09 00                   ADD.W           R0, R4, R9
.text:00008684 E9 6D                         LDR             R1, [R5,#0x5C]
.text:00008686 30 44                         ADD             R0, R6
.text:00008688 3A 46                         MOV             R2, R7
.text:0000868A C0 1B                         SUBS            R0, R0, R7
.text:0000868C FA F7 84 EE                   BLX             __aeabi_memcpy
.text:0000868C
.text:00008690 6F 66                         STR             R7, [R5,#0x64]
.text:00008692 3B 46                         MOV             R3, R7
.text:00008694 E8 6E                         LDR             R0, [R5,#0x6C]
.text:00008696 D8 49                         LDR             R1, =(aAudioHwPrimary - 0x86A2) ; "audio_hw_primary"
.text:00008698 80 1B                         SUBS            R0, R0, R6
.text:0000869A D8 4A                         LDR             R2, =(aAfterReadOverf - 0x86A6) ; "after read overflow - (read offset, max"...
.text:0000869C E8 66                         STR             R0, [R5,#0x6C]
.text:0000869E 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:000086A0 28 6E                         LDR             R0, [R5,#0x60]
.text:000086A2 7A 44                         ADD             R2, PC        ; "after read overflow - (read offset, max"...
.text:000086A4 00 90                         STR             R0, [SP,#0x60+var_60]
.text:000086A6 03 20                         MOVS            R0, #3
.text:000086A8 FA F7 96 EC                   BLX             __android_log_print
.text:000086A8
.text:000086AC 0C E0                         B               loc_86C8
.text:000086AC
.text:000086AE                               ; ---------------------------------------------------------------------------
.text:000086AE
.text:000086AE                               loc_86AE                      ; CODE XREF: sub_7F90+6C0↑j
.text:000086AE E9 6D                         LDR             R1, [R5,#0x5C]
.text:000086B0 04 EB 09 00                   ADD.W           R0, R4, R9
.text:000086B4 32 46                         MOV             R2, R6
.text:000086B6 19 44                         ADD             R1, R3
.text:000086B8 FA F7 6E EE                   BLX             __aeabi_memcpy
.text:000086B8
.text:000086BC 68 6E                         LDR             R0, [R5,#0x64]
.text:000086BE 30 44                         ADD             R0, R6
.text:000086C0 68 66                         STR             R0, [R5,#0x64]
.text:000086C2 E8 6E                         LDR             R0, [R5,#0x6C]
.text:000086C4 80 1B                         SUBS            R0, R0, R6
.text:000086C6 E8 66                         STR             R0, [R5,#0x6C]
.text:000086C6
.text:000086C8
.text:000086C8                               loc_86C8                      ; CODE XREF: sub_7F90+71C↑j
.text:000086C8 CD 4F                         LDR             R7, =(aAudioHwPrimary - 0x86D4) ; "audio_hw_primary"
.text:000086CA 02 20                         MOVS            R0, #2
.text:000086CC CD 4A                         LDR             R2, =(aHalReadMemcpyE - 0x86D6) ; "hal read memcpy end cvq %d"
.text:000086CE 33 46                         MOV             R3, R6
.text:000086D0 7F 44                         ADD             R7, PC        ; "audio_hw_primary"
.text:000086D2 7A 44                         ADD             R2, PC        ; "hal read memcpy end cvq %d"
.text:000086D4 39 46                         MOV             R1, R7
.text:000086D6 FA F7 80 EC                   BLX             __android_log_print
.text:000086D6
.text:000086DA D5 E9 19 30                   LDRD.W          R3, R0, [R5,#0x64]
.text:000086DE 39 46                         MOV             R1, R7
.text:000086E0 C9 4A                         LDR             R2, =(aReadWriteOffse - 0x86EA) ; "read/write offset - %d/%d "
.text:000086E2 00 90                         STR             R0, [SP,#0x60+var_60]
.text:000086E4 02 20                         MOVS            R0, #2
.text:000086E6 7A 44                         ADD             R2, PC        ; "read/write offset - %d/%d "
.text:000086E6
.text:000086E8
.text:000086E8                               loc_86E8                      ; CODE XREF: sub_7F90+6A2↑j
.text:000086E8 FA F7 76 EC                   BLX             __android_log_print
.text:000086E8
.text:000086EC
.text:000086EC                               loc_86EC                      ; CODE XREF: sub_7F90+5E0↑j
.text:000086EC                                                             ; sub_7F90+678↑j
.text:000086EC DD F8 24 90                   LDR.W           R9, [SP,#0x60+mutex]
.text:000086F0 B7 E0                         B               loc_8862
.text:000086F0
.text:000086F2                               ; ---------------------------------------------------------------------------
.text:000086F2
.text:000086F2                               loc_86F2                      ; CODE XREF: sub_7F90+37A↑j
.text:000086F2 04 29                         CMP             R1, #4
.text:000086F4 04 BF                         ITT EQ
.text:000086F6 00 20                         MOVEQ           R0, #0
.text:000086F8 CA F8 C8 00                   STREQ.W         R0, [R10,#0xC8]
.text:000086FC D5 F8 A0 00                   LDR.W           R0, [R5,#0xA0]
.text:00008700 54 46                         MOV             R4, R10
.text:00008702 04 21 C8 F2 00 01             MOVS            R1, #0x80000004
.text:00008708 CA F8 B0 00                   STR.W           R0, [R10,#0xB0]
.text:0000870C 88 42                         CMP             R0, R1
.text:0000870E 54 F8 AC 7F                   LDR.W           R7, [R4,#0xAC]!
.text:00008712 00 F0 20 81                   BEQ.W           loc_8956
.text:00008712
.text:00008716 08 21 C8 F2 00 01             MOVS            R1, #0x80000008
.text:0000871C 88 42                         CMP             R0, R1
.text:0000871E 00 F0 1C 81                   BEQ.W           loc_895A
.text:0000871E
.text:00008722 10 21 C8 F2 00 01             MOVS            R1, #0x80000010
.text:00008728 88 42                         CMP             R0, R1
.text:0000872A 7F F4 F7 AD                   BNE.W           loc_831C
.text:0000872A
.text:0000872E 04 20                         MOVS            R0, #4
.text:00008730 14 E1                         B               loc_895C
.text:00008730
.text:00008732                               ; ---------------------------------------------------------------------------
.text:00008732
.text:00008732                               def_85E2                      ; CODE XREF: sub_7F90+64E↑j
.text:00008732 B0 F1 50 6F                   CMP.W           R0, #0xD000000 ; jumptable 000085E2 default case
.text:00008736 05 D1                         BNE             loc_8744
.text:00008736
.text:00008738
.text:00008738                               loc_8738                      ; CODE XREF: sub_7F90+652↑j
.text:00008738 02 24                         MOVS            R4, #2        ; jumptable 000085E2 case 1
.text:0000873A 04 E0                         B               loc_8746
.text:0000873A
.text:0000873C                               ; ---------------------------------------------------------------------------
.text:0000873C
.text:0000873C                               loc_873C                      ; CODE XREF: sub_7F90+652↑j
.text:0000873C 01 24                         MOVS            R4, #1        ; jumptable 000085E2 case 2
.text:0000873E 02 E0                         B               loc_8746
.text:0000873E
.text:00008740                               ; ---------------------------------------------------------------------------
.text:00008740
.text:00008740                               loc_8740                      ; CODE XREF: sub_7F90+652↑j
.text:00008740 03 24                         MOVS            R4, #3        ; jumptable 000085E2 case 6
.text:00008742 00 E0                         B               loc_8746
.text:00008742
.text:00008744                               ; ---------------------------------------------------------------------------
.text:00008744
.text:00008744                               loc_8744                      ; CODE XREF: sub_7F90+7A6↑j
.text:00008744 00 24                         MOVS            R4, #0
.text:00008744
.text:00008746
.text:00008746                               loc_8746                      ; CODE XREF: sub_7F90+65E↑j
.text:00008746                                                             ; sub_7F90+7AA↑j
.text:00008746                                                             ; sub_7F90+7AE↑j
.text:00008746                                                             ; sub_7F90+7B2↑j
.text:00008746 E9 68                         LDR             R1, [R5,#0xC]
.text:00008748 28 46                         MOV             R0, R5
.text:0000874A 88 47                         BLX             R1
.text:0000874A
.text:0000874C 02 21                         MOVS            R1, #2
.text:0000874E B1 EB 90 7F                   CMP.W           R1, R0,LSR#30
.text:00008752 05 D0                         BEQ             loc_8760
.text:00008752
.text:00008754 81 0F                         LSRS            R1, R0, #0x1E
.text:00008756 D1 B9                         CBNZ            R1, loc_878E
.text:00008756
.text:00008758 4F F6 FC 71                   MOVW            R1, #0xFFFC
.text:0000875C 08 40                         ANDS            R0, R1
.text:0000875E 01 E0                         B               loc_8764
.text:0000875E
.text:00008760                               ; ---------------------------------------------------------------------------
.text:00008760
.text:00008760                               loc_8760                      ; CODE XREF: sub_7F90+7C2↑j
.text:00008760 20 F0 40 40                   BIC.W           R0, R0, #0xC0000000
.text:00008760
.text:00008764
.text:00008764                               loc_8764                      ; CODE XREF: sub_7F90+7CE↑j
.text:00008764 4F F0 55 31                   MOV.W           R1, #0x55555555
.text:00008768 01 EA 50 01                   AND.W           R1, R1, R0,LSR#1
.text:0000876C 40 1A                         SUBS            R0, R0, R1
.text:0000876E 4F F0 33 31                   MOV.W           R1, #0x33333333
.text:00008772 01 EA 90 01                   AND.W           R1, R1, R0,LSR#2
.text:00008776 20 F0 CC 30                   BIC.W           R0, R0, #0xCCCCCCCC
.text:0000877A 08 44                         ADD             R0, R1
.text:0000877C 4F F0 01 31                   MOV.W           R1, #0x1010101
.text:00008780 00 EB 10 10                   ADD.W           R0, R0, R0,LSR#4
.text:00008784 20 F0 F0 30                   BIC.W           R0, R0, #0xF0F0F0F0
.text:00008788 48 43                         MULS            R0, R1
.text:0000878A 00 0E                         LSRS            R0, R0, #0x18
.text:0000878C 00 E0                         B               loc_8790
.text:0000878C
.text:0000878E                               ; ---------------------------------------------------------------------------
.text:0000878E
.text:0000878E                               loc_878E                      ; CODE XREF: sub_7F90+7C6↑j
.text:0000878E 00 20                         MOVS            R0, #0
.text:0000878E
.text:00008790
.text:00008790                               loc_8790                      ; CODE XREF: sub_7F90+7FC↑j
.text:00008790 00 FB 04 F9                   MUL.W           R9, R0, R4
.text:00008790
.text:00008794
.text:00008794                               loc_8794                      ; CODE XREF: sub_7F90+684↑j
.text:00008794 B8 FB FB F7                   UDIV.W          R7, R8, R11
.text:00008798 CD F8 20 80                   STR.W           R8, [SP,#0x60+newthread]
.text:0000879C 05 F1 88 08                   ADD.W           R8, R5, #0x88
.text:000087A0 0D F1 34 0A                   ADD.W           R10, SP, #0x60+var_2C
.text:000087A4 00 24                         MOVS            R4, #0
.text:000087A4
.text:000087A6
.text:000087A6                               loc_87A6                      ; CODE XREF: sub_7F90+872↓j
.text:000087A6 A7 42                         CMP             R7, R4
.text:000087A8 2D DD                         BLE             loc_8806
.text:000087A8
.text:000087AA 39 1B                         SUBS            R1, R7, R4
.text:000087AC 0D 91                         STR             R1, [SP,#0x60+var_2C]
.text:000087AE D5 F8 84 00                   LDR.W           R0, [R5,#0x84]
.text:000087B2 30 B1                         CBZ             R0, loc_87C2
.text:000087B2
.text:000087B4 0A 99                         LDR             R1, [SP,#0x60+var_38]
.text:000087B6 52 46                         MOV             R2, R10
.text:000087B8 43 68                         LDR             R3, [R0,#4]
.text:000087BA 04 FB 09 11                   MLA.W           R1, R4, R9, R1
.text:000087BE 98 47                         BLX             R3
.text:000087BE
.text:000087C0 18 E0                         B               loc_87F4
.text:000087C0
.text:000087C2                               ; ---------------------------------------------------------------------------
.text:000087C2
.text:000087C2                               loc_87C2                      ; CODE XREF: sub_7F90+822↑j
.text:000087C2 00 20                         MOVS            R0, #0
.text:000087C4 CD E9 0B 01                   STRD.W          R0, R1, [SP,#0x60+var_34]
.text:000087C8 40 46                         MOV             R0, R8
.text:000087CA 0B A9                         ADD             R1, SP, #0x60+var_34
.text:000087CC 00 F0 02 FA                   BL              sub_8BD4
.text:000087CC
.text:000087D0 0B 99                         LDR             R1, [SP,#0x60+var_34]
.text:000087D2 49 B1                         CBZ             R1, loc_87E8
.text:000087D2
.text:000087D4 0A 98                         LDR             R0, [SP,#0x60+var_38]
.text:000087D6 0C 9E                         LDR             R6, [SP,#0x60+var_30]
.text:000087D8 04 FB 09 00                   MLA.W           R0, R4, R9, R0
.text:000087DC 06 FB 09 F2                   MUL.W           R2, R6, R9
.text:000087E0 FA F7 DA ED                   BLX             __aeabi_memcpy
.text:000087E0
.text:000087E4 0D 96                         STR             R6, [SP,#0x60+var_2C]
.text:000087E6 00 E0                         B               loc_87EA
.text:000087E6
.text:000087E8                               ; ---------------------------------------------------------------------------
.text:000087E8
.text:000087E8                               loc_87E8                      ; CODE XREF: sub_7F90+842↑j
.text:000087E8 0C 9E                         LDR             R6, [SP,#0x60+var_30]
.text:000087E8
.text:000087EA
.text:000087EA                               loc_87EA                      ; CODE XREF: sub_7F90+856↑j
.text:000087EA D8 F8 0C 00                   LDR.W           R0, [R8,#0xC]
.text:000087EE 80 1B                         SUBS            R0, R0, R6
.text:000087F0 C8 F8 0C 00                   STR.W           R0, [R8,#0xC]
.text:000087F0
.text:000087F4
.text:000087F4                               loc_87F4                      ; CODE XREF: sub_7F90+830↑j
.text:000087F4 D5 F8 98 B0                   LDR.W           R11, [R5,#0x98]
.text:000087F8 0D 98                         LDR             R0, [SP,#0x60+var_2C]
.text:000087FA BB F1 00 0F                   CMP.W           R11, #0
.text:000087FE 08 BF                         IT EQ
.text:00008800 04 44                         ADDEQ           R4, R0
.text:00008802 D0 D0                         BEQ             loc_87A6
.text:00008802
.text:00008804 00 E0                         B               loc_8808
.text:00008804
.text:00008806                               ; ---------------------------------------------------------------------------
.text:00008806
.text:00008806                               loc_8806                      ; CODE XREF: sub_7F90+818↑j
.text:00008806 A3 46                         MOV             R11, R4
.text:00008806
.text:00008808
.text:00008808                               loc_8808                      ; CODE XREF: sub_7F90+874↑j
.text:00008808 D5 F8 A8 10                   LDR.W           R1, [R5,#0xA8]
.text:0000880C BB F1 00 0F                   CMP.W           R11, #0
.text:00008810 C8 BF                         IT GT
.text:00008812 4F F0 00 0B                   MOVGT.W         R11, #0
.text:00008816 09 B3                         CBZ             R1, loc_885C
.text:00008816
.text:00008818 D5 F8 A4 00                   LDR.W           R0, [R5,#0xA4]
.text:0000881C B9 42                         CMP             R1, R7
.text:0000881E 98 BF                         IT LS
.text:00008820 0F 46                         MOVLS           R7, R1
.text:00008822 DD E9 09 94                   LDRD.W          R9, R4, [SP,#0x60+mutex]
.text:00008826 8F B1                         CBZ             R7, loc_884C
.text:00008826
.text:00008828 01 0C                         LSRS            R1, R0, #0x10
.text:0000882A 00 22                         MOVS            R2, #0
.text:0000882A
.text:0000882C
.text:0000882C                               loc_882C                      ; CODE XREF: sub_7F90+8B6↓j
.text:0000882C 34 F9 12 30                   LDRSH.W         R3, [R4,R2,LSL#1]
.text:00008830 86 B2                         UXTH            R6, R0
.text:00008832 11 FA 80 F0                   UXTAH.W         R0, R1, R0
.text:00008836 06 FB 03 F3                   MUL.W           R3, R6, R3
.text:0000883A 4F EA 13 43                   MOV.W           R3, R3,LSR#16
.text:0000883E 24 F8 12 30                   STRH.W          R3, [R4,R2,LSL#1]
.text:00008842 01 32                         ADDS            R2, #1
.text:00008844 BA 42                         CMP             R2, R7
.text:00008846 F1 D3                         BCC             loc_882C
.text:00008846
.text:00008848 D5 F8 A8 10                   LDR.W           R1, [R5,#0xA8]
.text:00008848
.text:0000884C
.text:0000884C                               loc_884C                      ; CODE XREF: sub_7F90+896↑j
.text:0000884C A5 F8 A4 00                   STRH.W          R0, [R5,#0xA4]
.text:00008850 C8 1B                         SUBS            R0, R1, R7
.text:00008852 DD F8 20 80                   LDR.W           R8, [SP,#0x60+newthread]
.text:00008856 C5 F8 A8 00                   STR.W           R0, [R5,#0xA8]
.text:0000885A 02 E0                         B               loc_8862
.text:0000885A
.text:0000885C                               ; ---------------------------------------------------------------------------
.text:0000885C
.text:0000885C                               loc_885C                      ; CODE XREF: sub_7F90+886↑j
.text:0000885C DD E9 08 89                   LDRD.W          R8, R9, [SP,#0x60+newthread]
.text:00008860 0A 9C                         LDR             R4, [SP,#0x60+var_38]
.text:00008860
.text:00008862
.text:00008862                               loc_8862                      ; CODE XREF: sub_7F90+760↑j
.text:00008862                                                             ; sub_7F90+8CA↑j
.text:00008862 BB F1 00 0F                   CMP.W           R11, #0
.text:00008866 07 D1                         BNE             loc_8878
.text:00008866
.text:00008868 05 98                         LDR             R0, [SP,#0x60+var_4C]
.text:0000886A 90 F8 B4 00                   LDRB.W          R0, [R0,#0xB4]
.text:0000886E 18 B1                         CBZ             R0, loc_8878
.text:0000886E
.text:00008870 20 46                         MOV             R0, R4
.text:00008872 41 46                         MOV             R1, R8
.text:00008874 FA F7 72 ED                   BLX             __aeabi_memclr
.text:00008874
.text:00008878
.text:00008878                               loc_8878                      ; CODE XREF: sub_7F90+8D6↑j
.text:00008878                                                             ; sub_7F90+8DE↑j
.text:00008878 66 48                         LDR             R0, =(aSdcardAndroidL_1 - 0x8884) ; "/sdcard/Android/log/audio_dump/audio_hw"...
.text:0000887A 21 46                         MOV             R1, R4
.text:0000887C 66 4B                         LDR             R3, =(aAudioHwPcmDump - 0x8886) ; "audio.hw.pcm.dump"
.text:0000887E 42 46                         MOV             R2, R8
.text:00008880 78 44                         ADD             R0, PC        ; "/sdcard/Android/log/audio_dump/audio_hw"...
.text:00008882 7B 44                         ADD             R3, PC        ; "audio.hw.pcm.dump"
.text:00008884 FA F7 76 ED                   BLX             j_pcm_data_dump
.text:00008884
.text:00008888
.text:00008888                               loc_8888                      ; CODE XREF: sub_7F90+634↑j
.text:00008888 BB F1 FF 3F                   CMP.W           R11, #0xFFFFFFFF
.text:0000888C 53 DC                         BGT             loc_8936
.text:0000888C
.text:0000888E
.text:0000888E                               loc_888E                      ; CODE XREF: sub_7F90+352↑j
.text:0000888E 44 F2 40 20                   MOVW            R0, #0x4240
.text:00008892 29 69                         LDR             R1, [R5,#0x10]
.text:00008894 C0 F2 0F 00                   MOVT            R0, #0xF
.text:00008898 08 FB 00 F4                   MUL.W           R4, R8, R0
.text:0000889C 28 46                         MOV             R0, R5
.text:0000889E 88 47                         BLX             R1
.text:0000889E
.text:000088A0 00 F0 7F 41                   AND.W           R1, R0, #0xFF000000
.text:000088A4 B1 F1 50 6F                   CMP.W           R1, #0xD000000
.text:000088A8 18 BF                         IT NE
.text:000088AA 00 29                         CMPNE           R1, #0
.text:000088AC 09 D1                         BNE             loc_88C2
.text:000088AC
.text:000088AE 41 1E                         SUBS            R1, R0, #1    ; switch 6 cases
.text:000088B0 05 29                         CMP             R1, #5
.text:000088B2 08 D8                         BHI             def_88B4      ; jumptable 000088B4 default case
.text:000088B2
.text:000088B4 DF E8 01 F0                   TBB.W           [PC,R1]       ; switch jump
.text:000088B4
.text:000088B4                               ; ---------------------------------------------------------------------------
.text:000088B8 0A                            jpt_88B4 DCB 0xA              ; jump table for switch statement
.text:000088B9 0C                            DCB 0xC
.text:000088BA 03                            DCB 3
.text:000088BB 03                            DCB 3
.text:000088BC 03                            DCB 3
.text:000088BD 0E                            DCB 0xE
.text:000088BE                               ; ---------------------------------------------------------------------------
.text:000088BE
.text:000088BE                               loc_88BE                      ; CODE XREF: sub_7F90+924↑j
.text:000088BE 04 26                         MOVS            R6, #4        ; jumptable 000088B4 cases 3-5
.text:000088C0 0B E0                         B               loc_88DA
.text:000088C0
.text:000088C2                               ; ---------------------------------------------------------------------------
.text:000088C2
.text:000088C2                               loc_88C2                      ; CODE XREF: sub_7F90+91C↑j
.text:000088C2 01 20                         MOVS            R0, #1
.text:000088C4 2F E0                         B               loc_8926
.text:000088C4
.text:000088C6                               ; ---------------------------------------------------------------------------
.text:000088C6
.text:000088C6                               def_88B4                      ; CODE XREF: sub_7F90+922↑j
.text:000088C6 B0 F1 50 6F                   CMP.W           R0, #0xD000000 ; jumptable 000088B4 default case
.text:000088CA 05 D1                         BNE             loc_88D8
.text:000088CA
.text:000088CC
.text:000088CC                               loc_88CC                      ; CODE XREF: sub_7F90+924↑j
.text:000088CC 02 26                         MOVS            R6, #2        ; jumptable 000088B4 case 1
.text:000088CE 04 E0                         B               loc_88DA
.text:000088CE
.text:000088D0                               ; ---------------------------------------------------------------------------
.text:000088D0
.text:000088D0                               loc_88D0                      ; CODE XREF: sub_7F90+924↑j
.text:000088D0 01 26                         MOVS            R6, #1        ; jumptable 000088B4 case 2
.text:000088D2 02 E0                         B               loc_88DA
.text:000088D2
.text:000088D4                               ; ---------------------------------------------------------------------------
.text:000088D4
.text:000088D4                               loc_88D4                      ; CODE XREF: sub_7F90+924↑j
.text:000088D4 03 26                         MOVS            R6, #3        ; jumptable 000088B4 case 6
.text:000088D6 00 E0                         B               loc_88DA
.text:000088D6
.text:000088D8                               ; ---------------------------------------------------------------------------
.text:000088D8
.text:000088D8                               loc_88D8                      ; CODE XREF: sub_7F90+93A↑j
.text:000088D8 00 26                         MOVS            R6, #0
.text:000088D8
.text:000088DA
.text:000088DA                               loc_88DA                      ; CODE XREF: sub_7F90+930↑j
.text:000088DA                                                             ; sub_7F90+93E↑j
.text:000088DA                                                             ; sub_7F90+942↑j
.text:000088DA                                                             ; sub_7F90+946↑j
.text:000088DA E9 68                         LDR             R1, [R5,#0xC]
.text:000088DC 28 46                         MOV             R0, R5
.text:000088DE 88 47                         BLX             R1
.text:000088DE
.text:000088E0 02 21                         MOVS            R1, #2
.text:000088E2 B1 EB 90 7F                   CMP.W           R1, R0,LSR#30
.text:000088E6 05 D0                         BEQ             loc_88F4
.text:000088E6
.text:000088E8 81 0F                         LSRS            R1, R0, #0x1E
.text:000088EA D1 B9                         CBNZ            R1, loc_8922
.text:000088EA
.text:000088EC 4F F6 FC 71                   MOVW            R1, #0xFFFC
.text:000088F0 08 40                         ANDS            R0, R1
.text:000088F2 01 E0                         B               loc_88F8
.text:000088F2
.text:000088F4                               ; ---------------------------------------------------------------------------
.text:000088F4
.text:000088F4                               loc_88F4                      ; CODE XREF: sub_7F90+956↑j
.text:000088F4 20 F0 40 40                   BIC.W           R0, R0, #0xC0000000
.text:000088F4
.text:000088F8
.text:000088F8                               loc_88F8                      ; CODE XREF: sub_7F90+962↑j
.text:000088F8 4F F0 55 31                   MOV.W           R1, #0x55555555
.text:000088FC 01 EA 50 01                   AND.W           R1, R1, R0,LSR#1
.text:00008900 40 1A                         SUBS            R0, R0, R1
.text:00008902 4F F0 33 31                   MOV.W           R1, #0x33333333
.text:00008906 01 EA 90 01                   AND.W           R1, R1, R0,LSR#2
.text:0000890A 20 F0 CC 30                   BIC.W           R0, R0, #0xCCCCCCCC
.text:0000890E 08 44                         ADD             R0, R1
.text:00008910 4F F0 01 31                   MOV.W           R1, #0x1010101
.text:00008914 00 EB 10 10                   ADD.W           R0, R0, R0,LSR#4
.text:00008918 20 F0 F0 30                   BIC.W           R0, R0, #0xF0F0F0F0
.text:0000891C 48 43                         MULS            R0, R1
.text:0000891E 00 0E                         LSRS            R0, R0, #0x18
.text:00008920 00 E0                         B               loc_8924
.text:00008920
.text:00008922                               ; ---------------------------------------------------------------------------
.text:00008922
.text:00008922                               loc_8922                      ; CODE XREF: sub_7F90+95A↑j
.text:00008922 00 20                         MOVS            R0, #0
.text:00008922
.text:00008924
.text:00008924                               loc_8924                      ; CODE XREF: sub_7F90+990↑j
.text:00008924 70 43                         MULS            R0, R6
.text:00008924
.text:00008926
.text:00008926                               loc_8926                      ; CODE XREF: sub_7F90+934↑j
.text:00008926 D5 F8 80 10                   LDR.W           R1, [R5,#0x80]
.text:0000892A 01 FB 00 F0                   MUL.W           R0, R1, R0
.text:0000892E B4 FB F0 F0                   UDIV.W          R0, R4, R0    ; useconds
.text:00008932 FA F7 70 EB                   BLX             usleep
.text:00008932
.text:00008936
.text:00008936                               loc_8936                      ; CODE XREF: sub_7F90+8FC↑j
.text:00008936 48 46                         MOV             R0, R9        ; mutex
.text:00008938 FA F7 84 EB                   BLX             pthread_mutex_unlock
.text:00008938
.text:0000893C 37 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x8944)
.text:0000893E 0E 99                         LDR             R1, [SP,#0x60+var_28]
.text:00008940 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00008942 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00008944 00 68                         LDR             R0, [R0]
.text:00008946 40 1A                         SUBS            R0, R0, R1
.text:00008948 02 BF                         ITTT EQ
.text:0000894A 40 46                         MOVEQ           R0, R8
.text:0000894C 0F B0                         ADDEQ           SP, SP, #0x3C ; '<'
.text:0000894E BD E8 F0 8F                   POPEQ.W         {R4-R11,PC}
.text:0000894E
.text:00008952 FA F7 48 EB                   BLX             __stack_chk_fail
.text:00008952
.text:00008956                               ; ---------------------------------------------------------------------------
.text:00008956
.text:00008956                               loc_8956                      ; CODE XREF: sub_7F90+782↑j
.text:00008956 02 20                         MOVS            R0, #2
.text:00008958 00 E0                         B               loc_895C
.text:00008958
.text:0000895A                               ; ---------------------------------------------------------------------------
.text:0000895A
.text:0000895A                               loc_895A                      ; CODE XREF: sub_7F90+78E↑j
.text:0000895A 20 20                         MOVS            R0, #0x20 ; ' '
.text:0000895A
.text:0000895C
.text:0000895C                               loc_895C                      ; CODE XREF: sub_7F90+7A0↑j
.text:0000895C                                                             ; sub_7F90+9C8↑j
.text:0000895C 20 60                         STR             R0, [R4]
.text:0000895E DD E4                         B               loc_831C
.text:0000895E
.text:0000895E                               ; End of function sub_7F90
.text:0000895E
.text:0000895E                               ; ---------------------------------------------------------------------------
.text:00008960 F0 8D 00 00                   off_8960 DCD __stack_chk_guard_ptr - 0x7FA4
.text:00008960                                                             ; DATA XREF: sub_7F90+8↑r
.text:00008964 29 3A 00 00                   off_8964 DCD aAudioHwPrimary - 0x8076
.text:00008964                                                             ; DATA XREF: sub_7F90+D4↑r
.text:00008964                                                             ; "audio_hw_primary"
.text:00008968 70 48 00 00                   off_8968 DCD aS_0 - 0x807C    ; DATA XREF: sub_7F90+DA↑r
.text:00008968                                                             ; "%s():..."
.text:0000896C 6F 59 00 00                   off_896C DCD aStartInputStre - 0x807E
.text:0000896C                                                             ; DATA XREF: sub_7F90+DE↑r
.text:0000896C                                                             ; "start_input_stream"
.text:00008970 B4 8C 00 00                   off_8970 DCD pcm_config_in_ptr - 0x80E4
.text:00008970                                                             ; DATA XREF: sub_7F90+14C↑r
.text:00008974 A8 8C 00 00                   off_8974 DCD pcm_config_in_ptr - 0x80F0
.text:00008974                                                             ; DATA XREF: sub_7F90:loc_80E8↑r
.text:00008978 DE 8C 00 00                   off_8978 DCD pcm_config_in_ptr - 0x80BA
.text:00008978                                                             ; DATA XREF: sub_7F90+122↑r
.text:0000897C 08 8D 00 00                   off_897C DCD pcm_config_voice_call_ptr - 0x809C
.text:0000897C                                                             ; DATA XREF: sub_7F90+100↑r
.text:00008980 F8 8C 00 00                   off_8980 DCD pcm_config_in_ptr - 0x80A0
.text:00008980                                                             ; DATA XREF: sub_7F90+104↑r
.text:00008984 8C 8C 00 00                   off_8984 DCD pcm_config_in_ptr - 0x810C
.text:00008984                                                             ; DATA XREF: sub_7F90+170↑r
.text:00008988 6B 39 00 00                   off_8988 DCD aAudioHwPrimary - 0x8134
.text:00008988                                                             ; DATA XREF: sub_7F90+192↑r
.text:00008988                                                             ; "audio_hw_primary"
.text:0000898C CA 58 00 00                   off_898C DCD aSSyncWithInput - 0x8136
.text:0000898C                                                             ; DATA XREF: sub_7F90+198↑r
.text:0000898C                                                             ; "%s(): sync with input stream, standby o"...
.text:00008990 B5 58 00 00                   off_8990 DCD aStartInputStre - 0x8138
.text:00008990                                                             ; DATA XREF: sub_7F90+19C↑r
.text:00008990                                                             ; "start_input_stream"
.text:00008994 4A 8C 00 00                   off_8994 DCD pcm_config_in_ptr - 0x814E
.text:00008994                                                             ; DATA XREF: sub_7F90+1B6↑r
.text:00008998 3E 8C 00 00                   off_8998 DCD pcm_config_in_ptr - 0x815A
.text:00008998                                                             ; DATA XREF: sub_7F90:loc_8150↑r
.text:0000899C 27 39 00 00                   off_899C DCD aAudioHwPrimary - 0x8178
.text:0000899C                                                             ; DATA XREF: sub_7F90+1D8↑r
.text:0000899C                                                             ; "audio_hw_primary"
.text:000089A0 B3 58 00 00                   off_89A0 DCD aSPcmOpenCardDD - 0x817A
.text:000089A0                                                             ; DATA XREF: sub_7F90+1DC↑r
.text:000089A0                                                             ; "%s(): pcm_open card=%d, device=%d, samp"...
.text:000089A4 71 58 00 00                   off_89A4 DCD aStartInputStre - 0x817C
.text:000089A4                                                             ; DATA XREF: sub_7F90+1E0↑r
.text:000089A4                                                             ; "start_input_stream"
.text:000089A8 B9 38 00 00                   off_89A8 DCD aAudioHwPrimary - 0x81E6
.text:000089A8                                                             ; DATA XREF: sub_7F90+246↑r
.text:000089A8                                                             ; "audio_hw_primary"
.text:000089AC 5A 52 00 00                   off_89AC DCD aSPcmOpenPcmCar - 0x81EA
.text:000089AC                                                             ; DATA XREF: sub_7F90+24A↑r
.text:000089AC                                                             ; "%s(): pcm_open(PCM_CARD_PRIMARY) failed"...
.text:000089B0 01 58 00 00                   off_89B0 DCD aStartInputStre - 0x81EC
.text:000089B0                                                             ; DATA XREF: sub_7F90+24E↑r
.text:000089B0                                                             ; "start_input_stream"
.text:000089B4 F8 8B 00 00                   off_89B4 DCD pcm_config_in_ptr - 0x81A0
.text:000089B4                                                             ; DATA XREF: sub_7F90:loc_8196↑r
.text:000089B8 30 8B 00 00                   off_89B8 DCD pcm_config_in_ptr - 0x8268
.text:000089B8                                                             ; DATA XREF: sub_7F90+2D0↑r
.text:000089BC 55 09 00 00                   off_89BC DCD sub_8BD4+1 - 0x8280
.text:000089BC                                                             ; DATA XREF: sub_7F90+2E2↑r
.text:000089C0 12 8B 00 00                   off_89C0 DCD pcm_config_in_ptr - 0x8286
.text:000089C0                                                             ; DATA XREF: sub_7F90+2E8↑r
.text:000089C4 FD 09 00 00                   off_89C4 DCD sub_8C90+1 - 0x8294
.text:000089C4                                                             ; DATA XREF: sub_7F90+2F8↑r
.text:000089C8 F5 37 00 00                   off_89C8 DCD aAudioHwPrimary - 0x82AA
.text:000089C8                                                             ; DATA XREF: sub_7F90+312↑r
.text:000089C8                                                             ; "audio_hw_primary"
.text:000089CC B0 52 00 00                   off_89CC DCD aSCreateResampl - 0x829E
.text:000089CC                                                             ; DATA XREF: sub_7F90+302↑r
.text:000089CC                                                             ; "%s(): create_resampler: (%d >> %d)"
.text:000089D0 5D 57 00 00                   off_89D0 DCD aStartInputStre - 0x8290
.text:000089D0                                                             ; DATA XREF: sub_7F90+2EE↑r
.text:000089D0                                                             ; "start_input_stream"
.text:000089D4 15 37 00 00                   off_89D4 DCD aAudioHwPrimary - 0x838A
.text:000089D4                                                             ; DATA XREF: sub_7F90+3DA↑r
.text:000089D4                                                             ; "audio_hw_primary"
.text:000089D8 F7 34 00 00                   off_89D8 DCD aAudioHwPrimary - 0x85A8
.text:000089D8                                                             ; DATA XREF: sub_7F90+60A↑r
.text:000089D8                                                             ; "audio_hw_primary"
.text:000089DC D4 52 00 00                   off_89DC DCD aEndOfUartstrea - 0x85AA
.text:000089DC                                                             ; DATA XREF: sub_7F90+610↑r
.text:000089DC                                                             ; "end of uartstreaming"
.text:000089E0 9F 34 00 00                   off_89E0 DCD aAudioHwPrimary - 0x8600
.text:000089E0                                                             ; DATA XREF: sub_7F90:loc_85F0↑r
.text:000089E0                                                             ; "audio_hw_primary"
.text:000089E4 91 52 00 00                   off_89E4 DCD aHalReadStrmEnd - 0x8602
.text:000089E4                                                             ; DATA XREF: sub_7F90+666↑r
.text:000089E4                                                             ; "hal read strm end cvq %d"
.text:000089E8 5B 34 00 00                   off_89E8 DCD aAudioHwPrimary - 0x8644
.text:000089E8                                                             ; DATA XREF: sub_7F90:loc_8634↑r
.text:000089E8                                                             ; "audio_hw_primary"
.text:000089EC 66 52 00 00                   off_89EC DCD aHalReadMemcpyC - 0x8646
.text:000089EC                                                             ; DATA XREF: sub_7F90+6AA↑r
.text:000089EC                                                             ; "hal read memcpy cvq %d"
.text:000089F0 3F 34 00 00                   off_89F0 DCD aAudioHwPrimary - 0x8660
.text:000089F0                                                             ; DATA XREF: sub_7F90+6C2↑r
.text:000089F0                                                             ; "audio_hw_primary"
.text:000089F4 61 52 00 00                   off_89F4 DCD aBeforeReadOver - 0x8662
.text:000089F4                                                             ; DATA XREF: sub_7F90+6C6↑r
.text:000089F4                                                             ; "before read overflow - (read offset, ma"...
.text:000089F8 FD 33 00 00                   off_89F8 DCD aAudioHwPrimary - 0x86A2
.text:000089F8                                                             ; DATA XREF: sub_7F90+706↑r
.text:000089F8                                                             ; "audio_hw_primary"
.text:000089FC 57 52 00 00                   off_89FC DCD aAfterReadOverf - 0x86A6
.text:000089FC                                                             ; DATA XREF: sub_7F90+70A↑r
.text:000089FC                                                             ; "after read overflow - (read offset, max"...
.text:00008A00 CB 33 00 00                   off_8A00 DCD aAudioHwPrimary - 0x86D4
.text:00008A00                                                             ; DATA XREF: sub_7F90:loc_86C8↑r
.text:00008A00                                                             ; "audio_hw_primary"
.text:00008A04 60 52 00 00                   off_8A04 DCD aHalReadMemcpyE - 0x86D6
.text:00008A04                                                             ; DATA XREF: sub_7F90+73C↑r
.text:00008A04                                                             ; "hal read memcpy end cvq %d"
.text:00008A08 67 52 00 00                   off_8A08 DCD aReadWriteOffse - 0x86EA
.text:00008A08                                                             ; DATA XREF: sub_7F90+750↑r
.text:00008A08                                                             ; "read/write offset - %d/%d "
.text:00008A0C 6F 34 00 00                   off_8A0C DCD aAudioHwPrimary - 0x8630
.text:00008A0C                                                             ; DATA XREF: sub_7F90+692↑r
.text:00008A0C                                                             ; "audio_hw_primary"
.text:00008A10 38 53 00 00                   off_8A10 DCD aNotEnoughDataF - 0x8634
.text:00008A10                                                             ; DATA XREF: sub_7F90+698↑r
.text:00008A10                                                             ; "#### Not enough data for reading in cir"...
.text:00008A14 3A 51 00 00                   off_8A14 DCD aSdcardAndroidL_1 - 0x8884
.text:00008A14                                                             ; DATA XREF: sub_7F90:loc_8878↑r
.text:00008A14                                                             ; "/sdcard/Android/log/audio_dump/audio_hw"...
.text:00008A18 C1 4A 00 00                   off_8A18 DCD aAudioHwPcmDump - 0x8886
.text:00008A18                                                             ; DATA XREF: sub_7F90+8EC↑r
.text:00008A18                                                             ; "audio.hw.pcm.dump"
.text:00008A1C 50 84 00 00                   off_8A1C DCD __stack_chk_guard_ptr - 0x8944
.text:00008A1C                                                             ; DATA XREF: sub_7F90+9AC↑r
.text:00008A20 09 53 00 00                   off_8A20 DCD aStartPcmReadTh - 0x83BC
.text:00008A20                                                             ; DATA XREF: sub_7F90+420↑r
.text:00008A20                                                             ; "#### start pcm read thread ####"
.text:00008A24 8D 06 00 00                   off_8A24 DCD sub_8A58+1 - 0x83CC
.text:00008A24                                                             ; DATA XREF: sub_7F90+42E↑r
.text:00008A28 F1 52 00 00                   off_8A28 DCD aPcmReadThreadT - 0x83F4
.text:00008A28                                                             ; DATA XREF: sub_7F90:loc_83E8↑r
.text:00008A28                                                             ; "#### pcm_read_thread() thread creation "...
.text:00008A2C 30 53 00 00                   off_8A2C DCD aPcmReadThreadC - 0x83E8
.text:00008A2C                                                             ; DATA XREF: sub_7F90+444↑r
.text:00008A2C                                                             ; "#### Pcm read thread created successful"...
.text:00008A30 E0 52 00 00                   off_8A30 DCD aBeforeWaitingF - 0x8530
.text:00008A30                                                             ; DATA XREF: sub_7F90+592↑r
.text:00008A30                                                             ; "#### before waiting for first read - %d"...
.text:00008A34 F1 52 00 00                   off_8A34 DCD aAfterWaitingFo - 0x854C
.text:00008A34                                                             ; DATA XREF: sub_7F90+5B0↑r
.text:00008A34                                                             ; "#### after waiting for first read  - %d"...
.text:00008A38 CC 54 00 00                   off_8A38 DCD aCvqDataNotRead - 0x839E
.text:00008A38                                                             ; DATA XREF: sub_7F90:loc_8392↑r
.text:00008A38                                                             ; "CVQ data not ready!"
.text:00008A3C 30 53 00 00                   off_8A3C DCD aBeforeSlimRead - 0x8446
.text:00008A3C                                                             ; DATA XREF: sub_7F90+4AA↑r
.text:00008A3C                                                             ; "before slim read"
.text:00008A40 0B 53 00 00                   off_8A40 DCD aBeforeWriteOve - 0x847C
.text:00008A40                                                             ; DATA XREF: sub_7F90+4DC↑r
.text:00008A40                                                             ; "before write overflow - (write offset, "...
.text:00008A44 00 53 00 00                   off_8A44 DCD aAfterWriteOver - 0x84C4
.text:00008A44                                                             ; DATA XREF: sub_7F90+528↑r
.text:00008A44                                                             ; "after write overflow - (write offset, m"...
.text:00008A48 EC 52 00 00                   off_8A48 DCD aAfterSlimRead - 0x8514
.text:00008A48                                                             ; DATA XREF: sub_7F90:loc_8508↑r
.text:00008A48                                                             ; "after slim read"
.text:00008A4C 20 53 00 00                   off_8A4C DCD aAfterSlimRead - 0x84E0
.text:00008A4C                                                             ; DATA XREF: sub_7F90:loc_84D4↑r
.text:00008A4C                                                             ; "after slim read"
.text:00008A50 1F 53 00 00                   off_8A50 DCD aPcmReadThreadS - 0x8428
.text:00008A50                                                             ; DATA XREF: sub_7F90+48C↑r
.text:00008A50                               ; } // starts at 7F90         ; "#### Pcm read thread stopped successful"...
.text:00008A54
.text:00008A54                               ; =============== S U B R O U T I N E =======================================
.text:00008A54
.text:00008A54
.text:00008A54                               ; int sub_8A54()
.text:00008A54                               sub_8A54                      ; DATA XREF: sub_52F4+156↑o
.text:00008A54                                                             ; sub_52F4+158↑o
.text:00008A54                                                             ; .text:off_5510↑o
.text:00008A54                               ; __unwind {
.text:00008A54 00 20                         MOVS            R0, #0
.text:00008A56 70 47                         BX              LR
.text:00008A56                               ; } // starts at 8A54
.text:00008A56
.text:00008A56                               ; End of function sub_8A54
.text:00008A56
.text:00008A58
.text:00008A58                               ; =============== S U B R O U T I N E =======================================
.text:00008A58
.text:00008A58
.text:00008A58                               ; int __fastcall sub_8A58(int)
.text:00008A58                               sub_8A58                      ; DATA XREF: sub_7F90+42E↑o
.text:00008A58                                                             ; sub_7F90+438↑o
.text:00008A58                                                             ; .text:off_8A24↑o
.text:00008A58
.text:00008A58                               var_28= -0x28
.text:00008A58
.text:00008A58                               ; __unwind {
.text:00008A58 2D E9 F0 4F                   PUSH.W          {R4-R11,LR}
.text:00008A5C 81 B0                         SUB             SP, SP, #4
.text:00008A5E DF F8 48 91                   LDR.W           R9, =(aAudioHwPrimary - 0x8A72) ; "audio_hw_primary"
.text:00008A62 04 46                         MOV             R4, R0
.text:00008A64 DF F8 48 81                   LDR.W           R8, =(aPcmReadThread - 0x8A74) ; "pcm_read_thread"
.text:00008A68 40 F2 82 30                   MOVW            R0, #0x382
.text:00008A6C 4F 4A                         LDR             R2, =(aSD_0 - 0x8A7A) ; "%s():...%d"
.text:00008A6E F9 44                         ADD             R9, PC        ; "audio_hw_primary"
.text:00008A70 F8 44                         ADD             R8, PC        ; "pcm_read_thread"
.text:00008A72 A5 6D                         LDR             R5, [R4,#0x58]
.text:00008A74 00 90                         STR             R0, [SP,#0x28+var_28]
.text:00008A76 7A 44                         ADD             R2, PC        ; "%s():...%d"
.text:00008A78 03 20                         MOVS            R0, #3
.text:00008A7A 49 46                         MOV             R1, R9
.text:00008A7C 43 46                         MOV             R3, R8
.text:00008A7E FA F7 AC EA                   BLX             __android_log_print
.text:00008A7E
.text:00008A82 4C 4F                         LDR             R7, =(aSBeforeSlimRea - 0x8A8E) ; "%s: before slim read"
.text:00008A84 4F F0 00 0A                   MOV.W           R10, #0
.text:00008A88 4B 4E                         LDR             R6, =(aSAfterSlimRead - 0x8A90) ; "%s: after slim read"
.text:00008A8A 7F 44                         ADD             R7, PC        ; "%s: before slim read"
.text:00008A8C 7E 44                         ADD             R6, PC        ; "%s: after slim read"
.text:00008A8C
.text:00008A8E
.text:00008A8E                               loc_8A8E                      ; CODE XREF: sub_8A58+128↓j
.text:00008A8E 02 20                         MOVS            R0, #2
.text:00008A90 49 46                         MOV             R1, R9
.text:00008A92 3A 46                         MOV             R2, R7
.text:00008A94 43 46                         MOV             R3, R8
.text:00008A96 FA F7 A0 EA                   BLX             __android_log_print
.text:00008A96
.text:00008A9A E1 6E                         LDR             R1, [R4,#0x6C]
.text:00008A9C 20 6E                         LDR             R0, [R4,#0x60]
.text:00008A9E 29 44                         ADD             R1, R5
.text:00008AA0 81 42                         CMP             R1, R0
.text:00008AA2 61 DA                         BGE             loc_8B68
.text:00008AA2
.text:00008AA4 A1 6E                         LDR             R1, [R4,#0x68]
.text:00008AA6 4A 19                         ADDS            R2, R1, R5
.text:00008AA8 82 42                         CMP             R2, R0
.text:00008AAA 4C DD                         BLE             loc_8B46
.text:00008AAA
.text:00008AAC 28 46                         MOV             R0, R5        ; size
.text:00008AAE 3E 46                         MOV             R6, R7
.text:00008AB0 FA F7 2E EB                   BLX             malloc
.text:00008AB0
.text:00008AB4 82 46                         MOV             R10, R0
.text:00008AB6 BA F1 00 0F                   CMP.W           R10, #0
.text:00008ABA 06 D1                         BNE             loc_8ACA
.text:00008ABA
.text:00008ABC 41 4A                         LDR             R2, =(aSMallocFail - 0x8AC8) ; "%s: malloc fail!!!"
.text:00008ABE 06 20                         MOVS            R0, #6
.text:00008AC0 49 46                         MOV             R1, R9
.text:00008AC2 43 46                         MOV             R3, R8
.text:00008AC4 7A 44                         ADD             R2, PC        ; "%s: malloc fail!!!"
.text:00008AC6 FA F7 88 EA                   BLX             __android_log_print
.text:00008AC6
.text:00008ACA
.text:00008ACA                               loc_8ACA                      ; CODE XREF: sub_8A58+62↑j
.text:00008ACA A0 6F                         LDR             R0, [R4,#0x78]
.text:00008ACC 51 46                         MOV             R1, R10
.text:00008ACE 2A 46                         MOV             R2, R5
.text:00008AD0 FA F7 5C EC                   BLX             pcm_read
.text:00008AD0
.text:00008AD4 07 46                         MOV             R7, R0
.text:00008AD6 20 6E                         LDR             R0, [R4,#0x60]
.text:00008AD8 3B 4A                         LDR             R2, =(aBeforeWriteOve_0 - 0x8AE6) ; "before write overflow %d, %d"
.text:00008ADA 49 46                         MOV             R1, R9
.text:00008ADC A3 6E                         LDR             R3, [R4,#0x68]
.text:00008ADE 00 90                         STR             R0, [SP,#0x28+var_28]
.text:00008AE0 03 20                         MOVS            R0, #3
.text:00008AE2 7A 44                         ADD             R2, PC        ; "before write overflow %d, %d"
.text:00008AE4 FA F7 78 EA                   BLX             __android_log_print
.text:00008AE4
.text:00008AE8 00 2F                         CMP             R7, #0
.text:00008AEA A0 6E                         LDR             R0, [R4,#0x68]
.text:00008AEC 4F F0 00 07                   MOV.W           R7, #0
.text:00008AF0 21 6E                         LDR             R1, [R4,#0x60]
.text:00008AF2 08 BF                         IT EQ
.text:00008AF4 2F 46                         MOVEQ           R7, R5
.text:00008AF6 C2 19                         ADDS            R2, R0, R7
.text:00008AF8 A2 EB 01 0B                   SUB.W           R11, R2, R1
.text:00008AFC A7 EB 0B 02                   SUB.W           R2, R7, R11
.text:00008B00 01 2A                         CMP             R2, #1
.text:00008B02 04 DB                         BLT             loc_8B0E
.text:00008B02
.text:00008B04 E1 6D                         LDR             R1, [R4,#0x5C]
.text:00008B06 08 44                         ADD             R0, R1
.text:00008B08 51 46                         MOV             R1, R10
.text:00008B0A FA F7 46 EC                   BLX             __aeabi_memcpy
.text:00008B0A
.text:00008B0E
.text:00008B0E                               loc_8B0E                      ; CODE XREF: sub_8A58+AA↑j
.text:00008B0E 00 20                         MOVS            R0, #0
.text:00008B10 0A EB 07 01                   ADD.W           R1, R10, R7
.text:00008B14 A0 66                         STR             R0, [R4,#0x68]
.text:00008B16 A1 EB 0B 01                   SUB.W           R1, R1, R11
.text:00008B1A E0 6D                         LDR             R0, [R4,#0x5C]
.text:00008B1C 5A 46                         MOV             R2, R11
.text:00008B1E FA F7 3C EC                   BLX             __aeabi_memcpy
.text:00008B1E
.text:00008B22 A0 6E                         LDR             R0, [R4,#0x68]
.text:00008B24 49 46                         MOV             R1, R9
.text:00008B26 29 4A                         LDR             R2, =(aAfterWriteOver_0 - 0x8B32) ; "after write overflow %d : %d"
.text:00008B28 00 EB 0B 03                   ADD.W           R3, R0, R11
.text:00008B2C A3 66                         STR             R3, [R4,#0x68]
.text:00008B2E 7A 44                         ADD             R2, PC        ; "after write overflow %d : %d"
.text:00008B30 E0 6E                         LDR             R0, [R4,#0x6C]
.text:00008B32 38 44                         ADD             R0, R7
.text:00008B34 E0 66                         STR             R0, [R4,#0x6C]
.text:00008B36 03 20                         MOVS            R0, #3
.text:00008B38 00 97                         STR             R7, [SP,#0x28+var_28]
.text:00008B3A FA F7 4E EA                   BLX             __android_log_print
.text:00008B3A
.text:00008B3E 37 46                         MOV             R7, R6
.text:00008B40 23 4E                         LDR             R6, =(aSAfterSlimRead - 0x8B46) ; "%s: after slim read"
.text:00008B42 7E 44                         ADD             R6, PC        ; "%s: after slim read"
.text:00008B44 10 E0                         B               loc_8B68
.text:00008B44
.text:00008B46                               ; ---------------------------------------------------------------------------
.text:00008B46
.text:00008B46                               loc_8B46                      ; CODE XREF: sub_8A58+52↑j
.text:00008B46 E2 6D                         LDR             R2, [R4,#0x5C]
.text:00008B48 A0 6F                         LDR             R0, [R4,#0x78]
.text:00008B4A 11 44                         ADD             R1, R2
.text:00008B4C 2A 46                         MOV             R2, R5
.text:00008B4E FA F7 1E EC                   BLX             pcm_read
.text:00008B4E
.text:00008B52 00 28                         CMP             R0, #0
.text:00008B54 A1 6E                         LDR             R1, [R4,#0x68]
.text:00008B56 4F F0 00 00                   MOV.W           R0, #0
.text:00008B5A 08 BF                         IT EQ
.text:00008B5C 28 46                         MOVEQ           R0, R5
.text:00008B5E 01 44                         ADD             R1, R0
.text:00008B60 A1 66                         STR             R1, [R4,#0x68]
.text:00008B62 E1 6E                         LDR             R1, [R4,#0x6C]
.text:00008B64 08 44                         ADD             R0, R1
.text:00008B66 E0 66                         STR             R0, [R4,#0x6C]
.text:00008B66
.text:00008B68
.text:00008B68                               loc_8B68                      ; CODE XREF: sub_8A58+4A↑j
.text:00008B68                                                             ; sub_8A58+EC↑j
.text:00008B68 02 20                         MOVS            R0, #2
.text:00008B6A 49 46                         MOV             R1, R9
.text:00008B6C 32 46                         MOV             R2, R6
.text:00008B6E 43 46                         MOV             R3, R8
.text:00008B70 FA F7 32 EA                   BLX             __android_log_print
.text:00008B70
.text:00008B74 42 F2 10 70                   MOVW            R0, #0x2710   ; useconds
.text:00008B78 FA F7 4C EA                   BLX             usleep
.text:00008B78
.text:00008B7C E0 6C                         LDR             R0, [R4,#0x4C]
.text:00008B7E 00 28                         CMP             R0, #0
.text:00008B80 3F F4 85 AF                   BEQ.W           loc_8A8E
.text:00008B80
.text:00008B84 BA F1 00 0F                   CMP.W           R10, #0
.text:00008B88 1C BF                         ITT NE
.text:00008B8A 50 46                         MOVNE           R0, R10       ; ptr
.text:00008B8C FA F7 CC EA                   BLXNE           free
.text:00008B8C
.text:00008B90 0A 49                         LDR             R1, =(aAudioHwPrimary - 0x8B9A) ; "audio_hw_primary"
.text:00008B92 04 20                         MOVS            R0, #4
.text:00008B94 0A 4A                         LDR             R2, =(aPcmReadThreadE - 0x8B9C) ; "#### pcm read thread exit ####"
.text:00008B96 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00008B98 7A 44                         ADD             R2, PC        ; "#### pcm read thread exit ####"
.text:00008B9A FA F7 1E EA                   BLX             __android_log_print
.text:00008B9A
.text:00008B9E 00 20                         MOVS            R0, #0
.text:00008BA0 01 B0                         ADD             SP, SP, #4
.text:00008BA2 BD E8 F0 8F                   POP.W           {R4-R11,PC}
.text:00008BA2
.text:00008BA2                               ; End of function sub_8A58
.text:00008BA2
.text:00008BA2                               ; ---------------------------------------------------------------------------
.text:00008BA6 00 BF                         ALIGN 4
.text:00008BA8 2D 30 00 00                   off_8BA8 DCD aAudioHwPrimary - 0x8A72
.text:00008BA8                                                             ; DATA XREF: sub_8A58+6↑r
.text:00008BA8                                                             ; "audio_hw_primary"
.text:00008BAC 1E 50 00 00                   off_8BAC DCD aSD_0 - 0x8A7A   ; DATA XREF: sub_8A58+14↑r
.text:00008BAC                                                             ; "%s():...%d"
.text:00008BB0 2F 50 00 00                   off_8BB0 DCD aPcmReadThread - 0x8A74
.text:00008BB0                                                             ; DATA XREF: sub_8A58+C↑r
.text:00008BB0                                                             ; "pcm_read_thread"
.text:00008BB4 25 50 00 00                   off_8BB4 DCD aSBeforeSlimRea - 0x8A8E
.text:00008BB4                                                             ; DATA XREF: sub_8A58+2A↑r
.text:00008BB4                                                             ; "%s: before slim read"
.text:00008BB8 85 50 00 00                   off_8BB8 DCD aSAfterSlimRead - 0x8A90
.text:00008BB8                                                             ; DATA XREF: sub_8A58+30↑r
.text:00008BB8                                                             ; "%s: after slim read"
.text:00008BBC 05 2F 00 00                   off_8BBC DCD aAudioHwPrimary - 0x8B9A
.text:00008BBC                                                             ; DATA XREF: sub_8A58+138↑r
.text:00008BBC                                                             ; "audio_hw_primary"
.text:00008BC0 8D 4F 00 00                   off_8BC0 DCD aPcmReadThreadE - 0x8B9C
.text:00008BC0                                                             ; DATA XREF: sub_8A58+13C↑r
.text:00008BC0                                                             ; "#### pcm read thread exit ####"
.text:00008BC4 00 50 00 00                   off_8BC4 DCD aSMallocFail - 0x8AC8
.text:00008BC4                                                             ; DATA XREF: sub_8A58+64↑r
.text:00008BC4                                                             ; "%s: malloc fail!!!"
.text:00008BC8 F5 4F 00 00                   off_8BC8 DCD aBeforeWriteOve_0 - 0x8AE6
.text:00008BC8                                                             ; DATA XREF: sub_8A58+80↑r
.text:00008BC8                                                             ; "before write overflow %d, %d"
.text:00008BCC C6 4F 00 00                   off_8BCC DCD aAfterWriteOver_0 - 0x8B32
.text:00008BCC                                                             ; DATA XREF: sub_8A58+CE↑r
.text:00008BCC                                                             ; "after write overflow %d : %d"
.text:00008BD0 CF 4F 00 00                   off_8BD0 DCD aSAfterSlimRead - 0x8B46
.text:00008BD0                                                             ; DATA XREF: sub_8A58+E8↑r
.text:00008BD0                               ; } // starts at 8A58         ; "%s: after slim read"
.text:00008BD4
.text:00008BD4                               ; =============== S U B R O U T I N E =======================================
.text:00008BD4
.text:00008BD4
.text:00008BD4                               ; int __fastcall sub_8BD4(_DWORD *, _DWORD *)
.text:00008BD4                               sub_8BD4                      ; CODE XREF: sub_7F90+83C↑p
.text:00008BD4                                                             ; DATA XREF: sub_7F90+2E2↑o
.text:00008BD4                                                             ; sub_7F90+2EC↑o
.text:00008BD4                                                             ; .text:off_89BC↑o
.text:00008BD4                               ; __unwind {
.text:00008BD4 F0 B5                         PUSH            {R4-R7,LR}
.text:00008BD6 81 B0                         SUB             SP, SP, #4
.text:00008BD8 04 46                         MOV             R4, R0
.text:00008BDA 0D 46                         MOV             R5, R1
.text:00008BDC 6F F0 15 00                   MOV             R0, #0xFFFFFFEA
.text:00008BE0 00 2C                         CMP             R4, #0
.text:00008BE2 49 D0                         BEQ             loc_8C78
.text:00008BE2
.text:00008BE4 00 2D                         CMP             R5, #0
.text:00008BE6 47 D0                         BEQ             loc_8C78
.text:00008BE6
.text:00008BE8 54 F8 10 6C                   LDR.W           R6, [R4,#-0x10]
.text:00008BEC E6 B1                         CBZ             R6, loc_8C28
.text:00008BEC
.text:00008BEE E0 68                         LDR             R0, [R4,#0xC]
.text:00008BF0 90 BB                         CBNZ            R0, loc_8C58
.text:00008BF0
.text:00008BF2 22 48                         LDR             R0, =(pcm_config_in_ptr - 0x8BFA)
.text:00008BF4 A7 68                         LDR             R7, [R4,#8]
.text:00008BF6 78 44                         ADD             R0, PC        ; pcm_config_in_ptr
.text:00008BF8 00 68                         LDR             R0, [R0]      ; pcm_config_in
.text:00008BFA 81 68                         LDR             R1, [R0,#(off_11038 - 0x11030)] ; stru_400
.text:00008BFC 30 46                         MOV             R0, R6
.text:00008BFE FA F7 82 EA                   BLX             pcm_frames_to_bytes
.text:00008BFE
.text:00008C02 02 46                         MOV             R2, R0
.text:00008C04 30 46                         MOV             R0, R6
.text:00008C06 39 46                         MOV             R1, R7
.text:00008C08 FA F7 C0 EB                   BLX             pcm_read
.text:00008C08
.text:00008C0C 03 46                         MOV             R3, R0
.text:00008C0E 23 61                         STR             R3, [R4,#0x10]
.text:00008C10 8B B1                         CBZ             R3, loc_8C36
.text:00008C10
.text:00008C12 1B 49                         LDR             R1, =(aAudioHwPrimary - 0x8C1C) ; "audio_hw_primary"
.text:00008C14 06 20                         MOVS            R0, #6
.text:00008C16 1B 4A                         LDR             R2, =(aGetNextBufferP - 0x8C1E) ; "get_next_buffer() pcm_read error %d"
.text:00008C18 79 44                         ADD             R1, PC        ; "audio_hw_primary"
.text:00008C1A 7A 44                         ADD             R2, PC        ; "get_next_buffer() pcm_read error %d"
.text:00008C1C FA F7 DC E9                   BLX             __android_log_print
.text:00008C1C
.text:00008C20 00 20                         MOVS            R0, #0
.text:00008C22 C5 E9 00 00                   STRD.W          R0, R0, [R5]
.text:00008C26 26 E0                         B               loc_8C76
.text:00008C26
.text:00008C28                               ; ---------------------------------------------------------------------------
.text:00008C28
.text:00008C28                               loc_8C28                      ; CODE XREF: sub_8BD4+18↑j
.text:00008C28 00 20                         MOVS            R0, #0
.text:00008C2A C5 E9 00 00                   STRD.W          R0, R0, [R5]
.text:00008C2E 6F F0 12 00                   MOV             R0, #0xFFFFFFED
.text:00008C32 20 61                         STR             R0, [R4,#0x10]
.text:00008C34 20 E0                         B               loc_8C78
.text:00008C34
.text:00008C36                               ; ---------------------------------------------------------------------------
.text:00008C36
.text:00008C36                               loc_8C36                      ; CODE XREF: sub_8BD4+3C↑j
.text:00008C36 14 48                         LDR             R0, =(pcm_config_in_ptr - 0x8C3C)
.text:00008C38 78 44                         ADD             R0, PC        ; pcm_config_in_ptr
.text:00008C3A 00 68                         LDR             R0, [R0]      ; pcm_config_in
.text:00008C3C 80 68                         LDR             R0, [R0,#(off_11038 - 0x11030)] ; stru_400
.text:00008C3E 02 28                         CMP             R0, #2
.text:00008C40 E0 60                         STR             R0, [R4,#0xC]
.text:00008C42 09 D3                         BCC             loc_8C58
.text:00008C42
.text:00008C44 01 21                         MOVS            R1, #1
.text:00008C44
.text:00008C46
.text:00008C46                               loc_8C46                      ; CODE XREF: sub_8BD4+82↓j
.text:00008C46 A0 68                         LDR             R0, [R4,#8]
.text:00008C48 30 F8 21 20                   LDRH.W          R2, [R0,R1,LSL#2]
.text:00008C4C 20 F8 11 20                   STRH.W          R2, [R0,R1,LSL#1]
.text:00008C50 01 31                         ADDS            R1, #1
.text:00008C52 E0 68                         LDR             R0, [R4,#0xC]
.text:00008C54 81 42                         CMP             R1, R0
.text:00008C56 F6 D3                         BCC             loc_8C46
.text:00008C56
.text:00008C58
.text:00008C58                               loc_8C58                      ; CODE XREF: sub_8BD4+1C↑j
.text:00008C58                                                             ; sub_8BD4+6E↑j
.text:00008C58 0C 4A                         LDR             R2, =(pcm_config_in_ptr - 0x8C60)
.text:00008C5A 69 68                         LDR             R1, [R5,#4]
.text:00008C5C 7A 44                         ADD             R2, PC        ; pcm_config_in_ptr
.text:00008C5E 81 42                         CMP             R1, R0
.text:00008C60 88 BF                         IT HI
.text:00008C62 01 46                         MOVHI           R1, R0
.text:00008C64 12 68                         LDR             R2, [R2]      ; pcm_config_in
.text:00008C66 69 60                         STR             R1, [R5,#4]
.text:00008C68 D4 E9 02 01                   LDRD.W          R0, R1, [R4,#8]
.text:00008C6C 92 68                         LDR             R2, [R2,#(off_11038 - 0x11030)] ; stru_400
.text:00008C6E 51 1A                         SUBS            R1, R2, R1
.text:00008C70 00 EB 41 00                   ADD.W           R0, R0, R1,LSL#1
.text:00008C74 28 60                         STR             R0, [R5]
.text:00008C74
.text:00008C76
.text:00008C76                               loc_8C76                      ; CODE XREF: sub_8BD4+52↑j
.text:00008C76 20 69                         LDR             R0, [R4,#0x10]
.text:00008C76
.text:00008C78
.text:00008C78                               loc_8C78                      ; CODE XREF: sub_8BD4+E↑j
.text:00008C78                                                             ; sub_8BD4+12↑j
.text:00008C78                                                             ; sub_8BD4+60↑j
.text:00008C78 01 B0                         ADD             SP, SP, #4
.text:00008C7A F0 BD                         POP             {R4-R7,PC}
.text:00008C7A
.text:00008C7A                               ; End of function sub_8BD4
.text:00008C7A
.text:00008C7A                               ; ---------------------------------------------------------------------------
.text:00008C7C 9E 81 00 00                   off_8C7C DCD pcm_config_in_ptr - 0x8BFA
.text:00008C7C                                                             ; DATA XREF: sub_8BD4+1E↑r
.text:00008C80 83 2E 00 00                   off_8C80 DCD aAudioHwPrimary - 0x8C1C
.text:00008C80                                                             ; DATA XREF: sub_8BD4+3E↑r
.text:00008C80                                                             ; "audio_hw_primary"
.text:00008C84 56 4E 00 00                   off_8C84 DCD aGetNextBufferP - 0x8C1E
.text:00008C84                                                             ; DATA XREF: sub_8BD4+42↑r
.text:00008C84                                                             ; "get_next_buffer() pcm_read error %d"
.text:00008C88 5C 81 00 00                   off_8C88 DCD pcm_config_in_ptr - 0x8C3C
.text:00008C88                                                             ; DATA XREF: sub_8BD4:loc_8C36↑r
.text:00008C8C 38 81 00 00                   off_8C8C DCD pcm_config_in_ptr - 0x8C60
.text:00008C8C                                                             ; DATA XREF: sub_8BD4:loc_8C58↑r
.text:00008C8C                               ; } // starts at 8BD4
.text:00008C90
.text:00008C90                               ; =============== S U B R O U T I N E =======================================
.text:00008C90
.text:00008C90
.text:00008C90                               ; int __fastcall sub_8C90(int result, int)
.text:00008C90                               sub_8C90                      ; DATA XREF: sub_7F90+2F8↑o
.text:00008C90                                                             ; sub_7F90+300↑o
.text:00008C90                                                             ; .text:off_89C4↑o
.text:00008C90                               ; __unwind {
.text:00008C90 20 B1                         CBZ             R0, locret_8C9C
.text:00008C90
.text:00008C92 19 B1                         CBZ             R1, locret_8C9C
.text:00008C92
.text:00008C94 49 68                         LDR             R1, [R1,#4]
.text:00008C96 C2 68                         LDR             R2, [R0,#0xC]
.text:00008C98 51 1A                         SUBS            R1, R2, R1
.text:00008C9A C1 60                         STR             R1, [R0,#0xC]
.text:00008C9A
.text:00008C9C
.text:00008C9C                               locret_8C9C                   ; CODE XREF: sub_8C90↑j
.text:00008C9C                                                             ; sub_8C90+2↑j
.text:00008C9C 70 47                         BX              LR
.text:00008C9C                               ; } // starts at 8C90
.text:00008C9C
.text:00008C9C                               ; End of function sub_8C90
.text:00008C9C
.text:00008C9E
.text:00008C9E                               ; =============== S U B R O U T I N E =======================================
.text:00008C9E
.text:00008C9E
.text:00008C9E                               ; int __fastcall audio_route_update_mixer(int)
.text:00008C9E                               EXPORT audio_route_update_mixer
.text:00008C9E                               audio_route_update_mixer      ; CODE XREF: j_audio_route_update_mixer+8↑j
.text:00008C9E                                                             ; DATA XREF: LOAD:00000850↑o
.text:00008C9E                                                             ; .got:audio_route_update_mixer_ptr↓o
.text:00008C9E                               ; __unwind {
.text:00008C9E 2D E9 F0 43                   PUSH.W          {R4-R9,LR}
.text:00008CA2 81 B0                         SUB             SP, SP, #4
.text:00008CA4 80 46                         MOV             R8, R0
.text:00008CA6 D8 F8 04 C0                   LDR.W           R12, [R8,#4]
.text:00008CAA BC F1 00 0F                   CMP.W           R12, #0
.text:00008CAE 35 D0                         BEQ             loc_8D1C
.text:00008CAE
.text:00008CB0 00 26                         MOVS            R6, #0
.text:00008CB0
.text:00008CB2
.text:00008CB2                               loc_8CB2                      ; CODE XREF: audio_route_update_mixer+7C↓j
.text:00008CB2 D8 F8 08 00                   LDR.W           R0, [R8,#8]
.text:00008CB6 06 EB 46 09                   ADD.W           R9, R6, R6,LSL#1
.text:00008CBA 00 EB C9 01                   ADD.W           R1, R0, R9,LSL#3
.text:00008CBE D1 F8 04 E0                   LDR.W           LR, [R1,#4]
.text:00008CC2 BE F1 02 0F                   CMP.W           LR, #2
.text:00008CC6 26 D8                         BHI             loc_8D16
.text:00008CC6
.text:00008CC8 8D 68                         LDR             R5, [R1,#8]
.text:00008CCA 25 B3                         CBZ             R5, loc_8D16
.text:00008CCA
.text:00008CCC 50 F8 39 00                   LDR.W           R0, [R0,R9,LSL#3]
.text:00008CD0 00 22                         MOVS            R2, #0
.text:00008CD2 D1 E9 03 41                   LDRD.W          R4, R1, [R1,#0xC]
.text:00008CD2
.text:00008CD6
.text:00008CD6                               loc_8CD6                      ; CODE XREF: audio_route_update_mixer+48↓j
.text:00008CD6 51 F8 22 70                   LDR.W           R7, [R1,R2,LSL#2]
.text:00008CDA 54 F8 22 30                   LDR.W           R3, [R4,R2,LSL#2]
.text:00008CDE BB 42                         CMP             R3, R7
.text:00008CE0 03 D1                         BNE             loc_8CEA
.text:00008CE0
.text:00008CE2 01 32                         ADDS            R2, #1
.text:00008CE4 AA 42                         CMP             R2, R5
.text:00008CE6 F6 D3                         BCC             loc_8CD6
.text:00008CE6
.text:00008CE8 15 E0                         B               loc_8D16
.text:00008CE8
.text:00008CEA                               ; ---------------------------------------------------------------------------
.text:00008CEA
.text:00008CEA                               loc_8CEA                      ; CODE XREF: audio_route_update_mixer+42↑j
.text:00008CEA BE F1 02 0F                   CMP.W           LR, #2
.text:00008CEE 04 D1                         BNE             loc_8CFA
.text:00008CEE
.text:00008CF0 0A 68                         LDR             R2, [R1]
.text:00008CF2 00 21                         MOVS            R1, #0
.text:00008CF4 FA F7 42 EA                   BLX             mixer_ctl_set_value
.text:00008CF4
.text:00008CF8 02 E0                         B               loc_8D00
.text:00008CF8
.text:00008CFA                               ; ---------------------------------------------------------------------------
.text:00008CFA
.text:00008CFA                               loc_8CFA                      ; CODE XREF: audio_route_update_mixer+50↑j
.text:00008CFA 2A 46                         MOV             R2, R5
.text:00008CFC FA F7 52 EB                   BLX             mixer_ctl_set_array
.text:00008CFC
.text:00008D00
.text:00008D00                               loc_8D00                      ; CODE XREF: audio_route_update_mixer+5A↑j
.text:00008D00 D8 F8 08 00                   LDR.W           R0, [R8,#8]
.text:00008D04 AA 00                         LSLS            R2, R5, #2
.text:00008D06 00 EB C9 01                   ADD.W           R1, R0, R9,LSL#3
.text:00008D0A D1 E9 03 01                   LDRD.W          R0, R1, [R1,#0xC]
.text:00008D0E FA F7 50 EB                   BLX             __aeabi_memcpy4
.text:00008D0E
.text:00008D12 D8 F8 04 C0                   LDR.W           R12, [R8,#4]
.text:00008D12
.text:00008D16
.text:00008D16                               loc_8D16                      ; CODE XREF: audio_route_update_mixer+28↑j
.text:00008D16                                                             ; audio_route_update_mixer+2C↑j
.text:00008D16                                                             ; audio_route_update_mixer+4A↑j
.text:00008D16 01 36                         ADDS            R6, #1
.text:00008D18 66 45                         CMP             R6, R12
.text:00008D1A CA D3                         BCC             loc_8CB2
.text:00008D1A
.text:00008D1C
.text:00008D1C                               loc_8D1C                      ; CODE XREF: audio_route_update_mixer+10↑j
.text:00008D1C 00 20                         MOVS            R0, #0
.text:00008D1E 01 B0                         ADD             SP, SP, #4
.text:00008D20 BD E8 F0 83                   POP.W           {R4-R9,PC}
.text:00008D20                               ; } // starts at 8C9E
.text:00008D20
.text:00008D20                               ; End of function audio_route_update_mixer
.text:00008D20
.text:00008D24
.text:00008D24                               ; =============== S U B R O U T I N E =======================================
.text:00008D24
.text:00008D24
.text:00008D24                               ; unsigned int __fastcall audio_route_reset(int)
.text:00008D24                               EXPORT audio_route_reset
.text:00008D24                               audio_route_reset             ; CODE XREF: j_audio_route_reset+8↑j
.text:00008D24                                                             ; DATA XREF: LOAD:00000D80↑o
.text:00008D24                                                             ; .got:audio_route_reset_ptr↓o
.text:00008D24                               ; __unwind {
.text:00008D24 70 B5                         PUSH            {R4-R6,LR}
.text:00008D26 04 46                         MOV             R4, R0
.text:00008D28 60 68                         LDR             R0, [R4,#4]
.text:00008D2A 88 B1                         CBZ             R0, locret_8D50
.text:00008D2A
.text:00008D2C 00 25                         MOVS            R5, #0
.text:00008D2E 00 26                         MOVS            R6, #0
.text:00008D2E
.text:00008D30
.text:00008D30                               loc_8D30                      ; CODE XREF: audio_route_reset+2A↓j
.text:00008D30 A1 68                         LDR             R1, [R4,#8]
.text:00008D32 29 44                         ADD             R1, R5
.text:00008D34 4A 68                         LDR             R2, [R1,#4]
.text:00008D36 02 2A                         CMP             R2, #2
.text:00008D38 06 D8                         BHI             loc_8D48
.text:00008D38
.text:00008D3A 8A 68                         LDR             R2, [R1,#8]
.text:00008D3C D1 E9 04 01                   LDRD.W          R0, R1, [R1,#0x10]
.text:00008D40 92 00                         LSLS            R2, R2, #2
.text:00008D42 FA F7 36 EB                   BLX             __aeabi_memcpy4
.text:00008D42
.text:00008D46 60 68                         LDR             R0, [R4,#4]
.text:00008D46
.text:00008D48
.text:00008D48                               loc_8D48                      ; CODE XREF: audio_route_reset+14↑j
.text:00008D48 01 36                         ADDS            R6, #1
.text:00008D4A 18 35                         ADDS            R5, #0x18
.text:00008D4C 86 42                         CMP             R6, R0
.text:00008D4E EF D3                         BCC             loc_8D30
.text:00008D4E
.text:00008D50
.text:00008D50                               locret_8D50                   ; CODE XREF: audio_route_reset+6↑j
.text:00008D50 70 BD                         POP             {R4-R6,PC}
.text:00008D50
.text:00008D50                               ; End of function audio_route_reset
.text:00008D50
.text:00008D50                               ; ---------------------------------------------------------------------------
.text:00008D52 00 00                         ALIGN 4
.text:00008D52                               ; } // starts at 8D24
.text:00008D54
.text:00008D54                               ; =============== S U B R O U T I N E =======================================
.text:00008D54
.text:00008D54
.text:00008D54                               ; int __fastcall audio_route_apply_path(int, char *s2)
.text:00008D54                               EXPORT audio_route_apply_path
.text:00008D54                               audio_route_apply_path        ; CODE XREF: j_audio_route_apply_path+8↑j
.text:00008D54                                                             ; DATA XREF: LOAD:000008C0↑o
.text:00008D54                                                             ; .got:audio_route_apply_path_ptr↓o
.text:00008D54                               ; __unwind {
.text:00008D54 2D E9 F0 41                   PUSH.W          {R4-R8,LR}
.text:00008D58 80 46                         MOV             R8, R0
.text:00008D5A 0E 46                         MOV             R6, R1
.text:00008D5C B8 F1 00 0F                   CMP.W           R8, #0
.text:00008D60 21 D0                         BEQ             loc_8DA6
.text:00008D60
.text:00008D62 40 46                         MOV             R0, R8        ; int
.text:00008D64 31 46                         MOV             R1, R6        ; s2
.text:00008D66 00 F0 3D F8                   BL              sub_8DE4
.text:00008D66
.text:00008D6A 05 46                         MOV             R5, R0
.text:00008D6C 35 B3                         CBZ             R5, loc_8DBC
.text:00008D6C
.text:00008D6E A8 68                         LDR             R0, [R5,#8]
.text:00008D70 B0 B1                         CBZ             R0, loc_8DA0
.text:00008D70
.text:00008D72 00 26                         MOVS            R6, #0
.text:00008D74 00 27                         MOVS            R7, #0
.text:00008D74
.text:00008D76
.text:00008D76                               loc_8D76                      ; CODE XREF: audio_route_apply_path+4A↓j
.text:00008D76 E8 68                         LDR             R0, [R5,#0xC]
.text:00008D78 D8 F8 08 30                   LDR.W           R3, [R8,#8]
.text:00008D7C 82 59                         LDR             R2, [R0,R6]
.text:00008D7E 30 44                         ADD             R0, R6
.text:00008D80 D0 E9 01 41                   LDRD.W          R4, R1, [R0,#4]
.text:00008D84 02 EB 42 00                   ADD.W           R0, R2, R2,LSL#1
.text:00008D88 4F EA 84 02                   MOV.W           R2, R4,LSL#2
.text:00008D8C 03 EB C0 00                   ADD.W           R0, R3, R0,LSL#3
.text:00008D90 00 69                         LDR             R0, [R0,#0x10]
.text:00008D92 FA F7 0E EB                   BLX             __aeabi_memcpy4
.text:00008D92
.text:00008D96 A8 68                         LDR             R0, [R5,#8]
.text:00008D98 01 37                         ADDS            R7, #1
.text:00008D9A 0C 36                         ADDS            R6, #0xC
.text:00008D9C 87 42                         CMP             R7, R0
.text:00008D9E EA D3                         BCC             loc_8D76
.text:00008D9E
.text:00008DA0
.text:00008DA0                               loc_8DA0                      ; CODE XREF: audio_route_apply_path+1C↑j
.text:00008DA0 00 20                         MOVS            R0, #0
.text:00008DA2 BD E8 F0 81                   POP.W           {R4-R8,PC}
.text:00008DA2
.text:00008DA6                               ; ---------------------------------------------------------------------------
.text:00008DA6
.text:00008DA6                               loc_8DA6                      ; CODE XREF: audio_route_apply_path+C↑j
.text:00008DA6 0D 49                         LDR             R1, =(aAudioRoute - 0x8DB0) ; "audio_route"
.text:00008DA8 06 20                         MOVS            R0, #6
.text:00008DAA 0D 4A                         LDR             R2, =(aInvalidAudioRo - 0x8DB2) ; "invalid audio_route"
.text:00008DAC 79 44                         ADD             R1, PC        ; "audio_route"
.text:00008DAE 7A 44                         ADD             R2, PC        ; "invalid audio_route"
.text:00008DB0 FA F7 12 E9                   BLX             __android_log_print
.text:00008DB0
.text:00008DB4 4F F0 FF 30                   MOV.W           R0, #0xFFFFFFFF
.text:00008DB8 BD E8 F0 81                   POP.W           {R4-R8,PC}
.text:00008DB8
.text:00008DBC                               ; ---------------------------------------------------------------------------
.text:00008DBC
.text:00008DBC                               loc_8DBC                      ; CODE XREF: audio_route_apply_path+18↑j
.text:00008DBC 05 49                         LDR             R1, =(aAudioRoute - 0x8DC8) ; "audio_route"
.text:00008DBE 06 20                         MOVS            R0, #6
.text:00008DC0 05 4A                         LDR             R2, =(aUnableToFindPa - 0x8DCA) ; "unable to find path '%s'"
.text:00008DC2 33 46                         MOV             R3, R6
.text:00008DC4 79 44                         ADD             R1, PC        ; "audio_route"
.text:00008DC6 7A 44                         ADD             R2, PC        ; "unable to find path '%s'"
.text:00008DC8 FA F7 06 E9                   BLX             __android_log_print
.text:00008DC8
.text:00008DCC 4F F0 FF 30                   MOV.W           R0, #0xFFFFFFFF
.text:00008DD0 BD E8 F0 81                   POP.W           {R4-R8,PC}
.text:00008DD0
.text:00008DD0                               ; End of function audio_route_apply_path
.text:00008DD0
.text:00008DD0                               ; ---------------------------------------------------------------------------
.text:00008DD4 34 4E 00 00                   off_8DD4 DCD aAudioRoute - 0x8DC8
.text:00008DD4                                                             ; DATA XREF: audio_route_apply_path:loc_8DBC↑r
.text:00008DD4                                                             ; "audio_route"
.text:00008DD8 52 4E 00 00                   off_8DD8 DCD aUnableToFindPa - 0x8DCA
.text:00008DD8                                                             ; DATA XREF: audio_route_apply_path+6C↑r
.text:00008DD8                                                             ; "unable to find path '%s'"
.text:00008DDC 4C 4E 00 00                   off_8DDC DCD aAudioRoute - 0x8DB0
.text:00008DDC                                                             ; DATA XREF: audio_route_apply_path:loc_8DA6↑r
.text:00008DDC                                                             ; "audio_route"
.text:00008DE0 56 4E 00 00                   off_8DE0 DCD aInvalidAudioRo - 0x8DB2
.text:00008DE0                                                             ; DATA XREF: audio_route_apply_path+56↑r
.text:00008DE0                               ; } // starts at 8D54         ; "invalid audio_route"
.text:00008DE4
.text:00008DE4                               ; =============== S U B R O U T I N E =======================================
.text:00008DE4
.text:00008DE4
.text:00008DE4                               ; const char **__fastcall sub_8DE4(int, char *s2)
.text:00008DE4                               sub_8DE4                      ; CODE XREF: audio_route_apply_path+12↑p
.text:00008DE4                                                             ; audio_route_reset_path+E↓p
.text:00008DE4                                                             ; sub_9130+D6↓p
.text:00008DE4                                                             ; sub_9130+10C↓p
.text:00008DE4                               ; __unwind {
.text:00008DE4 F0 B5                         PUSH            {R4-R7,LR}
.text:00008DE6 81 B0                         SUB             SP, SP, #4
.text:00008DE8 06 69                         LDR             R6, [R0,#0x10]
.text:00008DEA 0D 46                         MOV             R5, R1
.text:00008DEC 56 B1                         CBZ             R6, loc_8E04
.text:00008DEC
.text:00008DEE 44 69                         LDR             R4, [R0,#0x14]
.text:00008DF0 00 27                         MOVS            R7, #0
.text:00008DF0
.text:00008DF2
.text:00008DF2                               loc_8DF2                      ; CODE XREF: sub_8DE4+1E↓j
.text:00008DF2 20 68                         LDR             R0, [R4]      ; s1
.text:00008DF4 29 46                         MOV             R1, R5        ; s2
.text:00008DF6 FA F7 D4 E9                   BLX             strcmp
.text:00008DF6
.text:00008DFA 20 B1                         CBZ             R0, loc_8E06
.text:00008DFA
.text:00008DFC 01 37                         ADDS            R7, #1
.text:00008DFE 10 34                         ADDS            R4, #0x10
.text:00008E00 B7 42                         CMP             R7, R6
.text:00008E02 F6 D3                         BCC             loc_8DF2
.text:00008E02
.text:00008E04
.text:00008E04                               loc_8E04                      ; CODE XREF: sub_8DE4+8↑j
.text:00008E04 00 24                         MOVS            R4, #0
.text:00008E04
.text:00008E06
.text:00008E06                               loc_8E06                      ; CODE XREF: sub_8DE4+16↑j
.text:00008E06 20 46                         MOV             R0, R4
.text:00008E08 01 B0                         ADD             SP, SP, #4
.text:00008E0A F0 BD                         POP             {R4-R7,PC}
.text:00008E0A
.text:00008E0A                               ; End of function sub_8DE4
.text:00008E0A
.text:00008E0C
.text:00008E0C                               ; =============== S U B R O U T I N E =======================================
.text:00008E0C
.text:00008E0C
.text:00008E0C                               ; int __fastcall audio_route_reset_path(int, char *s2)
.text:00008E0C                               EXPORT audio_route_reset_path
.text:00008E0C                               audio_route_reset_path        ; DATA XREF: LOAD:00000DC0↑o
.text:00008E0C F0 B5                         PUSH            {R4-R7,LR}
.text:00008E0E 81 B0                         SUB             SP, SP, #4
.text:00008E10 04 46                         MOV             R4, R0
.text:00008E12 0E 46                         MOV             R6, R1
.text:00008E14 F4 B1                         CBZ             R4, loc_8E54
.text:00008E14
.text:00008E16 20 46                         MOV             R0, R4        ; int
.text:00008E18 31 46                         MOV             R1, R6        ; s2
.text:00008E1A FF F7 E3 FF                   BL              sub_8DE4
.text:00008E1A
.text:00008E1E 05 46                         MOV             R5, R0
.text:00008E20 15 B3                         CBZ             R5, loc_8E68
.text:00008E20
.text:00008E22 A8 68                         LDR             R0, [R5,#8]
.text:00008E24 A0 B1                         CBZ             R0, loc_8E50
.text:00008E24
.text:00008E26 00 26                         MOVS            R6, #0
.text:00008E28 00 27                         MOVS            R7, #0
.text:00008E28
.text:00008E2A
.text:00008E2A                               loc_8E2A                      ; CODE XREF: audio_route_reset_path+42↓j
.text:00008E2A E8 68                         LDR             R0, [R5,#0xC]
.text:00008E2C A1 68                         LDR             R1, [R4,#8]
.text:00008E2E 80 59                         LDR             R0, [R0,R6]
.text:00008E30 00 EB 40 00                   ADD.W           R0, R0, R0,LSL#1
.text:00008E34 01 EB C0 01                   ADD.W           R1, R1, R0,LSL#3
.text:00008E38 8A 68                         LDR             R2, [R1,#8]
.text:00008E3A D1 E9 04 01                   LDRD.W          R0, R1, [R1,#0x10]
.text:00008E3E 4F EA 82 02                   MOV.W           R2, R2,LSL#2
.text:00008E42 FA F7 B6 EA                   BLX             __aeabi_memcpy4
.text:00008E42
.text:00008E46 A8 68                         LDR             R0, [R5,#8]
.text:00008E48 01 37                         ADDS            R7, #1
.text:00008E4A 0C 36                         ADDS            R6, #0xC
.text:00008E4C 87 42                         CMP             R7, R0
.text:00008E4E EC D3                         BCC             loc_8E2A
.text:00008E4E
.text:00008E50
.text:00008E50                               loc_8E50                      ; CODE XREF: audio_route_reset_path+18↑j
.text:00008E50 00 20                         MOVS            R0, #0
.text:00008E52 13 E0                         B               loc_8E7C
.text:00008E52
.text:00008E54                               ; ---------------------------------------------------------------------------
.text:00008E54
.text:00008E54                               loc_8E54                      ; CODE XREF: audio_route_reset_path+8↑j
.text:00008E54 0C 49                         LDR             R1, =(aAudioRoute - 0x8E5E) ; "audio_route"
.text:00008E56 06 20                         MOVS            R0, #6
.text:00008E58 0C 4A                         LDR             R2, =(aInvalidAudioRo - 0x8E60) ; "invalid audio_route"
.text:00008E5A 79 44                         ADD             R1, PC        ; "audio_route"
.text:00008E5C 7A 44                         ADD             R2, PC        ; "invalid audio_route"
.text:00008E5E FA F7 BC E8                   BLX             __android_log_print
.text:00008E5E
.text:00008E62 4F F0 FF 30                   MOV.W           R0, #0xFFFFFFFF
.text:00008E66 09 E0                         B               loc_8E7C
.text:00008E66
.text:00008E68                               ; ---------------------------------------------------------------------------
.text:00008E68
.text:00008E68                               loc_8E68                      ; CODE XREF: audio_route_reset_path+14↑j
.text:00008E68 05 49                         LDR             R1, =(aAudioRoute - 0x8E74) ; "audio_route"
.text:00008E6A 06 20                         MOVS            R0, #6
.text:00008E6C 05 4A                         LDR             R2, =(aUnableToFindPa - 0x8E76) ; "unable to find path '%s'"
.text:00008E6E 33 46                         MOV             R3, R6
.text:00008E70 79 44                         ADD             R1, PC        ; "audio_route"
.text:00008E72 7A 44                         ADD             R2, PC        ; "unable to find path '%s'"
.text:00008E74 FA F7 B0 E8                   BLX             __android_log_print
.text:00008E74
.text:00008E78 4F F0 FF 30                   MOV.W           R0, #0xFFFFFFFF
.text:00008E78
.text:00008E7C
.text:00008E7C                               loc_8E7C                      ; CODE XREF: audio_route_reset_path+46↑j
.text:00008E7C                                                             ; audio_route_reset_path+5A↑j
.text:00008E7C 01 B0                         ADD             SP, SP, #4
.text:00008E7E F0 BD                         POP             {R4-R7,PC}
.text:00008E7E
.text:00008E7E                               ; End of function audio_route_reset_path
.text:00008E7E
.text:00008E7E                               ; ---------------------------------------------------------------------------
.text:00008E80 88 4D 00 00                   off_8E80 DCD aAudioRoute - 0x8E74
.text:00008E80                                                             ; DATA XREF: audio_route_reset_path:loc_8E68↑r
.text:00008E80                                                             ; "audio_route"
.text:00008E84 A6 4D 00 00                   off_8E84 DCD aUnableToFindPa - 0x8E76
.text:00008E84                                                             ; DATA XREF: audio_route_reset_path+60↑r
.text:00008E84                                                             ; "unable to find path '%s'"
.text:00008E88 9E 4D 00 00                   off_8E88 DCD aAudioRoute - 0x8E5E
.text:00008E88                                                             ; DATA XREF: audio_route_reset_path:loc_8E54↑r
.text:00008E88                                                             ; "audio_route"
.text:00008E8C A8 4D 00 00                   off_8E8C DCD aInvalidAudioRo - 0x8E60
.text:00008E8C                                                             ; DATA XREF: audio_route_reset_path+4C↑r
.text:00008E8C                               ; } // starts at 8DE4         ; "invalid audio_route"
.text:00008E90
.text:00008E90                               ; =============== S U B R O U T I N E =======================================
.text:00008E90
.text:00008E90
.text:00008E90                               ; _DWORD *__fastcall audio_route_init(int, const char *)
.text:00008E90                               EXPORT audio_route_init
.text:00008E90                               audio_route_init              ; CODE XREF: j_audio_route_init+8↑j
.text:00008E90                                                             ; DATA XREF: LOAD:00000880↑o
.text:00008E90                                                             ; .got:audio_route_init_ptr↓o
.text:00008E90
.text:00008E90                               var_40= -0x40
.text:00008E90                               userData= -0x38
.text:00008E90                               var_30= -0x30
.text:00008E90                               var_28= -0x28
.text:00008E90
.text:00008E90                               ; __unwind {
.text:00008E90 2D E9 F0 4F                   PUSH.W          {R4-R11,LR}
.text:00008E94 87 B0                         SUB             SP, SP, #0x1C
.text:00008E96 04 46                         MOV             R4, R0
.text:00008E98 96 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x8EA2)
.text:00008E9A 88 46                         MOV             R8, R1
.text:00008E9C 18 21                         MOVS            R1, #0x18     ; size
.text:00008E9E 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00008EA0 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00008EA2 00 68                         LDR             R0, [R0]
.text:00008EA4 06 90                         STR             R0, [SP,#0x40+var_28]
.text:00008EA6 01 20                         MOVS            R0, #1        ; nmemb
.text:00008EA8 FA F7 80 E9                   BLX             calloc
.text:00008EA8
.text:00008EAC 81 46                         MOV             R9, R0
.text:00008EAE B9 F1 00 0F                   CMP.W           R9, #0
.text:00008EB2 00 F0 10 81                   BEQ.W           loc_90D6
.text:00008EB2
.text:00008EB6 20 46                         MOV             R0, R4
.text:00008EB8 FA F7 9A E8                   BLX             mixer_open
.text:00008EB8
.text:00008EBC C9 F8 00 00                   STR.W           R0, [R9]
.text:00008EC0 00 28                         CMP             R0, #0
.text:00008EC2 00 F0 D6 80                   BEQ.W           loc_9072
.text:00008EC2
.text:00008EC6 00 21                         MOVS            R1, #0
.text:00008EC8 C9 E9 03 11                   STRD.W          R1, R1, [R9,#0xC]
.text:00008ECC C9 F8 14 10                   STR.W           R1, [R9,#0x14]
.text:00008ED0 FA F7 74 EA                   BLX             mixer_get_num_ctls
.text:00008ED0
.text:00008ED4 04 46                         MOV             R4, R0
.text:00008ED6 04 EB 44 00                   ADD.W           R0, R4, R4,LSL#1
.text:00008EDA C9 F8 04 40                   STR.W           R4, [R9,#4]
.text:00008EDE C0 00                         LSLS            R0, R0, #3    ; size
.text:00008EE0 FA F7 16 E9                   BLX             malloc
.text:00008EE0
.text:00008EE4 C9 F8 08 00                   STR.W           R0, [R9,#8]
.text:00008EE8 00 28                         CMP             R0, #0
.text:00008EEA 00 F0 ED 80                   BEQ.W           loc_90C8
.text:00008EEA
.text:00008EEE 00 2C                         CMP             R4, #0
.text:00008EF0 5B D0                         BEQ             loc_8FAA
.text:00008EF0
.text:00008EF2 00 26                         MOVS            R6, #0
.text:00008EF4 14 24                         MOVS            R4, #0x14
.text:00008EF4
.text:00008EF6
.text:00008EF6                               loc_8EF6                      ; CODE XREF: audio_route_init+118↓j
.text:00008EF6 D9 F8 00 00                   LDR.W           R0, [R9]
.text:00008EFA 31 46                         MOV             R1, R6
.text:00008EFC FA F7 64 EA                   BLX             mixer_get_ctl
.text:00008EFC
.text:00008F00 07 46                         MOV             R7, R0
.text:00008F02 FA F7 36 E9                   BLX             mixer_ctl_get_num_values
.text:00008F02
.text:00008F06 83 46                         MOV             R11, R0
.text:00008F08 D9 F8 08 00                   LDR.W           R0, [R9,#8]
.text:00008F0C 20 44                         ADD             R0, R4
.text:00008F0E 40 F8 14 7C                   STR.W           R7, [R0,#-0x14]
.text:00008F12 D9 F8 08 00                   LDR.W           R0, [R9,#8]
.text:00008F16 20 44                         ADD             R0, R4
.text:00008F18 40 F8 0C BC                   STR.W           R11, [R0,#-0xC]
.text:00008F1C 38 46                         MOV             R0, R7
.text:00008F1E FA F7 5A EA                   BLX             mixer_ctl_get_type
.text:00008F1E
.text:00008F22 05 46                         MOV             R5, R0
.text:00008F24 D9 F8 08 00                   LDR.W           R0, [R9,#8]
.text:00008F28 02 2D                         CMP             R5, #2
.text:00008F2A 20 44                         ADD             R0, R4
.text:00008F2C 40 F8 10 5C                   STR.W           R5, [R0,#-0x10]
.text:00008F30 35 D8                         BHI             loc_8F9E
.text:00008F30
.text:00008F32 4F EA 8B 0A                   MOV.W           R10, R11,LSL#2
.text:00008F36 50 46                         MOV             R0, R10       ; size
.text:00008F38 FA F7 EA E8                   BLX             malloc
.text:00008F38
.text:00008F3C D9 F8 08 10                   LDR.W           R1, [R9,#8]
.text:00008F40 21 44                         ADD             R1, R4
.text:00008F42 41 F8 08 0C                   STR.W           R0, [R1,#-8]
.text:00008F46 50 46                         MOV             R0, R10       ; size
.text:00008F48 FA F7 E2 E8                   BLX             malloc
.text:00008F48
.text:00008F4C D9 F8 08 10                   LDR.W           R1, [R9,#8]
.text:00008F50 21 44                         ADD             R1, R4
.text:00008F52 41 F8 04 0C                   STR.W           R0, [R1,#-4]
.text:00008F56 50 46                         MOV             R0, R10       ; size
.text:00008F58 FA F7 DA E8                   BLX             malloc
.text:00008F58
.text:00008F5C D9 F8 08 10                   LDR.W           R1, [R9,#8]
.text:00008F60 02 2D                         CMP             R5, #2
.text:00008F62 08 51                         STR             R0, [R1,R4]
.text:00008F64 0A D1                         BNE             loc_8F7C
.text:00008F64
.text:00008F66 38 46                         MOV             R0, R7
.text:00008F68 00 21                         MOVS            R1, #0
.text:00008F6A FA F7 3A EA                   BLX             mixer_ctl_get_value
.text:00008F6A
.text:00008F6E D9 F8 08 10                   LDR.W           R1, [R9,#8]
.text:00008F72 21 44                         ADD             R1, R4
.text:00008F74 51 F8 08 1C                   LDR.W           R1, [R1,#-8]
.text:00008F78 08 60                         STR             R0, [R1]
.text:00008F7A 08 E0                         B               loc_8F8E
.text:00008F7A
.text:00008F7C                               ; ---------------------------------------------------------------------------
.text:00008F7C
.text:00008F7C                               loc_8F7C                      ; CODE XREF: audio_route_init+D4↑j
.text:00008F7C D9 F8 08 00                   LDR.W           R0, [R9,#8]
.text:00008F80 5A 46                         MOV             R2, R11
.text:00008F82 20 44                         ADD             R0, R4
.text:00008F84 50 F8 08 1C                   LDR.W           R1, [R0,#-8]
.text:00008F88 38 46                         MOV             R0, R7
.text:00008F8A FA F7 30 EA                   BLX             mixer_ctl_get_array
.text:00008F8A
.text:00008F8E
.text:00008F8E                               loc_8F8E                      ; CODE XREF: audio_route_init+EA↑j
.text:00008F8E D9 F8 08 00                   LDR.W           R0, [R9,#8]
.text:00008F92 52 46                         MOV             R2, R10
.text:00008F94 20 44                         ADD             R0, R4
.text:00008F96 50 E9 02 10                   LDRD.W          R1, R0, [R0,#-8]
.text:00008F9A FA F7 0A EA                   BLX             __aeabi_memcpy4
.text:00008F9A
.text:00008F9E
.text:00008F9E                               loc_8F9E                      ; CODE XREF: audio_route_init+A0↑j
.text:00008F9E D9 F8 04 00                   LDR.W           R0, [R9,#4]
.text:00008FA2 01 36                         ADDS            R6, #1
.text:00008FA4 18 34                         ADDS            R4, #0x18
.text:00008FA6 86 42                         CMP             R6, R0
.text:00008FA8 A5 D3                         BCC             loc_8EF6
.text:00008FA8
.text:00008FAA
.text:00008FAA                               loc_8FAA                      ; CODE XREF: audio_route_init+60↑j
.text:00008FAA 53 4C                         LDR             R4, =(aSystemEtcMixer - 0x8FB6) ; "/system/etc/mixer_paths.xml"
.text:00008FAC B8 F1 00 0F                   CMP.W           R8, #0
.text:00008FB0 52 49                         LDR             R1, =(aR - 0x8FBC) ; "r"
.text:00008FB2 7C 44                         ADD             R4, PC        ; "/system/etc/mixer_paths.xml"
.text:00008FB4 18 BF                         IT NE
.text:00008FB6 44 46                         MOVNE           R4, R8
.text:00008FB8 79 44                         ADD             R1, PC        ; "r"
.text:00008FBA 20 46                         MOV             R0, R4        ; filename
.text:00008FBC F9 F7 EE EF                   BLX             fopen
.text:00008FBC
.text:00008FC0 05 46                         MOV             R5, R0
.text:00008FC2 00 2D                         CMP             R5, #0
.text:00008FC4 5D D0                         BEQ             loc_9082
.text:00008FC4
.text:00008FC6 00 20                         MOVS            R0, #0        ; encoding
.text:00008FC8 00 24                         MOVS            R4, #0
.text:00008FCA FA F7 16 EA                   BLX             XML_ParserCreate
.text:00008FCA
.text:00008FCE 06 46                         MOV             R6, R0
.text:00008FD0 00 2E                         CMP             R6, #0
.text:00008FD2 5F D0                         BEQ             loc_9094
.text:00008FD2
.text:00008FD4 02 A9                         ADD             R1, SP, #0x40+userData ; userData
.text:00008FD6 30 46                         MOV             R0, R6        ; parser
.text:00008FD8 CD E9 02 44                   STRD.W          R4, R4, [SP,#0x40+userData]
.text:00008FDC 04 94                         STR             R4, [SP,#0x40+var_30]
.text:00008FDE CD F8 08 90                   STR.W           R9, [SP,#0x40+userData]
.text:00008FE2 FA F7 10 EA                   BLX             XML_SetUserData
.text:00008FE2
.text:00008FE6 46 49                         LDR             R1, =(sub_9130+1 - 0x8FF0)
.text:00008FE8 30 46                         MOV             R0, R6        ; parser
.text:00008FEA 46 4A                         LDR             R2, =(sub_9568+1 - 0x8FF2)
.text:00008FEC 79 44                         ADD             R1, PC        ; sub_9130 ; start
.text:00008FEE 7A 44                         ADD             R2, PC        ; sub_9568 ; end
.text:00008FF0 FA F7 0E EA                   BLX             XML_SetElementHandler
.text:00008FF0
.text:00008FF4 4F F0 FF 37                   MOV.W           R7, #0xFFFFFFFF
.text:00008FF4
.text:00008FF8
.text:00008FF8                               loc_8FF8                      ; CODE XREF: audio_route_init+19E↓j
.text:00008FF8 30 46                         MOV             R0, R6        ; parser
.text:00008FFA 4F F4 80 61                   MOV.W           R1, #0x400    ; len
.text:00008FFE FA F7 0E EA                   BLX             XML_GetBuffer
.text:00008FFE
.text:00009002 00 28                         CMP             R0, #0
.text:00009004 57 D0                         BEQ             loc_90B6
.text:00009004
.text:00009006 01 21                         MOVS            R1, #1
.text:00009008 4F F4 80 62                   MOV.W           R2, #0x400
.text:0000900C 2B 46                         MOV             R3, R5
.text:0000900E 00 97                         STR             R7, [SP,#0x40+var_40]
.text:00009010 FA F7 5A E8                   BLX             __fread_chk
.text:00009010
.text:00009014 04 46                         MOV             R4, R0
.text:00009016 00 2C                         CMP             R4, #0
.text:00009018 4D DB                         BLT             loc_90B6
.text:00009018
.text:0000901A 4F F0 00 02                   MOV.W           R2, #0
.text:0000901E 30 46                         MOV             R0, R6        ; parser
.text:00009020 08 BF                         IT EQ
.text:00009022 01 22                         MOVEQ           R2, #1        ; isFinal
.text:00009024 21 46                         MOV             R1, R4        ; len
.text:00009026 FA F7 00 EA                   BLX             XML_ParseBuffer
.text:00009026
.text:0000902A D8 B3                         CBZ             R0, loc_90A4
.text:0000902A
.text:0000902C 00 2C                         CMP             R4, #0
.text:0000902E E3 D1                         BNE             loc_8FF8
.text:0000902E
.text:00009030 48 46                         MOV             R0, R9
.text:00009032 FA F7 2C E8                   BLX             j_audio_route_update_mixer
.text:00009032
.text:00009036 D9 F8 04 00                   LDR.W           R0, [R9,#4]
.text:0000903A 98 B1                         CBZ             R0, loc_9064
.text:0000903A
.text:0000903C 00 24                         MOVS            R4, #0
.text:0000903E 00 27                         MOVS            R7, #0
.text:0000903E
.text:00009040
.text:00009040                               loc_9040                      ; CODE XREF: audio_route_init+1D2↓j
.text:00009040 D9 F8 08 10                   LDR.W           R1, [R9,#8]
.text:00009044 0A 19                         ADDS            R2, R1, R4
.text:00009046 51 68                         LDR             R1, [R2,#4]
.text:00009048 02 29                         CMP             R1, #2
.text:0000904A 07 D8                         BHI             loc_905C
.text:0000904A
.text:0000904C 93 68                         LDR             R3, [R2,#8]
.text:0000904E D2 E9 04 10                   LDRD.W          R1, R0, [R2,#0x10]
.text:00009052 9A 00                         LSLS            R2, R3, #2
.text:00009054 FA F7 AC E9                   BLX             __aeabi_memcpy4
.text:00009054
.text:00009058 D9 F8 04 00                   LDR.W           R0, [R9,#4]
.text:00009058
.text:0000905C
.text:0000905C                               loc_905C                      ; CODE XREF: audio_route_init+1BA↑j
.text:0000905C 01 37                         ADDS            R7, #1
.text:0000905E 18 34                         ADDS            R4, #0x18
.text:00009060 87 42                         CMP             R7, R0
.text:00009062 ED D3                         BCC             loc_9040
.text:00009062
.text:00009064
.text:00009064                               loc_9064                      ; CODE XREF: audio_route_init+1AA↑j
.text:00009064 30 46                         MOV             R0, R6        ; parser
.text:00009066 FA F7 E6 E9                   BLX             XML_ParserFree
.text:00009066
.text:0000906A 28 46                         MOV             R0, R5        ; stream
.text:0000906C F9 F7 A2 EF                   BLX             fclose
.text:0000906C
.text:00009070 33 E0                         B               loc_90DA
.text:00009070
.text:00009072                               ; ---------------------------------------------------------------------------
.text:00009072
.text:00009072                               loc_9072                      ; CODE XREF: audio_route_init+32↑j
.text:00009072 2C 49                         LDR             R1, =(aAudioRoute - 0x907C) ; "audio_route"
.text:00009074 06 20                         MOVS            R0, #6
.text:00009076 2C 4A                         LDR             R2, =(aUnableToOpenTh - 0x907E) ; "Unable to open the mixer, aborting."
.text:00009078 79 44                         ADD             R1, PC        ; "audio_route"
.text:0000907A 7A 44                         ADD             R2, PC        ; "Unable to open the mixer, aborting."
.text:0000907C F9 F7 AC EF                   BLX             __android_log_print
.text:0000907C
.text:00009080 26 E0                         B               loc_90D0
.text:00009080
.text:00009082                               ; ---------------------------------------------------------------------------
.text:00009082
.text:00009082                               loc_9082                      ; CODE XREF: audio_route_init+134↑j
.text:00009082 26 49                         LDR             R1, =(aAudioRoute - 0x908E) ; "audio_route"
.text:00009084 06 20                         MOVS            R0, #6
.text:00009086 26 4A                         LDR             R2, =(aFailedToOpenS - 0x9090) ; "Failed to open %s"
.text:00009088 23 46                         MOV             R3, R4
.text:0000908A 79 44                         ADD             R1, PC        ; "audio_route"
.text:0000908C 7A 44                         ADD             R2, PC        ; "Failed to open %s"
.text:0000908E F9 F7 A4 EF                   BLX             __android_log_print
.text:0000908E
.text:00009092 16 E0                         B               loc_90C2
.text:00009092
.text:00009094                               ; ---------------------------------------------------------------------------
.text:00009094
.text:00009094                               loc_9094                      ; CODE XREF: audio_route_init+142↑j
.text:00009094 1F 49                         LDR             R1, =(aAudioRoute - 0x909E) ; "audio_route"
.text:00009096 06 20                         MOVS            R0, #6
.text:00009098 1F 4A                         LDR             R2, =(aFailedToCreate_0 - 0x90A0) ; "Failed to create XML parser"
.text:0000909A 79 44                         ADD             R1, PC        ; "audio_route"
.text:0000909C 7A 44                         ADD             R2, PC        ; "Failed to create XML parser"
.text:0000909E F9 F7 9C EF                   BLX             __android_log_print
.text:0000909E
.text:000090A2 0B E0                         B               loc_90BC
.text:000090A2
.text:000090A4                               ; ---------------------------------------------------------------------------
.text:000090A4
.text:000090A4                               loc_90A4                      ; CODE XREF: audio_route_init+19A↑j
.text:000090A4 18 49                         LDR             R1, =(aAudioRoute - 0x90B0) ; "audio_route"
.text:000090A6 06 20                         MOVS            R0, #6
.text:000090A8 18 4A                         LDR             R2, =(aErrorInMixerXm - 0x90B2) ; "Error in mixer xml (%s)"
.text:000090AA 19 4B                         LDR             R3, =(aSystemEtcMixer - 0x90B4) ; "/system/etc/mixer_paths.xml"
.text:000090AC 79 44                         ADD             R1, PC        ; "audio_route"
.text:000090AE 7A 44                         ADD             R2, PC        ; "Error in mixer xml (%s)"
.text:000090B0 7B 44                         ADD             R3, PC        ; "/system/etc/mixer_paths.xml"
.text:000090B2 F9 F7 92 EF                   BLX             __android_log_print
.text:000090B2
.text:000090B6
.text:000090B6                               loc_90B6                      ; CODE XREF: audio_route_init+174↑j
.text:000090B6                                                             ; audio_route_init+188↑j
.text:000090B6 30 46                         MOV             R0, R6        ; parser
.text:000090B8 FA F7 BC E9                   BLX             XML_ParserFree
.text:000090B8
.text:000090BC
.text:000090BC                               loc_90BC                      ; CODE XREF: audio_route_init+212↑j
.text:000090BC 28 46                         MOV             R0, R5        ; stream
.text:000090BE F9 F7 7A EF                   BLX             fclose
.text:000090BE
.text:000090C2
.text:000090C2                               loc_90C2                      ; CODE XREF: audio_route_init+202↑j
.text:000090C2 48 46                         MOV             R0, R9
.text:000090C4 00 F0 54 FA                   BL              sub_9570
.text:000090C4
.text:000090C8
.text:000090C8                               loc_90C8                      ; CODE XREF: audio_route_init+5A↑j
.text:000090C8 D9 F8 00 00                   LDR.W           R0, [R9]
.text:000090CC F9 F7 9C EF                   BLX             mixer_close
.text:000090CC
.text:000090D0
.text:000090D0                               loc_90D0                      ; CODE XREF: audio_route_init+1F0↑j
.text:000090D0 48 46                         MOV             R0, R9        ; ptr
.text:000090D2 FA F7 2A E8                   BLX             free
.text:000090D2
.text:000090D6
.text:000090D6                               loc_90D6                      ; CODE XREF: audio_route_init+22↑j
.text:000090D6 4F F0 00 09                   MOV.W           R9, #0
.text:000090D6
.text:000090DA
.text:000090DA                               loc_90DA                      ; CODE XREF: audio_route_init+1E0↑j
.text:000090DA 14 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x90E2)
.text:000090DC 06 99                         LDR             R1, [SP,#0x40+var_28]
.text:000090DE 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:000090E0 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:000090E2 00 68                         LDR             R0, [R0]
.text:000090E4 40 1A                         SUBS            R0, R0, R1
.text:000090E6 02 BF                         ITTT EQ
.text:000090E8 48 46                         MOVEQ           R0, R9
.text:000090EA 07 B0                         ADDEQ           SP, SP, #0x1C
.text:000090EC BD E8 F0 8F                   POPEQ.W         {R4-R11,PC}
.text:000090EC
.text:000090F0 F9 F7 78 EF                   BLX             __stack_chk_fail
.text:000090F0
.text:000090F0                               ; End of function audio_route_init
.text:000090F0
.text:000090F0                               ; ---------------------------------------------------------------------------
.text:000090F4 F2 7E 00 00                   off_90F4 DCD __stack_chk_guard_ptr - 0x8EA2
.text:000090F4                                                             ; DATA XREF: audio_route_init+8↑r
.text:000090F8 95 30 00 00                   off_90F8 DCD aSystemEtcMixer - 0x8FB6
.text:000090F8                                                             ; DATA XREF: audio_route_init:loc_8FAA↑r
.text:000090F8                                                             ; "/system/etc/mixer_paths.xml"
.text:000090FC 5B 33 00 00                   off_90FC DCD aR - 0x8FBC      ; DATA XREF: audio_route_init+120↑r
.text:000090FC                                                             ; "r"
.text:00009100 41 01 00 00                   off_9100 DCD sub_9130+1 - 0x8FF0
.text:00009100                                                             ; DATA XREF: audio_route_init+156↑r
.text:00009104 77 05 00 00                   off_9104 DCD sub_9568+1 - 0x8FF2
.text:00009104                                                             ; DATA XREF: audio_route_init+15A↑r
.text:00009108 4C 4B 00 00                   off_9108 DCD aAudioRoute - 0x90B0
.text:00009108                                                             ; DATA XREF: audio_route_init:loc_90A4↑r
.text:00009108                                                             ; "audio_route"
.text:0000910C D5 4B 00 00                   off_910C DCD aErrorInMixerXm - 0x90B2
.text:0000910C                                                             ; DATA XREF: audio_route_init+218↑r
.text:0000910C                                                             ; "Error in mixer xml (%s)"
.text:00009110 97 2F 00 00                   off_9110 DCD aSystemEtcMixer - 0x90B4
.text:00009110                                                             ; DATA XREF: audio_route_init+21A↑r
.text:00009110                                                             ; "/system/etc/mixer_paths.xml"
.text:00009114 5E 4B 00 00                   off_9114 DCD aAudioRoute - 0x909E
.text:00009114                                                             ; DATA XREF: audio_route_init:loc_9094↑r
.text:00009114                                                             ; "audio_route"
.text:00009118 CB 4B 00 00                   off_9118 DCD aFailedToCreate_0 - 0x90A0
.text:00009118                                                             ; DATA XREF: audio_route_init+208↑r
.text:00009118                                                             ; "Failed to create XML parser"
.text:0000911C 6E 4B 00 00                   off_911C DCD aAudioRoute - 0x908E
.text:0000911C                                                             ; DATA XREF: audio_route_init:loc_9082↑r
.text:0000911C                                                             ; "audio_route"
.text:00009120 C9 4B 00 00                   off_9120 DCD aFailedToOpenS - 0x9090
.text:00009120                                                             ; DATA XREF: audio_route_init+1F6↑r
.text:00009120                                                             ; "Failed to open %s"
.text:00009124 80 4B 00 00                   off_9124 DCD aAudioRoute - 0x907C
.text:00009124                                                             ; DATA XREF: audio_route_init:loc_9072↑r
.text:00009124                                                             ; "audio_route"
.text:00009128 B7 4B 00 00                   off_9128 DCD aUnableToOpenTh - 0x907E
.text:00009128                                                             ; DATA XREF: audio_route_init+1E6↑r
.text:00009128                                                             ; "Unable to open the mixer, aborting."
.text:0000912C B2 7C 00 00                   off_912C DCD __stack_chk_guard_ptr - 0x90E2
.text:0000912C                                                             ; DATA XREF: audio_route_init:loc_90DA↑r
.text:0000912C                               ; } // starts at 8E90
.text:00009130
.text:00009130                               ; =============== S U B R O U T I N E =======================================
.text:00009130
.text:00009130
.text:00009130                               ; int __fastcall sub_9130(int *, char *, const char **)
.text:00009130                               sub_9130                      ; DATA XREF: audio_route_init+156↑o
.text:00009130                                                             ; audio_route_init+15C↑o
.text:00009130                                                             ; .text:off_9100↑o
.text:00009130
.text:00009130                               var_38= -0x38
.text:00009130                               var_30= -0x30
.text:00009130                               s1= -0x2C
.text:00009130                               var_28= -0x28
.text:00009130
.text:00009130                               ; __unwind {
.text:00009130 2D E9 F0 4F                   PUSH.W          {R4-R11,LR}
.text:00009134 85 B0                         SUB             SP, SP, #0x14
.text:00009136 04 90                         STR             R0, [SP,#0x38+var_28]
.text:00009138 D2 F8 00 90                   LDR.W           R9, [R2]
.text:0000913C 00 68                         LDR             R0, [R0]
.text:0000913E B9 F1 00 0F                   CMP.W           R9, #0
.text:00009142 2E D0                         BEQ             loc_91A2
.text:00009142
.text:00009144 DF F8 D4 43                   LDR.W           R4, =(aName - 0x915A) ; "name"
.text:00009148 02 F1 04 0A                   ADD.W           R10, R2, #4
.text:0000914C DF F8 D0 53                   LDR.W           R5, =(aId - 0x915C) ; "id"
.text:00009150 00 26                         MOVS            R6, #0
.text:00009152 DF F8 D0 83                   LDR.W           R8, =(aValue - 0x9160) ; "value"
.text:00009156 7C 44                         ADD             R4, PC        ; "name"
.text:00009158 7D 44                         ADD             R5, PC        ; "id"
.text:0000915A 00 27                         MOVS            R7, #0
.text:0000915C F8 44                         ADD             R8, PC        ; "value"
.text:0000915E 4F F0 00 0B                   MOV.W           R11, #0
.text:00009162 CD E9 02 01                   STRD.W          R0, R1, [SP,#0x38+var_30]
.text:00009162
.text:00009166
.text:00009166                               loc_9166                      ; CODE XREF: sub_9130+6E↓j
.text:00009166 48 46                         MOV             R0, R9        ; s1
.text:00009168 21 46                         MOV             R1, R4        ; s2
.text:0000916A FA F7 1A E8                   BLX             strcmp
.text:0000916A
.text:0000916E 08 B9                         CBNZ            R0, loc_9174
.text:0000916E
.text:00009170 DA F8 00 60                   LDR.W           R6, [R10]
.text:00009170
.text:00009174
.text:00009174                               loc_9174                      ; CODE XREF: sub_9130+3E↑j
.text:00009174 48 46                         MOV             R0, R9        ; s1
.text:00009176 29 46                         MOV             R1, R5        ; s2
.text:00009178 FA F7 12 E8                   BLX             strcmp
.text:00009178
.text:0000917C 38 B1                         CBZ             R0, loc_918E
.text:0000917C
.text:0000917E 48 46                         MOV             R0, R9        ; s1
.text:00009180 41 46                         MOV             R1, R8        ; s2
.text:00009182 FA F7 0E E8                   BLX             strcmp
.text:00009182
.text:00009186 20 B9                         CBNZ            R0, loc_9192
.text:00009186
.text:00009188 DA F8 00 B0                   LDR.W           R11, [R10]
.text:0000918C 01 E0                         B               loc_9192
.text:0000918C
.text:0000918E                               ; ---------------------------------------------------------------------------
.text:0000918E
.text:0000918E                               loc_918E                      ; CODE XREF: sub_9130+4C↑j
.text:0000918E DA F8 00 70                   LDR.W           R7, [R10]
.text:0000918E
.text:00009192
.text:00009192                               loc_9192                      ; CODE XREF: sub_9130+56↑j
.text:00009192                                                             ; sub_9130+5C↑j
.text:00009192 DA F8 04 90                   LDR.W           R9, [R10,#4]
.text:00009196 0A F1 08 0A                   ADD.W           R10, R10, #8
.text:0000919A B9 F1 00 0F                   CMP.W           R9, #0
.text:0000919E E2 D1                         BNE             loc_9166
.text:0000919E
.text:000091A0 05 E0                         B               loc_91AE
.text:000091A0
.text:000091A2                               ; ---------------------------------------------------------------------------
.text:000091A2
.text:000091A2                               loc_91A2                      ; CODE XREF: sub_9130+12↑j
.text:000091A2 CD E9 02 01                   STRD.W          R0, R1, [SP,#0x38+var_30]
.text:000091A6 00 26                         MOVS            R6, #0
.text:000091A8 00 27                         MOVS            R7, #0
.text:000091AA 4F F0 00 0B                   MOV.W           R11, #0
.text:000091AA
.text:000091AE
.text:000091AE                               loc_91AE                      ; CODE XREF: sub_9130+70↑j
.text:000091AE 03 9C                         LDR             R4, [SP,#0x38+s1]
.text:000091B0 DF F8 74 13                   LDR.W           R1, =(aPath - 0x91B8) ; "path"
.text:000091B4 79 44                         ADD             R1, PC        ; "path"
.text:000091B6 20 46                         MOV             R0, R4        ; s1
.text:000091B8 F9 F7 F2 EF                   BLX             strcmp
.text:000091B8
.text:000091BC D8 B1                         CBZ             R0, loc_91F6
.text:000091BC
.text:000091BE DB 49                         LDR             R1, =(aCtl - 0x91C6) ; "ctl"
.text:000091C0 20 46                         MOV             R0, R4        ; s1
.text:000091C2 79 44                         ADD             R1, PC        ; "ctl"
.text:000091C4 F9 F7 EC EF                   BLX             strcmp
.text:000091C4
.text:000091C8 DD F8 08 80                   LDR.W           R8, [SP,#0x38+var_30]
.text:000091CC 00 28                         CMP             R0, #0
.text:000091CE 40 F0 9E 81                   BNE.W           loc_950E
.text:000091CE
.text:000091D2 D8 F8 00 00                   LDR.W           R0, [R8]
.text:000091D6 31 46                         MOV             R1, R6
.text:000091D8 F9 F7 10 EF                   BLX             mixer_get_ctl_by_name
.text:000091D8
.text:000091DC 04 46                         MOV             R4, R0
.text:000091DE 00 2C                         CMP             R4, #0
.text:000091E0 77 D0                         BEQ             loc_92D2
.text:000091E0
.text:000091E2 20 46                         MOV             R0, R4
.text:000091E4 FA F7 F6 E8                   BLX             mixer_ctl_get_type
.text:000091E4
.text:000091E8 02 28                         CMP             R0, #2
.text:000091EA 7B D2                         BCS             loc_92E4
.text:000091EA
.text:000091EC 58 46                         MOV             R0, R11       ; nptr
.text:000091EE F9 F7 C4 EE                   BLX             atoi
.text:000091EE
.text:000091F2 06 46                         MOV             R6, R0
.text:000091F4 BD E0                         B               loc_9372
.text:000091F4
.text:000091F6                               ; ---------------------------------------------------------------------------
.text:000091F6
.text:000091F6                               loc_91F6                      ; CODE XREF: sub_9130+8C↑j
.text:000091F6 AE B1                         CBZ             R6, loc_9224
.text:000091F6
.text:000091F8 04 98                         LDR             R0, [SP,#0x38+var_28]
.text:000091FA 80 68                         LDR             R0, [R0,#8]
.text:000091FC 01 28                         CMP             R0, #1
.text:000091FE 19 D1                         BNE             loc_9234
.text:000091FE
.text:00009200 02 9C                         LDR             R4, [SP,#0x38+var_30]
.text:00009202 31 46                         MOV             R1, R6        ; s2
.text:00009204 20 46                         MOV             R0, R4        ; int
.text:00009206 FF F7 ED FD                   BL              sub_8DE4
.text:00009206
.text:0000920A 00 28                         CMP             R0, #0
.text:0000920C 00 F0 80 80                   BEQ.W           loc_9310
.text:0000920C
.text:00009210 CF 49                         LDR             R1, =(aAudioRoute - 0x921C) ; "audio_route"
.text:00009212 06 20                         MOVS            R0, #6
.text:00009214 CF 4A                         LDR             R2, =(aPathNameSAlrea - 0x921E) ; "Path name '%s' already exists"
.text:00009216 33 46                         MOV             R3, R6
.text:00009218 79 44                         ADD             R1, PC        ; "audio_route"
.text:0000921A 7A 44                         ADD             R2, PC        ; "Path name '%s' already exists"
.text:0000921C F9 F7 DC EE                   BLX             __android_log_print
.text:0000921C
.text:00009220 00 20                         MOVS            R0, #0
.text:00009222 72 E1                         B               loc_950A
.text:00009222
.text:00009224                               ; ---------------------------------------------------------------------------
.text:00009224
.text:00009224                               loc_9224                      ; CODE XREF: sub_9130:loc_91F6↑j
.text:00009224 CE 49                         LDR             R1, =(aAudioRoute - 0x922E) ; "audio_route"
.text:00009226 06 20                         MOVS            R0, #6
.text:00009228 CE 4A                         LDR             R2, =(aUnnamedPath - 0x9230) ; "Unnamed path!"
.text:0000922A 79 44                         ADD             R1, PC        ; "audio_route"
.text:0000922C 7A 44                         ADD             R2, PC        ; "Unnamed path!"
.text:0000922E F9 F7 D4 EE                   BLX             __android_log_print
.text:0000922E
.text:00009232 6C E1                         B               loc_950E
.text:00009232
.text:00009234                               ; ---------------------------------------------------------------------------
.text:00009234
.text:00009234                               loc_9234                      ; CODE XREF: sub_9130+CE↑j
.text:00009234 DD F8 08 A0                   LDR.W           R10, [SP,#0x38+var_30]
.text:00009238 31 46                         MOV             R1, R6        ; s2
.text:0000923A 50 46                         MOV             R0, R10       ; int
.text:0000923C FF F7 D2 FD                   BL              sub_8DE4
.text:0000923C
.text:00009240 80 46                         MOV             R8, R0
.text:00009242 D8 F8 08 00                   LDR.W           R0, [R8,#8]
.text:00009246 00 28                         CMP             R0, #0
.text:00009248 00 F0 61 81                   BEQ.W           loc_950E
.text:00009248
.text:0000924C 04 98                         LDR             R0, [SP,#0x38+var_28]
.text:0000924E 00 26                         MOVS            R6, #0
.text:00009250 44 68                         LDR             R4, [R0,#4]
.text:00009250
.text:00009252
.text:00009252                               loc_9252                      ; CODE XREF: sub_9130+19E↓j
.text:00009252 A1 68                         LDR             R1, [R4,#8]
.text:00009254 06 EB 46 05                   ADD.W           R5, R6, R6,LSL#1
.text:00009258 D8 F8 0C 90                   LDR.W           R9, [R8,#0xC]
.text:0000925C 79 B1                         CBZ             R1, loc_927E
.text:0000925C
.text:0000925E 59 F8 25 00                   LDR.W           R0, [R9,R5,LSL#2]
.text:00009262 00 22                         MOVS            R2, #0
.text:00009264 E3 68                         LDR             R3, [R4,#0xC]
.text:00009264
.text:00009266
.text:00009266                               loc_9266                      ; CODE XREF: sub_9130+142↓j
.text:00009266 1F 68                         LDR             R7, [R3]
.text:00009268 87 42                         CMP             R7, R0
.text:0000926A 04 D0                         BEQ             loc_9276
.text:0000926A
.text:0000926C 01 32                         ADDS            R2, #1
.text:0000926E 0C 33                         ADDS            R3, #0xC
.text:00009270 8A 42                         CMP             R2, R1
.text:00009272 F8 D3                         BCC             loc_9266
.text:00009272
.text:00009274 03 E0                         B               loc_927E
.text:00009274
.text:00009276                               ; ---------------------------------------------------------------------------
.text:00009276
.text:00009276                               loc_9276                      ; CODE XREF: sub_9130+13A↑j
.text:00009276 B2 F1 FF 3F                   CMP.W           R2, #0xFFFFFFFF
.text:0000927A 40 F0 1B 81                   BNE.W           loc_94B4
.text:0000927A
.text:0000927E
.text:0000927E                               loc_927E                      ; CODE XREF: sub_9130+12C↑j
.text:0000927E                                                             ; sub_9130+144↑j
.text:0000927E 20 46                         MOV             R0, R4
.text:00009280 00 F0 A8 F9                   BL              sub_95D4
.text:00009280
.text:00009284 00 28                         CMP             R0, #0
.text:00009286 C0 F2 42 81                   BLT.W           loc_950E
.text:00009286
.text:0000928A 09 EB 85 05                   ADD.W           R5, R9, R5,LSL#2
.text:0000928E E1 68                         LDR             R1, [R4,#0xC]
.text:00009290 00 EB 40 07                   ADD.W           R7, R0, R0,LSL#1
.text:00009294 2A 68                         LDR             R2, [R5]
.text:00009296 41 F8 27 20                   STR.W           R2, [R1,R7,LSL#2]
.text:0000929A E0 68                         LDR             R0, [R4,#0xC]
.text:0000929C 69 68                         LDR             R1, [R5,#4]
.text:0000929E 00 EB 87 00                   ADD.W           R0, R0, R7,LSL#2
.text:000092A2 41 60                         STR             R1, [R0,#4]
.text:000092A4 68 68                         LDR             R0, [R5,#4]
.text:000092A6 80 00                         LSLS            R0, R0, #2    ; size
.text:000092A8 F9 F7 32 EF                   BLX             malloc
.text:000092A8
.text:000092AC E1 68                         LDR             R1, [R4,#0xC]
.text:000092AE 01 EB 87 01                   ADD.W           R1, R1, R7,LSL#2
.text:000092B2 88 60                         STR             R0, [R1,#8]
.text:000092B4 E0 68                         LDR             R0, [R4,#0xC]
.text:000092B6 D5 E9 01 21                   LDRD.W          R2, R1, [R5,#4]
.text:000092BA 00 EB 87 00                   ADD.W           R0, R0, R7,LSL#2
.text:000092BE 80 68                         LDR             R0, [R0,#8]
.text:000092C0 92 00                         LSLS            R2, R2, #2
.text:000092C2 FA F7 76 E8                   BLX             __aeabi_memcpy4
.text:000092C2
.text:000092C6 D8 F8 08 00                   LDR.W           R0, [R8,#8]
.text:000092CA 01 36                         ADDS            R6, #1
.text:000092CC 86 42                         CMP             R6, R0
.text:000092CE C0 D3                         BCC             loc_9252
.text:000092CE
.text:000092D0 1D E1                         B               loc_950E
.text:000092D0
.text:000092D2                               ; ---------------------------------------------------------------------------
.text:000092D2
.text:000092D2                               loc_92D2                      ; CODE XREF: sub_9130+B0↑j
.text:000092D2 9B 49                         LDR             R1, =(aAudioRoute - 0x92DE) ; "audio_route"
.text:000092D4 06 20                         MOVS            R0, #6
.text:000092D6 9B 4A                         LDR             R2, =(aControlSDoesnT - 0x92E0) ; "Control '%s' doesn't exist - skipping"
.text:000092D8 33 46                         MOV             R3, R6
.text:000092DA 79 44                         ADD             R1, PC        ; "audio_route"
.text:000092DC 7A 44                         ADD             R2, PC        ; "Control '%s' doesn't exist - skipping"
.text:000092DE F9 F7 7C EE                   BLX             __android_log_print
.text:000092DE
.text:000092E2 14 E1                         B               loc_950E
.text:000092E2
.text:000092E4                               ; ---------------------------------------------------------------------------
.text:000092E4
.text:000092E4                               loc_92E4                      ; CODE XREF: sub_9130+BA↑j
.text:000092E4 44 D1                         BNE             loc_9370
.text:000092E4
.text:000092E6 20 46                         MOV             R0, R4
.text:000092E8 FA F7 AA E8                   BLX             mixer_ctl_get_num_enums
.text:000092E8
.text:000092EC 00 26                         MOVS            R6, #0
.text:000092EE 00 28                         CMP             R0, #0
.text:000092F0 3F D0                         BEQ             loc_9372
.text:000092F0
.text:000092F2
.text:000092F2                               loc_92F2                      ; CODE XREF: sub_9130+1DC↓j
.text:000092F2 20 46                         MOV             R0, R4
.text:000092F4 31 46                         MOV             R1, R6
.text:000092F6 FA F7 AA E8                   BLX             mixer_ctl_get_enum_string
.text:000092F6
.text:000092FA 59 46                         MOV             R1, R11       ; s2
.text:000092FC F9 F7 50 EF                   BLX             strcmp
.text:000092FC
.text:00009300 B8 B3                         CBZ             R0, loc_9372
.text:00009300
.text:00009302 20 46                         MOV             R0, R4
.text:00009304 01 36                         ADDS            R6, #1
.text:00009306 FA F7 9C E8                   BLX             mixer_ctl_get_num_enums
.text:00009306
.text:0000930A 86 42                         CMP             R6, R0
.text:0000930C F1 D3                         BCC             loc_92F2
.text:0000930C
.text:0000930E 30 E0                         B               loc_9372
.text:0000930E
.text:00009310                               ; ---------------------------------------------------------------------------
.text:00009310
.text:00009310                               loc_9310                      ; CODE XREF: sub_9130+DC↑j
.text:00009310 D4 E9 03 01                   LDRD.W          R0, R1, [R4,#0xC]
.text:00009314 88 42                         CMP             R0, R1
.text:00009316 0D D8                         BHI             loc_9334
.text:00009316
.text:00009318 41 00                         LSLS            R1, R0, #1
.text:0000931A 00 28                         CMP             R0, #0
.text:0000931C 08 BF                         IT EQ
.text:0000931E 08 21                         MOVEQ           R1, #8
.text:00009320 E1 60                         STR             R1, [R4,#0xC]
.text:00009322 4F EA 01 11                   MOV.W           R1, R1,LSL#4  ; size
.text:00009326 60 69                         LDR             R0, [R4,#0x14] ; ptr
.text:00009328 FA F7 96 E8                   BLX             realloc
.text:00009328
.text:0000932C 00 28                         CMP             R0, #0
.text:0000932E 00 F0 E4 80                   BEQ.W           loc_94FA
.text:0000932E
.text:00009332 60 61                         STR             R0, [R4,#0x14]
.text:00009332
.text:00009334
.text:00009334                               loc_9334                      ; CODE XREF: sub_9130+1E6↑j
.text:00009334 30 46                         MOV             R0, R6        ; s
.text:00009336 F9 F7 76 EF                   BLX             strdup
.text:00009336
.text:0000933A D4 E9 04 12                   LDRD.W          R1, R2, [R4,#0x10]
.text:0000933E 09 01                         LSLS            R1, R1, #4
.text:00009340 50 50                         STR             R0, [R2,R1]
.text:00009342 D4 E9 04 01                   LDRD.W          R0, R1, [R4,#0x10]
.text:00009346 01 EB 00 10                   ADD.W           R0, R1, R0,LSL#4
.text:0000934A 00 21                         MOVS            R1, #0
.text:0000934C 41 60                         STR             R1, [R0,#4]
.text:0000934E D4 E9 04 02                   LDRD.W          R0, R2, [R4,#0x10]
.text:00009352 02 EB 00 10                   ADD.W           R0, R2, R0,LSL#4
.text:00009356 81 60                         STR             R1, [R0,#8]
.text:00009358 D4 E9 04 02                   LDRD.W          R0, R2, [R4,#0x10]
.text:0000935C 02 EB 00 10                   ADD.W           R0, R2, R0,LSL#4
.text:00009360 C1 60                         STR             R1, [R0,#0xC]
.text:00009362 20 69                         LDR             R0, [R4,#0x10]
.text:00009364 41 1C                         ADDS            R1, R0, #1
.text:00009366 21 61                         STR             R1, [R4,#0x10]
.text:00009368 61 69                         LDR             R1, [R4,#0x14]
.text:0000936A 01 EB 00 10                   ADD.W           R0, R1, R0,LSL#4
.text:0000936E CC E0                         B               loc_950A
.text:0000936E
.text:00009370                               ; ---------------------------------------------------------------------------
.text:00009370
.text:00009370                               loc_9370                      ; CODE XREF: sub_9130:loc_92E4↑j
.text:00009370 00 26                         MOVS            R6, #0
.text:00009370
.text:00009372
.text:00009372                               loc_9372                      ; CODE XREF: sub_9130+C4↑j
.text:00009372                                                             ; sub_9130+1C0↑j
.text:00009372                                                             ; sub_9130+1D0↑j
.text:00009372                                                             ; sub_9130+1DE↑j
.text:00009372 D8 F8 04 00                   LDR.W           R0, [R8,#4]
.text:00009376 50 B1                         CBZ             R0, loc_938E
.text:00009376
.text:00009378 D8 F8 08 10                   LDR.W           R1, [R8,#8]
.text:0000937C 00 25                         MOVS            R5, #0
.text:0000937C
.text:0000937E
.text:0000937E                               loc_937E                      ; CODE XREF: sub_9130+25A↓j
.text:0000937E 0A 68                         LDR             R2, [R1]
.text:00009380 A2 42                         CMP             R2, R4
.text:00009382 05 D0                         BEQ             loc_9390
.text:00009382
.text:00009384 01 35                         ADDS            R5, #1
.text:00009386 18 31                         ADDS            R1, #0x18
.text:00009388 85 42                         CMP             R5, R0
.text:0000938A F8 D3                         BCC             loc_937E
.text:0000938A
.text:0000938C 00 E0                         B               loc_9390
.text:0000938C
.text:0000938E                               ; ---------------------------------------------------------------------------
.text:0000938E
.text:0000938E                               loc_938E                      ; CODE XREF: sub_9130+246↑j
.text:0000938E 00 25                         MOVS            R5, #0
.text:0000938E
.text:00009390
.text:00009390                               loc_9390                      ; CODE XREF: sub_9130+252↑j
.text:00009390                                                             ; sub_9130+25C↑j
.text:00009390 04 98                         LDR             R0, [SP,#0x38+var_28]
.text:00009392 80 68                         LDR             R0, [R0,#8]
.text:00009394 01 28                         CMP             R0, #1
.text:00009396 10 D1                         BNE             loc_93BA
.text:00009396
.text:00009398 AF B1                         CBZ             R7, loc_93C6
.text:00009398
.text:0000939A 38 46                         MOV             R0, R7        ; nptr
.text:0000939C F9 F7 EC ED                   BLX             atoi
.text:0000939C
.text:000093A0 D8 F8 08 10                   LDR.W           R1, [R8,#8]
.text:000093A4 05 EB 45 02                   ADD.W           R2, R5, R5,LSL#1
.text:000093A8 01 EB C2 01                   ADD.W           R1, R1, R2,LSL#3
.text:000093AC 8A 68                         LDR             R2, [R1,#8]
.text:000093AE 90 42                         CMP             R0, R2
.text:000093B0 4B D2                         BCS             loc_944A
.text:000093B0
.text:000093B2 09 69                         LDR             R1, [R1,#0x10]
.text:000093B4 41 F8 20 60                   STR.W           R6, [R1,R0,LSL#2]
.text:000093B8 A9 E0                         B               loc_950E
.text:000093B8
.text:000093BA                               ; ---------------------------------------------------------------------------
.text:000093BA
.text:000093BA                               loc_93BA                      ; CODE XREF: sub_9130+266↑j
.text:000093BA EF B1                         CBZ             R7, loc_93F8
.text:000093BA
.text:000093BC 38 46                         MOV             R0, R7        ; nptr
.text:000093BE F9 F7 DC ED                   BLX             atoi
.text:000093BE
.text:000093C2 82 46                         MOV             R10, R0
.text:000093C4 1A E0                         B               loc_93FC
.text:000093C4
.text:000093C6                               ; ---------------------------------------------------------------------------
.text:000093C6
.text:000093C6                               loc_93C6                      ; CODE XREF: sub_9130+268↑j
.text:000093C6 D8 F8 08 10                   LDR.W           R1, [R8,#8]
.text:000093CA 05 EB 45 00                   ADD.W           R0, R5, R5,LSL#1
.text:000093CE 01 EB C0 02                   ADD.W           R2, R1, R0,LSL#3
.text:000093D2 92 68                         LDR             R2, [R2,#8]
.text:000093D4 00 2A                         CMP             R2, #0
.text:000093D6 00 F0 9A 80                   BEQ.W           loc_950E
.text:000093D6
.text:000093DA 00 22                         MOVS            R2, #0
.text:000093DA
.text:000093DC
.text:000093DC                               loc_93DC                      ; CODE XREF: sub_9130+2C4↓j
.text:000093DC 01 EB C0 01                   ADD.W           R1, R1, R0,LSL#3
.text:000093E0 09 69                         LDR             R1, [R1,#0x10]
.text:000093E2 41 F8 22 60                   STR.W           R6, [R1,R2,LSL#2]
.text:000093E6 01 32                         ADDS            R2, #1
.text:000093E8 D8 F8 08 10                   LDR.W           R1, [R8,#8]
.text:000093EC 01 EB C0 03                   ADD.W           R3, R1, R0,LSL#3
.text:000093F0 9B 68                         LDR             R3, [R3,#8]
.text:000093F2 9A 42                         CMP             R2, R3
.text:000093F4 F2 D3                         BCC             loc_93DC
.text:000093F4
.text:000093F6 8A E0                         B               loc_950E
.text:000093F6
.text:000093F8                               ; ---------------------------------------------------------------------------
.text:000093F8
.text:000093F8                               loc_93F8                      ; CODE XREF: sub_9130:loc_93BA↑j
.text:000093F8 4F F0 FF 3A                   MOV.W           R10, #0xFFFFFFFF
.text:000093F8
.text:000093FC
.text:000093FC                               loc_93FC                      ; CODE XREF: sub_9130+294↑j
.text:000093FC D8 F8 08 00                   LDR.W           R0, [R8,#8]
.text:00009400 05 EB 45 01                   ADD.W           R1, R5, R5,LSL#1
.text:00009404 50 F8 31 40                   LDR.W           R4, [R0,R1,LSL#3]
.text:00009408 04 98                         LDR             R0, [SP,#0x38+var_28]
.text:0000940A 47 68                         LDR             R7, [R0,#4]
.text:0000940C 20 46                         MOV             R0, R4
.text:0000940E F9 F7 B0 EE                   BLX             mixer_ctl_get_num_values
.text:0000940E
.text:00009412 80 46                         MOV             R8, R0
.text:00009414 C2 45                         CMP             R10, R8
.text:00009416 0B DA                         BGE             loc_9430
.text:00009416
.text:00009418 B8 68                         LDR             R0, [R7,#8]
.text:0000941A 10 B3                         CBZ             R0, loc_9462
.text:0000941A
.text:0000941C F9 68                         LDR             R1, [R7,#0xC]
.text:0000941E 00 24                         MOVS            R4, #0
.text:0000941E
.text:00009420
.text:00009420                               loc_9420                      ; CODE XREF: sub_9130+2FC↓j
.text:00009420 0A 68                         LDR             R2, [R1]
.text:00009422 AA 42                         CMP             R2, R5
.text:00009424 1A D0                         BEQ             loc_945C
.text:00009424
.text:00009426 01 34                         ADDS            R4, #1
.text:00009428 0C 31                         ADDS            R1, #0xC
.text:0000942A 84 42                         CMP             R4, R0
.text:0000942C F8 D3                         BCC             loc_9420
.text:0000942C
.text:0000942E 18 E0                         B               loc_9462
.text:0000942E
.text:00009430                               ; ---------------------------------------------------------------------------
.text:00009430
.text:00009430                               loc_9430                      ; CODE XREF: sub_9130+2E6↑j
.text:00009430 20 46                         MOV             R0, R4
.text:00009432 FA F7 18 E8                   BLX             mixer_ctl_get_name
.text:00009432
.text:00009436 3E 49                         LDR             R1, =(aAudioRoute - 0x9442) ; "audio_route"
.text:00009438 53 46                         MOV             R3, R10
.text:0000943A 3E 4A                         LDR             R2, =(aMixerIndexDIsO - 0x9444) ; "mixer index %d is out of range for '%s'"
.text:0000943C 00 90                         STR             R0, [SP,#0x38+var_38]
.text:0000943E 79 44                         ADD             R1, PC        ; "audio_route"
.text:00009440 7A 44                         ADD             R2, PC        ; "mixer index %d is out of range for '%s'"
.text:00009442 06 20                         MOVS            R0, #6
.text:00009444 F9 F7 C8 ED                   BLX             __android_log_print
.text:00009444
.text:00009448 61 E0                         B               loc_950E
.text:00009448
.text:0000944A                               ; ---------------------------------------------------------------------------
.text:0000944A
.text:0000944A                               loc_944A                      ; CODE XREF: sub_9130+280↑j
.text:0000944A 20 46                         MOV             R0, R4
.text:0000944C FA F7 0A E8                   BLX             mixer_ctl_get_name
.text:0000944C
.text:00009450 39 49                         LDR             R1, =(aAudioRoute - 0x945A) ; "audio_route"
.text:00009452 03 46                         MOV             R3, R0
.text:00009454 39 4A                         LDR             R2, =(aValueIdOutOfRa - 0x945C) ; "value id out of range for mixer ctl '%s"...
.text:00009456 79 44                         ADD             R1, PC        ; "audio_route"
.text:00009458 7A 44                         ADD             R2, PC        ; "value id out of range for mixer ctl '%s"...
.text:0000945A 3A E0                         B               loc_94D2
.text:0000945A
.text:0000945C                               ; ---------------------------------------------------------------------------
.text:0000945C
.text:0000945C                               loc_945C                      ; CODE XREF: sub_9130+2F4↑j
.text:0000945C B4 F1 FF 3F                   CMP.W           R4, #0xFFFFFFFF
.text:00009460 1C DC                         BGT             loc_949C
.text:00009460
.text:00009462
.text:00009462                               loc_9462                      ; CODE XREF: sub_9130+2EA↑j
.text:00009462                                                             ; sub_9130+2FE↑j
.text:00009462 38 46                         MOV             R0, R7
.text:00009464 00 F0 B6 F8                   BL              sub_95D4
.text:00009464
.text:00009468 04 46                         MOV             R4, R0
.text:0000946A 00 2C                         CMP             R4, #0
.text:0000946C 4F DB                         BLT             loc_950E
.text:0000946C
.text:0000946E F8 68                         LDR             R0, [R7,#0xC]
.text:00009470 04 EB 44 09                   ADD.W           R9, R4, R4,LSL#1
.text:00009474 40 F8 29 50                   STR.W           R5, [R0,R9,LSL#2]
.text:00009478 F8 68                         LDR             R0, [R7,#0xC]
.text:0000947A 00 EB 89 00                   ADD.W           R0, R0, R9,LSL#2
.text:0000947E C0 F8 04 80                   STR.W           R8, [R0,#4]
.text:00009482 4F EA 88 00                   MOV.W           R0, R8,LSL#2  ; size
.text:00009486 F9 F7 44 EE                   BLX             malloc
.text:00009486
.text:0000948A F9 68                         LDR             R1, [R7,#0xC]
.text:0000948C 01 EB 89 01                   ADD.W           R1, R1, R9,LSL#2
.text:00009490 88 60                         STR             R0, [R1,#8]
.text:00009492 F8 68                         LDR             R0, [R7,#0xC]
.text:00009494 00 EB 89 00                   ADD.W           R0, R0, R9,LSL#2
.text:00009498 80 68                         LDR             R0, [R0,#8]
.text:0000949A 06 60                         STR             R6, [R0]
.text:0000949A
.text:0000949C
.text:0000949C                               loc_949C                      ; CODE XREF: sub_9130+330↑j
.text:0000949C BA F1 FF 3F                   CMP.W           R10, #0xFFFFFFFF
.text:000094A0 1B D0                         BEQ             loc_94DA
.text:000094A0
.text:000094A2 F8 68                         LDR             R0, [R7,#0xC]
.text:000094A4 04 EB 44 01                   ADD.W           R1, R4, R4,LSL#1
.text:000094A8 00 EB 81 00                   ADD.W           R0, R0, R1,LSL#2
.text:000094AC 80 68                         LDR             R0, [R0,#8]
.text:000094AE 40 F8 2A 60                   STR.W           R6, [R0,R10,LSL#2]
.text:000094B2 2C E0                         B               loc_950E
.text:000094B2
.text:000094B4                               ; ---------------------------------------------------------------------------
.text:000094B4
.text:000094B4                               loc_94B4                      ; CODE XREF: sub_9130+14A↑j
.text:000094B4 DA F8 08 10                   LDR.W           R1, [R10,#8]
.text:000094B8 00 EB 40 00                   ADD.W           R0, R0, R0,LSL#1
.text:000094BC 51 F8 30 00                   LDR.W           R0, [R1,R0,LSL#3]
.text:000094C0 F9 F7 D0 EF                   BLX             mixer_ctl_get_name
.text:000094C0
.text:000094C4 03 46                         MOV             R3, R0
.text:000094C6 20 68                         LDR             R0, [R4]
.text:000094C8 1F 49                         LDR             R1, =(aAudioRoute - 0x94D2) ; "audio_route"
.text:000094CA 20 4A                         LDR             R2, =(aControlSAlread - 0x94D4) ; "Control '%s' already exists in path '%s"...
.text:000094CC 00 90                         STR             R0, [SP,#0x38+var_38]
.text:000094CE 79 44                         ADD             R1, PC        ; "audio_route"
.text:000094D0 7A 44                         ADD             R2, PC        ; "Control '%s' already exists in path '%s"...
.text:000094D0
.text:000094D2
.text:000094D2                               loc_94D2                      ; CODE XREF: sub_9130+32A↑j
.text:000094D2 06 20                         MOVS            R0, #6
.text:000094D4 F9 F7 80 ED                   BLX             __android_log_print
.text:000094D4
.text:000094D8 19 E0                         B               loc_950E
.text:000094D8
.text:000094DA                               ; ---------------------------------------------------------------------------
.text:000094DA
.text:000094DA                               loc_94DA                      ; CODE XREF: sub_9130+370↑j
.text:000094DA B8 F1 00 0F                   CMP.W           R8, #0
.text:000094DE 16 D0                         BEQ             loc_950E
.text:000094DE
.text:000094E0 00 20                         MOVS            R0, #0
.text:000094E0
.text:000094E2
.text:000094E2                               loc_94E2                      ; CODE XREF: sub_9130+3C6↓j
.text:000094E2 F9 68                         LDR             R1, [R7,#0xC]
.text:000094E4 04 EB 44 02                   ADD.W           R2, R4, R4,LSL#1
.text:000094E8 01 EB 82 01                   ADD.W           R1, R1, R2,LSL#2
.text:000094EC 89 68                         LDR             R1, [R1,#8]
.text:000094EE 41 F8 20 60                   STR.W           R6, [R1,R0,LSL#2]
.text:000094F2 01 30                         ADDS            R0, #1
.text:000094F4 80 45                         CMP             R8, R0
.text:000094F6 F4 D1                         BNE             loc_94E2
.text:000094F6
.text:000094F8 09 E0                         B               loc_950E
.text:000094F8
.text:000094FA                               ; ---------------------------------------------------------------------------
.text:000094FA
.text:000094FA                               loc_94FA                      ; CODE XREF: sub_9130+1FE↑j
.text:000094FA 17 49                         LDR             R1, =(aAudioRoute - 0x9504) ; "audio_route"
.text:000094FC 06 20                         MOVS            R0, #6
.text:000094FE 17 4A                         LDR             R2, =(aUnableToAlloca_0 - 0x9506) ; "Unable to allocate more paths"
.text:00009500 79 44                         ADD             R1, PC        ; "audio_route"
.text:00009502 7A 44                         ADD             R2, PC        ; "Unable to allocate more paths"
.text:00009504 F9 F7 68 ED                   BLX             __android_log_print
.text:00009504
.text:00009508 00 20                         MOVS            R0, #0
.text:00009508
.text:0000950A
.text:0000950A                               loc_950A                      ; CODE XREF: sub_9130+F2↑j
.text:0000950A                                                             ; sub_9130+23E↑j
.text:0000950A 04 99                         LDR             R1, [SP,#0x38+var_28]
.text:0000950C 48 60                         STR             R0, [R1,#4]
.text:0000950C
.text:0000950E
.text:0000950E                               loc_950E                      ; CODE XREF: sub_9130+9E↑j
.text:0000950E                                                             ; sub_9130+102↑j
.text:0000950E                                                             ; sub_9130+118↑j
.text:0000950E                                                             ; sub_9130+156↑j
.text:0000950E                                                             ; sub_9130+1A0↑j
.text:0000950E                                                             ; sub_9130+1B2↑j
.text:0000950E                                                             ; sub_9130+288↑j
.text:0000950E                                                             ; sub_9130+2A6↑j
.text:0000950E                                                             ; sub_9130+2C6↑j
.text:0000950E                                                             ; sub_9130+318↑j
.text:0000950E                                                             ; sub_9130+33C↑j
.text:0000950E                                                             ; sub_9130+382↑j
.text:0000950E                                                             ; sub_9130+3A8↑j
.text:0000950E                                                             ; sub_9130+3AE↑j
.text:0000950E                                                             ; sub_9130+3C8↑j
.text:0000950E 04 99                         LDR             R1, [SP,#0x38+var_28]
.text:00009510 88 68                         LDR             R0, [R1,#8]
.text:00009512 01 30                         ADDS            R0, #1
.text:00009514 88 60                         STR             R0, [R1,#8]
.text:00009516 05 B0                         ADD             SP, SP, #0x14
.text:00009518 BD E8 F0 8F                   POP.W           {R4-R11,PC}
.text:00009518
.text:00009518                               ; End of function sub_9130
.text:00009518
.text:00009518                               ; ---------------------------------------------------------------------------
.text:0000951C 45 4B 00 00                   off_951C DCD aName - 0x915A   ; DATA XREF: sub_9130+14↑r
.text:0000951C                                                             ; "name"
.text:00009520 48 4B 00 00                   off_9520 DCD aId - 0x915C     ; DATA XREF: sub_9130+1C↑r
.text:00009520                                                             ; "id"
.text:00009524 47 4B 00 00                   off_9524 DCD aValue - 0x9160  ; DATA XREF: sub_9130+22↑r
.text:00009524                                                             ; "value"
.text:00009528 F5 4A 00 00                   off_9528 DCD aPath - 0x91B8   ; DATA XREF: sub_9130+80↑r
.text:00009528                                                             ; "path"
.text:0000952C FA 4A 00 00                   off_952C DCD aCtl - 0x91C6    ; DATA XREF: sub_9130+8E↑r
.text:0000952C                                                             ; "ctl"
.text:00009530 BA 47 00 00                   off_9530 DCD aAudioRoute - 0x9442
.text:00009530                                                             ; DATA XREF: sub_9130+306↑r
.text:00009530                                                             ; "audio_route"
.text:00009534 5A 49 00 00                   off_9534 DCD aMixerIndexDIsO - 0x9444
.text:00009534                                                             ; DATA XREF: sub_9130+30A↑r
.text:00009534                                                             ; "mixer index %d is out of range for '%s'"
.text:00009538 A2 47 00 00                   off_9538 DCD aAudioRoute - 0x945A
.text:00009538                                                             ; DATA XREF: sub_9130+320↑r
.text:00009538                                                             ; "audio_route"
.text:0000953C 8E 48 00 00                   off_953C DCD aValueIdOutOfRa - 0x945C
.text:0000953C                                                             ; DATA XREF: sub_9130+324↑r
.text:0000953C                                                             ; "value id out of range for mixer ctl '%s"...
.text:00009540 1E 49 00 00                   off_9540 DCD aAudioRoute - 0x92DE
.text:00009540                                                             ; DATA XREF: sub_9130:loc_92D2↑r
.text:00009540                                                             ; "audio_route"
.text:00009544 E4 49 00 00                   off_9544 DCD aControlSDoesnT - 0x92E0
.text:00009544                                                             ; DATA XREF: sub_9130+1A6↑r
.text:00009544                                                             ; "Control '%s' doesn't exist - skipping"
.text:00009548 2A 47 00 00                   off_9548 DCD aAudioRoute - 0x94D2
.text:00009548                                                             ; DATA XREF: sub_9130+398↑r
.text:00009548                                                             ; "audio_route"
.text:0000954C 7B 48 00 00                   off_954C DCD aControlSAlread - 0x94D4
.text:0000954C                                                             ; DATA XREF: sub_9130+39A↑r
.text:0000954C                                                             ; "Control '%s' already exists in path '%s"...
.text:00009550 E0 49 00 00                   off_9550 DCD aAudioRoute - 0x921C
.text:00009550                                                             ; DATA XREF: sub_9130+E0↑r
.text:00009550                                                             ; "audio_route"
.text:00009554 F5 4A 00 00                   off_9554 DCD aPathNameSAlrea - 0x921E
.text:00009554                                                             ; DATA XREF: sub_9130+E4↑r
.text:00009554                                                             ; "Path name '%s' already exists"
.text:00009558 F8 46 00 00                   off_9558 DCD aAudioRoute - 0x9504
.text:00009558                                                             ; DATA XREF: sub_9130:loc_94FA↑r
.text:00009558                                                             ; "audio_route"
.text:0000955C 2B 48 00 00                   off_955C DCD aUnableToAlloca_0 - 0x9506
.text:0000955C                                                             ; DATA XREF: sub_9130+3CE↑r
.text:0000955C                                                             ; "Unable to allocate more paths"
.text:00009560 CE 49 00 00                   off_9560 DCD aAudioRoute - 0x922E
.text:00009560                                                             ; DATA XREF: sub_9130:loc_9224↑r
.text:00009560                                                             ; "audio_route"
.text:00009564 82 4A 00 00                   off_9564 DCD aUnnamedPath - 0x9230
.text:00009564                                                             ; DATA XREF: sub_9130+F8↑r
.text:00009564                               ; } // starts at 9130         ; "Unnamed path!"
.text:00009568
.text:00009568                               ; =============== S U B R O U T I N E =======================================
.text:00009568
.text:00009568
.text:00009568                               ; int __fastcall sub_9568(int result)
.text:00009568                               sub_9568                      ; DATA XREF: audio_route_init+15A↑o
.text:00009568                                                             ; audio_route_init+15E↑o
.text:00009568                                                             ; .text:off_9104↑o
.text:00009568                               ; __unwind {
.text:00009568 81 68                         LDR             R1, [R0,#8]
.text:0000956A 01 39                         SUBS            R1, #1
.text:0000956C 81 60                         STR             R1, [R0,#8]
.text:0000956E 70 47                         BX              LR
.text:0000956E                               ; } // starts at 9568
.text:0000956E
.text:0000956E                               ; End of function sub_9568
.text:0000956E
.text:00009570
.text:00009570                               ; =============== S U B R O U T I N E =======================================
.text:00009570
.text:00009570
.text:00009570                               ; void __fastcall sub_9570(int)
.text:00009570                               sub_9570                      ; CODE XREF: audio_route_init+234↑p
.text:00009570                                                             ; audio_route_free+4↓p
.text:00009570                               ; __unwind {
.text:00009570 F0 B5                         PUSH            {R4-R7,LR}
.text:00009572 81 B0                         SUB             SP, SP, #4
.text:00009574 04 46                         MOV             R4, R0
.text:00009576 00 25                         MOVS            R5, #0
.text:00009578 60 68                         LDR             R0, [R4,#4]
.text:0000957A C0 B1                         CBZ             R0, loc_95AE
.text:0000957A
.text:0000957C 00 26                         MOVS            R6, #0
.text:0000957E 00 27                         MOVS            R7, #0
.text:0000957E
.text:00009580
.text:00009580                               loc_9580                      ; CODE XREF: sub_9570+3C↓j
.text:00009580 A1 68                         LDR             R1, [R4,#8]
.text:00009582 31 44                         ADD             R1, R6
.text:00009584 4A 68                         LDR             R2, [R1,#4]
.text:00009586 02 2A                         CMP             R2, #2
.text:00009588 0D D8                         BHI             loc_95A6
.text:00009588
.text:0000958A C8 68                         LDR             R0, [R1,#0xC] ; ptr
.text:0000958C F9 F7 CC ED                   BLX             free
.text:0000958C
.text:00009590 A0 68                         LDR             R0, [R4,#8]
.text:00009592 30 44                         ADD             R0, R6
.text:00009594 00 69                         LDR             R0, [R0,#0x10] ; ptr
.text:00009596 F9 F7 C8 ED                   BLX             free
.text:00009596
.text:0000959A A0 68                         LDR             R0, [R4,#8]
.text:0000959C 30 44                         ADD             R0, R6
.text:0000959E 40 69                         LDR             R0, [R0,#0x14] ; ptr
.text:000095A0 F9 F7 C2 ED                   BLX             free
.text:000095A0
.text:000095A4 60 68                         LDR             R0, [R4,#4]
.text:000095A4
.text:000095A6
.text:000095A6                               loc_95A6                      ; CODE XREF: sub_9570+18↑j
.text:000095A6 01 37                         ADDS            R7, #1
.text:000095A8 18 36                         ADDS            R6, #0x18
.text:000095AA 87 42                         CMP             R7, R0
.text:000095AC E8 D3                         BCC             loc_9580
.text:000095AC
.text:000095AE
.text:000095AE                               loc_95AE                      ; CODE XREF: sub_9570+A↑j
.text:000095AE A0 68                         LDR             R0, [R4,#8]   ; ptr
.text:000095B0 F9 F7 BA ED                   BLX             free
.text:000095B0
.text:000095B4 A5 60                         STR             R5, [R4,#8]
.text:000095B6 01 B0                         ADD             SP, SP, #4
.text:000095B8 F0 BD                         POP             {R4-R7,PC}
.text:000095B8                               ; } // starts at 9570
.text:000095B8
.text:000095B8                               ; End of function sub_9570
.text:000095B8
.text:000095BA
.text:000095BA                               ; =============== S U B R O U T I N E =======================================
.text:000095BA
.text:000095BA
.text:000095BA                               ; void __fastcall audio_route_free(_DWORD *)
.text:000095BA                               EXPORT audio_route_free
.text:000095BA                               audio_route_free              ; CODE XREF: j_audio_route_free+8↑j
.text:000095BA                                                             ; DATA XREF: LOAD:00000C40↑o
.text:000095BA                                                             ; .got:audio_route_free_ptr↓o
.text:000095BA                               ; __unwind {
.text:000095BA 10 B5                         PUSH            {R4,LR}
.text:000095BC 04 46                         MOV             R4, R0
.text:000095BE FF F7 D7 FF                   BL              sub_9570
.text:000095BE
.text:000095C2 20 68                         LDR             R0, [R4]
.text:000095C4 F9 F7 20 ED                   BLX             mixer_close
.text:000095C4
.text:000095C8 20 46                         MOV             R0, R4
.text:000095CA BD E8 10 40                   POP.W           {R4,LR}
.text:000095CE 02 F0 1F B8                   B.W             j_free
.text:000095CE
.text:000095CE                               ; End of function audio_route_free
.text:000095CE
.text:000095CE                               ; ---------------------------------------------------------------------------
.text:000095D2 00 00                         ALIGN 4
.text:000095D4
.text:000095D4                               ; =============== S U B R O U T I N E =======================================
.text:000095D4
.text:000095D4
.text:000095D4                               ; unsigned int __fastcall sub_95D4(int)
.text:000095D4                               sub_95D4                      ; CODE XREF: sub_9130+150↑p
.text:000095D4                                                             ; sub_9130+334↑p
.text:000095D4 10 B5                         PUSH            {R4,LR}
.text:000095D6 04 46                         MOV             R4, R0
.text:000095D8 D4 E9 01 10                   LDRD.W          R1, R0, [R4,#4]
.text:000095DC 81 42                         CMP             R1, R0
.text:000095DE 0E D8                         BHI             loc_95FE
.text:000095DE
.text:000095E0 48 00                         LSLS            R0, R1, #1
.text:000095E2 00 29                         CMP             R1, #0
.text:000095E4 08 BF                         IT EQ
.text:000095E6 08 20                         MOVEQ           R0, #8
.text:000095E8 60 60                         STR             R0, [R4,#4]
.text:000095EA 00 EB 40 01                   ADD.W           R1, R0, R0,LSL#1
.text:000095EE E0 68                         LDR             R0, [R4,#0xC] ; ptr
.text:000095F0 4F EA 81 01                   MOV.W           R1, R1,LSL#2  ; size
.text:000095F4 F9 F7 30 EF                   BLX             realloc
.text:000095F4
.text:000095F8 20 B1                         CBZ             R0, loc_9604
.text:000095F8
.text:000095FA E0 60                         STR             R0, [R4,#0xC]
.text:000095FC A0 68                         LDR             R0, [R4,#8]
.text:000095FC
.text:000095FE
.text:000095FE                               loc_95FE                      ; CODE XREF: sub_95D4+A↑j
.text:000095FE 41 1C                         ADDS            R1, R0, #1
.text:00009600 A1 60                         STR             R1, [R4,#8]
.text:00009602 10 BD                         POP             {R4,PC}
.text:00009602
.text:00009604                               ; ---------------------------------------------------------------------------
.text:00009604
.text:00009604                               loc_9604                      ; CODE XREF: sub_95D4+24↑j
.text:00009604 04 49                         LDR             R1, =(aAudioRoute - 0x960E) ; "audio_route"
.text:00009606 06 20                         MOVS            R0, #6
.text:00009608 04 4A                         LDR             R2, =(aUnableToAlloca_1 - 0x9610) ; "Unable to allocate more path settings"
.text:0000960A 79 44                         ADD             R1, PC        ; "audio_route"
.text:0000960C 7A 44                         ADD             R2, PC        ; "Unable to allocate more path settings"
.text:0000960E F9 F7 E4 EC                   BLX             __android_log_print
.text:0000960E
.text:00009612 4F F0 FF 30                   MOV.W           R0, #0xFFFFFFFF
.text:00009616 10 BD                         POP             {R4,PC}
.text:00009616
.text:00009616                               ; End of function sub_95D4
.text:00009616
.text:00009616                               ; ---------------------------------------------------------------------------
.text:00009618 EE 45 00 00                   off_9618 DCD aAudioRoute - 0x960E
.text:00009618                                                             ; DATA XREF: sub_95D4:loc_9604↑r
.text:00009618                                                             ; "audio_route"
.text:0000961C 68 47 00 00                   off_961C DCD aUnableToAlloca_1 - 0x9610
.text:0000961C                                                             ; DATA XREF: sub_95D4+34↑r
.text:0000961C                               ; } // starts at 95BA         ; "Unable to allocate more path settings"
.text:00009620
.text:00009620                               ; =============== S U B R O U T I N E =======================================
.text:00009620
.text:00009620
.text:00009620                               ; int __fastcall get_value(const char *, int)
.text:00009620                               EXPORT get_value
.text:00009620                               get_value                     ; DATA XREF: LOAD:00000C60↑o
.text:00009620                               ; __unwind {
.text:00009620 B0 B5                         PUSH            {R4,R5,R7,LR}
.text:00009622 04 46                         MOV             R4, R0
.text:00009624 9C B1                         CBZ             R4, loc_964E
.text:00009624
.text:00009626 91 B1                         CBZ             R1, loc_964E
.text:00009626
.text:00009628 00 20                         MOVS            R0, #0
.text:0000962A F9 F7 E2 EC                   BLX             mixer_open
.text:0000962A
.text:0000962E 05 46                         MOV             R5, R0
.text:00009630 95 B1                         CBZ             R5, loc_9658
.text:00009630
.text:00009632 28 46                         MOV             R0, R5
.text:00009634 21 46                         MOV             R1, R4
.text:00009636 F9 F7 E2 EC                   BLX             mixer_get_ctl_by_name
.text:00009636
.text:0000963A A0 B9                         CBNZ            R0, loc_9666
.text:0000963A
.text:0000963C 0A 48                         LDR             R0, =(aInvalidControl - 0x9644) ; "Invalid control name: %s\n"
.text:0000963E 21 46                         MOV             R1, R4
.text:00009640 78 44                         ADD             R0, PC        ; "Invalid control name: %s\n"
.text:00009642 F9 F7 16 EF                   BLX             printf
.text:00009642
.text:00009646 28 46                         MOV             R0, R5
.text:00009648 F9 F7 DE EC                   BLX             mixer_close
.text:00009648
.text:0000964C 08 E0                         B               loc_9660
.text:0000964C
.text:0000964E                               ; ---------------------------------------------------------------------------
.text:0000964E
.text:0000964E                               loc_964E                      ; CODE XREF: get_value+4↑j
.text:0000964E                                                             ; get_value+6↑j
.text:0000964E 08 48                         LDR             R0, =(aInvalidControl_0 - 0x9654) ; "Invalid control name/value: NULL"
.text:00009650 78 44                         ADD             R0, PC        ; "Invalid control name/value: NULL"
.text:00009652 F9 F7 14 EF                   BLX             puts
.text:00009652
.text:00009656 03 E0                         B               loc_9660
.text:00009656
.text:00009658                               ; ---------------------------------------------------------------------------
.text:00009658
.text:00009658                               loc_9658                      ; CODE XREF: get_value+10↑j
.text:00009658 04 48                         LDR             R0, =(aFailedToOpenMi - 0x965E) ; "Failed to open mixer"
.text:0000965A 78 44                         ADD             R0, PC        ; "Failed to open mixer"
.text:0000965C F9 F7 0E EF                   BLX             puts
.text:0000965C
.text:00009660
.text:00009660                               loc_9660                      ; CODE XREF: get_value+2C↑j
.text:00009660                                                             ; get_value+36↑j
.text:00009660 4F F0 FF 30                   MOV.W           R0, #0xFFFFFFFF
.text:00009664 B0 BD                         POP             {R4,R5,R7,PC}
.text:00009664
.text:00009666                               ; ---------------------------------------------------------------------------
.text:00009666
.text:00009666                               loc_9666                      ; CODE XREF: get_value+1A↑j
.text:00009666 FE DE                         UND             #0xFE
.text:00009666
.text:00009666                               ; End of function get_value
.text:00009666
.text:00009666                               ; ---------------------------------------------------------------------------
.text:00009668 82 47 00 00                   off_9668 DCD aInvalidControl - 0x9644
.text:00009668                                                             ; DATA XREF: get_value+1C↑r
.text:00009668                                                             ; "Invalid control name: %s\n"
.text:0000966C 62 57 00 00                   off_966C DCD aFailedToOpenMi - 0x965E
.text:0000966C                                                             ; DATA XREF: get_value:loc_9658↑r
.text:0000966C                                                             ; "Failed to open mixer"
.text:00009670 8C 57 00 00                   off_9670 DCD aInvalidControl_0 - 0x9654
.text:00009670                                                             ; DATA XREF: get_value:loc_964E↑r
.text:00009670                               ; } // starts at 9620         ; "Invalid control name/value: NULL"
.text:00009674
.text:00009674                               ; =============== S U B R O U T I N E =======================================
.text:00009674
.text:00009674
.text:00009674                               ; int __fastcall set_value(const char *, const char *)
.text:00009674                               EXPORT set_value
.text:00009674                               set_value                     ; CODE XREF: j_set_value+8↑j
.text:00009674                                                             ; DATA XREF: LOAD:000008A0↑o
.text:00009674                                                             ; .got:set_value_ptr↓o
.text:00009674                               ; __unwind {
.text:00009674 F0 B5                         PUSH            {R4-R7,LR}
.text:00009676 81 B0                         SUB             SP, SP, #4
.text:00009678 06 46                         MOV             R6, R0
.text:0000967A 0D 46                         MOV             R5, R1
.text:0000967C FE B1                         CBZ             R6, loc_96BE
.text:0000967C
.text:0000967E F5 B1                         CBZ             R5, loc_96BE
.text:0000967E
.text:00009680 00 20                         MOVS            R0, #0
.text:00009682 F9 F7 B6 EC                   BLX             mixer_open
.text:00009682
.text:00009686 04 46                         MOV             R4, R0
.text:00009688 E4 B1                         CBZ             R4, loc_96C4
.text:00009688
.text:0000968A 20 46                         MOV             R0, R4
.text:0000968C 31 46                         MOV             R1, R6
.text:0000968E F9 F7 B6 EC                   BLX             mixer_get_ctl_by_name
.text:0000968E
.text:00009692 07 46                         MOV             R7, R0
.text:00009694 EF B1                         CBZ             R7, loc_96D2
.text:00009694
.text:00009696 38 46                         MOV             R0, R7
.text:00009698 F9 F7 9C EE                   BLX             mixer_ctl_get_type
.text:00009698
.text:0000969C 29 78                         LDRB            R1, [R5]
.text:0000969E 30 39                         SUBS            R1, #0x30 ; '0'
.text:000096A0 09 29                         CMP             R1, #9
.text:000096A2 1C D8                         BHI             loc_96DE
.text:000096A2
.text:000096A4 28 46                         MOV             R0, R5        ; nptr
.text:000096A6 F9 F7 68 EC                   BLX             atoi
.text:000096A6
.text:000096AA 02 46                         MOV             R2, R0
.text:000096AC 38 46                         MOV             R0, R7
.text:000096AE 00 21                         MOVS            R1, #0
.text:000096B0 00 25                         MOVS            R5, #0
.text:000096B2 F9 F7 64 ED                   BLX             mixer_ctl_set_value
.text:000096B2
.text:000096B6 10 B3                         CBZ             R0, loc_96FE
.text:000096B6
.text:000096B8 17 48                         LDR             R0, =(aErrorInvalidVa - 0x96BE) ; "Error: invalid value"
.text:000096BA 78 44                         ADD             R0, PC        ; "Error: invalid value"
.text:000096BC 1B E0                         B               loc_96F6
.text:000096BC
.text:000096BE                               ; ---------------------------------------------------------------------------
.text:000096BE
.text:000096BE                               loc_96BE                      ; CODE XREF: set_value+8↑j
.text:000096BE                                                             ; set_value+A↑j
.text:000096BE 19 48                         LDR             R0, =(aInvalidControl_0 - 0x96C4) ; "Invalid control name/value: NULL"
.text:000096C0 78 44                         ADD             R0, PC        ; "Invalid control name/value: NULL"
.text:000096C2 01 E0                         B               loc_96C8
.text:000096C2
.text:000096C4                               ; ---------------------------------------------------------------------------
.text:000096C4
.text:000096C4                               loc_96C4                      ; CODE XREF: set_value+14↑j
.text:000096C4 16 48                         LDR             R0, =(aFailedToOpenMi - 0x96CA) ; "Failed to open mixer"
.text:000096C6 78 44                         ADD             R0, PC        ; "Failed to open mixer"
.text:000096C6
.text:000096C8
.text:000096C8                               loc_96C8                      ; CODE XREF: set_value+4E↑j
.text:000096C8 F9 F7 D2 EE                   BLX             printf
.text:000096C8
.text:000096CC 4F F0 FF 35                   MOV.W           R5, #0xFFFFFFFF
.text:000096D0 18 E0                         B               loc_9704
.text:000096D0
.text:000096D2                               ; ---------------------------------------------------------------------------
.text:000096D2
.text:000096D2                               loc_96D2                      ; CODE XREF: set_value+20↑j
.text:000096D2 12 48                         LDR             R0, =(aInvalidControl_1 - 0x96DA) ; "Invalid control name: %s"
.text:000096D4 31 46                         MOV             R1, R6
.text:000096D6 78 44                         ADD             R0, PC        ; "Invalid control name: %s"
.text:000096D8 F9 F7 CA EE                   BLX             printf
.text:000096D8
.text:000096DC 0D E0                         B               loc_96FA
.text:000096DC
.text:000096DE                               ; ---------------------------------------------------------------------------
.text:000096DE
.text:000096DE                               loc_96DE                      ; CODE XREF: set_value+2E↑j
.text:000096DE 02 28                         CMP             R0, #2
.text:000096E0 07 D1                         BNE             loc_96F2
.text:000096E0
.text:000096E2 38 46                         MOV             R0, R7
.text:000096E4 29 46                         MOV             R1, R5
.text:000096E6 F9 F7 1C EE                   BLX             mixer_ctl_set_enum_by_string
.text:000096E6
.text:000096EA 70 B1                         CBZ             R0, loc_970A
.text:000096EA
.text:000096EC 09 48                         LDR             R0, =(aErrorInvalidEn - 0x96F2) ; "Error: invalid enum value"
.text:000096EE 78 44                         ADD             R0, PC        ; "Error: invalid enum value"
.text:000096F0 01 E0                         B               loc_96F6
.text:000096F0
.text:000096F2                               ; ---------------------------------------------------------------------------
.text:000096F2
.text:000096F2                               loc_96F2                      ; CODE XREF: set_value+6C↑j
.text:000096F2 07 48                         LDR             R0, =(aErrorOnlyEnumT - 0x96F8) ; "Error: only enum types can be set with "...
.text:000096F4 78 44                         ADD             R0, PC        ; "Error: only enum types can be set with "...
.text:000096F4
.text:000096F6
.text:000096F6                               loc_96F6                      ; CODE XREF: set_value+48↑j
.text:000096F6                                                             ; set_value+7C↑j
.text:000096F6 F9 F7 BC EE                   BLX             printf
.text:000096F6
.text:000096FA
.text:000096FA                               loc_96FA                      ; CODE XREF: set_value+68↑j
.text:000096FA 4F F0 FF 35                   MOV.W           R5, #0xFFFFFFFF
.text:000096FA
.text:000096FE
.text:000096FE                               loc_96FE                      ; CODE XREF: set_value+42↑j
.text:000096FE                                                             ; set_value+98↓j
.text:000096FE 20 46                         MOV             R0, R4
.text:00009700 F9 F7 82 EC                   BLX             mixer_close
.text:00009700
.text:00009704
.text:00009704                               loc_9704                      ; CODE XREF: set_value+5C↑j
.text:00009704 28 46                         MOV             R0, R5
.text:00009706 01 B0                         ADD             SP, SP, #4
.text:00009708 F0 BD                         POP             {R4-R7,PC}
.text:00009708
.text:0000970A                               ; ---------------------------------------------------------------------------
.text:0000970A
.text:0000970A                               loc_970A                      ; CODE XREF: set_value+76↑j
.text:0000970A 00 25                         MOVS            R5, #0
.text:0000970C F7 E7                         B               loc_96FE
.text:0000970C
.text:0000970C                               ; End of function set_value
.text:0000970C
.text:0000970C                               ; ---------------------------------------------------------------------------
.text:0000970E 00 BF                         ALIGN 0x10
.text:00009710 30 47 00 00                   off_9710 DCD aErrorOnlyEnumT - 0x96F8
.text:00009710                                                             ; DATA XREF: set_value:loc_96F2↑r
.text:00009710                                                             ; "Error: only enum types can be set with "...
.text:00009714 1C 47 00 00                   off_9714 DCD aErrorInvalidEn - 0x96F2
.text:00009714                                                             ; DATA XREF: set_value+78↑r
.text:00009714                                                             ; "Error: invalid enum value"
.text:00009718 3B 47 00 00                   off_9718 DCD aErrorInvalidVa - 0x96BE
.text:00009718                                                             ; DATA XREF: set_value+44↑r
.text:00009718                                                             ; "Error: invalid value"
.text:0000971C 06 47 00 00                   off_971C DCD aInvalidControl_1 - 0x96DA
.text:0000971C                                                             ; DATA XREF: set_value:loc_96D2↑r
.text:0000971C                                                             ; "Invalid control name: %s"
.text:00009720 F6 56 00 00                   off_9720 DCD aFailedToOpenMi - 0x96CA
.text:00009720                                                             ; DATA XREF: set_value:loc_96C4↑r
.text:00009720                                                             ; "Failed to open mixer"
.text:00009724 1C 57 00 00                   off_9724 DCD aInvalidControl_0 - 0x96C4
.text:00009724                                                             ; DATA XREF: set_value:loc_96BE↑r
.text:00009724                               ; } // starts at 9674         ; "Invalid control name/value: NULL"
.text:00009728
.text:00009728                               ; =============== S U B R O U T I N E =======================================
.text:00009728
.text:00009728
.text:00009728                               ; int __fastcall cvq_open(int)
.text:00009728                               EXPORT cvq_open
.text:00009728                               cvq_open                      ; DATA XREF: LOAD:00000BD0↑o
.text:00009728                                                             ; cvq_init+1C↓o
.text:00009728                                                             ; .got:cvq_open_ptr↓o
.text:00009728
.text:00009728                               var_120= -0x120
.text:00009728                               var_118= -0x118
.text:00009728                               var_114= -0x114
.text:00009728                               var_98= -0x98
.text:00009728                               var_14= -0x14
.text:00009728
.text:00009728                               ; __unwind {
.text:00009728 70 B5                         PUSH            {R4-R6,LR}
.text:0000972A C4 B0                         SUB             SP, SP, #0x110
.text:0000972C 04 46                         MOV             R4, R0
.text:0000972E 36 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x9738)
.text:00009730 36 49                         LDR             R1, =(aEnableDisableS - 0x973E) ; "Enable/Disable Streaming PATH/Endpoint"
.text:00009732 22 AD                         ADD             R5, SP, #0x120+var_98
.text:00009734 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00009736 80 22                         MOVS            R2, #0x80
.text:00009738 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:0000973A 79 44                         ADD             R1, PC        ; "Enable/Disable Streaming PATH/Endpoint"
.text:0000973C 00 68                         LDR             R0, [R0]
.text:0000973E 43 90                         STR             R0, [SP,#0x120+var_14]
.text:00009740 28 46                         MOV             R0, R5
.text:00009742 F9 F7 A2 EE                   BLX             __aeabi_memcpy8
.text:00009742
.text:00009746 02 AE                         ADD             R6, SP, #0x120+var_118
.text:00009748 80 21                         MOVS            R1, #0x80
.text:0000974A 30 46                         MOV             R0, R6
.text:0000974C F9 F7 94 ED                   BLX             __aeabi_memclr8
.text:0000974C
.text:00009750 43 F2 33 20                   MOVW            R0, #0x3233
.text:00009754 2E 49                         LDR             R1, =(aCvqstream - 0x9762) ; "CVQStream"
.text:00009756 2F 4A                         LDR             R2, =(aAudioCvqS - 0x976C) ; "audio cvq %s"
.text:00009758 C3 F2 38 00                   MOVT            R0, #0x3038
.text:0000975C 2E 4B                         LDR             R3, =(aCvqOpen_0 - 0x976E) ; "cvq_open"
.text:0000975E 79 44                         ADD             R1, PC        ; "CVQStream"
.text:00009760 02 90                         STR             R0, [SP,#0x120+var_118]
.text:00009762 30 20                         MOVS            R0, #0x30 ; '0'
.text:00009764 8D F8 0C 00                   STRB.W          R0, [SP,#0x120+var_114]
.text:00009768 7A 44                         ADD             R2, PC        ; "audio cvq %s"
.text:0000976A 7B 44                         ADD             R3, PC        ; "cvq_open"
.text:0000976C 03 20                         MOVS            R0, #3
.text:0000976E F9 F7 34 EC                   BLX             __android_log_print
.text:0000976E
.text:00009772 28 46                         MOV             R0, R5
.text:00009774 31 46                         MOV             R1, R6
.text:00009776 F9 F7 8E EE                   BLX             j_set_value
.text:00009776
.text:0000977A 4E F2 38 21                   MOVW            R1, #0xE238
.text:0000977E 00 28                         CMP             R0, #0
.text:00009780 C0 F2 04 01                   MOVT            R1, #4
.text:00009784 63 58                         LDR             R3, [R4,R1]
.text:00009786 04 EB 01 05                   ADD.W           R5, R4, R1
.text:0000978A 05 D0                         BEQ             loc_9798
.text:0000978A
.text:0000978C 23 49                         LDR             R1, =(aCvqstream - 0x9796) ; "CVQStream"
.text:0000978E 06 20                         MOVS            R0, #6
.text:00009790 23 4A                         LDR             R2, =(aSetStreamingFa - 0x9798) ; "set streaming failed:%p"
.text:00009792 79 44                         ADD             R1, PC        ; "CVQStream"
.text:00009794 7A 44                         ADD             R2, PC        ; "set streaming failed:%p"
.text:00009796 04 E0                         B               loc_97A2
.text:00009796
.text:00009798                               ; ---------------------------------------------------------------------------
.text:00009798
.text:00009798                               loc_9798                      ; CODE XREF: cvq_open+62↑j
.text:00009798 22 49                         LDR             R1, =(aCvqstream - 0x97A2) ; "CVQStream"
.text:0000979A 03 20                         MOVS            R0, #3
.text:0000979C 22 4A                         LDR             R2, =(aSetStreamingSu - 0x97A4) ; "set streaming success:%p"
.text:0000979E 79 44                         ADD             R1, PC        ; "CVQStream"
.text:000097A0 7A 44                         ADD             R2, PC        ; "set streaming success:%p"
.text:000097A0
.text:000097A2
.text:000097A2                               loc_97A2                      ; CODE XREF: cvq_open+6E↑j
.text:000097A2 F9 F7 1A EC                   BLX             __android_log_print
.text:000097A2
.text:000097A6 21 48                         LDR             R0, =(aDevAdnc2 - 0x97AE) ; "/dev/adnc2"
.text:000097A8 21 49                         LDR             R1, =(aRb - 0x97B0) ; "rb"
.text:000097AA 78 44                         ADD             R0, PC        ; "/dev/adnc2"
.text:000097AC 79 44                         ADD             R1, PC        ; "rb"
.text:000097AE F9 F7 F6 EB                   BLX             fopen
.text:000097AE
.text:000097B2 03 46                         MOV             R3, R0
.text:000097B4 2B 60                         STR             R3, [R5]
.text:000097B6 43 B1                         CBZ             R3, loc_97CA
.text:000097B6
.text:000097B8 1E 49                         LDR             R1, =(aCvqstream - 0x97C2) ; "CVQStream"
.text:000097BA 03 20                         MOVS            R0, #3
.text:000097BC 1E 4A                         LDR             R2, =(aUartCharDevOpe - 0x97C4) ; "uart_char_dev open success:%p"
.text:000097BE 79 44                         ADD             R1, PC        ; "CVQStream"
.text:000097C0 7A 44                         ADD             R2, PC        ; "uart_char_dev open success:%p"
.text:000097C2 F9 F7 0A EC                   BLX             __android_log_print
.text:000097C2
.text:000097C6 00 20                         MOVS            R0, #0
.text:000097C8 11 E0                         B               loc_97EE
.text:000097C8
.text:000097CA                               ; ---------------------------------------------------------------------------
.text:000097CA
.text:000097CA                               loc_97CA                      ; CODE XREF: cvq_open+8E↑j
.text:000097CA F9 F7 FA EB                   BLX             __errno
.text:000097CA
.text:000097CE 05 68                         LDR             R5, [R0]
.text:000097D0 00 68                         LDR             R0, [R0]      ; errnum
.text:000097D2 F9 F7 FC EB                   BLX             strerror
.text:000097D2
.text:000097D6 19 49                         LDR             R1, =(aCvqstream - 0x97E4) ; "CVQStream"
.text:000097D8 00 23                         MOVS            R3, #0
.text:000097DA 19 4A                         LDR             R2, =(aUartCharDevOpe_0 - 0x97E6) ; "uart_char_dev open failed:%p %d %s"
.text:000097DC CD E9 00 50                   STRD.W          R5, R0, [SP,#0x120+var_120]
.text:000097E0 79 44                         ADD             R1, PC        ; "CVQStream"
.text:000097E2 7A 44                         ADD             R2, PC        ; "uart_char_dev open failed:%p %d %s"
.text:000097E4 06 20                         MOVS            R0, #6
.text:000097E6 F9 F7 F8 EB                   BLX             __android_log_print
.text:000097E6
.text:000097EA 4F F0 FF 30                   MOV.W           R0, #0xFFFFFFFF
.text:000097EA
.text:000097EE
.text:000097EE                               loc_97EE                      ; CODE XREF: cvq_open+A0↑j
.text:000097EE 00 21                         MOVS            R1, #0
.text:000097F0 E1 60                         STR             R1, [R4,#0xC]
.text:000097F2 14 49                         LDR             R1, =(__stack_chk_guard_ptr - 0x97FA)
.text:000097F4 43 9A                         LDR             R2, [SP,#0x120+var_14]
.text:000097F6 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:000097F8 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:000097FA 09 68                         LDR             R1, [R1]
.text:000097FC 89 1A                         SUBS            R1, R1, R2
.text:000097FE 04 BF                         ITT EQ
.text:00009800 44 B0                         ADDEQ           SP, SP, #0x110
.text:00009802 70 BD                         POPEQ           {R4-R6,PC}
.text:00009802
.text:00009804 F9 F7 EE EB                   BLX             __stack_chk_fail
.text:00009804
.text:00009804                               ; End of function cvq_open
.text:00009804
.text:00009804                               ; ---------------------------------------------------------------------------
.text:00009808 5C 76 00 00                   off_9808 DCD __stack_chk_guard_ptr - 0x9738
.text:00009808                                                             ; DATA XREF: cvq_open+6↑r
.text:0000980C CA 56 00 00                   off_980C DCD aEnableDisableS - 0x973E
.text:0000980C                                                             ; DATA XREF: cvq_open+8↑r
.text:0000980C                                                             ; "Enable/Disable Streaming PATH/Endpoint"
.text:00009810 F5 46 00 00                   off_9810 DCD aCvqstream - 0x9762
.text:00009810                                                             ; DATA XREF: cvq_open+2C↑r
.text:00009810                                                             ; "CVQStream"
.text:00009814 F5 46 00 00                   off_9814 DCD aAudioCvqS - 0x976C
.text:00009814                                                             ; DATA XREF: cvq_open+2E↑r
.text:00009814                                                             ; "audio cvq %s"
.text:00009818 00 47 00 00                   off_9818 DCD aCvqOpen_0 - 0x976E
.text:00009818                                                             ; DATA XREF: cvq_open+34↑r
.text:00009818                                                             ; "cvq_open"
.text:0000981C C1 46 00 00                   off_981C DCD aCvqstream - 0x9796
.text:0000981C                                                             ; DATA XREF: cvq_open+64↑r
.text:0000981C                                                             ; "CVQStream"
.text:00009820 DF 46 00 00                   off_9820 DCD aSetStreamingFa - 0x9798
.text:00009820                                                             ; DATA XREF: cvq_open+68↑r
.text:00009820                                                             ; "set streaming failed:%p"
.text:00009824 B5 46 00 00                   off_9824 DCD aCvqstream - 0x97A2
.text:00009824                                                             ; DATA XREF: cvq_open:loc_9798↑r
.text:00009824                                                             ; "CVQStream"
.text:00009828 EB 46 00 00                   off_9828 DCD aSetStreamingSu - 0x97A4
.text:00009828                                                             ; DATA XREF: cvq_open+74↑r
.text:00009828                                                             ; "set streaming success:%p"
.text:0000982C FA 46 00 00                   off_982C DCD aDevAdnc2 - 0x97AE
.text:0000982C                                                             ; DATA XREF: cvq_open+7E↑r
.text:0000982C                                                             ; "/dev/adnc2"
.text:00009830 3A 29 00 00                   off_9830 DCD aRb - 0x97B0     ; DATA XREF: cvq_open+80↑r
.text:00009830                                                             ; "rb"
.text:00009834 95 46 00 00                   off_9834 DCD aCvqstream - 0x97C2
.text:00009834                                                             ; DATA XREF: cvq_open+90↑r
.text:00009834                                                             ; "CVQStream"
.text:00009838 12 47 00 00                   off_9838 DCD aUartCharDevOpe - 0x97C4
.text:00009838                                                             ; DATA XREF: cvq_open+94↑r
.text:00009838                                                             ; "uart_char_dev open success:%p"
.text:0000983C 73 46 00 00                   off_983C DCD aCvqstream - 0x97E4
.text:0000983C                                                             ; DATA XREF: cvq_open+AE↑r
.text:0000983C                                                             ; "CVQStream"
.text:00009840 CD 46 00 00                   off_9840 DCD aUartCharDevOpe_0 - 0x97E6
.text:00009840                                                             ; DATA XREF: cvq_open+B2↑r
.text:00009840                                                             ; "uart_char_dev open failed:%p %d %s"
.text:00009844 9A 75 00 00                   off_9844 DCD __stack_chk_guard_ptr - 0x97FA
.text:00009844                                                             ; DATA XREF: cvq_open+CA↑r
.text:00009844                               ; } // starts at 9728
.text:00009848
.text:00009848                               ; =============== S U B R O U T I N E =======================================
.text:00009848
.text:00009848
.text:00009848                               ; int __fastcall cvq_close(_DWORD *)
.text:00009848                               EXPORT cvq_close
.text:00009848                               cvq_close                     ; DATA XREF: LOAD:00000890↑o
.text:00009848                                                             ; cvq_init+2C↓o
.text:00009848                                                             ; .got:cvq_close_ptr↓o
.text:00009848                               ; __unwind {
.text:00009848 F0 B5                         PUSH            {R4-R7,LR}
.text:0000984A 81 B0                         SUB             SP, SP, #4
.text:0000984C 18 49                         LDR             R1, =(aCvqstream - 0x985A) ; "CVQStream"
.text:0000984E 04 46                         MOV             R4, R0
.text:00009850 18 4A                         LDR             R2, =(aAudioCvqS - 0x985C) ; "audio cvq %s"
.text:00009852 03 20                         MOVS            R0, #3
.text:00009854 18 4B                         LDR             R3, =(aCvqClose_0 - 0x985E) ; "cvq_close"
.text:00009856 79 44                         ADD             R1, PC        ; "CVQStream"
.text:00009858 7A 44                         ADD             R2, PC        ; "audio cvq %s"
.text:0000985A 7B 44                         ADD             R3, PC        ; "cvq_close"
.text:0000985C F9 F7 BC EB                   BLX             __android_log_print
.text:0000985C
.text:00009860 4E F2 48 20                   MOVW            R0, #0xE248
.text:00009864 01 21                         MOVS            R1, #1
.text:00009866 C0 F2 04 00                   MOVT            R0, #4
.text:0000986A 00 26                         MOVS            R6, #0
.text:0000986C 21 50                         STR             R1, [R4,R0]
.text:0000986E 00 21                         MOVS            R1, #0        ; thread_return
.text:00009870 26 61                         STR             R6, [R4,#0x10]
.text:00009872 60 69                         LDR             R0, [R4,#0x14] ; th
.text:00009874 F9 F7 12 ED                   BLX             pthread_join
.text:00009874
.text:00009878 20 6A                         LDR             R0, [R4,#0x20] ; th
.text:0000987A 00 21                         MOVS            R1, #0        ; thread_return
.text:0000987C F9 F7 0E ED                   BLX             pthread_join
.text:0000987C
.text:00009880 4E F2 38 21                   MOVW            R1, #0xE238
.text:00009884 00 25                         MOVS            R5, #0
.text:00009886 C0 F2 04 01                   MOVT            R1, #4
.text:0000988A 60 58                         LDR             R0, [R4,R1]   ; stream
.text:0000988C 60 B1                         CBZ             R0, loc_98A8
.text:0000988C
.text:0000988E 67 18                         ADDS            R7, R4, R1
.text:00009890 F9 F7 90 EB                   BLX             fclose
.text:00009890
.text:00009894 09 49                         LDR             R1, =(aCvqstream - 0x98A0) ; "CVQStream"
.text:00009896 05 46                         MOV             R5, R0
.text:00009898 09 4A                         LDR             R2, =(aUartClosedRetD - 0x98A4) ; "#### uart closed, ret = %d ####"
.text:0000989A 03 20                         MOVS            R0, #3
.text:0000989C 79 44                         ADD             R1, PC        ; "CVQStream"
.text:0000989E 2B 46                         MOV             R3, R5
.text:000098A0 7A 44                         ADD             R2, PC        ; "#### uart closed, ret = %d ####"
.text:000098A2 3E 60                         STR             R6, [R7]
.text:000098A4 F9 F7 98 EB                   BLX             __android_log_print
.text:000098A4
.text:000098A8
.text:000098A8                               loc_98A8                      ; CODE XREF: cvq_close+44↑j
.text:000098A8 E6 60                         STR             R6, [R4,#0xC]
.text:000098AA 28 46                         MOV             R0, R5
.text:000098AC 01 B0                         ADD             SP, SP, #4
.text:000098AE F0 BD                         POP             {R4-R7,PC}
.text:000098AE
.text:000098AE                               ; End of function cvq_close
.text:000098AE
.text:000098AE                               ; ---------------------------------------------------------------------------
.text:000098B0 FD 45 00 00                   off_98B0 DCD aCvqstream - 0x985A
.text:000098B0                                                             ; DATA XREF: cvq_close+4↑r
.text:000098B0                                                             ; "CVQStream"
.text:000098B4 05 46 00 00                   off_98B4 DCD aAudioCvqS - 0x985C
.text:000098B4                                                             ; DATA XREF: cvq_close+8↑r
.text:000098B4                                                             ; "audio cvq %s"
.text:000098B8 96 46 00 00                   off_98B8 DCD aCvqClose_0 - 0x985E
.text:000098B8                                                             ; DATA XREF: cvq_close+C↑r
.text:000098B8                                                             ; "cvq_close"
.text:000098BC B7 45 00 00                   off_98BC DCD aCvqstream - 0x98A0
.text:000098BC                                                             ; DATA XREF: cvq_close+4C↑r
.text:000098BC                                                             ; "CVQStream"
.text:000098C0 5A 46 00 00                   off_98C0 DCD aUartClosedRetD - 0x98A4
.text:000098C0                                                             ; DATA XREF: cvq_close+50↑r
.text:000098C0                               ; } // starts at 9848         ; "#### uart closed, ret = %d ####"
.text:000098C4
.text:000098C4                               ; =============== S U B R O U T I N E =======================================
.text:000098C4
.text:000098C4
.text:000098C4                               ; int __fastcall readdirect(int)
.text:000098C4                               EXPORT readdirect
.text:000098C4                               readdirect                    ; DATA XREF: LOAD:00000CA0↑o
.text:000098C4                                                             ; cvq_init+40↓o
.text:000098C4                                                             ; .got:readdirect_ptr↓o
.text:000098C4                               ; __unwind {
.text:000098C4 83 68                         LDR             R3, [R0,#8]
.text:000098C6 0B B1                         CBZ             R3, loc_98CC
.text:000098C6
.text:000098C8 00 20                         MOVS            R0, #0
.text:000098CA 70 47                         BX              LR
.text:000098CA
.text:000098CC                               ; ---------------------------------------------------------------------------
.text:000098CC
.text:000098CC                               loc_98CC                      ; CODE XREF: readdirect+2↑j
.text:000098CC 4E F2 60 23 C0 F2 04 03       MOV             R3, #0x4E260
.text:000098D4 C3 58                         LDR             R3, [R0,R3]
.text:000098D6 18 47                         BX              R3
.text:000098D6                               ; } // starts at 98C4
.text:000098D6
.text:000098D6                               ; End of function readdirect
.text:000098D6
.text:000098D8
.text:000098D8                               ; =============== S U B R O U T I N E =======================================
.text:000098D8
.text:000098D8
.text:000098D8                               ; size_t __fastcall cvq_read(_DWORD *, char *, int)
.text:000098D8                               EXPORT cvq_read
.text:000098D8                               cvq_read                      ; DATA XREF: LOAD:00000CE0↑o
.text:000098D8                                                             ; cvq_init+14↓o
.text:000098D8                                                             ; .got:cvq_read_ptr↓o
.text:000098D8                               ; __unwind {
.text:000098D8 2D E9 F0 41                   PUSH.W          {R4-R8,LR}
.text:000098DC 4E F2 30 28                   MOVW            R8, #0xE230
.text:000098E0 0C 46                         MOV             R4, R1
.text:000098E2 4E F2 34 21                   MOVW            R1, #0xE234
.text:000098E6 05 46                         MOV             R5, R0
.text:000098E8 C0 F2 04 01                   MOVT            R1, #4
.text:000098EC C0 F2 04 08                   MOVT            R8, #4
.text:000098F0 55 F8 08 00                   LDR.W           R0, [R5,R8]
.text:000098F4 16 46                         MOV             R6, R2
.text:000098F6 69 58                         LDR             R1, [R5,R1]
.text:000098F8 0F 1A                         SUBS            R7, R1, R0
.text:000098FA B7 42                         CMP             R7, R6
.text:000098FC 1B DA                         BGE             loc_9936
.text:000098FC
.text:000098FE A8 68                         LDR             R0, [R5,#8]
.text:00009900 88 B9                         CBNZ            R0, loc_9926
.text:00009900
.text:00009902 28 69                         LDR             R0, [R5,#0x10]
.text:00009904 41 1C                         ADDS            R1, R0, #1
.text:00009906 28 28                         CMP             R0, #0x28 ; '('
.text:00009908 29 61                         STR             R1, [R5,#0x10]
.text:0000990A 01 D2                         BCS             loc_9910
.text:0000990A
.text:0000990C 00 26                         MOVS            R6, #0
.text:0000990E 21 E0                         B               loc_9954
.text:0000990E
.text:00009910                               ; ---------------------------------------------------------------------------
.text:00009910
.text:00009910                               loc_9910                      ; CODE XREF: cvq_read+32↑j
.text:00009910 12 49                         LDR             R1, =(aCvqstream - 0x991C) ; "CVQStream"
.text:00009912 01 20                         MOVS            R0, #1
.text:00009914 12 4A                         LDR             R2, =(aCvqReadTimeout - 0x991E) ; "#### CVQ read timeout, force end ####"
.text:00009916 A8 60                         STR             R0, [R5,#8]
.text:00009918 79 44                         ADD             R1, PC        ; "CVQStream"
.text:0000991A 7A 44                         ADD             R2, PC        ; "#### CVQ read timeout, force end ####"
.text:0000991C 03 20                         MOVS            R0, #3
.text:0000991E F9 F7 5C EB                   BLX             __android_log_print
.text:0000991E
.text:00009922 A8 68                         LDR             R0, [R5,#8]
.text:00009924 30 B1                         CBZ             R0, loc_9934
.text:00009924
.text:00009926
.text:00009926                               loc_9926                      ; CODE XREF: cvq_read+28↑j
.text:00009926 0F 49                         LDR             R1, =(aCvqstream - 0x9930) ; "CVQStream"
.text:00009928 03 20                         MOVS            R0, #3
.text:0000992A 0F 4A                         LDR             R2, =(aEndOfUartData - 0x9932) ; "#### end of uart data ####"
.text:0000992C 79 44                         ADD             R1, PC        ; "CVQStream"
.text:0000992E 7A 44                         ADD             R2, PC        ; "#### end of uart data ####"
.text:00009930 F9 F7 52 EB                   BLX             __android_log_print
.text:00009930
.text:00009934
.text:00009934                               loc_9934                      ; CODE XREF: cvq_read+4C↑j
.text:00009934 3E 46                         MOV             R6, R7
.text:00009934
.text:00009936
.text:00009936                               loc_9936                      ; CODE XREF: cvq_read+24↑j
.text:00009936 00 20                         MOVS            R0, #0
.text:00009938 05 EB 08 07                   ADD.W           R7, R5, R8
.text:0000993C 28 61                         STR             R0, [R5,#0x10]
.text:0000993E 32 46                         MOV             R2, R6
.text:00009940 38 68                         LDR             R0, [R7]
.text:00009942 28 44                         ADD             R0, R5
.text:00009944 00 F1 28 01                   ADD.W           R1, R0, #0x28 ; '('
.text:00009948 20 46                         MOV             R0, R4
.text:0000994A F9 F7 26 ED                   BLX             __aeabi_memcpy
.text:0000994A
.text:0000994E 38 68                         LDR             R0, [R7]
.text:00009950 30 44                         ADD             R0, R6
.text:00009952 38 60                         STR             R0, [R7]
.text:00009952
.text:00009954
.text:00009954                               loc_9954                      ; CODE XREF: cvq_read+36↑j
.text:00009954 30 46                         MOV             R0, R6
.text:00009956 BD E8 F0 81                   POP.W           {R4-R8,PC}
.text:00009956
.text:00009956                               ; End of function cvq_read
.text:00009956
.text:00009956                               ; ---------------------------------------------------------------------------
.text:0000995A 00 BF                         ALIGN 4
.text:0000995C 3B 45 00 00                   off_995C DCD aCvqstream - 0x991C
.text:0000995C                                                             ; DATA XREF: cvq_read:loc_9910↑r
.text:0000995C                                                             ; "CVQStream"
.text:00009960 00 46 00 00                   off_9960 DCD aCvqReadTimeout - 0x991E
.text:00009960                                                             ; DATA XREF: cvq_read+3C↑r
.text:00009960                                                             ; "#### CVQ read timeout, force end ####"
.text:00009964 27 45 00 00                   off_9964 DCD aCvqstream - 0x9930
.text:00009964                                                             ; DATA XREF: cvq_read:loc_9926↑r
.text:00009964                                                             ; "CVQStream"
.text:00009968 12 46 00 00                   off_9968 DCD aEndOfUartData - 0x9932
.text:00009968                                                             ; DATA XREF: cvq_read+52↑r
.text:00009968                               ; } // starts at 98D8         ; "#### end of uart data ####"
.text:0000996C
.text:0000996C                               ; =============== S U B R O U T I N E =======================================
.text:0000996C
.text:0000996C
.text:0000996C                               ; int __fastcall read_on_thread(int)
.text:0000996C                               EXPORT read_on_thread
.text:0000996C                               read_on_thread                ; DATA XREF: LOAD:00000BA0↑o
.text:0000996C                                                             ; cvq_start_decode+1A↓o
.text:0000996C                                                             ; .got:read_on_thread_ptr↓o
.text:0000996C
.text:0000996C                               var_2C= -0x2C
.text:0000996C                               var_28= -0x28
.text:0000996C
.text:0000996C                               ; __unwind {
.text:0000996C 2D E9 F0 4F                   PUSH.W          {R4-R11,LR}
.text:00009970 83 B0                         SUB             SP, SP, #0xC
.text:00009972 36 4D                         LDR             R5, =(aCvqstream - 0x997E) ; "CVQStream"
.text:00009974 04 46                         MOV             R4, R0
.text:00009976 36 4A                         LDR             R2, =(aReadonthreadCa - 0x9980) ; "readonthread called"
.text:00009978 03 20                         MOVS            R0, #3
.text:0000997A 7D 44                         ADD             R5, PC        ; "CVQStream"
.text:0000997C 7A 44                         ADD             R2, PC        ; "readonthread called"
.text:0000997E 29 46                         MOV             R1, R5
.text:00009980 F9 F7 2A EB                   BLX             __android_log_print
.text:00009980
.text:00009984 33 4A                         LDR             R2, =(aAudioCvqS - 0x9990) ; "audio cvq %s"
.text:00009986 03 20                         MOVS            R0, #3
.text:00009988 33 4B                         LDR             R3, =(aReadOnThread_0 - 0x9992) ; "read_on_thread"
.text:0000998A 29 46                         MOV             R1, R5
.text:0000998C 7A 44                         ADD             R2, PC        ; "audio cvq %s"
.text:0000998E 7B 44                         ADD             R3, PC        ; "read_on_thread"
.text:00009990 F9 F7 22 EB                   BLX             __android_log_print
.text:00009990
.text:00009994 4E F2 48 20 C0 F2 04 00       MOV             R0, #0x4E248
.text:0000999C 21 58                         LDR             R1, [R4,R0]
.text:0000999E 00 29                         CMP             R1, #0
.text:000099A0 50 D1                         BNE             loc_9A44
.text:000099A0
.text:000099A2 04 EB 00 0B                   ADD.W           R11, R4, R0
.text:000099A6 04 F5 9C 20                   ADD.W           R0, R4, #0x4E000
.text:000099AA 00 F5 16 70                   ADD.W           R0, R0, #0x258
.text:000099AE 47 F2 00 1A                   MOVW            R10, #0x7100
.text:000099B2 02 90                         STR             R0, [SP,#0x30+var_28]
.text:000099B4 04 F5 9C 20                   ADD.W           R0, R4, #0x4E000
.text:000099B8 00 F5 0B 76                   ADD.W           R6, R0, #0x22C
.text:000099BC 04 F5 9C 20                   ADD.W           R0, R4, #0x4E000
.text:000099C0 00 F5 0A 78                   ADD.W           R8, R0, #0x228
.text:000099C4 04 F5 9C 20                   ADD.W           R0, R4, #0x4E000
.text:000099C8 00 F5 0D 79                   ADD.W           R9, R0, #0x234
.text:000099CC 04 F1 28 00                   ADD.W           R0, R4, #0x28 ; '('
.text:000099D0 C0 F2 02 0A                   MOVT            R10, #2
.text:000099D4 01 90                         STR             R0, [SP,#0x30+var_2C]
.text:000099D4
.text:000099D6
.text:000099D6                               loc_99D6                      ; CODE XREF: read_on_thread+D6↓j
.text:000099D6 D9 F8 00 00                   LDR.W           R0, [R9]
.text:000099DA 4F F4 A0 77                   MOV.W           R7, #0x140
.text:000099DE D8 F8 00 20                   LDR.W           R2, [R8]
.text:000099E2 00 F5 A0 73                   ADD.W           R3, R0, #0x140
.text:000099E6 31 68                         LDR             R1, [R6]
.text:000099E8 53 45                         CMP             R3, R10
.text:000099EA C8 BF                         IT GT
.text:000099EC AA EB 00 07                   SUBGT.W         R7, R10, R0
.text:000099F0 3A 44                         ADD             R2, R7
.text:000099F2 8A 42                         CMP             R2, R1
.text:000099F4 0D DD                         BLE             loc_9A12
.text:000099F4
.text:000099F6 A0 68                         LDR             R0, [R4,#8]
.text:000099F8 20 BB                         CBNZ            R0, loc_9A44
.text:000099F8
.text:000099FA 18 49                         LDR             R1, =(aCvqstream - 0x9A04) ; "CVQStream"
.text:000099FC 03 20                         MOVS            R0, #3
.text:000099FE 18 4A                         LDR             R2, =(aReadOnThreadUa - 0x9A06) ; "#### read_on_thread: UART data read thr"...
.text:00009A00 79 44                         ADD             R1, PC        ; "CVQStream"
.text:00009A02 7A 44                         ADD             R2, PC        ; "#### read_on_thread: UART data read thr"...
.text:00009A04 F9 F7 E8 EA                   BLX             __android_log_print
.text:00009A04
.text:00009A08 4F F4 7A 70                   MOV.W           R0, #0x3E8    ; useconds
.text:00009A0C F9 F7 02 EB                   BLX             usleep
.text:00009A0C
.text:00009A10 14 E0                         B               loc_9A3C
.text:00009A10
.text:00009A12                               ; ---------------------------------------------------------------------------
.text:00009A12
.text:00009A12                               loc_9A12                      ; CODE XREF: read_on_thread+88↑j
.text:00009A12 02 99                         LDR             R1, [SP,#0x30+var_28]
.text:00009A14 3A 46                         MOV             R2, R7
.text:00009A16 0B 68                         LDR             R3, [R1]
.text:00009A18 01 99                         LDR             R1, [SP,#0x30+var_2C]
.text:00009A1A 01 44                         ADD             R1, R0
.text:00009A1C 20 46                         MOV             R0, R4
.text:00009A1E 98 47                         BLX             R3
.text:00009A1E
.text:00009A20 05 46                         MOV             R5, R0
.text:00009A22 01 2D                         CMP             R5, #1
.text:00009A24 A2 BF                         ITTT GE
.text:00009A26 D9 F8 00 00                   LDRGE.W         R0, [R9]
.text:00009A2A 28 44                         ADDGE           R0, R5
.text:00009A2C C9 F8 00 00                   STRGE.W         R0, [R9]
.text:00009A30 4F F4 7A 70                   MOV.W           R0, #0x3E8    ; useconds
.text:00009A34 F9 F7 EE EA                   BLX             usleep
.text:00009A34
.text:00009A38 BD 42                         CMP             R5, R7
.text:00009A3A 03 DB                         BLT             loc_9A44
.text:00009A3A
.text:00009A3C
.text:00009A3C                               loc_9A3C                      ; CODE XREF: read_on_thread+A4↑j
.text:00009A3C DB F8 00 00                   LDR.W           R0, [R11]
.text:00009A40 00 28                         CMP             R0, #0
.text:00009A42 C8 D0                         BEQ             loc_99D6
.text:00009A42
.text:00009A44
.text:00009A44                               loc_9A44                      ; CODE XREF: read_on_thread+34↑j
.text:00009A44                                                             ; read_on_thread+8C↑j
.text:00009A44                                                             ; read_on_thread+CE↑j
.text:00009A44 00 20                         MOVS            R0, #0
.text:00009A46 03 B0                         ADD             SP, SP, #0xC
.text:00009A48 BD E8 F0 8F                   POP.W           {R4-R11,PC}
.text:00009A48
.text:00009A48                               ; End of function read_on_thread
.text:00009A48
.text:00009A48                               ; ---------------------------------------------------------------------------
.text:00009A4C D9 44 00 00                   off_9A4C DCD aCvqstream - 0x997E
.text:00009A4C                                                             ; DATA XREF: read_on_thread+6↑r
.text:00009A4C                                                             ; "CVQStream"
.text:00009A50 DF 45 00 00                   off_9A50 DCD aReadonthreadCa - 0x9980
.text:00009A50                                                             ; DATA XREF: read_on_thread+A↑r
.text:00009A50                                                             ; "readonthread called"
.text:00009A54 D1 44 00 00                   off_9A54 DCD aAudioCvqS - 0x9990
.text:00009A54                                                             ; DATA XREF: read_on_thread+18↑r
.text:00009A54                                                             ; "audio cvq %s"
.text:00009A58 E1 45 00 00                   off_9A58 DCD aReadOnThread_0 - 0x9992
.text:00009A58                                                             ; DATA XREF: read_on_thread+1C↑r
.text:00009A58                                                             ; "read_on_thread"
.text:00009A5C 53 44 00 00                   off_9A5C DCD aCvqstream - 0x9A04
.text:00009A5C                                                             ; DATA XREF: read_on_thread+8E↑r
.text:00009A5C                                                             ; "CVQStream"
.text:00009A60 7C 45 00 00                   off_9A60 DCD aReadOnThreadUa - 0x9A06
.text:00009A60                                                             ; DATA XREF: read_on_thread+92↑r
.text:00009A60                                                             ; "#### read_on_thread: UART data read thr"...
.text:00009A64
.text:00009A64                               ; =============== S U B R O U T I N E =======================================
.text:00009A64
.text:00009A64
.text:00009A64                               ; int __fastcall read_on_raw_data_thread(pthread_t *)
.text:00009A64                               EXPORT read_on_raw_data_thread
.text:00009A64                               read_on_raw_data_thread       ; DATA XREF: LOAD:00000AE0↑o
.text:00009A64                                                             ; cvq_start+1A↓o
.text:00009A64                                                             ; .got:read_on_raw_data_thread_ptr↓o
.text:00009A64
.text:00009A64                               var_30= -0x30
.text:00009A64                               var_28= -0x28
.text:00009A64
.text:00009A64 2D E9 F0 4F                   PUSH.W          {R4-R11,LR}
.text:00009A68 83 B0                         SUB             SP, SP, #0xC
.text:00009A6A 33 49                         LDR             R1, =(aCvqstream - 0x9A76) ; "CVQStream"
.text:00009A6C 04 46                         MOV             R4, R0
.text:00009A6E 33 4A                         LDR             R2, =(aReadOnRawDataT_0 - 0x9A78) ; "#### read_on_raw_data_thread called ###"...
.text:00009A70 03 20                         MOVS            R0, #3
.text:00009A72 79 44                         ADD             R1, PC        ; "CVQStream"
.text:00009A74 7A 44                         ADD             R2, PC        ; "#### read_on_raw_data_thread called ###"...
.text:00009A76 F9 F7 B0 EA                   BLX             __android_log_print
.text:00009A76
.text:00009A7A 4E F2 28 20                   MOVW            R0, #0xE228
.text:00009A7E 00 21                         MOVS            R1, #0
.text:00009A80 C0 F2 04 00                   MOVT            R0, #4
.text:00009A84 47 F2 00 1A                   MOVW            R10, #0x7100
.text:00009A88 21 50                         STR             R1, [R4,R0]
.text:00009A8A 04 F5 9C 20                   ADD.W           R0, R4, #0x4E000
.text:00009A8E 00 F5 0E 76                   ADD.W           R6, R0, #0x238
.text:00009A92 04 F5 1C 30                   ADD.W           R0, R4, #0x27000
.text:00009A96 00 F5 94 70                   ADD.W           R0, R0, #0x128
.text:00009A9A C0 F2 02 0A                   MOVT            R10, #2
.text:00009A9E 02 90                         STR             R0, [SP,#0x30+var_28]
.text:00009AA0 04 F5 9C 20                   ADD.W           R0, R4, #0x4E000
.text:00009AA4 00 F5 12 78                   ADD.W           R8, R0, #0x248
.text:00009AA8 04 F5 9C 20                   ADD.W           R0, R4, #0x4E000
.text:00009AAC 00 F5 0B 79                   ADD.W           R9, R0, #0x22C
.text:00009AB0 4F F0 00 0B                   MOV.W           R11, #0
.text:00009AB0
.text:00009AB4
.text:00009AB4                               loc_9AB4                      ; CODE XREF: read_on_raw_data_thread+B0↓j
.text:00009AB4 D8 F8 00 00                   LDR.W           R0, [R8]
.text:00009AB8 68 BB                         CBNZ            R0, loc_9B16
.text:00009AB8
.text:00009ABA 31 68                         LDR             R1, [R6]
.text:00009ABC 4F F4 80 57                   MOV.W           R7, #0x1000
.text:00009AC0 D9 F8 00 00                   LDR.W           R0, [R9]
.text:00009AC4 01 22                         MOVS            R2, #1
.text:00009AC6 00 91                         STR             R1, [SP,#0x30+var_30]
.text:00009AC8 00 F5 80 51                   ADD.W           R1, R0, #0x1000
.text:00009ACC 51 45                         CMP             R1, R10
.text:00009ACE C8 BF                         IT GT
.text:00009AD0 AA EB 00 07                   SUBGT.W         R7, R10, R0
.text:00009AD4 02 99                         LDR             R1, [SP,#0x30+var_28]
.text:00009AD6 3B 46                         MOV             R3, R7
.text:00009AD8 01 44                         ADD             R1, R0
.text:00009ADA 20 46                         MOV             R0, R4
.text:00009ADC F9 F7 E0 EC                   BLX             j_uart_dev_read_wrapper
.text:00009ADC
.text:00009AE0 05 46                         MOV             R5, R0
.text:00009AE2 01 2D                         CMP             R5, #1
.text:00009AE4 17 DB                         BLT             loc_9B16
.text:00009AE4
.text:00009AE6 00 20                         MOVS            R0, #0
.text:00009AE8 BB F1 00 0F                   CMP.W           R11, #0
.text:00009AEC 20 61                         STR             R0, [R4,#0x10]
.text:00009AEE D9 F8 00 00                   LDR.W           R0, [R9]
.text:00009AF2 28 44                         ADD             R0, R5
.text:00009AF4 C9 F8 00 00                   STR.W           R0, [R9]
.text:00009AF8 0B D1                         BNE             loc_9B12
.text:00009AF8
.text:00009AFA 13 49                         LDR             R1, =(aCvqstream - 0x9B04) ; "CVQStream"
.text:00009AFC 03 20                         MOVS            R0, #3
.text:00009AFE 13 4A                         LDR             R2, =(aStartReadOnThr - 0x9B06) ; "#### Start read_on_thread for UART data"...
.text:00009B00 79 44                         ADD             R1, PC        ; "CVQStream"
.text:00009B02 7A 44                         ADD             R2, PC        ; "#### Start read_on_thread for UART data"...
.text:00009B04 F9 F7 68 EA                   BLX             __android_log_print
.text:00009B04
.text:00009B08 20 46                         MOV             R0, R4
.text:00009B0A F9 F7 D0 EC                   BLX             j_cvq_start_decode
.text:00009B0A
.text:00009B0E 4F F0 01 0B                   MOV.W           R11, #1
.text:00009B0E
.text:00009B12
.text:00009B12                               loc_9B12                      ; CODE XREF: read_on_raw_data_thread+94↑j
.text:00009B12 BD 42                         CMP             R5, R7
.text:00009B14 CE DA                         BGE             loc_9AB4
.text:00009B14
.text:00009B16
.text:00009B16                               loc_9B16                      ; CODE XREF: read_on_raw_data_thread+54↑j
.text:00009B16                                                             ; read_on_raw_data_thread+80↑j
.text:00009B16 30 68                         LDR             R0, [R6]      ; stream
.text:00009B18 50 B1                         CBZ             R0, loc_9B30
.text:00009B18
.text:00009B1A F9 F7 4C EA                   BLX             fclose
.text:00009B1A
.text:00009B1E 08 49                         LDR             R1, =(aCvqstream - 0x9B2A) ; "CVQStream"
.text:00009B20 00 20                         MOVS            R0, #0
.text:00009B22 08 4A                         LDR             R2, =(aUartClosed - 0x9B2C) ; "#### uart closed ####"
.text:00009B24 30 60                         STR             R0, [R6]
.text:00009B26 79 44                         ADD             R1, PC        ; "CVQStream"
.text:00009B28 7A 44                         ADD             R2, PC        ; "#### uart closed ####"
.text:00009B2A 03 20                         MOVS            R0, #3
.text:00009B2C F9 F7 54 EA                   BLX             __android_log_print
.text:00009B2C
.text:00009B30
.text:00009B30                               loc_9B30                      ; CODE XREF: read_on_raw_data_thread+B4↑j
.text:00009B30 00 20                         MOVS            R0, #0
.text:00009B32 03 B0                         ADD             SP, SP, #0xC
.text:00009B34 BD E8 F0 8F                   POP.W           {R4-R11,PC}
.text:00009B34
.text:00009B34                               ; End of function read_on_raw_data_thread
.text:00009B34
.text:00009B34                               ; ---------------------------------------------------------------------------
.text:00009B38 E1 43 00 00                   off_9B38 DCD aCvqstream - 0x9A76
.text:00009B38                                                             ; DATA XREF: read_on_raw_data_thread+6↑r
.text:00009B38                                                             ; "CVQStream"
.text:00009B3C 65 45 00 00                   off_9B3C DCD aReadOnRawDataT_0 - 0x9A78
.text:00009B3C                                                             ; DATA XREF: read_on_raw_data_thread+A↑r
.text:00009B3C                                                             ; "#### read_on_raw_data_thread called ###"...
.text:00009B40 2D 43 00 00                   off_9B40 DCD aCvqstream - 0x9B2A
.text:00009B40                                                             ; DATA XREF: read_on_raw_data_thread+BA↑r
.text:00009B40                                                             ; "CVQStream"
.text:00009B44 1C 45 00 00                   off_9B44 DCD aUartClosed - 0x9B2C
.text:00009B44                                                             ; DATA XREF: read_on_raw_data_thread+BE↑r
.text:00009B44                                                             ; "#### uart closed ####"
.text:00009B48 53 43 00 00                   off_9B48 DCD aCvqstream - 0x9B04
.text:00009B48                                                             ; DATA XREF: read_on_raw_data_thread+96↑r
.text:00009B48                                                             ; "CVQStream"
.text:00009B4C 00 45 00 00                   off_9B4C DCD aStartReadOnThr - 0x9B06
.text:00009B4C                                                             ; DATA XREF: read_on_raw_data_thread+9A↑r
.text:00009B4C                               ; } // starts at 996C         ; "#### Start read_on_thread for UART data"...
.text:00009B50
.text:00009B50                               ; =============== S U B R O U T I N E =======================================
.text:00009B50
.text:00009B50
.text:00009B50                               ; int __fastcall uart_dev_read_wrapper(int, int, int, int, int)
.text:00009B50                               EXPORT uart_dev_read_wrapper
.text:00009B50                               uart_dev_read_wrapper         ; CODE XREF: j_uart_dev_read_wrapper+8↑j
.text:00009B50                                                             ; DATA XREF: LOAD:00000DD0↑o
.text:00009B50                                                             ; .got:uart_dev_read_wrapper_ptr↓o
.text:00009B50
.text:00009B50                               var_20= -0x20
.text:00009B50                               arg_0=  0
.text:00009B50
.text:00009B50                               ; __unwind {
.text:00009B50 2D E9 F0 41                   PUSH.W          {R4-R8,LR}
.text:00009B54 82 B0                         SUB             SP, SP, #8
.text:00009B56 0E 46                         MOV             R6, R1
.text:00009B58 4E F2 48 21 C0 F2 04 01       MOV             R1, #0x4E248
.text:00009B60 1C 46                         MOV             R4, R3
.text:00009B62 43 58                         LDR             R3, [R0,R1]
.text:00009B64 15 46                         MOV             R5, R2
.text:00009B66 4B B1                         CBZ             R3, loc_9B7C
.text:00009B66
.text:00009B68 15 49                         LDR             R1, =(aCvqstream - 0x9B72) ; "CVQStream"
.text:00009B6A 06 20                         MOVS            R0, #6
.text:00009B6C 15 4A                         LDR             R2, =(aCvqstreamExitD - 0x9B74) ; "#### cvqStream->exit = %d, skipping UAR"...
.text:00009B6E 79 44                         ADD             R1, PC        ; "CVQStream"
.text:00009B70 7A 44                         ADD             R2, PC        ; "#### cvqStream->exit = %d, skipping UAR"...
.text:00009B72 F9 F7 32 EA                   BLX             __android_log_print
.text:00009B72
.text:00009B76 4F F0 FF 36                   MOV.W           R6, #0xFFFFFFFF
.text:00009B7A 1C E0                         B               loc_9BB6
.text:00009B7A
.text:00009B7C                               ; ---------------------------------------------------------------------------
.text:00009B7C
.text:00009B7C                               loc_9B7C                      ; CODE XREF: uart_dev_read_wrapper+16↑j
.text:00009B7C 12 4F                         LDR             R7, =(aCvqstream - 0x9B86) ; "CVQStream"
.text:00009B7E 03 20                         MOVS            R0, #3
.text:00009B80 12 4A                         LDR             R2, =(aBeforeUartRead - 0x9B8C) ; "#### Before UART read ####"
.text:00009B82 7F 44                         ADD             R7, PC        ; "CVQStream"
.text:00009B84 DD F8 20 80                   LDR.W           R8, [SP,#0x20+arg_0]
.text:00009B88 7A 44                         ADD             R2, PC        ; "#### Before UART read ####"
.text:00009B8A 39 46                         MOV             R1, R7
.text:00009B8C F9 F7 24 EA                   BLX             __android_log_print
.text:00009B8C
.text:00009B90 4F F0 FF 30                   MOV.W           R0, #0xFFFFFFFF
.text:00009B94 29 46                         MOV             R1, R5
.text:00009B96 00 90                         STR             R0, [SP,#0x20+var_20]
.text:00009B98 30 46                         MOV             R0, R6
.text:00009B9A 22 46                         MOV             R2, R4
.text:00009B9C 43 46                         MOV             R3, R8
.text:00009B9E F9 F7 94 EA                   BLX             __fread_chk
.text:00009B9E
.text:00009BA2 04 FB 05 F3                   MUL.W           R3, R4, R5
.text:00009BA6 0A 4A                         LDR             R2, =(aAfterUartReadR - 0x9BAE) ; "#### After  UART read (req, actual) = ("...
.text:00009BA8 06 46                         MOV             R6, R0
.text:00009BAA 7A 44                         ADD             R2, PC        ; "#### After  UART read (req, actual) = ("...
.text:00009BAC 03 20                         MOVS            R0, #3
.text:00009BAE 39 46                         MOV             R1, R7
.text:00009BB0 00 96                         STR             R6, [SP,#0x20+var_20]
.text:00009BB2 F9 F7 12 EA                   BLX             __android_log_print
.text:00009BB2
.text:00009BB6
.text:00009BB6                               loc_9BB6                      ; CODE XREF: uart_dev_read_wrapper+2A↑j
.text:00009BB6 30 46                         MOV             R0, R6
.text:00009BB8 02 B0                         ADD             SP, SP, #8
.text:00009BBA BD E8 F0 81                   POP.W           {R4-R8,PC}
.text:00009BBA
.text:00009BBA                               ; End of function uart_dev_read_wrapper
.text:00009BBA
.text:00009BBA                               ; ---------------------------------------------------------------------------
.text:00009BBE 00 BF                         ALIGN 0x10
.text:00009BC0 E5 42 00 00                   off_9BC0 DCD aCvqstream - 0x9B72
.text:00009BC0                                                             ; DATA XREF: uart_dev_read_wrapper+18↑r
.text:00009BC0                                                             ; "CVQStream"
.text:00009BC4 11 46 00 00                   off_9BC4 DCD aCvqstreamExitD - 0x9B74
.text:00009BC4                                                             ; DATA XREF: uart_dev_read_wrapper+1C↑r
.text:00009BC4                                                             ; "#### cvqStream->exit = %d, skipping UAR"...
.text:00009BC8 D1 42 00 00                   off_9BC8 DCD aCvqstream - 0x9B86
.text:00009BC8                                                             ; DATA XREF: uart_dev_read_wrapper:loc_9B7C↑r
.text:00009BC8                                                             ; "CVQStream"
.text:00009BCC AA 45 00 00                   off_9BCC DCD aBeforeUartRead - 0x9B8C
.text:00009BCC                                                             ; DATA XREF: uart_dev_read_wrapper+30↑r
.text:00009BCC                                                             ; "#### Before UART read ####"
.text:00009BD0 A3 45 00 00                   off_9BD0 DCD aAfterUartReadR - 0x9BAE
.text:00009BD0                                                             ; DATA XREF: uart_dev_read_wrapper+56↑r
.text:00009BD0                               ; } // starts at 9B50         ; "#### After  UART read (req, actual) = ("...
.text:00009BD4
.text:00009BD4                               ; =============== S U B R O U T I N E =======================================
.text:00009BD4
.text:00009BD4
.text:00009BD4                               ; int __fastcall cvq_start_decode(pthread_t *)
.text:00009BD4                               EXPORT cvq_start_decode
.text:00009BD4                               cvq_start_decode              ; CODE XREF: j_cvq_start_decode+8↑j
.text:00009BD4                                                             ; DATA XREF: LOAD:00000DB0↑o
.text:00009BD4                                                             ; .got:cvq_start_decode_ptr↓o
.text:00009BD4                               ; __unwind {
.text:00009BD4 10 B5                         PUSH            {R4,LR}
.text:00009BD6 0E 49                         LDR             R1, =(aCvqstream - 0x9BE2) ; "CVQStream"
.text:00009BD8 04 46                         MOV             R4, R0
.text:00009BDA 0E 4A                         LDR             R2, =(aStartCvqUartPa - 0x9BE4) ; "#### Start CVQ UART packet and/or data "...
.text:00009BDC 03 20                         MOVS            R0, #3
.text:00009BDE 79 44                         ADD             R1, PC        ; "CVQStream"
.text:00009BE0 7A 44                         ADD             R2, PC        ; "#### Start CVQ UART packet and/or data "...
.text:00009BE2 F9 F7 FA E9                   BLX             __android_log_print
.text:00009BE2
.text:00009BE6 0C 48                         LDR             R0, =(read_on_thread_ptr - 0x9BF0)
.text:00009BE8 00 21                         MOVS            R1, #0        ; attr
.text:00009BEA 23 46                         MOV             R3, R4        ; arg
.text:00009BEC 78 44                         ADD             R0, PC        ; read_on_thread_ptr
.text:00009BEE 02 68                         LDR             R2, [R0]      ; read_on_thread ; start_routine
.text:00009BF0 04 F1 20 00                   ADD.W           R0, R4, #0x20 ; ' ' ; newthread
.text:00009BF4 F9 F7 82 EB                   BLX             pthread_create
.text:00009BF4
.text:00009BF8 B0 F1 FF 3F                   CMP.W           R0, #0xFFFFFFFF
.text:00009BFC C8 BF                         IT GT
.text:00009BFE 10 BD                         POPGT           {R4,PC}
.text:00009BFE
.text:00009C00 06 49                         LDR             R1, =(aCvqstream - 0x9C0A) ; "CVQStream"
.text:00009C02 06 20                         MOVS            R0, #6
.text:00009C04 06 4A                         LDR             R2, =(aReadOnThreadTh - 0x9C0C) ; "#### read_on_thread() thread creation f"...
.text:00009C06 79 44                         ADD             R1, PC        ; "CVQStream"
.text:00009C08 7A 44                         ADD             R2, PC        ; "#### read_on_thread() thread creation f"...
.text:00009C0A F9 F7 E6 E9                   BLX             __android_log_print
.text:00009C0A
.text:00009C0E 10 BD                         POP             {R4,PC}
.text:00009C0E
.text:00009C0E                               ; End of function cvq_start_decode
.text:00009C0E
.text:00009C0E                               ; ---------------------------------------------------------------------------
.text:00009C10 75 42 00 00                   off_9C10 DCD aCvqstream - 0x9BE2
.text:00009C10                                                             ; DATA XREF: cvq_start_decode+2↑r
.text:00009C10                                                             ; "CVQStream"
.text:00009C14 7A 44 00 00                   off_9C14 DCD aStartCvqUartPa - 0x9BE4
.text:00009C14                                                             ; DATA XREF: cvq_start_decode+6↑r
.text:00009C14                                                             ; "#### Start CVQ UART packet and/or data "...
.text:00009C18 F0 71 00 00                   off_9C18 DCD read_on_thread_ptr - 0x9BF0
.text:00009C18                                                             ; DATA XREF: cvq_start_decode+12↑r
.text:00009C1C 4D 42 00 00                   off_9C1C DCD aCvqstream - 0x9C0A
.text:00009C1C                                                             ; DATA XREF: cvq_start_decode+2C↑r
.text:00009C1C                                                             ; "CVQStream"
.text:00009C20 96 44 00 00                   off_9C20 DCD aReadOnThreadTh - 0x9C0C
.text:00009C20                                                             ; DATA XREF: cvq_start_decode+30↑r
.text:00009C20                                                             ; "#### read_on_thread() thread creation f"...
.text:00009C24
.text:00009C24                               ; =============== S U B R O U T I N E =======================================
.text:00009C24
.text:00009C24
.text:00009C24                               ; int __fastcall cvq_start(pthread_t *)
.text:00009C24                               EXPORT cvq_start
.text:00009C24                               cvq_start                     ; DATA XREF: LOAD:000009E0↑o
.text:00009C24                                                             ; cvq_init+26↓o
.text:00009C24                                                             ; .got:cvq_start_ptr↓o
.text:00009C24 10 B5                         PUSH            {R4,LR}
.text:00009C26 0E 49                         LDR             R1, =(aCvqstream - 0x9C32) ; "CVQStream"
.text:00009C28 04 46                         MOV             R4, R0
.text:00009C2A 0E 4A                         LDR             R2, =(aStartCvqReadTh - 0x9C34) ; "#### start CVQ read thread called ####"
.text:00009C2C 03 20                         MOVS            R0, #3
.text:00009C2E 79 44                         ADD             R1, PC        ; "CVQStream"
.text:00009C30 7A 44                         ADD             R2, PC        ; "#### start CVQ read thread called ####"
.text:00009C32 F9 F7 D2 E9                   BLX             __android_log_print
.text:00009C32
.text:00009C36 0C 48                         LDR             R0, =(read_on_raw_data_thread_ptr - 0x9C40)
.text:00009C38 00 21                         MOVS            R1, #0        ; attr
.text:00009C3A 23 46                         MOV             R3, R4        ; arg
.text:00009C3C 78 44                         ADD             R0, PC        ; read_on_raw_data_thread_ptr
.text:00009C3E 02 68                         LDR             R2, [R0]      ; read_on_raw_data_thread ; start_routine
.text:00009C40 04 F1 14 00                   ADD.W           R0, R4, #0x14 ; newthread
.text:00009C44 F9 F7 5A EB                   BLX             pthread_create
.text:00009C44
.text:00009C48 B0 F1 FF 3F                   CMP.W           R0, #0xFFFFFFFF
.text:00009C4C C8 BF                         IT GT
.text:00009C4E 10 BD                         POPGT           {R4,PC}
.text:00009C4E
.text:00009C50 06 49                         LDR             R1, =(aCvqstream - 0x9C5A) ; "CVQStream"
.text:00009C52 06 20                         MOVS            R0, #6
.text:00009C54 06 4A                         LDR             R2, =(aReadOnRawDataT_1 - 0x9C5C) ; "#### read_on_raw_data_thread() thread c"...
.text:00009C56 79 44                         ADD             R1, PC        ; "CVQStream"
.text:00009C58 7A 44                         ADD             R2, PC        ; "#### read_on_raw_data_thread() thread c"...
.text:00009C5A F9 F7 BE E9                   BLX             __android_log_print
.text:00009C5A
.text:00009C5E 10 BD                         POP             {R4,PC}
.text:00009C5E
.text:00009C5E                               ; End of function cvq_start
.text:00009C5E
.text:00009C5E                               ; ---------------------------------------------------------------------------
.text:00009C60 25 42 00 00                   off_9C60 DCD aCvqstream - 0x9C32
.text:00009C60                                                             ; DATA XREF: cvq_start+2↑r
.text:00009C60                                                             ; "CVQStream"
.text:00009C64 A0 44 00 00                   off_9C64 DCD aStartCvqReadTh - 0x9C34
.text:00009C64                                                             ; DATA XREF: cvq_start+6↑r
.text:00009C64                                                             ; "#### start CVQ read thread called ####"
.text:00009C68 A4 71 00 00                   off_9C68 DCD read_on_raw_data_thread_ptr - 0x9C40
.text:00009C68                                                             ; DATA XREF: cvq_start+12↑r
.text:00009C6C FD 41 00 00                   off_9C6C DCD aCvqstream - 0x9C5A
.text:00009C6C                                                             ; DATA XREF: cvq_start+2C↑r
.text:00009C6C                                                             ; "CVQStream"
.text:00009C70 9F 44 00 00                   off_9C70 DCD aReadOnRawDataT_1 - 0x9C5C
.text:00009C70                                                             ; DATA XREF: cvq_start+30↑r
.text:00009C70                               ; } // starts at 9BD4         ; "#### read_on_raw_data_thread() thread c"...
.text:00009C74
.text:00009C74                               ; =============== S U B R O U T I N E =======================================
.text:00009C74
.text:00009C74
.text:00009C74                               ; int __fastcall uart_read_wrapper(_DWORD *, char *, size_t)
.text:00009C74                               EXPORT uart_read_wrapper
.text:00009C74                               uart_read_wrapper             ; CODE XREF: j_uart_read_wrapper+8↑j
.text:00009C74                                                             ; DATA XREF: LOAD:00000B60↑o
.text:00009C74                                                             ; .got:uart_read_wrapper_ptr↓o
.text:00009C74                               ; __unwind {
.text:00009C74 F0 B5                         PUSH            {R4-R7,LR}
.text:00009C76 81 B0                         SUB             SP, SP, #4
.text:00009C78 05 46                         MOV             R5, R0
.text:00009C7A 4E F2 48 20 C0 F2 04 00       MOV             R0, #0x4E248
.text:00009C82 14 46                         MOV             R4, R2
.text:00009C84 2B 58                         LDR             R3, [R5,R0]
.text:00009C86 0E 46                         MOV             R6, R1
.text:00009C88 4B B1                         CBZ             R3, loc_9C9E
.text:00009C88
.text:00009C8A 19 49                         LDR             R1, =(aCvqstream - 0x9C94) ; "CVQStream"
.text:00009C8C 06 20                         MOVS            R0, #6
.text:00009C8E 19 4A                         LDR             R2, =(aCvqstreamExitD_0 - 0x9C96) ; "#### cvqStream->exit = %d, skipping UAR"...
.text:00009C90 79 44                         ADD             R1, PC        ; "CVQStream"
.text:00009C92 7A 44                         ADD             R2, PC        ; "#### cvqStream->exit = %d, skipping UAR"...
.text:00009C94 F9 F7 A0 E9                   BLX             __android_log_print
.text:00009C94
.text:00009C98
.text:00009C98                               loc_9C98                      ; CODE XREF: uart_read_wrapper+58↓j
.text:00009C98 4F F0 FF 34                   MOV.W           R4, #0xFFFFFFFF
.text:00009C9C 24 E0                         B               loc_9CE8
.text:00009C9C
.text:00009C9E                               ; ---------------------------------------------------------------------------
.text:00009C9E
.text:00009C9E                               loc_9C9E                      ; CODE XREF: uart_read_wrapper+14↑j
.text:00009C9E 4E F2 28 27                   MOVW            R7, #0xE228
.text:00009CA2 4E F2 2C 21                   MOVW            R1, #0xE22C
.text:00009CA6 C0 F2 04 07                   MOVT            R7, #4
.text:00009CAA C0 F2 04 01                   MOVT            R1, #4
.text:00009CAE E8 59                         LDR             R0, [R5,R7]
.text:00009CB0 69 58                         LDR             R1, [R5,R1]
.text:00009CB2 02 19                         ADDS            R2, R0, R4
.text:00009CB4 8A 42                         CMP             R2, R1
.text:00009CB6 0F D2                         BCS             loc_9CD8
.text:00009CB6
.text:00009CB8 28 44                         ADD             R0, R5
.text:00009CBA 22 46                         MOV             R2, R4
.text:00009CBC 00 F5 1C 30                   ADD.W           R0, R0, #0x27000
.text:00009CC0 00 F5 94 71                   ADD.W           R1, R0, #0x128
.text:00009CC4 30 46                         MOV             R0, R6
.text:00009CC6 F9 F7 68 EB                   BLX             __aeabi_memcpy
.text:00009CC6
.text:00009CCA 00 2E                         CMP             R6, #0
.text:00009CCC E4 D0                         BEQ             loc_9C98
.text:00009CCC
.text:00009CCE E8 19                         ADDS            R0, R5, R7
.text:00009CD0 01 68                         LDR             R1, [R0]
.text:00009CD2 21 44                         ADD             R1, R4
.text:00009CD4 01 60                         STR             R1, [R0]
.text:00009CD6 07 E0                         B               loc_9CE8
.text:00009CD6
.text:00009CD8                               ; ---------------------------------------------------------------------------
.text:00009CD8
.text:00009CD8                               loc_9CD8                      ; CODE XREF: uart_read_wrapper+42↑j
.text:00009CD8 07 49                         LDR             R1, =(aCvqstream - 0x9CE2) ; "CVQStream"
.text:00009CDA 03 20                         MOVS            R0, #3
.text:00009CDC 07 4A                         LDR             R2, =(aSkippingUartDa - 0x9CE4) ; "#### skipping UART data decoding as UAR"...
.text:00009CDE 79 44                         ADD             R1, PC        ; "CVQStream"
.text:00009CE0 7A 44                         ADD             R2, PC        ; "#### skipping UART data decoding as UAR"...
.text:00009CE2 F9 F7 7A E9                   BLX             __android_log_print
.text:00009CE2
.text:00009CE6 00 24                         MOVS            R4, #0
.text:00009CE6
.text:00009CE8
.text:00009CE8                               loc_9CE8                      ; CODE XREF: uart_read_wrapper+28↑j
.text:00009CE8                                                             ; uart_read_wrapper+62↑j
.text:00009CE8 20 46                         MOV             R0, R4
.text:00009CEA 01 B0                         ADD             SP, SP, #4
.text:00009CEC F0 BD                         POP             {R4-R7,PC}
.text:00009CEC
.text:00009CEC                               ; End of function uart_read_wrapper
.text:00009CEC
.text:00009CEC                               ; ---------------------------------------------------------------------------
.text:00009CEE 00 BF                         ALIGN 0x10
.text:00009CF0 C3 41 00 00                   off_9CF0 DCD aCvqstream - 0x9C94
.text:00009CF0                                                             ; DATA XREF: uart_read_wrapper+16↑r
.text:00009CF0                                                             ; "CVQStream"
.text:00009CF4 6F 45 00 00                   off_9CF4 DCD aCvqstreamExitD_0 - 0x9C96
.text:00009CF4                                                             ; DATA XREF: uart_read_wrapper+1A↑r
.text:00009CF4                                                             ; "#### cvqStream->exit = %d, skipping UAR"...
.text:00009CF8 75 41 00 00                   off_9CF8 DCD aCvqstream - 0x9CE2
.text:00009CF8                                                             ; DATA XREF: uart_read_wrapper:loc_9CD8↑r
.text:00009CF8                                                             ; "CVQStream"
.text:00009CFC D8 44 00 00                   off_9CFC DCD aSkippingUartDa - 0x9CE4
.text:00009CFC                                                             ; DATA XREF: uart_read_wrapper+68↑r
.text:00009CFC                               ; } // starts at 9C74         ; "#### skipping UART data decoding as UAR"...
.text:00009D00
.text:00009D00                               ; =============== S U B R O U T I N E =======================================
.text:00009D00
.text:00009D00
.text:00009D00                               ; int __fastcall pcm_read_uart_char_dev(_DWORD *, _WORD *, int)
.text:00009D00                               EXPORT pcm_read_uart_char_dev
.text:00009D00                               pcm_read_uart_char_dev        ; DATA XREF: LOAD:00000B80↑o
.text:00009D00                                                             ; cvq_init+50↓o
.text:00009D00                                                             ; .got:pcm_read_uart_char_dev_ptr↓o
.text:00009D00
.text:00009D00                               var_44= -0x44
.text:00009D00                               var_38= -0x38
.text:00009D00                               var_34= -0x34
.text:00009D00                               var_30= -0x30
.text:00009D00                               var_2F= -0x2F
.text:00009D00                               var_2E= -0x2E
.text:00009D00                               var_2D= -0x2D
.text:00009D00                               var_2B= -0x2B
.text:00009D00                               var_2A= -0x2A
.text:00009D00                               var_29= -0x29
.text:00009D00                               var_28= -0x28
.text:00009D00
.text:00009D00                               ; __unwind {
.text:00009D00 2D E9 F0 4F                   PUSH.W          {R4-R11,LR}
.text:00009D04 8B B0                         SUB             SP, SP, #0x2C
.text:00009D06 06 46                         MOV             R6, R0
.text:00009D08 7F 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x9D12)
.text:00009D0A 0C 46                         MOV             R4, R1
.text:00009D0C 01 2A                         CMP             R2, #1
.text:00009D0E 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00009D10 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00009D12 00 68                         LDR             R0, [R0]
.text:00009D14 0A 90                         STR             R0, [SP,#0x50+var_28]
.text:00009D16 02 EB D2 70                   ADD.W           R0, R2, R2,LSR#31
.text:00009D1A 4F EA 60 0A                   MOV.W           R10, R0,ASR#1
.text:00009D1E 40 F3 C3 80                   BLE.W           loc_9EA8
.text:00009D1E
.text:00009D22 04 EB 60 07                   ADD.W           R7, R4, R0,ASR#1
.text:00009D26 06 F5 9C 20                   ADD.W           R0, R6, #0x4E000
.text:00009D2A 00 F5 11 78                   ADD.W           R8, R0, #0x244
.text:00009D2E 06 F5 9C 20                   ADD.W           R0, R6, #0x4E000
.text:00009D32 00 25                         MOVS            R5, #0
.text:00009D34 00 F5 12 79                   ADD.W           R9, R0, #0x248
.text:00009D38 06 F1 0C 00                   ADD.W           R0, R6, #0xC
.text:00009D3C 07 90                         STR             R0, [SP,#0x50+var_34]
.text:00009D3E 0D F1 26 00                   ADD.W           R0, SP, #0x50+var_2A
.text:00009D42 01 30                         ADDS            R0, #1
.text:00009D44 06 90                         STR             R0, [SP,#0x50+var_38]
.text:00009D44
.text:00009D46
.text:00009D46                               loc_9D46                      ; CODE XREF: pcm_read_uart_char_dev+1A0↓j
.text:00009D46 D9 F8 00 00                   LDR.W           R0, [R9]
.text:00009D4A AA EB 05 0B                   SUB.W           R11, R10, R5
.text:00009D4E 01 E0                         B               loc_9D54
.text:00009D4E
.text:00009D50                               ; ---------------------------------------------------------------------------
.text:00009D50
.text:00009D50                               loc_9D50                      ; CODE XREF: pcm_read_uart_char_dev+6E↓j
.text:00009D50                                                             ; pcm_read_uart_char_dev+80↓j
.text:00009D50 D9 F8 00 00                   LDR.W           R0, [R9]
.text:00009D50
.text:00009D54
.text:00009D54                               loc_9D54                      ; CODE XREF: pcm_read_uart_char_dev+4E↑j
.text:00009D54 00 28                         CMP             R0, #0
.text:00009D56 40 F0 A5 80                   BNE.W           loc_9EA4
.text:00009D56
.text:00009D5A D8 F8 00 20                   LDR.W           R2, [R8]
.text:00009D5E 5A 45                         CMP             R2, R11
.text:00009D60 07 DD                         BLE             loc_9D72
.text:00009D60
.text:00009D62 30 46                         MOV             R0, R6
.text:00009D64 39 46                         MOV             R1, R7
.text:00009D66 5A 46                         MOV             R2, R11
.text:00009D68 F9 F7 A6 EB                   BLX             j_uart_read_wrapper
.text:00009D68
.text:00009D6C 00 28                         CMP             R0, #0
.text:00009D6E EF D0                         BEQ             loc_9D50
.text:00009D6E
.text:00009D70 72 E0                         B               loc_9E58
.text:00009D70
.text:00009D72                               ; ---------------------------------------------------------------------------
.text:00009D72
.text:00009D72                               loc_9D72                      ; CODE XREF: pcm_read_uart_char_dev+60↑j
.text:00009D72 01 2A                         CMP             R2, #1
.text:00009D74 10 DB                         BLT             loc_9D98
.text:00009D74
.text:00009D76 30 46                         MOV             R0, R6
.text:00009D78 39 46                         MOV             R1, R7
.text:00009D7A F9 F7 9E EB                   BLX             j_uart_read_wrapper
.text:00009D7A
.text:00009D7E 00 28                         CMP             R0, #0
.text:00009D80 E6 D0                         BEQ             loc_9D50
.text:00009D80
.text:00009D82 B0 F1 FF 3F                   CMP.W           R0, #0xFFFFFFFF
.text:00009D86 00 F0 8D 80                   BEQ.W           loc_9EA4
.text:00009D86
.text:00009D8A D8 F8 00 00                   LDR.W           R0, [R8]
.text:00009D8E 00 21                         MOVS            R1, #0
.text:00009D90 C8 F8 00 10                   STR.W           R1, [R8]
.text:00009D94 05 44                         ADD             R5, R0
.text:00009D96 07 44                         ADD             R7, R0
.text:00009D96
.text:00009D98
.text:00009D98                               loc_9D98                      ; CODE XREF: pcm_read_uart_char_dev+74↑j
.text:00009D98 B0 68                         LDR             R0, [R6,#8]
.text:00009D9A 00 28                         CMP             R0, #0
.text:00009D9C 40 F0 82 80                   BNE.W           loc_9EA4
.text:00009D9C
.text:00009DA0 30 46                         MOV             R0, R6
.text:00009DA2 0D F1 26 01                   ADD.W           R1, SP, #0x50+var_2A
.text:00009DA6 02 22                         MOVS            R2, #2
.text:00009DA8 F9 F7 86 EB                   BLX             j_uart_read_wrapper
.text:00009DA8
.text:00009DAC 00 28                         CMP             R0, #0
.text:00009DAE 76 D0                         BEQ             loc_9E9E
.text:00009DAE
.text:00009DB0 B0 F1 FF 3F                   CMP.W           R0, #0xFFFFFFFF
.text:00009DB4 76 D0                         BEQ             loc_9EA4
.text:00009DB4
.text:00009DB6
.text:00009DB6                               loc_9DB6                      ; CODE XREF: pcm_read_uart_char_dev+F0↓j
.text:00009DB6 9D F8 26 10                   LDRB.W          R1, [SP,#0x50+var_2A]
.text:00009DBA 9D F8 27 00                   LDRB.W          R0, [SP,#0x50+var_29]
.text:00009DBE 12 29                         CMP             R1, #0x12
.text:00009DC0 08 BF                         IT EQ
.text:00009DC2 34 28                         CMPEQ           R0, #0x34 ; '4'
.text:00009DC4 15 D0                         BEQ             loc_9DF2
.text:00009DC4
.text:00009DC6 D9 F8 00 10                   LDR.W           R1, [R9]
.text:00009DCA 91 B9                         CBNZ            R1, loc_9DF2
.text:00009DCA
.text:00009DCC C0 B2                         UXTB            R0, R0
.text:00009DCE 12 28                         CMP             R0, #0x12
.text:00009DD0 06 D1                         BNE             loc_9DE0
.text:00009DD0
.text:00009DD2 06 99                         LDR             R1, [SP,#0x50+var_38]
.text:00009DD4 12 20                         MOVS            R0, #0x12
.text:00009DD6 8D F8 26 00                   STRB.W          R0, [SP,#0x50+var_2A]
.text:00009DDA 30 46                         MOV             R0, R6
.text:00009DDC 01 22                         MOVS            R2, #1
.text:00009DDE 03 E0                         B               loc_9DE8
.text:00009DDE
.text:00009DE0                               ; ---------------------------------------------------------------------------
.text:00009DE0
.text:00009DE0                               loc_9DE0                      ; CODE XREF: pcm_read_uart_char_dev+D0↑j
.text:00009DE0 30 46                         MOV             R0, R6
.text:00009DE2 0D F1 26 01                   ADD.W           R1, SP, #0x50+var_2A
.text:00009DE6 02 22                         MOVS            R2, #2
.text:00009DE6
.text:00009DE8
.text:00009DE8                               loc_9DE8                      ; CODE XREF: pcm_read_uart_char_dev+DE↑j
.text:00009DE8 F9 F7 66 EB                   BLX             j_uart_read_wrapper
.text:00009DE8
.text:00009DEC B0 F1 FF 3F                   CMP.W           R0, #0xFFFFFFFF
.text:00009DF0 E1 D1                         BNE             loc_9DB6
.text:00009DF0
.text:00009DF2
.text:00009DF2                               loc_9DF2                      ; CODE XREF: pcm_read_uart_char_dev+C4↑j
.text:00009DF2                                                             ; pcm_read_uart_char_dev+CA↑j
.text:00009DF2 30 46                         MOV             R0, R6
.text:00009DF4 08 A9                         ADD             R1, SP, #0x50+var_30
.text:00009DF6 06 22                         MOVS            R2, #6
.text:00009DF8 F9 F7 5E EB                   BLX             j_uart_read_wrapper
.text:00009DF8
.text:00009DFC 00 28                         CMP             R0, #0
.text:00009DFE 4E D0                         BEQ             loc_9E9E
.text:00009DFE
.text:00009E00 B0 F1 FF 3F                   CMP.W           R0, #0xFFFFFFFF
.text:00009E04 4E D0                         BEQ             loc_9EA4
.text:00009E04
.text:00009E06 9D F8 25 C0                   LDRB.W          R12, [SP,#0x50+var_2B]
.text:00009E0A 9D F8 20 E0                   LDRB.W          LR, [SP,#0x50+var_30]
.text:00009E0E 9D F8 21 20                   LDRB.W          R2, [SP,#0x50+var_2F]
.text:00009E12 1C F0 40 03                   ANDS.W          R3, R12, #0x40
.text:00009E16 0C F0 80 0B                   AND.W           R11, R12, #0x80
.text:00009E1A 4F EA 93 13                   MOV.W           R3, R3,LSR#6
.text:00009E1E 9D F8 22 10                   LDRB.W          R1, [SP,#0x50+var_2E]
.text:00009E22 9D F8 23 00                   LDRB.W          R0, [SP,#0x50+var_2D]
.text:00009E26 C6 E9 02 B3                   STRD.W          R11, R3, [R6,#8]
.text:00009E2A 5F D0                         BEQ             loc_9EEC
.text:00009E2A
.text:00009E2C 00 06                         LSLS            R0, R0, #0x18
.text:00009E2E 41 EA 20 41                   ORR.W           R1, R1, R0,ASR#16
.text:00009E32 4F F4 70 60                   MOV.W           R0, #0xF00
.text:00009E36 00 EA 02 10                   AND.W           R0, R0, R2,LSL#4
.text:00009E3A B1 F5 A0 7F                   CMP.W           R1, #0x140
.text:00009E3E 4E EA 00 0E                   ORR.W           LR, LR, R0
.text:00009E42 02 F0 0F 00                   AND.W           R0, R2, #0xF
.text:00009E46 13 DB                         BLT             loc_9E70
.text:00009E46
.text:00009E48 1B D0                         BEQ             loc_9E82
.text:00009E48
.text:00009E4A B1 F5 20 7F                   CMP.W           R1, #0x280
.text:00009E4E 18 BF                         IT NE
.text:00009E50 B1 F5 A0 6F                   CMPNE.W         R1, #0x500
.text:00009E54 15 D0                         BEQ             loc_9E82
.text:00009E54
.text:00009E56 0F E0                         B               loc_9E78
.text:00009E56
.text:00009E58                               ; ---------------------------------------------------------------------------
.text:00009E58
.text:00009E58                               loc_9E58                      ; CODE XREF: pcm_read_uart_char_dev+70↑j
.text:00009E58 B0 F1 FF 3F                   CMP.W           R0, #0xFFFFFFFF
.text:00009E5C 22 D0                         BEQ             loc_9EA4
.text:00009E5C
.text:00009E5E D8 F8 00 00                   LDR.W           R0, [R8]
.text:00009E62 5F 44                         ADD             R7, R11
.text:00009E64 55 46                         MOV             R5, R10
.text:00009E66 A0 EB 0B 00                   SUB.W           R0, R0, R11
.text:00009E6A C8 F8 00 00                   STR.W           R0, [R8]
.text:00009E6E 16 E0                         B               loc_9E9E
.text:00009E6E
.text:00009E70                               ; ---------------------------------------------------------------------------
.text:00009E70
.text:00009E70                               loc_9E70                      ; CODE XREF: pcm_read_uart_char_dev+146↑j
.text:00009E70 50 29                         CMP             R1, #0x50 ; 'P'
.text:00009E72 06 D0                         BEQ             loc_9E82
.text:00009E72
.text:00009E74 A0 29                         CMP             R1, #0xA0
.text:00009E76 04 D0                         BEQ             loc_9E82
.text:00009E76
.text:00009E78
.text:00009E78                               loc_9E78                      ; CODE XREF: pcm_read_uart_char_dev+156↑j
.text:00009E78 4F F0 00 0B                   MOV.W           R11, #0
.text:00009E7C 00 21                         MOVS            R1, #0
.text:00009E7E C6 F8 08 B0                   STR.W           R11, [R6,#8]
.text:00009E7E
.text:00009E82
.text:00009E82                               loc_9E82                      ; CODE XREF: pcm_read_uart_char_dev+148↑j
.text:00009E82                                                             ; pcm_read_uart_char_dev+154↑j
.text:00009E82                                                             ; pcm_read_uart_char_dev+172↑j
.text:00009E82                                                             ; pcm_read_uart_char_dev+176↑j
.text:00009E82 27 4A                         LDR             R2, =(aFrameFoundIdPk - 0x9E96) ; "#### Frame found - < ID : PKT # : LEN :"...
.text:00009E84 C8 F8 00 10                   STR.W           R1, [R8]
.text:00009E88 8D E8 03 08                   STMEA.W         SP, {R0,R1,R11}
.text:00009E8C 03 20                         MOVS            R0, #3
.text:00009E8E CD E9 03 3C                   STRD.W          R3, R12, [SP,#0x50+var_44]
.text:00009E92 7A 44                         ADD             R2, PC        ; "#### Frame found - < ID : PKT # : LEN :"...
.text:00009E94 73 46                         MOV             R3, LR
.text:00009E96 21 49                         LDR             R1, =(aCvqstream - 0x9E9C) ; "CVQStream"
.text:00009E98 79 44                         ADD             R1, PC        ; "CVQStream"
.text:00009E9A F9 F7 9E E8                   BLX             __android_log_print
.text:00009E9A
.text:00009E9E
.text:00009E9E                               loc_9E9E                      ; CODE XREF: pcm_read_uart_char_dev+AE↑j
.text:00009E9E                                                             ; pcm_read_uart_char_dev+FE↑j
.text:00009E9E                                                             ; pcm_read_uart_char_dev+16E↑j
.text:00009E9E AA 45                         CMP             R10, R5
.text:00009EA0 3F F7 51 AF                   BGT.W           loc_9D46
.text:00009EA0
.text:00009EA4
.text:00009EA4                               loc_9EA4                      ; CODE XREF: pcm_read_uart_char_dev+56↑j
.text:00009EA4                                                             ; pcm_read_uart_char_dev+86↑j
.text:00009EA4                                                             ; pcm_read_uart_char_dev+9C↑j
.text:00009EA4                                                             ; pcm_read_uart_char_dev+B4↑j
.text:00009EA4                                                             ; pcm_read_uart_char_dev+104↑j
.text:00009EA4                                                             ; pcm_read_uart_char_dev+15C↑j
.text:00009EA4                                                             ; pcm_read_uart_char_dev+204↓j
.text:00009EA4 07 98                         LDR             R0, [SP,#0x50+var_34]
.text:00009EA6 02 E0                         B               loc_9EAE
.text:00009EA6
.text:00009EA8                               ; ---------------------------------------------------------------------------
.text:00009EA8
.text:00009EA8                               loc_9EA8                      ; CODE XREF: pcm_read_uart_char_dev+1E↑j
.text:00009EA8 06 F1 0C 00                   ADD.W           R0, R6, #0xC
.text:00009EAC 00 25                         MOVS            R5, #0
.text:00009EAC
.text:00009EAE
.text:00009EAE                               loc_9EAE                      ; CODE XREF: pcm_read_uart_char_dev+1A6↑j
.text:00009EAE 00 68                         LDR             R0, [R0]
.text:00009EB0 78 B1                         CBZ             R0, loc_9ED2
.text:00009EB0
.text:00009EB2 01 2D                         CMP             R5, #1
.text:00009EB4 0C DB                         BLT             loc_9ED0
.text:00009EB4
.text:00009EB6 17 49                         LDR             R1, =(word_EE88 - 0x9EC2)
.text:00009EB8 04 EB 0A 00                   ADD.W           R0, R4, R10
.text:00009EBC 2A 46                         MOV             R2, R5
.text:00009EBE 79 44                         ADD             R1, PC        ; word_EE88
.text:00009EBE
.text:00009EC0
.text:00009EC0                               loc_9EC0                      ; CODE XREF: pcm_read_uart_char_dev+1CE↓j
.text:00009EC0 10 F8 01 3B                   LDRB.W          R3, [R0],#1
.text:00009EC4 01 3A                         SUBS            R2, #1
.text:00009EC6 31 F8 13 30                   LDRH.W          R3, [R1,R3,LSL#1]
.text:00009ECA 24 F8 02 3B                   STRH.W          R3, [R4],#2
.text:00009ECE F7 D1                         BNE             loc_9EC0
.text:00009ECE
.text:00009ED0
.text:00009ED0                               loc_9ED0                      ; CODE XREF: pcm_read_uart_char_dev+1B4↑j
.text:00009ED0 6D 00                         LSLS            R5, R5, #1
.text:00009ED0
.text:00009ED2
.text:00009ED2                               loc_9ED2                      ; CODE XREF: pcm_read_uart_char_dev+1B0↑j
.text:00009ED2 11 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x9EDA)
.text:00009ED4 0A 99                         LDR             R1, [SP,#0x50+var_28]
.text:00009ED6 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00009ED8 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00009EDA 00 68                         LDR             R0, [R0]
.text:00009EDC 40 1A                         SUBS            R0, R0, R1
.text:00009EDE 02 BF                         ITTT EQ
.text:00009EE0 28 46                         MOVEQ           R0, R5
.text:00009EE2 0B B0                         ADDEQ           SP, SP, #0x2C ; ','
.text:00009EE4 BD E8 F0 8F                   POPEQ.W         {R4-R11,PC}
.text:00009EE4
.text:00009EE8 F9 F7 7C E8                   BLX             __stack_chk_fail
.text:00009EE8
.text:00009EEC                               ; ---------------------------------------------------------------------------
.text:00009EEC
.text:00009EEC                               loc_9EEC                      ; CODE XREF: pcm_read_uart_char_dev+12A↑j
.text:00009EEC 07 49                         LDR             R1, =(aCvqstream - 0x9EFA) ; "CVQStream"
.text:00009EEE 01 20                         MOVS            R0, #1
.text:00009EF0 07 4A                         LDR             R2, =(aCvqReadAborted - 0x9EFE) ; "#### CVQ read aborted because normal st"...
.text:00009EF2 C9 F8 00 00                   STR.W           R0, [R9]
.text:00009EF6 79 44                         ADD             R1, PC        ; "CVQStream"
.text:00009EF8 B0 60                         STR             R0, [R6,#8]
.text:00009EFA 7A 44                         ADD             R2, PC        ; "#### CVQ read aborted because normal st"...
.text:00009EFC 03 20                         MOVS            R0, #3
.text:00009EFE F9 F7 6C E8                   BLX             __android_log_print
.text:00009EFE
.text:00009F02 00 25                         MOVS            R5, #0
.text:00009F04 CE E7                         B               loc_9EA4
.text:00009F04
.text:00009F04                               ; End of function pcm_read_uart_char_dev
.text:00009F04
.text:00009F04                               ; ---------------------------------------------------------------------------
.text:00009F06 00 BF                         ALIGN 4
.text:00009F08 82 70 00 00                   off_9F08 DCD __stack_chk_guard_ptr - 0x9D12
.text:00009F08                                                             ; DATA XREF: pcm_read_uart_char_dev+8↑r
.text:00009F0C 5D 3F 00 00                   off_9F0C DCD aCvqstream - 0x9EFA
.text:00009F0C                                                             ; DATA XREF: pcm_read_uart_char_dev:loc_9EEC↑r
.text:00009F0C                                                             ; "CVQStream"
.text:00009F10 47 43 00 00                   off_9F10 DCD aCvqReadAborted - 0x9EFE
.text:00009F10                                                             ; DATA XREF: pcm_read_uart_char_dev+1F0↑r
.text:00009F10                                                             ; "#### CVQ read aborted because normal st"...
.text:00009F14 C6 4F 00 00                   off_9F14 DCD word_EE88 - 0x9EC2
.text:00009F14                                                             ; DATA XREF: pcm_read_uart_char_dev+1B6↑r
.text:00009F18 BA 6E 00 00                   off_9F18 DCD __stack_chk_guard_ptr - 0x9EDA
.text:00009F18                                                             ; DATA XREF: pcm_read_uart_char_dev:loc_9ED2↑r
.text:00009F1C BB 3F 00 00                   off_9F1C DCD aCvqstream - 0x9E9C
.text:00009F1C                                                             ; DATA XREF: pcm_read_uart_char_dev+196↑r
.text:00009F1C                                                             ; "CVQStream"
.text:00009F20 F1 43 00 00                   off_9F20 DCD aFrameFoundIdPk - 0x9E96
.text:00009F20                                                             ; DATA XREF: pcm_read_uart_char_dev:loc_9E82↑r
.text:00009F20                               ; } // starts at 9D00         ; "#### Frame found - < ID : PKT # : LEN :"...
.text:00009F24
.text:00009F24                               ; =============== S U B R O U T I N E =======================================
.text:00009F24
.text:00009F24
.text:00009F24                               ; int __fastcall cvq_init(int)
.text:00009F24                               EXPORT cvq_init
.text:00009F24                               cvq_init                      ; CODE XREF: j_cvq_init+8↑j
.text:00009F24                                                             ; DATA XREF: LOAD:00000D70↑o
.text:00009F24                                                             ; .got:cvq_init_ptr↓o
.text:00009F24                               ; __unwind {
.text:00009F24 F0 B5                         PUSH            {R4-R7,LR}
.text:00009F26 28 49                         LDR             R1, =(cvq_read_ptr - 0x9F36)
.text:00009F28 4E F2 4C 27                   MOVW            R7, #0xE24C
.text:00009F2C 2B 4E                         LDR             R6, =(cvq_open_ptr - 0x9F3A)
.text:00009F2E C0 F2 04 07                   MOVT            R7, #4
.text:00009F32 79 44                         ADD             R1, PC        ; cvq_read_ptr
.text:00009F34 28 4D                         LDR             R5, =(cvq_close_ptr - 0x9F42)
.text:00009F36 7E 44                         ADD             R6, PC        ; cvq_open_ptr
.text:00009F38 D1 F8 00 E0                   LDR.W           LR, [R1]      ; cvq_read
.text:00009F3C 25 49                         LDR             R1, =(cvq_start_ptr - 0x9F4C)
.text:00009F3E 7D 44                         ADD             R5, PC        ; cvq_close_ptr
.text:00009F40 36 68                         LDR             R6, [R6]      ; cvq_open
.text:00009F42 4E F2 54 24                   MOVW            R4, #0xE254
.text:00009F46 22 4B                         LDR             R3, =(readdirect_ptr - 0x9F56)
.text:00009F48 79 44                         ADD             R1, PC        ; cvq_start_ptr
.text:00009F4A 09 68                         LDR             R1, [R1]      ; cvq_start
.text:00009F4C C0 F2 04 04                   MOVT            R4, #4
.text:00009F50 2D 68                         LDR             R5, [R5]      ; cvq_close
.text:00009F52 7B 44                         ADD             R3, PC        ; readdirect_ptr
.text:00009F54 1D 4A                         LDR             R2, =(pcm_read_uart_char_dev_ptr - 0x9F6A)
.text:00009F56 4E F2 5C 2C                   MOVW            R12, #0xE25C
.text:00009F5A C6 51                         STR             R6, [R0,R7]
.text:00009F5C 4E F2 50 26 C0 F2 04 06       MOV             R6, #0x4E250
.text:00009F64 1B 68                         LDR             R3, [R3]      ; readdirect
.text:00009F66 7A 44                         ADD             R2, PC        ; pcm_read_uart_char_dev_ptr
.text:00009F68 85 51                         STR             R5, [R0,R6]
.text:00009F6A 01 51                         STR             R1, [R0,R4]
.text:00009F6C 4E F2 58 21 C0 F2 04 01       MOV             R1, #0x4E258
.text:00009F74 12 68                         LDR             R2, [R2]      ; pcm_read_uart_char_dev
.text:00009F76 43 50                         STR             R3, [R0,R1]
.text:00009F78 4E F2 60 21                   MOVW            R1, #0xE260
.text:00009F7C C0 F2 04 0C                   MOVT            R12, #4
.text:00009F80 C0 F2 04 01                   MOVT            R1, #4
.text:00009F84 40 F8 0C E0                   STR.W           LR, [R0,R12]
.text:00009F88 4E F2 48 23                   MOVW            R3, #0xE248
.text:00009F8C 42 50                         STR             R2, [R0,R1]
.text:00009F8E 4E F2 44 21                   MOVW            R1, #0xE244
.text:00009F92 C0 EF 50 00                   VMOV.I32        Q8, #0
.text:00009F96 C0 F2 04 01                   MOVT            R1, #4
.text:00009F9A 00 22                         MOVS            R2, #0
.text:00009F9C C0 F2 04 03                   MOVT            R3, #4
.text:00009FA0 42 50                         STR             R2, [R0,R1]
.text:00009FA2 01 46                         MOV             R1, R0
.text:00009FA4 41 F9 8D 0A                   VST1.32         {D16-D17}, [R1]!
.text:00009FA8 C2 50                         STR             R2, [R0,R3]
.text:00009FAA 0A 60                         STR             R2, [R1]
.text:00009FAC 4E F2 38 21 C0 F2 04 01       MOV             R1, #0x4E238
.text:00009FB4 42 50                         STR             R2, [R0,R1]
.text:00009FB6 00 F5 9C 20                   ADD.W           R0, R0, #0x4E000
.text:00009FBA 00 F5 0A 70                   ADD.W           R0, R0, #0x228
.text:00009FBE 40 F9 8F 0A                   VST1.32         {D16-D17}, [R0]
.text:00009FC2 00 20                         MOVS            R0, #0
.text:00009FC4 F0 BD                         POP             {R4-R7,PC}
.text:00009FC4
.text:00009FC4                               ; End of function cvq_init
.text:00009FC4
.text:00009FC4                               ; ---------------------------------------------------------------------------
.text:00009FC6 00 BF                         ALIGN 4
.text:00009FC8 B2 6E 00 00                   off_9FC8 DCD cvq_read_ptr - 0x9F36
.text:00009FC8                                                             ; DATA XREF: cvq_init+2↑r
.text:00009FCC 82 6E 00 00                   off_9FCC DCD pcm_read_uart_char_dev_ptr - 0x9F6A
.text:00009FCC                                                             ; DATA XREF: cvq_init+30↑r
.text:00009FD0 9A 6E 00 00                   off_9FD0 DCD readdirect_ptr - 0x9F56
.text:00009FD0                                                             ; DATA XREF: cvq_init+22↑r
.text:00009FD4 A8 6E 00 00                   off_9FD4 DCD cvq_start_ptr - 0x9F4C
.text:00009FD4                                                             ; DATA XREF: cvq_init+18↑r
.text:00009FD8 B6 6E 00 00                   off_9FD8 DCD cvq_close_ptr - 0x9F42
.text:00009FD8                                                             ; DATA XREF: cvq_init+10↑r
.text:00009FDC C2 6E 00 00                   off_9FDC DCD cvq_open_ptr - 0x9F3A
.text:00009FDC                                                             ; DATA XREF: cvq_init+8↑r
.text:00009FDC                               ; } // starts at 9F24
.text:00009FE0
.text:00009FE0                               ; =============== S U B R O U T I N E =======================================
.text:00009FE0
.text:00009FE0
.text:00009FE0                               ; unsigned int *__fastcall sub_9FE0(unsigned int *result, int *, int *)
.text:00009FE0                               sub_9FE0                      ; CODE XREF: sub_AEAC+1E↓p
.text:00009FE0                               ; __unwind {
.text:00009FE0 03 68                         LDR             R3, [R0]
.text:00009FE2 00 2B                         CMP             R3, #0
.text:00009FE4 0A DB                         BLT             loc_9FFC
.text:00009FE4
.text:00009FE6 01 23                         MOVS            R3, #1
.text:00009FE8 0B 60                         STR             R3, [R1]
.text:00009FEA 04 23                         MOVS            R3, #4
.text:00009FEC 50 F8 04 1F                   LDR.W           R1, [R0,#4]!
.text:00009FF0 4F EA 11 61                   MOV.W           R1, R1,LSR#24
.text:00009FF4 03 EB 81 01                   ADD.W           R1, R3, R1,LSL#2
.text:00009FF8 11 60                         STR             R1, [R2]
.text:00009FFA 70 47                         BX              LR
.text:00009FFA
.text:00009FFC                               ; ---------------------------------------------------------------------------
.text:00009FFC
.text:00009FFC                               loc_9FFC                      ; CODE XREF: sub_9FE0+4↑j
.text:00009FFC C3 F3 03 6C                   UBFX.W          R12, R3, #0x18, #4
.text:0000A000 BC F1 00 0F                   CMP.W           R12, #0
.text:0000A004 0F D0                         BEQ             loc_A026
.text:0000A004
.text:0000A006 BC F1 03 0F                   CMP.W           R12, #3
.text:0000A00A 1E BF                         ITTT NE
.text:0000A00C BC F1 01 0F                   CMPNE.W         R12, #1
.text:0000A010 00 20                         MOVNE           R0, #0
.text:0000A012 70 47                         BXNE            LR
.text:0000A012
.text:0000A014 C3 F3 07 4C                   UBFX.W          R12, R3, #0x10, #8
.text:0000A018 4F F0 04 03                   MOV.W           R3, #4
.text:0000A01C 03 EB 8C 03                   ADD.W           R3, R3, R12,LSL#2
.text:0000A020 4F F0 02 0C                   MOV.W           R12, #2
.text:0000A024 02 E0                         B               loc_A02C
.text:0000A024
.text:0000A026                               ; ---------------------------------------------------------------------------
.text:0000A026
.text:0000A026                               loc_A026                      ; CODE XREF: sub_9FE0+24↑j
.text:0000A026 4F F0 01 0C                   MOV.W           R12, #1
.text:0000A02A 04 23                         MOVS            R3, #4
.text:0000A02A
.text:0000A02C
.text:0000A02C                               loc_A02C                      ; CODE XREF: sub_9FE0+44↑j
.text:0000A02C 13 60                         STR             R3, [R2]
.text:0000A02E C1 F8 00 C0                   STR.W           R12, [R1]
.text:0000A032 70 47                         BX              LR
.text:0000A032                               ; } // starts at 9FE0
.text:0000A032
.text:0000A032                               ; End of function sub_9FE0
.text:0000A032
.text:0000A034
.text:0000A034                               ; =============== S U B R O U T I N E =======================================
.text:0000A034
.text:0000A034
.text:0000A034                               ; int __fastcall sub_A034(int, int, unsigned int, unsigned int)
.text:0000A034                               sub_A034                      ; CODE XREF: sub_AEAC+2A↓p
.text:0000A034
.text:0000A034                               var_30= -0x30
.text:0000A034                               var_2C= -0x2C
.text:0000A034                               var_28= -0x28
.text:0000A034
.text:0000A034                               ; __unwind {
.text:0000A034 2D E9 F0 4F                   PUSH.W          {R4-R11,LR}
.text:0000A038 83 B0                         SUB             SP, SP, #0xC
.text:0000A03A 04 46                         MOV             R4, R0
.text:0000A03C A7 48                         LDR             R0, =(__stack_chk_guard_ptr - 0xA046)
.text:0000A03E 1D 46                         MOV             R5, R3
.text:0000A040 93 46                         MOV             R11, R2
.text:0000A042 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:0000A044 89 46                         MOV             R9, R1
.text:0000A046 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:0000A048 AB 45                         CMP             R11, R5
.text:0000A04A 00 68                         LDR             R0, [R0]
.text:0000A04C 02 90                         STR             R0, [SP,#0x30+var_28]
.text:0000A04E 80 F0 2D 81                   BCS.W           loc_A2AC
.text:0000A04E
.text:0000A052 00 20                         MOVS            R0, #0
.text:0000A054 0D F1 04 08                   ADD.W           R8, SP, #0x30+var_2C
.text:0000A058 00 90                         STR             R0, [SP,#0x30+var_30]
.text:0000A058
.text:0000A05A
.text:0000A05A                               loc_A05A                      ; CODE XREF: sub_A034+1CA↓j
.text:0000A05A 8B F0 03 00                   EOR.W           R0, R11, #3
.text:0000A05E 0B F1 01 07                   ADD.W           R7, R11, #1
.text:0000A062 19 F8 00 A0                   LDRB.W          R10, [R9,R0]
.text:0000A066 1A F0 80 0F                   TST.W           R10, #0x80
.text:0000A06A 0D D1                         BNE             loc_A088
.text:0000A06A
.text:0000A06C 20 46                         MOV             R0, R4
.text:0000A06E 0D 21                         MOVS            R1, #0xD
.text:0000A070 42 46                         MOV             R2, R8
.text:0000A072 00 F0 59 FC                   BL              sub_A928
.text:0000A072
.text:0000A076 4F EA 8A 00                   MOV.W           R0, R10,LSL#2
.text:0000A07A 1A F0 40 0F                   TST.W           R10, #0x40
.text:0000A07E 20 D1                         BNE             loc_A0C2
.text:0000A07E
.text:0000A080 01 99                         LDR             R1, [SP,#0x30+var_2C]
.text:0000A082 08 44                         ADD             R0, R1
.text:0000A084 02 1D                         ADDS            R2, R0, #4
.text:0000A086 23 E0                         B               loc_A0D0
.text:0000A086
.text:0000A088                               ; ---------------------------------------------------------------------------
.text:0000A088
.text:0000A088                               loc_A088                      ; CODE XREF: sub_A034+36↑j
.text:0000A088 0A F0 F0 01                   AND.W           R1, R10, #0xF0
.text:0000A08C 09 20                         MOVS            R0, #9
.text:0000A08E AF 29                         CMP             R1, #0xAF
.text:0000A090 24 DC                         BGT             loc_A0DC
.text:0000A090
.text:0000A092 80 29                         CMP             R1, #0x80
.text:0000A094 36 D0                         BEQ             loc_A104
.text:0000A094
.text:0000A096 90 29                         CMP             R1, #0x90
.text:0000A098 4F D0                         BEQ             loc_A13A
.text:0000A098
.text:0000A09A A0 29                         CMP             R1, #0xA0
.text:0000A09C 40 F0 11 81                   BNE.W           loc_A2C2      ; jumptable 0000A162 cases 180-183
.text:0000A09C
.text:0000A0A0 0A F0 07 01                   AND.W           R1, R10, #7
.text:0000A0A4 10 22                         MOVS            R2, #0x10
.text:0000A0A6 01 31                         ADDS            R1, #1
.text:0000A0A8 4F F4 80 40                   MOV.W           R0, #0x4000
.text:0000A0AC 02 FA 01 F1                   LSL.W           R1, R2, R1
.text:0000A0B0 00 EA CA 20                   AND.W           R0, R0, R10,LSL#11
.text:0000A0B4 10 39                         SUBS            R1, #0x10
.text:0000A0B6 00 23                         MOVS            R3, #0
.text:0000A0B8 41 EA 00 02                   ORR.W           R2, R1, R0
.text:0000A0BC 20 46                         MOV             R0, R4
.text:0000A0BE 00 21                         MOVS            R1, #0
.text:0000A0C0 99 E0                         B               loc_A1F6
.text:0000A0C0
.text:0000A0C2                               ; ---------------------------------------------------------------------------
.text:0000A0C2
.text:0000A0C2                               loc_A0C2                      ; CODE XREF: sub_A034+4A↑j
.text:0000A0C2 01 99                         LDR             R1, [SP,#0x30+var_2C]
.text:0000A0C4 00 F0 FC 00                   AND.W           R0, R0, #0xFC
.text:0000A0C8 6F F0 03 02                   MOV             R2, #0xFFFFFFFC
.text:0000A0CC 10 1A                         SUBS            R0, R2, R0
.text:0000A0CE 42 18                         ADDS            R2, R0, R1
.text:0000A0CE
.text:0000A0D0
.text:0000A0D0                               loc_A0D0                      ; CODE XREF: sub_A034+52↑j
.text:0000A0D0                                                             ; sub_A034+19A↓j
.text:0000A0D0 01 92                         STR             R2, [SP,#0x30+var_2C]
.text:0000A0D0
.text:0000A0D2
.text:0000A0D2                               loc_A0D2                      ; CODE XREF: sub_A034+11E↓j
.text:0000A0D2 20 46                         MOV             R0, R4
.text:0000A0D4 0D 21                         MOVS            R1, #0xD
.text:0000A0D6 00 F0 3E FC                   BL              sub_A956
.text:0000A0D6
.text:0000A0DA 8E E0                         B               loc_A1FA
.text:0000A0DA
.text:0000A0DC                               ; ---------------------------------------------------------------------------
.text:0000A0DC
.text:0000A0DC                               loc_A0DC                      ; CODE XREF: sub_A034+5C↑j
.text:0000A0DC B0 29                         CMP             R1, #0xB0
.text:0000A0DE 39 D0                         BEQ             loc_A154
.text:0000A0DE
.text:0000A0E0 C0 29                         CMP             R1, #0xC0
.text:0000A0E2 00 F0 75 80                   BEQ.W           loc_A1D0
.text:0000A0E2
.text:0000A0E6 D0 29                         CMP             R1, #0xD0
.text:0000A0E8 40 F0 EB 80                   BNE.W           loc_A2C2      ; jumptable 0000A162 cases 180-183
.text:0000A0E8
.text:0000A0EC 1A F0 08 0F                   TST.W           R10, #8
.text:0000A0F0 40 F0 D6 80                   BNE.W           def_A1D8      ; jumptable 0000A1D8 default case
.text:0000A0F0
.text:0000A0F4 0A F0 07 00                   AND.W           R0, R10, #7
.text:0000A0F8 01 21                         MOVS            R1, #1
.text:0000A0FA 01 30                         ADDS            R0, #1
.text:0000A0FC 40 F4 00 22                   ORR.W           R2, R0, #0x80000
.text:0000A100 20 46                         MOV             R0, R4
.text:0000A102 77 E0                         B               loc_A1F4
.text:0000A102
.text:0000A104                               ; ---------------------------------------------------------------------------
.text:0000A104
.text:0000A104                               loc_A104                      ; CODE XREF: sub_A034+60↑j
.text:0000A104 AF 42                         CMP             R7, R5
.text:0000A106 80 F0 CB 80                   BCS.W           def_A1D8      ; jumptable 0000A1D8 default case
.text:0000A106
.text:0000A10A 87 F0 03 00                   EOR.W           R0, R7, #3
.text:0000A10E 4F EA 0A 36                   MOV.W           R6, R10,LSL#12
.text:0000A112 19 F8 00 00                   LDRB.W          R0, [R9,R0]
.text:0000A116 B1 B2                         UXTH            R1, R6
.text:0000A118 41 EA 00 12                   ORR.W           R2, R1, R0,LSL#4
.text:0000A11C 00 2A                         CMP             R2, #0
.text:0000A11E 00 F0 BF 80                   BEQ.W           def_A1D8      ; jumptable 0000A1D8 default case
.text:0000A11E
.text:0000A122 20 46                         MOV             R0, R4
.text:0000A124 00 21                         MOVS            R1, #0
.text:0000A126 00 23                         MOVS            R3, #0
.text:0000A128 00 F0 74 F9                   BL              sub_A414
.text:0000A128
.text:0000A12C 00 99                         LDR             R1, [SP,#0x30+var_30]
.text:0000A12E 06 F4 00 40                   AND.W           R0, R6, #0x8000
.text:0000A132 41 EA D0 31                   ORR.W           R1, R1, R0,LSR#15
.text:0000A136 00 91                         STR             R1, [SP,#0x30+var_30]
.text:0000A138 A8 E0                         B               loc_A28C
.text:0000A138
.text:0000A13A                               ; ---------------------------------------------------------------------------
.text:0000A13A
.text:0000A13A                               loc_A13A                      ; CODE XREF: sub_A034+64↑j
.text:0000A13A 0A F0 0F 01                   AND.W           R1, R10, #0xF
.text:0000A13E 41 F0 02 00                   ORR.W           R0, R1, #2
.text:0000A142 0F 28                         CMP             R0, #0xF
.text:0000A144 00 F0 AC 80                   BEQ.W           def_A1D8      ; jumptable 0000A1D8 default case
.text:0000A144
.text:0000A148 20 46                         MOV             R0, R4
.text:0000A14A 42 46                         MOV             R2, R8
.text:0000A14C 00 F0 EC FB                   BL              sub_A928
.text:0000A14C
.text:0000A150 01 9A                         LDR             R2, [SP,#0x30+var_2C]
.text:0000A152 BE E7                         B               loc_A0D2
.text:0000A152
.text:0000A154                               ; ---------------------------------------------------------------------------
.text:0000A154
.text:0000A154                               loc_A154                      ; CODE XREF: sub_A034+AA↑j
.text:0000A154 AA F1 B0 02                   SUB.W           R2, R10, #0xB0 ; switch 8 cases
.text:0000A158 07 2A                         CMP             R2, #7
.text:0000A15A 53 D8                         BHI             def_A162      ; jumptable 0000A162 default case
.text:0000A15A
.text:0000A15C 09 20                         MOVS            R0, #9
.text:0000A15E 00 21                         MOVS            R1, #0
.text:0000A160 00 26                         MOVS            R6, #0
.text:0000A162 DF E8 02 F0                   TBB.W           [PC,R2]       ; switch jump
.text:0000A162
.text:0000A162                               ; ---------------------------------------------------------------------------
.text:0000A166 9F                            jpt_A162 DCB 0x9F             ; jump table for switch statement
.text:0000A167 04                            DCB 4
.text:0000A168 17                            DCB 0x17
.text:0000A169 58                            DCB 0x58
.text:0000A16A AE                            DCB 0xAE
.text:0000A16B AE                            DCB 0xAE
.text:0000A16C AE                            DCB 0xAE
.text:0000A16D AE                            DCB 0xAE
.text:0000A16E                               ; ---------------------------------------------------------------------------
.text:0000A16E
.text:0000A16E                               loc_A16E                      ; CODE XREF: sub_A034+12E↑j
.text:0000A16E AF 42                         CMP             R7, R5        ; jumptable 0000A162 case 177
.text:0000A170 80 F0 96 80                   BCS.W           def_A1D8      ; jumptable 0000A1D8 default case
.text:0000A170
.text:0000A174 87 F0 03 00                   EOR.W           R0, R7, #3
.text:0000A178 19 F8 00 20                   LDRB.W          R2, [R9,R0]
.text:0000A17C 09 20                         MOVS            R0, #9
.text:0000A17E 00 2A                         CMP             R2, #0
.text:0000A180 00 F0 9F 80                   BEQ.W           loc_A2C2      ; jumptable 0000A162 cases 180-183
.text:0000A180
.text:0000A184 12 F0 F0 01                   ANDS.W          R1, R2, #0xF0
.text:0000A188 40 F0 9B 80                   BNE.W           loc_A2C2      ; jumptable 0000A162 cases 180-183
.text:0000A188
.text:0000A18C 20 46                         MOV             R0, R4
.text:0000A18E 00 21                         MOVS            R1, #0
.text:0000A190 00 23                         MOVS            R3, #0
.text:0000A192 79 E0                         B               loc_A288
.text:0000A192
.text:0000A194                               ; ---------------------------------------------------------------------------
.text:0000A194
.text:0000A194                               loc_A194                      ; CODE XREF: sub_A034+12E↑j
.text:0000A194                                                             ; sub_A034+184↓j
.text:0000A194 AF 42                         CMP             R7, R5        ; jumptable 0000A162 case 178
.text:0000A196 80 F0 83 80                   BCS.W           def_A1D8      ; jumptable 0000A1D8 default case
.text:0000A196
.text:0000A19A 87 F0 03 00                   EOR.W           R0, R7, #3
.text:0000A19E 01 37                         ADDS            R7, #1
.text:0000A1A0 19 F8 00 00                   LDRB.W          R0, [R9,R0]
.text:0000A1A4 00 F0 7F 02                   AND.W           R2, R0, #0x7F
.text:0000A1A8 10 F0 80 0F                   TST.W           R0, #0x80
.text:0000A1AC 02 FA 01 F2                   LSL.W           R2, R2, R1
.text:0000A1B0 01 F1 07 01                   ADD.W           R1, R1, #7
.text:0000A1B4 46 EA 02 06                   ORR.W           R6, R6, R2
.text:0000A1B8 EC D1                         BNE             loc_A194      ; jumptable 0000A162 case 178
.text:0000A1B8
.text:0000A1BA 20 46                         MOV             R0, R4
.text:0000A1BC 0D 21                         MOVS            R1, #0xD
.text:0000A1BE 42 46                         MOV             R2, R8
.text:0000A1C0 00 F0 B2 FB                   BL              sub_A928
.text:0000A1C0
.text:0000A1C4 01 98                         LDR             R0, [SP,#0x30+var_2C]
.text:0000A1C6 00 EB 86 00                   ADD.W           R0, R0, R6,LSL#2
.text:0000A1CA 00 F5 01 72                   ADD.W           R2, R0, #0x204
.text:0000A1CE 7F E7                         B               loc_A0D0
.text:0000A1CE
.text:0000A1D0                               ; ---------------------------------------------------------------------------
.text:0000A1D0
.text:0000A1D0                               loc_A1D0                      ; CODE XREF: sub_A034+AE↑j
.text:0000A1D0 AA F1 C0 00                   SUB.W           R0, R10, #0xC0 ; switch 10 cases
.text:0000A1D4 09 28                         CMP             R0, #9
.text:0000A1D6 63 D8                         BHI             def_A1D8      ; jumptable 0000A1D8 default case
.text:0000A1D6
.text:0000A1D8 DF E8 00 F0                   TBB.W           [PC,R0]       ; switch jump
.text:0000A1D8
.text:0000A1D8                               ; ---------------------------------------------------------------------------
.text:0000A1DC 05                            jpt_A1D8 DCB 5                ; jump table for switch statement
.text:0000A1DD 05                            DCB 5
.text:0000A1DE 05                            DCB 5
.text:0000A1DF 05                            DCB 5
.text:0000A1E0 05                            DCB 5
.text:0000A1E1 05                            DCB 5
.text:0000A1E2 45                            DCB 0x45
.text:0000A1E3 5B                            DCB 0x5B
.text:0000A1E4 2E                            DCB 0x2E
.text:0000A1E5 2E                            DCB 0x2E
.text:0000A1E6                               ; ---------------------------------------------------------------------------
.text:0000A1E6
.text:0000A1E6                               loc_A1E6                      ; CODE XREF: sub_A034+1A4↑j
.text:0000A1E6 0A F0 07 00                   AND.W           R0, R10, #7   ; jumptable 0000A1D8 cases 192-197
.text:0000A1EA 03 21                         MOVS            R1, #3
.text:0000A1EC 01 30                         ADDS            R0, #1
.text:0000A1EE 40 F4 20 22                   ORR.W           R2, R0, #0xA0000
.text:0000A1F2 20 46                         MOV             R0, R4
.text:0000A1F2
.text:0000A1F4
.text:0000A1F4                               loc_A1F4                      ; CODE XREF: sub_A034+CE↑j
.text:0000A1F4 05 23                         MOVS            R3, #5
.text:0000A1F4
.text:0000A1F6
.text:0000A1F6                               loc_A1F6                      ; CODE XREF: sub_A034+8C↑j
.text:0000A1F6                                                             ; sub_A034+1E0↓j
.text:0000A1F6 00 F0 0D F9                   BL              sub_A414
.text:0000A1F6
.text:0000A1FA
.text:0000A1FA                               loc_A1FA                      ; CODE XREF: sub_A034+A6↑j
.text:0000A1FA BB 46                         MOV             R11, R7
.text:0000A1FA
.text:0000A1FC
.text:0000A1FC                               loc_A1FC                      ; CODE XREF: sub_A034+25C↓j
.text:0000A1FC AB 45                         CMP             R11, R5
.text:0000A1FE FF F4 2C AF                   BCC.W           loc_A05A
.text:0000A1FE
.text:0000A202 4F E0                         B               loc_A2A4      ; jumptable 0000A162 case 176
.text:0000A202
.text:0000A204                               ; ---------------------------------------------------------------------------
.text:0000A204
.text:0000A204                               def_A162                      ; CODE XREF: sub_A034+126↑j
.text:0000A204 0A F0 07 00                   AND.W           R0, R10, #7   ; jumptable 0000A162 default case
.text:0000A208 01 21                         MOVS            R1, #1
.text:0000A20A 01 30                         ADDS            R0, #1
.text:0000A20C 01 23                         MOVS            R3, #1
.text:0000A20E 40 F4 00 22                   ORR.W           R2, R0, #0x80000
.text:0000A212 20 46                         MOV             R0, R4
.text:0000A214 EF E7                         B               loc_A1F6
.text:0000A214
.text:0000A216                               ; ---------------------------------------------------------------------------
.text:0000A216
.text:0000A216                               loc_A216                      ; CODE XREF: sub_A034+12E↑j
.text:0000A216 87 F0 03 00                   EOR.W           R0, R7, #3    ; jumptable 0000A162 case 179
.text:0000A21A 01 23                         MOVS            R3, #1
.text:0000A21C 19 F8 00 00                   LDRB.W          R0, [R9,R0]
.text:0000A220 4F EA 00 31                   MOV.W           R1, R0,LSL#12
.text:0000A224 00 F0 0F 00                   AND.W           R0, R0, #0xF
.text:0000A228 3F FA 81 F1                   UXTB16.W        R1, R1
.text:0000A22C 01 30                         ADDS            R0, #1
.text:0000A22E 40 EA 01 02                   ORR.W           R2, R0, R1
.text:0000A232 20 46                         MOV             R0, R4
.text:0000A234 01 21                         MOVS            R1, #1
.text:0000A236 27 E0                         B               loc_A288
.text:0000A236
.text:0000A238                               ; ---------------------------------------------------------------------------
.text:0000A238
.text:0000A238                               loc_A238                      ; CODE XREF: sub_A034+1A4↑j
.text:0000A238 87 F0 03 00                   EOR.W           R0, R7, #3    ; jumptable 0000A1D8 cases 200,201
.text:0000A23C 10 22                         MOVS            R2, #0x10
.text:0000A23E 19 F8 00 10                   LDRB.W          R1, [R9,R0]
.text:0000A242 BA F1 C8 0F                   CMP.W           R10, #0xC8
.text:0000A246 4F EA 11 10                   MOV.W           R0, R1,LSR#4
.text:0000A24A 08 BF                         IT EQ
.text:0000A24C 42 EA 11 10                   ORREQ.W         R0, R2, R1,LSR#4
.text:0000A250 01 F0 0F 01                   AND.W           R1, R1, #0xF
.text:0000A254 42 18                         ADDS            R2, R0, R1
.text:0000A256 1F 2A                         CMP             R2, #0x1F
.text:0000A258 22 D8                         BHI             def_A1D8      ; jumptable 0000A1D8 default case
.text:0000A258
.text:0000A25A 01 31                         ADDS            R1, #1
.text:0000A25C 41 EA 00 42                   ORR.W           R2, R1, R0,LSL#16
.text:0000A260 20 46                         MOV             R0, R4
.text:0000A262 01 21                         MOVS            R1, #1
.text:0000A264 0F E0                         B               loc_A286
.text:0000A264
.text:0000A266                               ; ---------------------------------------------------------------------------
.text:0000A266
.text:0000A266                               loc_A266                      ; CODE XREF: sub_A034+1A4↑j
.text:0000A266 87 F0 03 00                   EOR.W           R0, R7, #3    ; jumptable 0000A1D8 case 198
.text:0000A26A 19 F8 00 00                   LDRB.W          R0, [R9,R0]
.text:0000A26E 00 F0 0F 01                   AND.W           R1, R0, #0xF
.text:0000A272 01 EB 10 12                   ADD.W           R2, R1, R0,LSR#4
.text:0000A276 0F 2A                         CMP             R2, #0xF
.text:0000A278 12 D8                         BHI             def_A1D8      ; jumptable 0000A1D8 default case
.text:0000A278
.text:0000A27A 00 09                         LSRS            R0, R0, #4
.text:0000A27C 01 31                         ADDS            R1, #1
.text:0000A27E 41 EA 00 42                   ORR.W           R2, R1, R0,LSL#16
.text:0000A282 20 46                         MOV             R0, R4
.text:0000A284 03 21                         MOVS            R1, #3
.text:0000A284
.text:0000A286
.text:0000A286                               loc_A286                      ; CODE XREF: sub_A034+230↑j
.text:0000A286 05 23                         MOVS            R3, #5
.text:0000A286
.text:0000A288
.text:0000A288                               loc_A288                      ; CODE XREF: sub_A034+15E↑j
.text:0000A288                                                             ; sub_A034+202↑j
.text:0000A288 00 F0 C4 F8                   BL              sub_A414
.text:0000A288
.text:0000A28C
.text:0000A28C                               loc_A28C                      ; CODE XREF: sub_A034+104↑j
.text:0000A28C                                                             ; sub_A034+26A↓j
.text:0000A28C 0B F1 02 0B                   ADD.W           R11, R11, #2
.text:0000A290 B4 E7                         B               loc_A1FC
.text:0000A290
.text:0000A292                               ; ---------------------------------------------------------------------------
.text:0000A292
.text:0000A292                               loc_A292                      ; CODE XREF: sub_A034+1A4↑j
.text:0000A292 87 F0 03 00                   EOR.W           R0, R7, #3    ; jumptable 0000A1D8 case 199
.text:0000A296 19 F8 00 00                   LDRB.W          R0, [R9,R0]
.text:0000A29A 08 B1                         CBZ             R0, def_A1D8  ; jumptable 0000A1D8 default case
.text:0000A29A
.text:0000A29C 10 28                         CMP             R0, #0x10
.text:0000A29E F5 D3                         BCC             loc_A28C
.text:0000A29E
.text:0000A2A0
.text:0000A2A0                               def_A1D8                      ; CODE XREF: sub_A034+BC↑j
.text:0000A2A0                                                             ; sub_A034+D2↑j
.text:0000A2A0                                                             ; sub_A034+EA↑j
.text:0000A2A0                                                             ; sub_A034+110↑j
.text:0000A2A0                                                             ; sub_A034+13C↑j
.text:0000A2A0                                                             ; sub_A034+162↑j
.text:0000A2A0                                                             ; sub_A034+1A2↑j
.text:0000A2A0                                                             ; sub_A034+224↑j
.text:0000A2A0                                                             ; sub_A034+244↑j
.text:0000A2A0                                                             ; sub_A034+266↑j
.text:0000A2A0 09 20                         MOVS            R0, #9        ; jumptable 0000A1D8 default case
.text:0000A2A2 0E E0                         B               loc_A2C2      ; jumptable 0000A162 cases 180-183
.text:0000A2A2
.text:0000A2A4                               ; ---------------------------------------------------------------------------
.text:0000A2A4
.text:0000A2A4                               loc_A2A4                      ; CODE XREF: sub_A034+12E↑j
.text:0000A2A4                                                             ; sub_A034+1CE↑j
.text:0000A2A4 00 98                         LDR             R0, [SP,#0x30+var_30] ; jumptable 0000A162 case 176
.text:0000A2A6 10 F0 01 0F                   TST.W           R0, #1
.text:0000A2AA 09 D1                         BNE             loc_A2C0
.text:0000A2AA
.text:0000A2AC
.text:0000A2AC                               loc_A2AC                      ; CODE XREF: sub_A034+1A↑j
.text:0000A2AC 01 AA                         ADD             R2, SP, #0x30+var_2C
.text:0000A2AE 20 46                         MOV             R0, R4
.text:0000A2B0 0E 21                         MOVS            R1, #0xE
.text:0000A2B2 00 F0 39 FB                   BL              sub_A928
.text:0000A2B2
.text:0000A2B6 01 9A                         LDR             R2, [SP,#0x30+var_2C]
.text:0000A2B8 20 46                         MOV             R0, R4
.text:0000A2BA 0F 21                         MOVS            R1, #0xF
.text:0000A2BC 00 F0 4B FB                   BL              sub_A956
.text:0000A2BC
.text:0000A2C0
.text:0000A2C0                               loc_A2C0                      ; CODE XREF: sub_A034+276↑j
.text:0000A2C0 08 20                         MOVS            R0, #8
.text:0000A2C0
.text:0000A2C2
.text:0000A2C2                               loc_A2C2                      ; CODE XREF: sub_A034+68↑j
.text:0000A2C2                                                             ; sub_A034+B4↑j
.text:0000A2C2                                                             ; sub_A034+12E↑j
.text:0000A2C2                                                             ; sub_A034+14C↑j
.text:0000A2C2                                                             ; sub_A034+154↑j
.text:0000A2C2                                                             ; sub_A034+26E↑j
.text:0000A2C2 07 49                         LDR             R1, =(__stack_chk_guard_ptr - 0xA2CA) ; jumptable 0000A162 cases 180-183
.text:0000A2C4 02 9A                         LDR             R2, [SP,#0x30+var_28]
.text:0000A2C6 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:0000A2C8 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:0000A2CA 09 68                         LDR             R1, [R1]
.text:0000A2CC 89 1A                         SUBS            R1, R1, R2
.text:0000A2CE 04 BF                         ITT EQ
.text:0000A2D0 03 B0                         ADDEQ           SP, SP, #0xC
.text:0000A2D2 BD E8 F0 8F                   POPEQ.W         {R4-R11,PC}
.text:0000A2D2
.text:0000A2D6 F8 F7 86 EE                   BLX             __stack_chk_fail
.text:0000A2D6
.text:0000A2D6                               ; End of function sub_A034
.text:0000A2D6
.text:0000A2D6                               ; ---------------------------------------------------------------------------
.text:0000A2DA 00 BF                         ALIGN 4
.text:0000A2DC 4E 6D 00 00                   off_A2DC DCD __stack_chk_guard_ptr - 0xA046
.text:0000A2DC                                                             ; DATA XREF: sub_A034+8↑r
.text:0000A2E0 CA 6A 00 00                   off_A2E0 DCD __stack_chk_guard_ptr - 0xA2CA
.text:0000A2E0                                                             ; DATA XREF: sub_A034:loc_A2C2↑r
.text:0000A2E0                               ; } // starts at A034
.text:0000A2E4                               ; ---------------------------------------------------------------------------
.text:0000A2E4                               ; __unwind {
.text:0000A2E4 70 B5                         PUSH            {R4-R6,LR}
.text:0000A2E6 16 46                         MOV             R6, R2
.text:0000A2E8 05 46                         MOV             R5, R0
.text:0000A2EA 04 29                         CMP             R1, #4        ; switch 5 cases
.text:0000A2EC 37 D8                         BHI             def_A2F0      ; jumptable 0000A2F0 default case, case 2
.text:0000A2EC
.text:0000A2EE 04 9C                         LDR             R4, [SP,#0x10]
.text:0000A2F0 DF E8 01 F0                   TBB.W           [PC,R1]       ; switch jump
.text:0000A2F0
.text:0000A2F0                               ; ---------------------------------------------------------------------------
.text:0000A2F4 03                            jpt_A2F0 DCB 3                ; jump table for switch statement
.text:0000A2F5 1D                            DCB 0x1D
.text:0000A2F6 35                            DCB 0x35
.text:0000A2F7 0A                            DCB 0xA
.text:0000A2F8 12                            DCB 0x12
.text:0000A2F9 00                            ALIGN 2
.text:0000A2FA
.text:0000A2FA                               loc_A2FA                      ; CODE XREF: .text:0000A2F0↑j
.text:0000A2FA 02 20                         MOVS            R0, #2        ; jumptable 0000A2F0 case 0
.text:0000A2FC 0F 2E                         CMP             R6, #0xF
.text:0000A2FE 23 D8                         BHI             locret_A348
.text:0000A2FE
.text:0000A300 13 BB                         CBNZ            R3, locret_A348
.text:0000A300
.text:0000A302 28 46                         MOV             R0, R5
.text:0000A304 31 46                         MOV             R1, R6
.text:0000A306 0E E0                         B               loc_A326
.text:0000A306
.text:0000A308                               ; ---------------------------------------------------------------------------
.text:0000A308
.text:0000A308                               loc_A308                      ; CODE XREF: .text:0000A2F0↑j
.text:0000A308 02 20                         MOVS            R0, #2        ; jumptable 0000A2F0 case 3
.text:0000A30A 1F 2E                         CMP             R6, #0x1F
.text:0000A30C 1C D8                         BHI             locret_A348
.text:0000A30C
.text:0000A30E 05 2B                         CMP             R3, #5
.text:0000A310 1A D1                         BNE             locret_A348
.text:0000A310
.text:0000A312 06 F1 70 01                   ADD.W           R1, R6, #0x70 ; 'p'
.text:0000A316 1A E0                         B               loc_A34E
.text:0000A316
.text:0000A318                               ; ---------------------------------------------------------------------------
.text:0000A318
.text:0000A318                               loc_A318                      ; CODE XREF: .text:0000A2F0↑j
.text:0000A318 02 20                         MOVS            R0, #2        ; jumptable 0000A2F0 case 4
.text:0000A31A 03 2E                         CMP             R6, #3
.text:0000A31C 14 D8                         BHI             locret_A348
.text:0000A31C
.text:0000A31E 9B B9                         CBNZ            R3, locret_A348
.text:0000A31E
.text:0000A320 06 F1 C0 01                   ADD.W           R1, R6, #0xC0
.text:0000A324 28 46                         MOV             R0, R5
.text:0000A324
.text:0000A326
.text:0000A326                               loc_A326                      ; CODE XREF: .text:0000A306↑j
.text:0000A326 22 46                         MOV             R2, R4
.text:0000A328 00 F0 FE FA                   BL              sub_A928
.text:0000A328
.text:0000A32C 13 E0                         B               loc_A356
.text:0000A32C
.text:0000A32E                               ; ---------------------------------------------------------------------------
.text:0000A32E
.text:0000A32E                               loc_A32E                      ; CODE XREF: .text:0000A2F0↑j
.text:0000A32E 05 2B                         CMP             R3, #5        ; jumptable 0000A2F0 case 1
.text:0000A330 07 D0                         BEQ             loc_A342
.text:0000A330
.text:0000A332 01 2B                         CMP             R3, #1
.text:0000A334 07 D1                         BNE             loc_A346
.text:0000A334
.text:0000A336 0F 2E                         CMP             R6, #0xF
.text:0000A338 05 D8                         BHI             loc_A346
.text:0000A338
.text:0000A33A 28 46                         MOV             R0, R5
.text:0000A33C 00 F0 7C FB                   BL              sub_AA38
.text:0000A33C
.text:0000A340 03 E0                         B               loc_A34A
.text:0000A340
.text:0000A342                               ; ---------------------------------------------------------------------------
.text:0000A342
.text:0000A342                               loc_A342                      ; CODE XREF: .text:0000A330↑j
.text:0000A342 1F 2E                         CMP             R6, #0x1F
.text:0000A344 01 D9                         BLS             loc_A34A
.text:0000A344
.text:0000A346
.text:0000A346                               loc_A346                      ; CODE XREF: .text:0000A334↑j
.text:0000A346                                                             ; .text:0000A338↑j
.text:0000A346 02 20                         MOVS            R0, #2
.text:0000A346
.text:0000A348
.text:0000A348                               locret_A348                   ; CODE XREF: .text:0000A2FE↑j
.text:0000A348                                                             ; .text:0000A300↑j
.text:0000A348                                                             ; .text:0000A30C↑j
.text:0000A348                                                             ; .text:0000A310↑j
.text:0000A348                                                             ; .text:0000A31C↑j
.text:0000A348                                                             ; .text:0000A31E↑j
.text:0000A348 70 BD                         POP             {R4-R6,PC}
.text:0000A348
.text:0000A34A                               ; ---------------------------------------------------------------------------
.text:0000A34A
.text:0000A34A                               loc_A34A                      ; CODE XREF: .text:0000A340↑j
.text:0000A34A                                                             ; .text:0000A344↑j
.text:0000A34A 06 F5 80 71                   ADD.W           R1, R6, #0x100
.text:0000A34A
.text:0000A34E
.text:0000A34E                               loc_A34E                      ; CODE XREF: .text:0000A316↑j
.text:0000A34E 28 46                         MOV             R0, R5
.text:0000A350 22 46                         MOV             R2, R4
.text:0000A352 00 F0 22 FB                   BL              sub_A99A
.text:0000A352
.text:0000A356
.text:0000A356                               loc_A356                      ; CODE XREF: .text:0000A32C↑j
.text:0000A356 00 28                         CMP             R0, #0
.text:0000A358 18 BF                         IT NE
.text:0000A35A 02 20                         MOVNE           R0, #2
.text:0000A35C 70 BD                         POP             {R4-R6,PC}
.text:0000A35C
.text:0000A35E                               ; ---------------------------------------------------------------------------
.text:0000A35E
.text:0000A35E                               def_A2F0                      ; CODE XREF: .text:0000A2EC↑j
.text:0000A35E                                                             ; .text:0000A2F0↑j
.text:0000A35E 04 48                         LDR             R0, =(aUnwindVrsResul_1 - 0xA36A) ; jumptable 0000A2F0 default case, case 2
.text:0000A360 40 F2 75 31                   MOVW            R1, #0x375
.text:0000A364 03 4A                         LDR             R2, =(aUnsupportedReg - 0xA36C) ; "unsupported register class"
.text:0000A366 78 44                         ADD             R0, PC        ; "_Unwind_VRS_Result _Unwind_VRS_Get_Inte"...
.text:0000A368 7A 44                         ADD             R2, PC        ; "unsupported register class"
.text:0000A36A 00 F0 13 FA                   BL              sub_A794
.text:0000A36A
.text:0000A36A                               ; ---------------------------------------------------------------------------
.text:0000A36E 00 BF                         ALIGN 0x10
.text:0000A370 D8 41 00 00                   off_A370 DCD aUnwindVrsResul_1 - 0xA36A
.text:0000A370                                                             ; DATA XREF: .text:def_A2F0↑r
.text:0000A370                                                             ; "_Unwind_VRS_Result _Unwind_VRS_Get_Inte"...
.text:0000A374 7A 40 00 00                   off_A374 DCD aUnsupportedReg - 0xA36C
.text:0000A374                                                             ; DATA XREF: .text:0000A364↑r
.text:0000A374                                                             ; "unsupported register class"
.text:0000A378
.text:0000A378                               ; =============== S U B R O U T I N E =======================================
.text:0000A378
.text:0000A378
.text:0000A378                               ; int __fastcall sub_A378(int, int, unsigned int, int, int *)
.text:0000A378                               sub_A378                      ; CODE XREF: sub_A414+64↓p
.text:0000A378                                                             ; sub_A414+D2↓p
.text:0000A378
.text:0000A378                               arg_0=  0
.text:0000A378
.text:0000A378 70 B5                         PUSH            {R4-R6,LR}
.text:0000A37A 15 46                         MOV             R5, R2
.text:0000A37C 04 46                         MOV             R4, R0
.text:0000A37E 04 29                         CMP             R1, #4        ; switch 5 cases
.text:0000A380 3B D8                         BHI             def_A384      ; jumptable 0000A384 default case, case 2
.text:0000A380
.text:0000A382 04 9E                         LDR             R6, [SP,#0x10+arg_0]
.text:0000A384 DF E8 01 F0                   TBB.W           [PC,R1]       ; switch jump
.text:0000A384
.text:0000A384                               ; ---------------------------------------------------------------------------
.text:0000A388 03                            jpt_A384 DCB 3                ; jump table for switch statement
.text:0000A389 20                            DCB 0x20
.text:0000A38A 39                            DCB 0x39
.text:0000A38B 0B                            DCB 0xB
.text:0000A38C 15                            DCB 0x15
.text:0000A38D 00                            ALIGN 2
.text:0000A38E
.text:0000A38E                               loc_A38E                      ; CODE XREF: sub_A378+C↑j
.text:0000A38E 02 20                         MOVS            R0, #2        ; jumptable 0000A384 case 0
.text:0000A390 0F 2D                         CMP             R5, #0xF
.text:0000A392 26 D8                         BHI             locret_A3E2
.text:0000A392
.text:0000A394 2B BB                         CBNZ            R3, locret_A3E2
.text:0000A394
.text:0000A396 32 68                         LDR             R2, [R6]
.text:0000A398 20 46                         MOV             R0, R4
.text:0000A39A 29 46                         MOV             R1, R5
.text:0000A39C 11 E0                         B               loc_A3C2
.text:0000A39C
.text:0000A39E                               ; ---------------------------------------------------------------------------
.text:0000A39E
.text:0000A39E                               loc_A39E                      ; CODE XREF: sub_A378+C↑j
.text:0000A39E 02 20                         MOVS            R0, #2        ; jumptable 0000A384 case 3
.text:0000A3A0 1F 2D                         CMP             R5, #0x1F
.text:0000A3A2 1E D8                         BHI             locret_A3E2
.text:0000A3A2
.text:0000A3A4 05 2B                         CMP             R3, #5
.text:0000A3A6 1C D1                         BNE             locret_A3E2
.text:0000A3A6
.text:0000A3A8 D6 E9 00 23                   LDRD.W          R2, R3, [R6]
.text:0000A3AC 05 F1 70 01                   ADD.W           R1, R5, #0x70 ; 'p'
.text:0000A3B0 1C E0                         B               loc_A3EC
.text:0000A3B0
.text:0000A3B2                               ; ---------------------------------------------------------------------------
.text:0000A3B2
.text:0000A3B2                               loc_A3B2                      ; CODE XREF: sub_A378+C↑j
.text:0000A3B2 02 20                         MOVS            R0, #2        ; jumptable 0000A384 case 4
.text:0000A3B4 03 2D                         CMP             R5, #3
.text:0000A3B6 14 D8                         BHI             locret_A3E2
.text:0000A3B6
.text:0000A3B8 9B B9                         CBNZ            R3, locret_A3E2
.text:0000A3B8
.text:0000A3BA 32 68                         LDR             R2, [R6]
.text:0000A3BC 05 F1 C0 01                   ADD.W           R1, R5, #0xC0
.text:0000A3C0 20 46                         MOV             R0, R4
.text:0000A3C0
.text:0000A3C2
.text:0000A3C2                               loc_A3C2                      ; CODE XREF: sub_A378+24↑j
.text:0000A3C2 00 F0 C8 FA                   BL              sub_A956
.text:0000A3C2
.text:0000A3C6 14 E0                         B               loc_A3F2
.text:0000A3C6
.text:0000A3C8                               ; ---------------------------------------------------------------------------
.text:0000A3C8
.text:0000A3C8                               loc_A3C8                      ; CODE XREF: sub_A378+C↑j
.text:0000A3C8 05 2B                         CMP             R3, #5        ; jumptable 0000A384 case 1
.text:0000A3CA 07 D0                         BEQ             loc_A3DC
.text:0000A3CA
.text:0000A3CC 01 2B                         CMP             R3, #1
.text:0000A3CE 07 D1                         BNE             loc_A3E0
.text:0000A3CE
.text:0000A3D0 0F 2D                         CMP             R5, #0xF
.text:0000A3D2 05 D8                         BHI             loc_A3E0
.text:0000A3D2
.text:0000A3D4 20 46                         MOV             R0, R4
.text:0000A3D6 00 F0 2F FB                   BL              sub_AA38
.text:0000A3D6
.text:0000A3DA 03 E0                         B               loc_A3E4
.text:0000A3DA
.text:0000A3DC                               ; ---------------------------------------------------------------------------
.text:0000A3DC
.text:0000A3DC                               loc_A3DC                      ; CODE XREF: sub_A378+52↑j
.text:0000A3DC 1F 2D                         CMP             R5, #0x1F
.text:0000A3DE 01 D9                         BLS             loc_A3E4
.text:0000A3DE
.text:0000A3E0
.text:0000A3E0                               loc_A3E0                      ; CODE XREF: sub_A378+56↑j
.text:0000A3E0                                                             ; sub_A378+5A↑j
.text:0000A3E0 02 20                         MOVS            R0, #2
.text:0000A3E0
.text:0000A3E2
.text:0000A3E2                               locret_A3E2                   ; CODE XREF: sub_A378+1A↑j
.text:0000A3E2                                                             ; sub_A378+1C↑j
.text:0000A3E2                                                             ; sub_A378+2A↑j
.text:0000A3E2                                                             ; sub_A378+2E↑j
.text:0000A3E2                                                             ; sub_A378+3E↑j
.text:0000A3E2                                                             ; sub_A378+40↑j
.text:0000A3E2 70 BD                         POP             {R4-R6,PC}
.text:0000A3E2
.text:0000A3E4                               ; ---------------------------------------------------------------------------
.text:0000A3E4
.text:0000A3E4                               loc_A3E4                      ; CODE XREF: sub_A378+62↑j
.text:0000A3E4                                                             ; sub_A378+66↑j
.text:0000A3E4 D6 E9 00 23                   LDRD.W          R2, R3, [R6]
.text:0000A3E8 05 F5 80 71                   ADD.W           R1, R5, #0x100
.text:0000A3E8
.text:0000A3EC
.text:0000A3EC                               loc_A3EC                      ; CODE XREF: sub_A378+38↑j
.text:0000A3EC 20 46                         MOV             R0, R4
.text:0000A3EE 00 F0 EC FA                   BL              sub_A9CA
.text:0000A3EE
.text:0000A3F2
.text:0000A3F2                               loc_A3F2                      ; CODE XREF: sub_A378+4E↑j
.text:0000A3F2 00 28                         CMP             R0, #0
.text:0000A3F4 18 BF                         IT NE
.text:0000A3F6 02 20                         MOVNE           R0, #2
.text:0000A3F8 70 BD                         POP             {R4-R6,PC}
.text:0000A3F8
.text:0000A3FA                               ; ---------------------------------------------------------------------------
.text:0000A3FA
.text:0000A3FA                               def_A384                      ; CODE XREF: sub_A378+8↑j
.text:0000A3FA                                                             ; sub_A378+C↑j
.text:0000A3FA 04 48                         LDR             R0, =(aUnwindVrsResul - 0xA406) ; jumptable 0000A384 default case, case 2
.text:0000A3FC 40 F2 45 31                   MOVW            R1, #0x345
.text:0000A400 03 4A                         LDR             R2, =(aUnsupportedReg - 0xA408) ; "unsupported register class"
.text:0000A402 78 44                         ADD             R0, PC        ; "_Unwind_VRS_Result _Unwind_VRS_Set(_Unw"...
.text:0000A404 7A 44                         ADD             R2, PC        ; "unsupported register class"
.text:0000A406 00 F0 C5 F9                   BL              sub_A794
.text:0000A406
.text:0000A406                               ; End of function sub_A378
.text:0000A406
.text:0000A406                               ; ---------------------------------------------------------------------------
.text:0000A40A 00 BF                         ALIGN 4
.text:0000A40C 62 3F 00 00                   off_A40C DCD aUnwindVrsResul - 0xA406
.text:0000A40C                                                             ; DATA XREF: sub_A378:def_A384↑r
.text:0000A40C                                                             ; "_Unwind_VRS_Result _Unwind_VRS_Set(_Unw"...
.text:0000A410 DE 3F 00 00                   off_A410 DCD aUnsupportedReg - 0xA408
.text:0000A410                                                             ; DATA XREF: sub_A378+88↑r
.text:0000A410                               ; } // starts at A2E4         ; "unsupported register class"
.text:0000A414
.text:0000A414                               ; =============== S U B R O U T I N E =======================================
.text:0000A414
.text:0000A414
.text:0000A414                               ; int __fastcall sub_A414(int, int, unsigned int, int)
.text:0000A414                               sub_A414                      ; CODE XREF: sub_A034+F4↑p
.text:0000A414                                                             ; sub_A034:loc_A1F6↑p
.text:0000A414                                                             ; sub_A034:loc_A288↑p
.text:0000A414
.text:0000A414                               var_38= -0x38
.text:0000A414                               var_30= -0x30
.text:0000A414                               var_28= -0x28
.text:0000A414                               var_24= -0x24
.text:0000A414
.text:0000A414                               ; __unwind {
.text:0000A414 2D E9 F0 47                   PUSH.W          {R4-R10,LR}
.text:0000A418 86 B0                         SUB             SP, SP, #0x18
.text:0000A41A 80 46                         MOV             R8, R0
.text:0000A41C 48 48                         LDR             R0, =(__stack_chk_guard_ptr - 0xA426)
.text:0000A41E 0D 46                         MOV             R5, R1
.text:0000A420 1F 46                         MOV             R7, R3
.text:0000A422 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:0000A424 16 46                         MOV             R6, R2
.text:0000A426 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:0000A428 04 2D                         CMP             R5, #4        ; switch 5 cases
.text:0000A42A 00 68                         LDR             R0, [R0]
.text:0000A42C 05 90                         STR             R0, [SP,#0x38+var_24]
.text:0000A42E 00 F2 7E 80                   BHI.W           def_A432      ; jumptable 0000A432 default case, case 2
.text:0000A42E
.text:0000A432 DF E8 05 F0                   TBB.W           [PC,R5]       ; switch jump
.text:0000A432
.text:0000A432                               ; ---------------------------------------------------------------------------
.text:0000A436 03                            jpt_A432 DCB 3                ; jump table for switch statement
.text:0000A437 37                            DCB 0x37
.text:0000A438 7C                            DCB 0x7C
.text:0000A439 37                            DCB 0x37
.text:0000A43A 03                            DCB 3
.text:0000A43B 00                            ALIGN 2
.text:0000A43C
.text:0000A43C                               loc_A43C                      ; CODE XREF: sub_A414+1E↑j
.text:0000A43C 00 2F                         CMP             R7, #0        ; jumptable 0000A432 cases 0,4
.text:0000A43E 5E D1                         BNE             loc_A4FE
.text:0000A43E
.text:0000A440 02 AA                         ADD             R2, SP, #0x38+var_30
.text:0000A442 40 46                         MOV             R0, R8
.text:0000A444 0D 21                         MOVS            R1, #0xD
.text:0000A446 00 F0 6F FA                   BL              sub_A928
.text:0000A446
.text:0000A44A 00 28                         CMP             R0, #0
.text:0000A44C 57 D1                         BNE             loc_A4FE
.text:0000A44C
.text:0000A44E 00 24                         MOVS            R4, #0
.text:0000A450 4F F0 01 09                   MOV.W           R9, #1
.text:0000A454 0D F1 10 0A                   ADD.W           R10, SP, #0x38+var_28
.text:0000A458 00 27                         MOVS            R7, #0
.text:0000A458
.text:0000A45A
.text:0000A45A                               loc_A45A                      ; CODE XREF: sub_A414+84↓j
.text:0000A45A 09 FA 07 F0                   LSL.W           R0, R9, R7
.text:0000A45E 30 42                         TST             R0, R6
.text:0000A460 18 D0                         BEQ             loc_A494
.text:0000A460
.text:0000A462 02 98                         LDR             R0, [SP,#0x38+var_30]
.text:0000A464 3A 46                         MOV             R2, R7
.text:0000A466 00 23                         MOVS            R3, #0
.text:0000A468 01 1D                         ADDS            R1, R0, #4
.text:0000A46A 02 91                         STR             R1, [SP,#0x38+var_30]
.text:0000A46C 29 46                         MOV             R1, R5
.text:0000A46E 00 68                         LDR             R0, [R0]
.text:0000A470 CD F8 00 A0                   STR.W           R10, [SP,#0x38+var_38]
.text:0000A474 04 90                         STR             R0, [SP,#0x38+var_28]
.text:0000A476 40 46                         MOV             R0, R8
.text:0000A478 FF F7 7E FF                   BL              sub_A378
.text:0000A478
.text:0000A47C 00 21                         MOVS            R1, #0
.text:0000A47E 00 22                         MOVS            R2, #0
.text:0000A480 0D 2F                         CMP             R7, #0xD
.text:0000A482 08 BF                         IT EQ
.text:0000A484 01 21                         MOVEQ           R1, #1
.text:0000A486 00 2D                         CMP             R5, #0
.text:0000A488 08 BF                         IT EQ
.text:0000A48A 01 22                         MOVEQ           R2, #1
.text:0000A48C B8 BB                         CBNZ            R0, loc_A4FE
.text:0000A48C
.text:0000A48E 02 EA 01 00                   AND.W           R0, R2, R1
.text:0000A492 04 43                         ORRS            R4, R0
.text:0000A492
.text:0000A494
.text:0000A494                               loc_A494                      ; CODE XREF: sub_A414+4C↑j
.text:0000A494 01 37                         ADDS            R7, #1
.text:0000A496 10 2F                         CMP             R7, #0x10
.text:0000A498 DF D3                         BCC             loc_A45A
.text:0000A498
.text:0000A49A 14 F0 01 0F                   TST.W           R4, #1
.text:0000A49E 3D D0                         BEQ             loc_A51C
.text:0000A49E
.text:0000A4A0 00 20                         MOVS            R0, #0
.text:0000A4A2 2D E0                         B               loc_A500
.text:0000A4A2
.text:0000A4A4                               ; ---------------------------------------------------------------------------
.text:0000A4A4
.text:0000A4A4                               loc_A4A4                      ; CODE XREF: sub_A414+1E↑j
.text:0000A4A4 47 F0 04 00                   ORR.W           R0, R7, #4    ; jumptable 0000A432 cases 1,3
.text:0000A4A8 05 28                         CMP             R0, #5
.text:0000A4AA 28 D1                         BNE             loc_A4FE
.text:0000A4AA
.text:0000A4AC 04 AA                         ADD             R2, SP, #0x38+var_28
.text:0000A4AE 40 46                         MOV             R0, R8
.text:0000A4B0 0D 21                         MOVS            R1, #0xD
.text:0000A4B2 00 F0 39 FA                   BL              sub_A928
.text:0000A4B2
.text:0000A4B6 10 BB                         CBNZ            R0, loc_A4FE
.text:0000A4B6
.text:0000A4B8 B0 B2                         UXTH            R0, R6
.text:0000A4BA D0 B1                         CBZ             R0, loc_A4F2
.text:0000A4BA
.text:0000A4BC 34 0C                         LSRS            R4, R6, #0x10
.text:0000A4BE 0D F1 08 09                   ADD.W           R9, SP, #0x38+var_30
.text:0000A4C2 14 FA 86 F6                   UXTAH.W         R6, R4, R6
.text:0000A4C2
.text:0000A4C6
.text:0000A4C6                               loc_A4C6                      ; CODE XREF: sub_A414+DC↓j
.text:0000A4C6 04 98                         LDR             R0, [SP,#0x38+var_28]
.text:0000A4C8 3B 46                         MOV             R3, R7
.text:0000A4CA 01 1D                         ADDS            R1, R0, #4
.text:0000A4CC 04 91                         STR             R1, [SP,#0x38+var_28]
.text:0000A4CE 01 46                         MOV             R1, R0
.text:0000A4D0 51 F8 08 2B                   LDR.W           R2, [R1],#8
.text:0000A4D4 04 91                         STR             R1, [SP,#0x38+var_28]
.text:0000A4D6 29 46                         MOV             R1, R5
.text:0000A4D8 40 68                         LDR             R0, [R0,#4]
.text:0000A4DA CD E9 02 20                   STRD.W          R2, R0, [SP,#0x38+var_30]
.text:0000A4DE 40 46                         MOV             R0, R8
.text:0000A4E0 22 46                         MOV             R2, R4
.text:0000A4E2 CD F8 00 90                   STR.W           R9, [SP,#0x38+var_38]
.text:0000A4E6 FF F7 47 FF                   BL              sub_A378
.text:0000A4E6
.text:0000A4EA 40 B9                         CBNZ            R0, loc_A4FE
.text:0000A4EA
.text:0000A4EC 01 34                         ADDS            R4, #1
.text:0000A4EE B4 42                         CMP             R4, R6
.text:0000A4F0 E9 D3                         BCC             loc_A4C6
.text:0000A4F0
.text:0000A4F2
.text:0000A4F2                               loc_A4F2                      ; CODE XREF: sub_A414+A6↑j
.text:0000A4F2 01 2F                         CMP             R7, #1
.text:0000A4F4 10 D1                         BNE             loc_A518
.text:0000A4F4
.text:0000A4F6 04 98                         LDR             R0, [SP,#0x38+var_28]
.text:0000A4F8 02 1D                         ADDS            R2, R0, #4
.text:0000A4FA 04 92                         STR             R2, [SP,#0x38+var_28]
.text:0000A4FC 0F E0                         B               loc_A51E
.text:0000A4FC
.text:0000A4FE                               ; ---------------------------------------------------------------------------
.text:0000A4FE
.text:0000A4FE                               loc_A4FE                      ; CODE XREF: sub_A414+2A↑j
.text:0000A4FE                                                             ; sub_A414+38↑j
.text:0000A4FE                                                             ; sub_A414+78↑j
.text:0000A4FE                                                             ; sub_A414+96↑j
.text:0000A4FE                                                             ; sub_A414+A2↑j
.text:0000A4FE                                                             ; sub_A414+D6↑j
.text:0000A4FE 02 20                         MOVS            R0, #2
.text:0000A4FE
.text:0000A500
.text:0000A500                               loc_A500                      ; CODE XREF: sub_A414+8E↑j
.text:0000A500                                                             ; sub_A414+118↓j
.text:0000A500 10 49                         LDR             R1, =(__stack_chk_guard_ptr - 0xA508)
.text:0000A502 05 9A                         LDR             R2, [SP,#0x38+var_24]
.text:0000A504 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:0000A506 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:0000A508 09 68                         LDR             R1, [R1]
.text:0000A50A 89 1A                         SUBS            R1, R1, R2
.text:0000A50C 04 BF                         ITT EQ
.text:0000A50E 06 B0                         ADDEQ           SP, SP, #0x18
.text:0000A510 BD E8 F0 87                   POPEQ.W         {R4-R10,PC}
.text:0000A510
.text:0000A514 F8 F7 66 ED                   BLX             __stack_chk_fail
.text:0000A514
.text:0000A518                               ; ---------------------------------------------------------------------------
.text:0000A518
.text:0000A518                               loc_A518                      ; CODE XREF: sub_A414+E0↑j
.text:0000A518 04 9A                         LDR             R2, [SP,#0x38+var_28]
.text:0000A51A 00 E0                         B               loc_A51E
.text:0000A51A
.text:0000A51C                               ; ---------------------------------------------------------------------------
.text:0000A51C
.text:0000A51C                               loc_A51C                      ; CODE XREF: sub_A414+8A↑j
.text:0000A51C 02 9A                         LDR             R2, [SP,#0x38+var_30]
.text:0000A51C
.text:0000A51E
.text:0000A51E                               loc_A51E                      ; CODE XREF: sub_A414+E8↑j
.text:0000A51E                                                             ; sub_A414+106↑j
.text:0000A51E 40 46                         MOV             R0, R8
.text:0000A520 0D 21                         MOVS            R1, #0xD
.text:0000A522 00 F0 18 FA                   BL              sub_A956
.text:0000A522
.text:0000A526 00 28                         CMP             R0, #0
.text:0000A528 18 BF                         IT NE
.text:0000A52A 02 20                         MOVNE           R0, #2
.text:0000A52C E8 E7                         B               loc_A500
.text:0000A52C
.text:0000A52E                               ; ---------------------------------------------------------------------------
.text:0000A52E
.text:0000A52E                               def_A432                      ; CODE XREF: sub_A414+1A↑j
.text:0000A52E                                                             ; sub_A414+1E↑j
.text:0000A52E 06 48                         LDR             R0, =(aUnwindVrsResul_0 - 0xA53A) ; jumptable 0000A432 default case, case 2
.text:0000A530 40 F2 CB 31                   MOVW            R1, #0x3CB
.text:0000A534 05 4A                         LDR             R2, =(aUnsupportedReg - 0xA53C) ; "unsupported register class"
.text:0000A536 78 44                         ADD             R0, PC        ; "_Unwind_VRS_Result _Unwind_VRS_Pop(_Unw"...
.text:0000A538 7A 44                         ADD             R2, PC        ; "unsupported register class"
.text:0000A53A 00 F0 2B F9                   BL              sub_A794
.text:0000A53A
.text:0000A53A                               ; End of function sub_A414
.text:0000A53A
.text:0000A53A                               ; ---------------------------------------------------------------------------
.text:0000A53E 00 BF                         ALIGN 0x10
.text:0000A540 6E 69 00 00                   off_A540 DCD __stack_chk_guard_ptr - 0xA426
.text:0000A540                                                             ; DATA XREF: sub_A414+8↑r
.text:0000A544 8C 68 00 00                   off_A544 DCD __stack_chk_guard_ptr - 0xA508
.text:0000A544                                                             ; DATA XREF: sub_A414:loc_A500↑r
.text:0000A548 C7 3E 00 00                   off_A548 DCD aUnwindVrsResul_0 - 0xA53A
.text:0000A548                                                             ; DATA XREF: sub_A414:def_A432↑r
.text:0000A548                                                             ; "_Unwind_VRS_Result _Unwind_VRS_Pop(_Unw"...
.text:0000A54C AA 3E 00 00                   off_A54C DCD aUnsupportedReg - 0xA53C
.text:0000A54C                                                             ; DATA XREF: sub_A414+120↑r
.text:0000A54C                               ; } // starts at A414         ; "unsupported register class"
.text:0000A550
.text:0000A550                               ; =============== S U B R O U T I N E =======================================
.text:0000A550
.text:0000A550
.text:0000A550                               ; int __fastcall sub_A550(int, int, int)
.text:0000A550                               sub_A550                      ; DATA XREF: sub_AF58+C2↓o
.text:0000A550                                                             ; .got:off_10E0C↓o
.text:0000A550                               ; __unwind {
.text:0000A550 08 46                         MOV             R0, R1
.text:0000A552 11 46                         MOV             R1, R2
.text:0000A554 00 F0 00 B8                   B.W             sub_A558
.text:0000A554                               ; } // starts at A550
.text:0000A554
.text:0000A554                               ; End of function sub_A550
.text:0000A554
.text:0000A558
.text:0000A558                               ; =============== S U B R O U T I N E =======================================
.text:0000A558
.text:0000A558
.text:0000A558                               ; int __fastcall sub_A558(int, int)
.text:0000A558                               sub_A558                      ; CODE XREF: sub_A550+4↑j
.text:0000A558                                                             ; sub_A5B4+4↓j
.text:0000A558                                                             ; sub_A5BC+4↓j
.text:0000A558
.text:0000A558                               var_3C= -0x3C
.text:0000A558                               var_34= -0x34
.text:0000A558                               var_14= -0x14
.text:0000A558
.text:0000A558                               ; __unwind {
.text:0000A558 B0 B5                         PUSH            {R4,R5,R7,LR}
.text:0000A55A 8C B0                         SUB             SP, SP, #0x30
.text:0000A55C 05 46                         MOV             R5, R0
.text:0000A55E 13 48                         LDR             R0, =(__stack_chk_guard_ptr - 0xA568)
.text:0000A560 0C 46                         MOV             R4, R1
.text:0000A562 01 A9                         ADD             R1, SP, #0x40+var_3C
.text:0000A564 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:0000A566 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:0000A568 00 68                         LDR             R0, [R0]
.text:0000A56A 0B 90                         STR             R0, [SP,#0x40+var_14]
.text:0000A56C 20 46                         MOV             R0, R4
.text:0000A56E 00 F0 4B FA                   BL              sub_AA08
.text:0000A56E
.text:0000A572 95 F8 50 00                   LDRB.W          R0, [R5,#0x50]
.text:0000A576 10 F0 01 0F                   TST.W           R0, #1
.text:0000A57A 04 D1                         BNE             loc_A586
.text:0000A57A
.text:0000A57C 03 98                         LDR             R0, [SP,#0x40+var_34]
.text:0000A57E 00 68                         LDR             R0, [R0]
.text:0000A580 08 B1                         CBZ             R0, loc_A586
.text:0000A580
.text:0000A582 09 20                         MOVS            R0, #9
.text:0000A584 07 E0                         B               loc_A596
.text:0000A584
.text:0000A586                               ; ---------------------------------------------------------------------------
.text:0000A586
.text:0000A586                               loc_A586                      ; CODE XREF: sub_A558+22↑j
.text:0000A586                                                             ; sub_A558+28↑j
.text:0000A586 20 46                         MOV             R0, R4
.text:0000A588 00 F0 3B FA                   BL              sub_AA02
.text:0000A588
.text:0000A58C 01 46                         MOV             R1, R0
.text:0000A58E 09 20                         MOVS            R0, #9
.text:0000A590 01 29                         CMP             R1, #1
.text:0000A592 08 BF                         IT EQ
.text:0000A594 08 20                         MOVEQ           R0, #8
.text:0000A594
.text:0000A596
.text:0000A596                               loc_A596                      ; CODE XREF: sub_A558+2C↑j
.text:0000A596 06 49                         LDR             R1, =(__stack_chk_guard_ptr - 0xA59E)
.text:0000A598 0B 9A                         LDR             R2, [SP,#0x40+var_14]
.text:0000A59A 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:0000A59C 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:0000A59E 09 68                         LDR             R1, [R1]
.text:0000A5A0 89 1A                         SUBS            R1, R1, R2
.text:0000A5A2 04 BF                         ITT EQ
.text:0000A5A4 0C B0                         ADDEQ           SP, SP, #0x30 ; '0'
.text:0000A5A6 B0 BD                         POPEQ           {R4,R5,R7,PC}
.text:0000A5A6
.text:0000A5A8 F8 F7 1C ED                   BLX             __stack_chk_fail
.text:0000A5A8
.text:0000A5A8                               ; End of function sub_A558
.text:0000A5A8
.text:0000A5A8                               ; ---------------------------------------------------------------------------
.text:0000A5AC 2C 68 00 00                   off_A5AC DCD __stack_chk_guard_ptr - 0xA568
.text:0000A5AC                                                             ; DATA XREF: sub_A558+6↑r
.text:0000A5B0 F6 67 00 00                   off_A5B0 DCD __stack_chk_guard_ptr - 0xA59E
.text:0000A5B0                                                             ; DATA XREF: sub_A558:loc_A596↑r
.text:0000A5B0                               ; } // starts at A558
.text:0000A5B4
.text:0000A5B4                               ; =============== S U B R O U T I N E =======================================
.text:0000A5B4
.text:0000A5B4
.text:0000A5B4                               ; int __fastcall sub_A5B4(int, int, int)
.text:0000A5B4                               sub_A5B4                      ; DATA XREF: sub_AF58+DA↓o
.text:0000A5B4                                                             ; .got:off_10E08↓o
.text:0000A5B4                               ; __unwind {
.text:0000A5B4 08 46                         MOV             R0, R1
.text:0000A5B6 11 46                         MOV             R1, R2
.text:0000A5B8 FF F7 CE BF                   B.W             sub_A558
.text:0000A5B8
.text:0000A5B8                               ; End of function sub_A5B4
.text:0000A5B8
.text:0000A5BC
.text:0000A5BC                               ; =============== S U B R O U T I N E =======================================
.text:0000A5BC
.text:0000A5BC
.text:0000A5BC                               ; int __fastcall sub_A5BC(int, int, int)
.text:0000A5BC                               sub_A5BC                      ; DATA XREF: sub_AF58+CE↓o
.text:0000A5BC                                                             ; .got:off_10E04↓o
.text:0000A5BC 08 46                         MOV             R0, R1
.text:0000A5BE 11 46                         MOV             R1, R2
.text:0000A5C0 FF F7 CA BF                   B.W             sub_A558
.text:0000A5C0                               ; } // starts at A5B4
.text:0000A5C0
.text:0000A5C0                               ; End of function sub_A5BC
.text:0000A5C0
.text:0000A5C4
.text:0000A5C4                               ; =============== S U B R O U T I N E =======================================
.text:0000A5C4
.text:0000A5C4
.text:0000A5C4                               ; int __fastcall sub_A5C4(int *, int, int, int)
.text:0000A5C4                               sub_A5C4
.text:0000A5C4
.text:0000A5C4                               var_8A0= -0x8A0
.text:0000A5C4                               var_894= -0x894
.text:0000A5C4                               var_88C= -0x88C
.text:0000A5C4                               var_880= -0x880
.text:0000A5C4                               var_878= -0x878
.text:0000A5C4                               var_478= -0x478
.text:0000A5C4                               var_18= -0x18
.text:0000A5C4
.text:0000A5C4                               ; __unwind {
.text:0000A5C4 F0 B5                         PUSH            {R4-R7,LR}
.text:0000A5C6 AD F5 08 6D                   SUB.W           SP, SP, #0x880
.text:0000A5CA 83 B0                         SUB             SP, SP, #0xC
.text:0000A5CC 04 46                         MOV             R4, R0
.text:0000A5CE 26 48                         LDR             R0, =(__stack_chk_guard_ptr - 0xA5D6)
.text:0000A5D0 0A AD                         ADD             R5, SP, #0x8A0+var_878
.text:0000A5D2 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:0000A5D4 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:0000A5D6 00 68                         LDR             R0, [R0]
.text:0000A5D8 CD F8 88 08                   STR.W           R0, [SP,#0x8A0+var_18]
.text:0000A5DC 28 46                         MOV             R0, R5
.text:0000A5DE 00 F0 3E E9                   BLX             sub_A85C
.text:0000A5DE
.text:0000A5E2 00 20                         MOVS            R0, #0
.text:0000A5E4 0D F5 85 66                   ADD.W           R6, SP, #0x8A0+var_478
.text:0000A5E8 E0 60                         STR             R0, [R4,#0xC]
.text:0000A5EA 30 46                         MOV             R0, R6
.text:0000A5EC 29 46                         MOV             R1, R5
.text:0000A5EE 00 F0 79 F9                   BL              sub_A8E4
.text:0000A5EE
.text:0000A5F2 69 46                         MOV             R1, SP
.text:0000A5F4 30 46                         MOV             R0, R6
.text:0000A5F6 00 F0 07 FA                   BL              sub_AA08
.text:0000A5F6
.text:0000A5FA B8 B9                         CBNZ            R0, loc_A62C
.text:0000A5FA
.text:0000A5FC 0D F5 85 66                   ADD.W           R6, SP, #0x8A0+var_478
.text:0000A600 6F 46                         MOV             R7, SP
.text:0000A602 03 25                         MOVS            R5, #3
.text:0000A602
.text:0000A604
.text:0000A604                               loc_A604                      ; CODE XREF: sub_A5C4+66↓j
.text:0000A604 03 9B                         LDR             R3, [SP,#0x8A0+var_894]
.text:0000A606 5B B1                         CBZ             R3, loc_A620
.text:0000A606
.text:0000A608 00 98                         LDR             R0, [SP,#0x8A0+var_8A0]
.text:0000A60A 21 46                         MOV             R1, R4
.text:0000A60C 32 46                         MOV             R2, R6
.text:0000A60E A0 64                         STR             R0, [R4,#0x48]
.text:0000A610 08 98                         LDR             R0, [SP,#0x8A0+var_880]
.text:0000A612 E0 64                         STR             R0, [R4,#0x4C]
.text:0000A614 05 98                         LDR             R0, [SP,#0x8A0+var_88C]
.text:0000A616 20 65                         STR             R0, [R4,#0x50]
.text:0000A618 00 20                         MOVS            R0, #0
.text:0000A61A 98 47                         BLX             R3
.text:0000A61A
.text:0000A61C 08 28                         CMP             R0, #8
.text:0000A61E 15 D1                         BNE             loc_A64C
.text:0000A61E
.text:0000A620
.text:0000A620                               loc_A620                      ; CODE XREF: sub_A5C4+42↑j
.text:0000A620 30 46                         MOV             R0, R6
.text:0000A622 39 46                         MOV             R1, R7
.text:0000A624 00 F0 F0 F9                   BL              sub_AA08
.text:0000A624
.text:0000A628 00 28                         CMP             R0, #0
.text:0000A62A EB D0                         BEQ             loc_A604
.text:0000A62A
.text:0000A62C
.text:0000A62C                               loc_A62C                      ; CODE XREF: sub_A5C4+36↑j
.text:0000A62C 03 25                         MOVS            R5, #3
.text:0000A62C
.text:0000A62E
.text:0000A62E                               loc_A62E                      ; CODE XREF: sub_A5C4+92↓j
.text:0000A62E                                                             ; sub_A5C4+A0↓j
.text:0000A62E 0F 48                         LDR             R0, =(__stack_chk_guard_ptr - 0xA638)
.text:0000A630 DD F8 88 18                   LDR.W           R1, [SP,#0x8A0+var_18]
.text:0000A634 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:0000A636 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:0000A638 00 68                         LDR             R0, [R0]
.text:0000A63A 40 1A                         SUBS            R0, R0, R1
.text:0000A63C 01 BF                         ITTTT EQ
.text:0000A63E 28 46                         MOVEQ           R0, R5
.text:0000A640 0D F5 08 6D                   ADDEQ.W         SP, SP, #0x880
.text:0000A644 03 B0                         ADDEQ           SP, SP, #0xC
.text:0000A646 F0 BD                         POPEQ           {R4-R7,PC}
.text:0000A646
.text:0000A648 F8 F7 CC EC                   BLX             __stack_chk_fail
.text:0000A648
.text:0000A64C                               ; ---------------------------------------------------------------------------
.text:0000A64C
.text:0000A64C                               loc_A64C                      ; CODE XREF: sub_A5C4+5A↑j
.text:0000A64C 06 28                         CMP             R0, #6
.text:0000A64E 03 D0                         BEQ             loc_A658
.text:0000A64E
.text:0000A650 09 28                         CMP             R0, #9
.text:0000A652 08 BF                         IT EQ
.text:0000A654 09 25                         MOVEQ           R5, #9
.text:0000A656 EA E7                         B               loc_A62E
.text:0000A656
.text:0000A658                               ; ---------------------------------------------------------------------------
.text:0000A658
.text:0000A658                               loc_A658                      ; CODE XREF: sub_A5C4+8A↑j
.text:0000A658 0A A8                         ADD             R0, SP, #0x8A0+var_878
.text:0000A65A 21 46                         MOV             R1, R4
.text:0000A65C 00 22                         MOVS            R2, #0
.text:0000A65E 00 F0 07 F8                   BL              sub_A670
.text:0000A65E
.text:0000A662 02 25                         MOVS            R5, #2
.text:0000A664 E3 E7                         B               loc_A62E
.text:0000A664
.text:0000A664                               ; End of function sub_A5C4
.text:0000A664
.text:0000A664                               ; ---------------------------------------------------------------------------
.text:0000A666 00 BF                         ALIGN 4
.text:0000A668 BE 67 00 00                   off_A668 DCD __stack_chk_guard_ptr - 0xA5D6
.text:0000A668                                                             ; DATA XREF: sub_A5C4+A↑r
.text:0000A66C 5C 67 00 00                   off_A66C DCD __stack_chk_guard_ptr - 0xA638
.text:0000A66C                                                             ; DATA XREF: sub_A5C4:loc_A62E↑r
.text:0000A66C                               ; } // starts at A5C4
.text:0000A670
.text:0000A670                               ; =============== S U B R O U T I N E =======================================
.text:0000A670
.text:0000A670
.text:0000A670                               ; int __fastcall sub_A670(const void *, int *, char)
.text:0000A670                               sub_A670                      ; CODE XREF: sub_A5C4+9A↑p
.text:0000A670                                                             ; sub_A760+16↓p
.text:0000A670
.text:0000A670                               var_4B8= -0x4B8
.text:0000A670                               var_4B4= -0x4B4
.text:0000A670                               var_4A8= -0x4A8
.text:0000A670                               var_4A0= -0x4A0
.text:0000A670                               var_494= -0x494
.text:0000A670                               var_48C= -0x48C
.text:0000A670                               var_488= -0x488
.text:0000A670                               var_24= -0x24
.text:0000A670
.text:0000A670                               ; __unwind {
.text:0000A670 2D E9 F0 47                   PUSH.W          {R4-R10,LR}
.text:0000A674 AD F5 93 6D                   SUB.W           SP, SP, #0x498
.text:0000A678 0C 46                         MOV             R4, R1
.text:0000A67A 01 46                         MOV             R1, R0
.text:0000A67C 33 48                         LDR             R0, =(__stack_chk_guard_ptr - 0xA686)
.text:0000A67E 0C AD                         ADD             R5, SP, #0x4B8+var_488
.text:0000A680 92 46                         MOV             R10, R2
.text:0000A682 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:0000A684 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:0000A686 00 68                         LDR             R0, [R0]
.text:0000A688 CD F8 94 04                   STR.W           R0, [SP,#0x4B8+var_24]
.text:0000A68C 28 46                         MOV             R0, R5
.text:0000A68E 00 F0 29 F9                   BL              sub_A8E4
.text:0000A68E
.text:0000A692 01 26                         MOVS            R6, #1
.text:0000A694 0D F1 2C 08                   ADD.W           R8, SP, #0x4B8+var_48C
.text:0000A698 0D F1 04 09                   ADD.W           R9, SP, #0x4B8+var_4B4
.text:0000A69C 00 E0                         B               loc_A6A0
.text:0000A69C
.text:0000A69E                               ; ---------------------------------------------------------------------------
.text:0000A69E
.text:0000A69E                               loc_A69E                      ; CODE XREF: sub_A670+68↓j
.text:0000A69E                                                             ; sub_A670+8C↓j
.text:0000A69E 01 3E                         SUBS            R6, #1
.text:0000A69E
.text:0000A6A0
.text:0000A6A0                               loc_A6A0                      ; CODE XREF: sub_A670+2C↑j
.text:0000A6A0 01 27                         MOVS            R7, #1
.text:0000A6A2 1A F0 01 00                   ANDS.W          R0, R10, #1
.text:0000A6A6 18 BF                         IT NE
.text:0000A6A8 02 27                         MOVNE           R7, #2
.text:0000A6AA 08 D0                         BEQ             loc_A6BE
.text:0000A6AA
.text:0000A6AC 3E B9                         CBNZ            R6, loc_A6BE
.text:0000A6AC
.text:0000A6AE 22 69                         LDR             R2, [R4,#0x10]
.text:0000A6B0 28 46                         MOV             R0, R5
.text:0000A6B2 4F F0 FF 31                   MOV.W           R1, #0xFFFFFFFF
.text:0000A6B6 00 F0 4E F9                   BL              sub_A956
.text:0000A6B6
.text:0000A6BA 4F F0 00 0A                   MOV.W           R10, #0
.text:0000A6BA
.text:0000A6BE
.text:0000A6BE                               loc_A6BE                      ; CODE XREF: sub_A670+3A↑j
.text:0000A6BE                                                             ; sub_A670+3C↑j
.text:0000A6BE 28 46                         MOV             R0, R5
.text:0000A6C0 6F F0 01 01                   MOV             R1, #0xFFFFFFFE
.text:0000A6C4 42 46                         MOV             R2, R8
.text:0000A6C6 00 F0 2F F9                   BL              sub_A928
.text:0000A6C6
.text:0000A6CA 28 46                         MOV             R0, R5
.text:0000A6CC 49 46                         MOV             R1, R9
.text:0000A6CE 00 F0 9B F9                   BL              sub_AA08
.text:0000A6CE
.text:0000A6D2 60 BB                         CBNZ            R0, loc_A72E
.text:0000A6D2
.text:0000A6D4 04 9B                         LDR             R3, [SP,#0x4B8+var_4A8]
.text:0000A6D6 00 2B                         CMP             R3, #0
.text:0000A6D8 E1 D0                         BEQ             loc_A69E
.text:0000A6D8
.text:0000A6DA 01 98                         LDR             R0, [SP,#0x4B8+var_4B4]
.text:0000A6DC 21 46                         MOV             R1, R4
.text:0000A6DE 2A 46                         MOV             R2, R5
.text:0000A6E0 A0 64                         STR             R0, [R4,#0x48]
.text:0000A6E2 09 98                         LDR             R0, [SP,#0x4B8+var_494]
.text:0000A6E4 E0 64                         STR             R0, [R4,#0x4C]
.text:0000A6E6 06 98                         LDR             R0, [SP,#0x4B8+var_4A0]
.text:0000A6E8 20 65                         STR             R0, [R4,#0x50]
.text:0000A6EA 38 46                         MOV             R0, R7
.text:0000A6EC 98 47                         BLX             R3
.text:0000A6EC
.text:0000A6EE 07 28                         CMP             R0, #7
.text:0000A6F0 11 D0                         BEQ             loc_A716
.text:0000A6F0
.text:0000A6F2 08 28                         CMP             R0, #8
.text:0000A6F4 0B D1                         BNE             loc_A70E
.text:0000A6F4
.text:0000A6F6 0B 98                         LDR             R0, [SP,#0x4B8+var_48C]
.text:0000A6F8 21 6A                         LDR             R1, [R4,#0x20]
.text:0000A6FA 88 42                         CMP             R0, R1
.text:0000A6FC CF D1                         BNE             loc_A69E
.text:0000A6FC
.text:0000A6FE 14 48                         LDR             R0, =(aUnwindReasonCo - 0xA70A) ; "_Unwind_Reason_Code unwind_phase2(unw_c"...
.text:0000A700 40 F2 8D 21                   MOVW            R1, #0x28D
.text:0000A704 13 4A                         LDR             R2, =(aDuringPhase1Pe - 0xA70C) ; "during phase1 personality function said"...
.text:0000A706 78 44                         ADD             R0, PC        ; "_Unwind_Reason_Code unwind_phase2(unw_c"...
.text:0000A708 7A 44                         ADD             R2, PC        ; "during phase1 personality function said"...
.text:0000A70A 00 F0 43 F8                   BL              sub_A794
.text:0000A70A
.text:0000A70E                               ; ---------------------------------------------------------------------------
.text:0000A70E
.text:0000A70E                               loc_A70E                      ; CODE XREF: sub_A670+84↑j
.text:0000A70E 09 28                         CMP             R0, #9
.text:0000A710 0D D1                         BNE             loc_A72E
.text:0000A710
.text:0000A712 F8 F7 D8 EE                   BLX             abort
.text:0000A712
.text:0000A716                               ; ---------------------------------------------------------------------------
.text:0000A716
.text:0000A716                               loc_A716                      ; CODE XREF: sub_A670+80↑j
.text:0000A716 0C AD                         ADD             R5, SP, #0x4B8+var_488
.text:0000A718 6A 46                         MOV             R2, SP
.text:0000A71A 28 46                         MOV             R0, R5
.text:0000A71C 4F F0 FF 31                   MOV.W           R1, #0xFFFFFFFF
.text:0000A720 00 F0 02 F9                   BL              sub_A928
.text:0000A720
.text:0000A724 00 98                         LDR             R0, [SP,#0x4B8+var_4B8]
.text:0000A726 20 61                         STR             R0, [R4,#0x10]
.text:0000A728 28 46                         MOV             R0, R5
.text:0000A72A 00 F0 7C F9                   BL              sub_AA26
.text:0000A72A
.text:0000A72E
.text:0000A72E                               loc_A72E                      ; CODE XREF: sub_A670+62↑j
.text:0000A72E                                                             ; sub_A670+A0↑j
.text:0000A72E 0A 48                         LDR             R0, =(__stack_chk_guard_ptr - 0xA738)
.text:0000A730 DD F8 94 14                   LDR.W           R1, [SP,#0x4B8+var_24]
.text:0000A734 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:0000A736 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:0000A738 00 68                         LDR             R0, [R0]
.text:0000A73A 40 1A                         SUBS            R0, R0, R1
.text:0000A73C 04 BF                         ITT EQ
.text:0000A73E 0D F5 93 6D                   ADDEQ.W         SP, SP, #0x498
.text:0000A742 BD E8 F0 87                   POPEQ.W         {R4-R10,PC}
.text:0000A742
.text:0000A746 F8 F7 4E EC                   BLX             __stack_chk_fail
.text:0000A746
.text:0000A746                               ; End of function sub_A670
.text:0000A746
.text:0000A746                               ; ---------------------------------------------------------------------------
.text:0000A74A 00 BF                         ALIGN 4
.text:0000A74C 0E 67 00 00                   off_A74C DCD __stack_chk_guard_ptr - 0xA686
.text:0000A74C                                                             ; DATA XREF: sub_A670+C↑r
.text:0000A750 6D 3D 00 00                   off_A750 DCD aUnwindReasonCo - 0xA70A
.text:0000A750                                                             ; DATA XREF: sub_A670+8E↑r
.text:0000A750                                                             ; "_Unwind_Reason_Code unwind_phase2(unw_c"...
.text:0000A754 B9 3D 00 00                   off_A754 DCD aDuringPhase1Pe - 0xA70C
.text:0000A754                                                             ; DATA XREF: sub_A670+94↑r
.text:0000A754                                                             ; "during phase1 personality function said"...
.text:0000A758 5C 66 00 00                   off_A758 DCD __stack_chk_guard_ptr - 0xA738
.text:0000A758                                                             ; DATA XREF: sub_A670:loc_A72E↑r
.text:0000A758                               ; } // starts at A670
.text:0000A75C                               ; [00000002 BYTES: COLLAPSED FUNCTION nullsub_1. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000A75E 00 00                         ALIGN 0x10
.text:0000A75E                               ; } // starts at A75C
.text:0000A760
.text:0000A760                               ; =============== S U B R O U T I N E =======================================
.text:0000A760
.text:0000A760                               ; Attributes: noreturn
.text:0000A760
.text:0000A760                               ; void __fastcall __noreturn sub_A760(int *, int, int, int)
.text:0000A760                               sub_A760
.text:0000A760                               ; __unwind {
.text:0000A760 B0 B5                         PUSH            {R4,R5,R7,LR}
.text:0000A762 AD F5 80 6D                   SUB.W           SP, SP, #0x400
.text:0000A766 6D 46                         MOV             R5, SP
.text:0000A768 04 46                         MOV             R4, R0
.text:0000A76A 28 46                         MOV             R0, R5
.text:0000A76C 00 F0 76 E8                   BLX             sub_A85C
.text:0000A76C
.text:0000A770 28 46                         MOV             R0, R5
.text:0000A772 21 46                         MOV             R1, R4
.text:0000A774 01 22                         MOVS            R2, #1
.text:0000A776 FF F7 7B FF                   BL              sub_A670
.text:0000A776
.text:0000A77A 04 48                         LDR             R0, =(aVoidUnwindResu - 0xA786) ; "void _Unwind_Resume(_Unwind_Exception *"...
.text:0000A77C 40 F2 F1 21                   MOVW            R1, #0x2F1
.text:0000A780 03 4A                         LDR             R2, =(aUnwindResumeCa - 0xA788) ; "_Unwind_Resume() can't return"
.text:0000A782 78 44                         ADD             R0, PC        ; "void _Unwind_Resume(_Unwind_Exception *"...
.text:0000A784 7A 44                         ADD             R2, PC        ; "_Unwind_Resume() can't return"
.text:0000A786 00 F0 05 F8                   BL              sub_A794
.text:0000A786
.text:0000A786                               ; End of function sub_A760
.text:0000A786
.text:0000A786                               ; ---------------------------------------------------------------------------
.text:0000A78A 00 BF                         ALIGN 4
.text:0000A78C 6E 3B 00 00                   off_A78C DCD aVoidUnwindResu - 0xA786
.text:0000A78C                                                             ; DATA XREF: sub_A760+1A↑r
.text:0000A78C                                                             ; "void _Unwind_Resume(_Unwind_Exception *"...
.text:0000A790 C2 3B 00 00                   off_A790 DCD aUnwindResumeCa - 0xA788
.text:0000A790                                                             ; DATA XREF: sub_A760+20↑r
.text:0000A790                               ; } // starts at A760         ; "_Unwind_Resume() can't return"
.text:0000A794
.text:0000A794                               ; =============== S U B R O U T I N E =======================================
.text:0000A794
.text:0000A794                               ; Attributes: noreturn
.text:0000A794
.text:0000A794                               ; void __fastcall __noreturn sub_A794(const char *, int, const char *)
.text:0000A794                               sub_A794                      ; CODE XREF: .text:0000A36A↑p
.text:0000A794                                                             ; sub_A378+8E↑p
.text:0000A794                                                             ; sub_A414+126↑p
.text:0000A794                                                             ; sub_A670+9A↑p
.text:0000A794                                                             ; sub_A760+26↑p
.text:0000A794
.text:0000A794                               var_10= -0x10
.text:0000A794
.text:0000A794                               ; __unwind {
.text:0000A794 80 B5                         PUSH            {R7,LR}
.text:0000A796 82 B0                         SUB             SP, SP, #8
.text:0000A798 84 46                         MOV             R12, R0
.text:0000A79A 07 48                         LDR             R0, =(stderr_ptr - 0xA7A2)
.text:0000A79C 08 4B                         LDR             R3, =(aExternalLibunw - 0xA7A6) ; "external/libunwind_llvm/src/Unwind-EHAB"...
.text:0000A79E 78 44                         ADD             R0, PC        ; stderr_ptr
.text:0000A7A0 00 68                         LDR             R0, [R0]      ; stderr
.text:0000A7A2 7B 44                         ADD             R3, PC        ; "external/libunwind_llvm/src/Unwind-EHAB"...
.text:0000A7A4 00 68                         LDR             R0, [R0]      ; stream
.text:0000A7A6 CD E9 00 12                   STRD.W          R1, R2, [SP,#0x10+var_10]
.text:0000A7AA 62 46                         MOV             R2, R12
.text:0000A7AC 03 49                         LDR             R1, =(aLibunwindSSDS - 0xA7B2) ; "libunwind: %s %s:%d - %s\n"
.text:0000A7AE 79 44                         ADD             R1, PC        ; "libunwind: %s %s:%d - %s\n"
.text:0000A7B0 F8 F7 8E EE                   BLX             fprintf
.text:0000A7B0
.text:0000A7B4 F8 F7 86 EE                   BLX             abort
.text:0000A7B4
.text:0000A7B4                               ; End of function sub_A794
.text:0000A7B4
.text:0000A7B4                               ; ---------------------------------------------------------------------------
.text:0000A7B8 5E 66 00 00                   off_A7B8 DCD stderr_ptr - 0xA7A2
.text:0000A7B8                                                             ; DATA XREF: sub_A794+6↑r
.text:0000A7BC 76 3D 00 00                   off_A7BC DCD aLibunwindSSDS - 0xA7B2
.text:0000A7BC                                                             ; DATA XREF: sub_A794+18↑r
.text:0000A7BC                                                             ; "libunwind: %s %s:%d - %s\n"
.text:0000A7C0 77 3B 00 00                   off_A7C0 DCD aExternalLibunw - 0xA7A6
.text:0000A7C0                                                             ; DATA XREF: sub_A794+8↑r
.text:0000A7C0                               ; } // starts at A794         ; "external/libunwind_llvm/src/Unwind-EHAB"...
.text:0000A7C4
.text:0000A7C4                               ; =============== S U B R O U T I N E =======================================
.text:0000A7C4
.text:0000A7C4
.text:0000A7C4                               ; int __fastcall sub_A7C4(int)
.text:0000A7C4                               sub_A7C4
.text:0000A7C4
.text:0000A7C4                               var_34= -0x34
.text:0000A7C4                               var_2C= -0x2C
.text:0000A7C4                               var_C= -0xC
.text:0000A7C4
.text:0000A7C4                               ; __unwind {
.text:0000A7C4 80 B5                         PUSH            {R7,LR}
.text:0000A7C6 8C B0                         SUB             SP, SP, #0x30
.text:0000A7C8 0B 49                         LDR             R1, =(__stack_chk_guard_ptr - 0xA7CE)
.text:0000A7CA 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:0000A7CC 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:0000A7CE 09 68                         LDR             R1, [R1]
.text:0000A7D0 0B 91                         STR             R1, [SP,#0x38+var_C]
.text:0000A7D2 01 A9                         ADD             R1, SP, #0x38+var_34
.text:0000A7D4 00 F0 18 F9                   BL              sub_AA08
.text:0000A7D4
.text:0000A7D8 01 46                         MOV             R1, R0
.text:0000A7DA 03 98                         LDR             R0, [SP,#0x38+var_2C]
.text:0000A7DC 00 29                         CMP             R1, #0
.text:0000A7DE 07 49                         LDR             R1, =(__stack_chk_guard_ptr - 0xA7EA)
.text:0000A7E0 18 BF                         IT NE
.text:0000A7E2 00 20                         MOVNE           R0, #0
.text:0000A7E4 0B 9A                         LDR             R2, [SP,#0x38+var_C]
.text:0000A7E6 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:0000A7E8 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:0000A7EA 09 68                         LDR             R1, [R1]
.text:0000A7EC 89 1A                         SUBS            R1, R1, R2
.text:0000A7EE 04 BF                         ITT EQ
.text:0000A7F0 0C B0                         ADDEQ           SP, SP, #0x30 ; '0'
.text:0000A7F2 80 BD                         POPEQ           {R7,PC}
.text:0000A7F2
.text:0000A7F4 F8 F7 F6 EB                   BLX             __stack_chk_fail
.text:0000A7F4
.text:0000A7F4                               ; End of function sub_A7C4
.text:0000A7F4
.text:0000A7F4                               ; ---------------------------------------------------------------------------
.text:0000A7F8 C6 65 00 00                   off_A7F8 DCD __stack_chk_guard_ptr - 0xA7CE
.text:0000A7F8                                                             ; DATA XREF: sub_A7C4+4↑r
.text:0000A7FC AA 65 00 00                   off_A7FC DCD __stack_chk_guard_ptr - 0xA7EA
.text:0000A7FC                                                             ; DATA XREF: sub_A7C4+1A↑r
.text:0000A800
.text:0000A800                               ; =============== S U B R O U T I N E =======================================
.text:0000A800
.text:0000A800
.text:0000A800                               ; int __fastcall sub_A800(int)
.text:0000A800                               sub_A800
.text:0000A800
.text:0000A800                               var_34= -0x34
.text:0000A800                               var_C= -0xC
.text:0000A800
.text:0000A800 80 B5                         PUSH            {R7,LR}
.text:0000A802 8C B0                         SUB             SP, SP, #0x30
.text:0000A804 0B 49                         LDR             R1, =(__stack_chk_guard_ptr - 0xA80A)
.text:0000A806 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:0000A808 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:0000A80A 09 68                         LDR             R1, [R1]
.text:0000A80C 0B 91                         STR             R1, [SP,#0x38+var_C]
.text:0000A80E 01 A9                         ADD             R1, SP, #0x38+var_34
.text:0000A810 00 F0 FA F8                   BL              sub_AA08
.text:0000A810
.text:0000A814 01 46                         MOV             R1, R0
.text:0000A816 01 98                         LDR             R0, [SP,#0x38+var_34]
.text:0000A818 00 29                         CMP             R1, #0
.text:0000A81A 07 49                         LDR             R1, =(__stack_chk_guard_ptr - 0xA826)
.text:0000A81C 18 BF                         IT NE
.text:0000A81E 00 20                         MOVNE           R0, #0
.text:0000A820 0B 9A                         LDR             R2, [SP,#0x38+var_C]
.text:0000A822 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:0000A824 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:0000A826 09 68                         LDR             R1, [R1]
.text:0000A828 89 1A                         SUBS            R1, R1, R2
.text:0000A82A 04 BF                         ITT EQ
.text:0000A82C 0C B0                         ADDEQ           SP, SP, #0x30 ; '0'
.text:0000A82E 80 BD                         POPEQ           {R7,PC}
.text:0000A82E
.text:0000A830 F8 F7 D8 EB                   BLX             __stack_chk_fail
.text:0000A830
.text:0000A830                               ; End of function sub_A800
.text:0000A830
.text:0000A830                               ; ---------------------------------------------------------------------------
.text:0000A834 8A 65 00 00                   off_A834 DCD __stack_chk_guard_ptr - 0xA80A
.text:0000A834                                                             ; DATA XREF: sub_A800+4↑r
.text:0000A838 6E 65 00 00                   off_A838 DCD __stack_chk_guard_ptr - 0xA826
.text:0000A838                                                             ; DATA XREF: sub_A800+1A↑r
.text:0000A838                               ; } // starts at A7C4
.text:0000A83C                               ; ---------------------------------------------------------------------------
.text:0000A83C                               ; __unwind {
.text:0000A83C 01 46                         MOV             R1, R0
.text:0000A83E 8A 68                         LDR             R2, [R1,#8]
.text:0000A840 0A B1                         CBZ             R2, locret_A846
.text:0000A840
.text:0000A842 01 20                         MOVS            R0, #1
.text:0000A844 10 47                         BX              R2
.text:0000A844
.text:0000A846                               ; ---------------------------------------------------------------------------
.text:0000A846
.text:0000A846                               locret_A846                   ; CODE XREF: .text:0000A840↑j
.text:0000A846 70 47                         BX              LR
.text:0000A846                               ; } // starts at A83C
.text:0000A846
.text:0000A848
.text:0000A848                               ; =============== S U B R O U T I N E =======================================
.text:0000A848
.text:0000A848
.text:0000A848                               ; int __fastcall sub_A848(int, int)
.text:0000A848                               sub_A848
.text:0000A848                               ; __unwind {
.text:0000A848 80 B5                         PUSH            {R7,LR}
.text:0000A84A 08 46                         MOV             R0, R1
.text:0000A84C 00 F0 D9 F8                   BL              sub_AA02
.text:0000A84C
.text:0000A850 09 21                         MOVS            R1, #9
.text:0000A852 01 28                         CMP             R0, #1
.text:0000A854 08 BF                         IT EQ
.text:0000A856 00 21                         MOVEQ           R1, #0
.text:0000A858 08 46                         MOV             R0, R1
.text:0000A85A 80 BD                         POP             {R7,PC}
.text:0000A85A                               ; } // starts at A848
.text:0000A85A
.text:0000A85A                               ; End of function sub_A848
.text:0000A85A
.text:0000A85C                               CODE32
.text:0000A85C
.text:0000A85C                               ; =============== S U B R O U T I N E =======================================
.text:0000A85C
.text:0000A85C
.text:0000A85C                               ; int __fastcall sub_A85C(_DWORD *, int, int, int, int)
.text:0000A85C                               sub_A85C                      ; CODE XREF: sub_A5C4+1A↑p
.text:0000A85C                                                             ; sub_A760+C↑p
.text:0000A85C FF 1F 80 E8                   STM             R0, {R0-R12}
.text:0000A860 34 D0 80 E5                   STR             SP, [R0,#0x34]
.text:0000A864 38 E0 80 E5                   STR             LR, [R0,#0x38]
.text:0000A868 3C E0 80 E5                   STR             LR, [R0,#0x3C]
.text:0000A86C 00 00 A0 E3                   MOV             R0, #0
.text:0000A870 1E FF 2F E1                   BX              LR
.text:0000A870
.text:0000A870                               ; End of function sub_A85C
.text:0000A870
.text:0000A874
.text:0000A874                               ; =============== S U B R O U T I N E =======================================
.text:0000A874
.text:0000A874
.text:0000A874                               ; _QWORD *__fastcall sub_A874(_QWORD *result)
.text:0000A874                               sub_A874                      ; CODE XREF: sub_AB9C:loc_AC0E↓p
.text:0000A874                                                             ; sub_AC40:loc_ACCC↓p
.text:0000A874 20 0B 80 EC                   VSTM            R0, {D0-D15}
.text:0000A878 1E FF 2F E1                   BX              LR
.text:0000A878
.text:0000A878                               ; End of function sub_A874
.text:0000A878
.text:0000A87C
.text:0000A87C                               ; =============== S U B R O U T I N E =======================================
.text:0000A87C
.text:0000A87C
.text:0000A87C                               ; _QWORD *__fastcall sub_A87C(_QWORD *result)
.text:0000A87C                               sub_A87C                      ; CODE XREF: sub_AB9C+30↓p
.text:0000A87C                                                             ; sub_AC40+36↓p
.text:0000A87C 20 0B 80 EC                   VSTM            R0, {D0-D15}
.text:0000A880 1E FF 2F E1                   BX              LR
.text:0000A880
.text:0000A880                               ; End of function sub_A87C
.text:0000A880
.text:0000A884
.text:0000A884                               ; =============== S U B R O U T I N E =======================================
.text:0000A884
.text:0000A884
.text:0000A884                               ; _QWORD *__fastcall sub_A884(_QWORD *result)
.text:0000A884                               sub_A884                      ; CODE XREF: sub_AB9C+64↓p
.text:0000A884                                                             ; sub_AC40+74↓p
.text:0000A884 20 0B C0 EC                   VSTM            R0, {D16-D31}
.text:0000A888 1E FF 2F E1                   BX              LR
.text:0000A888
.text:0000A888                               ; End of function sub_A884
.text:0000A888
.text:0000A88C
.text:0000A88C                               ; =============== S U B R O U T I N E =======================================
.text:0000A88C
.text:0000A88C
.text:0000A88C                               ; void sub_A88C()
.text:0000A88C                               sub_A88C                      ; CODE XREF: sub_AB9C+46↓p
.text:0000A88C                                                             ; sub_AC40+4C↓p
.text:0000A88C 02 01 E0 EC                   STCL            p1, c0, [R0],#8
.text:0000A890 02 11 E0 EC                   STCL            p1, c1, [R0],#8
.text:0000A894 02 21 E0 EC                   STCL            p1, c2, [R0],#8
.text:0000A898 02 31 E0 EC                   STCL            p1, c3, [R0],#8
.text:0000A89C 02 41 E0 EC                   STCL            p1, c4, [R0],#8
.text:0000A8A0 02 51 E0 EC                   STCL            p1, c5, [R0],#8
.text:0000A8A4 02 61 E0 EC                   STCL            p1, c6, [R0],#8
.text:0000A8A8 02 71 E0 EC                   STCL            p1, c7, [R0],#8
.text:0000A8AC 02 81 E0 EC                   STCL            p1, c8, [R0],#8
.text:0000A8B0 02 91 E0 EC                   STCL            p1, c9, [R0],#8
.text:0000A8B4 02 A1 E0 EC                   STCL            p1, c10, [R0],#8
.text:0000A8B8 02 B1 E0 EC                   STCL            p1, c11, [R0],#8
.text:0000A8BC 02 C1 E0 EC                   STCL            p1, c12, [R0],#8
.text:0000A8C0 02 D1 E0 EC                   STCL            p1, c13, [R0],#8
.text:0000A8C4 02 E1 E0 EC                   STCL            p1, c14, [R0],#8
.text:0000A8C8 02 F1 E0 EC                   STCL            p1, c15, [R0],#8
.text:0000A8CC 1E FF 2F E1                   BX              LR
.text:0000A8CC
.text:0000A8CC                               ; End of function sub_A88C
.text:0000A8CC
.text:0000A8D0
.text:0000A8D0                               ; =============== S U B R O U T I N E =======================================
.text:0000A8D0
.text:0000A8D0
.text:0000A8D0                               ; void sub_A8D0()
.text:0000A8D0                               sub_A8D0                      ; CODE XREF: sub_AA60+5A↓p
.text:0000A8D0                                                             ; sub_AAEC+56↓p
.text:0000A8D0 01 81 A0 FC                   STC2            p1, c8, [R0],#4
.text:0000A8D4 01 91 A0 FC                   STC2            p1, c9, [R0],#4
.text:0000A8D8 01 A1 A0 FC                   STC2            p1, c10, [R0],#4
.text:0000A8DC 01 B1 A0 FC                   STC2            p1, c11, [R0],#4
.text:0000A8E0 1E FF 2F E1                   BX              LR
.text:0000A8E0
.text:0000A8E0                               ; End of function sub_A8D0
.text:0000A8E0
.text:0000A8E4                               CODE16
.text:0000A8E4
.text:0000A8E4                               ; =============== S U B R O U T I N E =======================================
.text:0000A8E4
.text:0000A8E4
.text:0000A8E4                               ; int __fastcall sub_A8E4(int, const void *)
.text:0000A8E4                               sub_A8E4                      ; CODE XREF: sub_A5C4+2A↑p
.text:0000A8E4                                                             ; sub_A670+1E↑p
.text:0000A8E4                               ; __unwind {
.text:0000A8E4 10 B5                         PUSH            {R4,LR}
.text:0000A8E6 04 46                         MOV             R4, R0
.text:0000A8E8 0D 48                         LDR             R0, =(unk_10C04 - 0xA8F0)
.text:0000A8EA 40 22                         MOVS            R2, #0x40 ; '@'
.text:0000A8EC 78 44                         ADD             R0, PC        ; unk_10C04
.text:0000A8EE 08 30                         ADDS            R0, #8
.text:0000A8F0 20 60                         STR             R0, [R4]
.text:0000A8F2 0C 48                         LDR             R0, =(unk_116E0 - 0xA8F8)
.text:0000A8F4 78 44                         ADD             R0, PC        ; unk_116E0
.text:0000A8F6 60 60                         STR             R0, [R4,#4]
.text:0000A8F8 00 20                         MOVS            R0, #0
.text:0000A8FA 84 F8 4C 00                   STRB.W          R0, [R4,#0x4C]
.text:0000A8FE A0 64                         STR             R0, [R4,#0x48]
.text:0000A900 04 F1 08 00                   ADD.W           R0, R4, #8
.text:0000A904 F8 F7 48 ED                   BLX             __aeabi_memcpy
.text:0000A904
.text:0000A908 04 F1 50 00                   ADD.W           R0, R4, #0x50 ; 'P'
.text:0000A90C 4F F4 E1 71                   MOV.W           R1, #0x1C2
.text:0000A910 F8 F7 B2 EC                   BLX             __aeabi_memclr8
.text:0000A910
.text:0000A914 20 46                         MOV             R0, R4
.text:0000A916 00 21                         MOVS            R1, #0
.text:0000A918 00 F0 72 FA                   BL              sub_AE00
.text:0000A918
.text:0000A91C 00 20                         MOVS            R0, #0
.text:0000A91E 10 BD                         POP             {R4,PC}
.text:0000A91E
.text:0000A91E                               ; End of function sub_A8E4
.text:0000A91E
.text:0000A91E                               ; ---------------------------------------------------------------------------
.text:0000A920 14 63 00 00                   off_A920 DCD unk_10C04 - 0xA8F0
.text:0000A920                                                             ; DATA XREF: sub_A8E4+4↑r
.text:0000A924 E8 6D 00 00                   off_A924 DCD unk_116E0 - 0xA8F8
.text:0000A924                                                             ; DATA XREF: sub_A8E4+E↑r
.text:0000A924                               ; } // starts at A8E4
.text:0000A928
.text:0000A928                               ; =============== S U B R O U T I N E =======================================
.text:0000A928
.text:0000A928
.text:0000A928                               ; int __fastcall sub_A928(int, int, _DWORD *)
.text:0000A928                               sub_A928                      ; CODE XREF: sub_A034+3E↑p
.text:0000A928                                                             ; sub_A034+118↑p
.text:0000A928                                                             ; sub_A034+18C↑p
.text:0000A928                                                             ; sub_A034+27E↑p
.text:0000A928                                                             ; .text:0000A328↑p
.text:0000A928                                                             ; sub_A414+32↑p
.text:0000A928                                                             ; sub_A414+9E↑p
.text:0000A928                                                             ; sub_A670+56↑p
.text:0000A928                                                             ; sub_A670+B0↑p
.text:0000A928                               ; __unwind {
.text:0000A928 70 B5                         PUSH            {R4-R6,LR}
.text:0000A92A 06 46                         MOV             R6, R0
.text:0000A92C 14 46                         MOV             R4, R2
.text:0000A92E 30 68                         LDR             R0, [R6]
.text:0000A930 0D 46                         MOV             R5, R1
.text:0000A932 82 68                         LDR             R2, [R0,#8]
.text:0000A934 30 46                         MOV             R0, R6
.text:0000A936 90 47                         BLX             R2
.text:0000A936
.text:0000A938 01 28                         CMP             R0, #1
.text:0000A93A 07 D1                         BNE             loc_A94C
.text:0000A93A
.text:0000A93C 30 68                         LDR             R0, [R6]
.text:0000A93E 29 46                         MOV             R1, R5
.text:0000A940 C2 68                         LDR             R2, [R0,#0xC]
.text:0000A942 30 46                         MOV             R0, R6
.text:0000A944 90 47                         BLX             R2
.text:0000A944
.text:0000A946 20 60                         STR             R0, [R4]
.text:0000A948 00 20                         MOVS            R0, #0
.text:0000A94A 70 BD                         POP             {R4-R6,PC}
.text:0000A94A
.text:0000A94C                               ; ---------------------------------------------------------------------------
.text:0000A94C
.text:0000A94C                               loc_A94C                      ; CODE XREF: sub_A928+12↑j
.text:0000A94C 4E F2 72 60 CF F6 FF 70       MOV             R0, #0xFFFFE672
.text:0000A954 70 BD                         POP             {R4-R6,PC}
.text:0000A954
.text:0000A954                               ; End of function sub_A928
.text:0000A954
.text:0000A956
.text:0000A956                               ; =============== S U B R O U T I N E =======================================
.text:0000A956
.text:0000A956
.text:0000A956                               ; int __fastcall sub_A956(int, int, int)
.text:0000A956                               sub_A956                      ; CODE XREF: sub_A034+A2↑p
.text:0000A956                                                             ; sub_A034+288↑p
.text:0000A956                                                             ; sub_A378:loc_A3C2↑p
.text:0000A956                                                             ; sub_A414+10E↑p
.text:0000A956                                                             ; sub_A670+46↑p
.text:0000A956 70 B5                         PUSH            {R4-R6,LR}
.text:0000A958 04 46                         MOV             R4, R0
.text:0000A95A 16 46                         MOV             R6, R2
.text:0000A95C 20 68                         LDR             R0, [R4]
.text:0000A95E 0D 46                         MOV             R5, R1
.text:0000A960 82 68                         LDR             R2, [R0,#8]
.text:0000A962 20 46                         MOV             R0, R4
.text:0000A964 90 47                         BLX             R2
.text:0000A964
.text:0000A966 01 28                         CMP             R0, #1
.text:0000A968 0A D1                         BNE             loc_A980
.text:0000A968
.text:0000A96A 20 68                         LDR             R0, [R4]
.text:0000A96C 29 46                         MOV             R1, R5
.text:0000A96E 32 46                         MOV             R2, R6
.text:0000A970 03 69                         LDR             R3, [R0,#0x10]
.text:0000A972 20 46                         MOV             R0, R4
.text:0000A974 98 47                         BLX             R3
.text:0000A974
.text:0000A976 B5 F1 FF 3F                   CMP.W           R5, #0xFFFFFFFF
.text:0000A97A 06 D0                         BEQ             loc_A98A
.text:0000A97A
.text:0000A97C 00 25                         MOVS            R5, #0
.text:0000A97E 0A E0                         B               loc_A996
.text:0000A97E
.text:0000A980                               ; ---------------------------------------------------------------------------
.text:0000A980
.text:0000A980                               loc_A980                      ; CODE XREF: sub_A956+12↑j
.text:0000A980 4E F2 72 65 CF F6 FF 75       MOV             R5, #0xFFFFE672
.text:0000A988 05 E0                         B               loc_A996
.text:0000A988
.text:0000A98A                               ; ---------------------------------------------------------------------------
.text:0000A98A
.text:0000A98A                               loc_A98A                      ; CODE XREF: sub_A956+24↑j
.text:0000A98A 20 68                         LDR             R0, [R4]
.text:0000A98C 00 21                         MOVS            R1, #0
.text:0000A98E 00 25                         MOVS            R5, #0
.text:0000A990 42 6B                         LDR             R2, [R0,#0x34]
.text:0000A992 20 46                         MOV             R0, R4
.text:0000A994 90 47                         BLX             R2
.text:0000A994
.text:0000A996
.text:0000A996                               loc_A996                      ; CODE XREF: sub_A956+28↑j
.text:0000A996                                                             ; sub_A956+32↑j
.text:0000A996 28 46                         MOV             R0, R5
.text:0000A998 70 BD                         POP             {R4-R6,PC}
.text:0000A998
.text:0000A998                               ; End of function sub_A956
.text:0000A998
.text:0000A99A
.text:0000A99A                               ; =============== S U B R O U T I N E =======================================
.text:0000A99A
.text:0000A99A
.text:0000A99A                               ; int __fastcall sub_A99A(int, int, _QWORD *)
.text:0000A99A                               sub_A99A                      ; CODE XREF: .text:0000A352↑p
.text:0000A99A 70 B5                         PUSH            {R4-R6,LR}
.text:0000A99C 06 46                         MOV             R6, R0
.text:0000A99E 14 46                         MOV             R4, R2
.text:0000A9A0 30 68                         LDR             R0, [R6]
.text:0000A9A2 0D 46                         MOV             R5, R1
.text:0000A9A4 42 69                         LDR             R2, [R0,#0x14]
.text:0000A9A6 30 46                         MOV             R0, R6
.text:0000A9A8 90 47                         BLX             R2
.text:0000A9A8
.text:0000A9AA 01 28                         CMP             R0, #1
.text:0000A9AC 08 D1                         BNE             loc_A9C0
.text:0000A9AC
.text:0000A9AE 30 68                         LDR             R0, [R6]
.text:0000A9B0 29 46                         MOV             R1, R5
.text:0000A9B2 82 69                         LDR             R2, [R0,#0x18]
.text:0000A9B4 30 46                         MOV             R0, R6
.text:0000A9B6 90 47                         BLX             R2
.text:0000A9B6
.text:0000A9B8 C4 E9 00 01                   STRD.W          R0, R1, [R4]
.text:0000A9BC 00 20                         MOVS            R0, #0
.text:0000A9BE 70 BD                         POP             {R4-R6,PC}
.text:0000A9BE
.text:0000A9C0                               ; ---------------------------------------------------------------------------
.text:0000A9C0
.text:0000A9C0                               loc_A9C0                      ; CODE XREF: sub_A99A+12↑j
.text:0000A9C0 4E F2 72 60 CF F6 FF 70       MOV             R0, #0xFFFFE672
.text:0000A9C8 70 BD                         POP             {R4-R6,PC}
.text:0000A9C8                               ; } // starts at A928
.text:0000A9C8
.text:0000A9C8                               ; End of function sub_A99A
.text:0000A9C8
.text:0000A9CA
.text:0000A9CA                               ; =============== S U B R O U T I N E =======================================
.text:0000A9CA
.text:0000A9CA
.text:0000A9CA                               ; int __fastcall sub_A9CA(int, int, int, int)
.text:0000A9CA                               sub_A9CA                      ; CODE XREF: sub_A378+76↑p
.text:0000A9CA                               ; __unwind {
.text:0000A9CA 2D E9 F0 41                   PUSH.W          {R4-R8,LR}
.text:0000A9CE 07 46                         MOV             R7, R0
.text:0000A9D0 15 46                         MOV             R5, R2
.text:0000A9D2 38 68                         LDR             R0, [R7]
.text:0000A9D4 98 46                         MOV             R8, R3
.text:0000A9D6 0E 46                         MOV             R6, R1
.text:0000A9D8 42 69                         LDR             R2, [R0,#0x14]
.text:0000A9DA 38 46                         MOV             R0, R7
.text:0000A9DC 90 47                         BLX             R2
.text:0000A9DC
.text:0000A9DE 01 28                         CMP             R0, #1
.text:0000A9E0 09 D1                         BNE             loc_A9F6
.text:0000A9E0
.text:0000A9E2 38 68                         LDR             R0, [R7]
.text:0000A9E4 31 46                         MOV             R1, R6
.text:0000A9E6 2A 46                         MOV             R2, R5
.text:0000A9E8 43 46                         MOV             R3, R8
.text:0000A9EA C4 69                         LDR             R4, [R0,#0x1C]
.text:0000A9EC 38 46                         MOV             R0, R7
.text:0000A9EE A0 47                         BLX             R4
.text:0000A9EE
.text:0000A9F0 00 20                         MOVS            R0, #0
.text:0000A9F2 BD E8 F0 81                   POP.W           {R4-R8,PC}
.text:0000A9F2
.text:0000A9F6                               ; ---------------------------------------------------------------------------
.text:0000A9F6
.text:0000A9F6                               loc_A9F6                      ; CODE XREF: sub_A9CA+16↑j
.text:0000A9F6 4E F2 72 60 CF F6 FF 70       MOV             R0, #0xFFFFE672
.text:0000A9FE BD E8 F0 81                   POP.W           {R4-R8,PC}
.text:0000A9FE                               ; } // starts at A9CA
.text:0000A9FE
.text:0000A9FE                               ; End of function sub_A9CA
.text:0000A9FE
.text:0000AA02
.text:0000AA02                               ; =============== S U B R O U T I N E =======================================
.text:0000AA02
.text:0000AA02
.text:0000AA02                               ; int __fastcall sub_AA02(int)
.text:0000AA02                               sub_AA02                      ; CODE XREF: sub_A558+30↑p
.text:0000AA02                                                             ; sub_A848+4↑p
.text:0000AA02                               ; __unwind {
.text:0000AA02 01 68                         LDR             R1, [R0]
.text:0000AA04 09 6A                         LDR             R1, [R1,#0x20]
.text:0000AA06 08 47                         BX              R1
.text:0000AA06                               ; } // starts at AA02
.text:0000AA06
.text:0000AA06                               ; End of function sub_AA02
.text:0000AA06
.text:0000AA08
.text:0000AA08                               ; =============== S U B R O U T I N E =======================================
.text:0000AA08
.text:0000AA08
.text:0000AA08                               ; int __fastcall sub_AA08(int, int)
.text:0000AA08                               sub_AA08                      ; CODE XREF: sub_A558+16↑p
.text:0000AA08                                                             ; sub_A5C4+32↑p
.text:0000AA08                                                             ; sub_A5C4+60↑p
.text:0000AA08                                                             ; sub_A670+5E↑p
.text:0000AA08                                                             ; sub_A7C4+10↑p
.text:0000AA08                                                             ; sub_A800+10↑p
.text:0000AA08                               ; __unwind {
.text:0000AA08 10 B5                         PUSH            {R4,LR}
.text:0000AA0A 0C 46                         MOV             R4, R1
.text:0000AA0C 01 68                         LDR             R1, [R0]
.text:0000AA0E 4A 6A                         LDR             R2, [R1,#0x24]
.text:0000AA10 21 46                         MOV             R1, R4
.text:0000AA12 90 47                         BLX             R2
.text:0000AA12
.text:0000AA14 61 68                         LDR             R1, [R4,#4]
.text:0000AA16 00 20                         MOVS            R0, #0
.text:0000AA18 00 29                         CMP             R1, #0
.text:0000AA1A 04 BF                         ITT EQ
.text:0000AA1C 4E F2 6B 60                   MOVWEQ          R0, #0xE66B
.text:0000AA20 CF F6 FF 70                   MOVTEQ          R0, #0xFFFF
.text:0000AA24 10 BD                         POP             {R4,PC}
.text:0000AA24                               ; } // starts at AA08
.text:0000AA24
.text:0000AA24                               ; End of function sub_AA08
.text:0000AA24
.text:0000AA26
.text:0000AA26                               ; =============== S U B R O U T I N E =======================================
.text:0000AA26
.text:0000AA26
.text:0000AA26                               ; int __fastcall sub_AA26(int)
.text:0000AA26                               sub_AA26                      ; CODE XREF: sub_A670+BA↑p
.text:0000AA26                               ; __unwind {
.text:0000AA26 80 B5                         PUSH            {R7,LR}
.text:0000AA28 01 68                         LDR             R1, [R0]
.text:0000AA2A 89 6A                         LDR             R1, [R1,#0x28]
.text:0000AA2C 88 47                         BLX             R1
.text:0000AA2C
.text:0000AA2E 4E F2 74 60 CF F6 FF 70       MOV             R0, #0xFFFFE674
.text:0000AA36 80 BD                         POP             {R7,PC}
.text:0000AA36                               ; } // starts at AA26
.text:0000AA36
.text:0000AA36                               ; End of function sub_AA26
.text:0000AA36
.text:0000AA38
.text:0000AA38                               ; =============== S U B R O U T I N E =======================================
.text:0000AA38
.text:0000AA38
.text:0000AA38                               ; int __fastcall sub_AA38(int)
.text:0000AA38                               sub_AA38                      ; CODE XREF: .text:0000A33C↑p
.text:0000AA38                                                             ; sub_A378+5E↑p
.text:0000AA38                               ; __unwind {
.text:0000AA38 01 68                         LDR             R1, [R0]
.text:0000AA3A C9 6B                         LDR             R1, [R1,#0x3C]
.text:0000AA3C 08 47                         BX              R1
.text:0000AA3C
.text:0000AA3C                               ; End of function sub_AA38
.text:0000AA3C
.text:0000AA3E
.text:0000AA3E                               ; =============== S U B R O U T I N E =======================================
.text:0000AA3E
.text:0000AA3E
.text:0000AA3E                               ; int __fastcall sub_AA3E(int, int)
.text:0000AA3E                               sub_AA3E                      ; DATA XREF: .data.rel.ro:00010C14↓o
.text:0000AA3E 21 F0 03 00                   BIC.W           R0, R1, #3
.text:0000AA42 00 22                         MOVS            R2, #0
.text:0000AA44 C0 28                         CMP             R0, #0xC0
.text:0000AA46 4F F0 00 00                   MOV.W           R0, #0
.text:0000AA4A A1 F1 10 01                   SUB.W           R1, R1, #0x10
.text:0000AA4E 08 BF                         IT EQ
.text:0000AA50 01 20                         MOVEQ           R0, #1
.text:0000AA52 11 F1 13 0F                   CMN.W           R1, #0x13
.text:0000AA56 88 BF                         IT HI
.text:0000AA58 01 22                         MOVHI           R2, #1
.text:0000AA5A 40 EA 02 00                   ORR.W           R0, R0, R2
.text:0000AA5E 70 47                         BX              LR
.text:0000AA5E                               ; } // starts at AA38
.text:0000AA5E
.text:0000AA5E                               ; End of function sub_AA3E
.text:0000AA5E
.text:0000AA60
.text:0000AA60                               ; =============== S U B R O U T I N E =======================================
.text:0000AA60
.text:0000AA60
.text:0000AA60                               ; int __fastcall sub_AA60(int, int)
.text:0000AA60                               sub_AA60                      ; DATA XREF: .data.rel.ro:00010C18↓o
.text:0000AA60                               ; __unwind {
.text:0000AA60 B0 B5                         PUSH            {R4,R5,R7,LR}
.text:0000AA62 0D 46                         MOV             R5, R1
.text:0000AA64 04 46                         MOV             R4, R0
.text:0000AA66 0C 2D                         CMP             R5, #0xC
.text:0000AA68 06 DD                         BLE             loc_AA78
.text:0000AA68
.text:0000AA6A 0F 2D                         CMP             R5, #0xF
.text:0000AA6C 0A D0                         BEQ             loc_AA84
.text:0000AA6C
.text:0000AA6E 0E 2D                         CMP             R5, #0xE
.text:0000AA70 0E D0                         BEQ             loc_AA90
.text:0000AA70
.text:0000AA72 0D 2D                         CMP             R5, #0xD
.text:0000AA74 09 D0                         BEQ             loc_AA8A
.text:0000AA74
.text:0000AA76 0E E0                         B               loc_AA96
.text:0000AA76
.text:0000AA78                               ; ---------------------------------------------------------------------------
.text:0000AA78
.text:0000AA78                               loc_AA78                      ; CODE XREF: sub_AA60+8↑j
.text:0000AA78 15 F1 02 0F                   CMN.W           R5, #2
.text:0000AA7C 05 D0                         BEQ             loc_AA8A
.text:0000AA7C
.text:0000AA7E B5 F1 FF 3F                   CMP.W           R5, #0xFFFFFFFF
.text:0000AA82 08 D1                         BNE             loc_AA96
.text:0000AA82
.text:0000AA84
.text:0000AA84                               loc_AA84                      ; CODE XREF: sub_AA60+C↑j
.text:0000AA84 04 F1 44 00                   ADD.W           R0, R4, #0x44 ; 'D'
.text:0000AA88 1D E0                         B               loc_AAC6
.text:0000AA88
.text:0000AA8A                               ; ---------------------------------------------------------------------------
.text:0000AA8A
.text:0000AA8A                               loc_AA8A                      ; CODE XREF: sub_AA60+14↑j
.text:0000AA8A                                                             ; sub_AA60+1C↑j
.text:0000AA8A 04 F1 3C 00                   ADD.W           R0, R4, #0x3C ; '<'
.text:0000AA8E 1A E0                         B               loc_AAC6
.text:0000AA8E
.text:0000AA90                               ; ---------------------------------------------------------------------------
.text:0000AA90
.text:0000AA90                               loc_AA90                      ; CODE XREF: sub_AA60+10↑j
.text:0000AA90 04 F1 40 00                   ADD.W           R0, R4, #0x40 ; '@'
.text:0000AA94 17 E0                         B               loc_AAC6
.text:0000AA94
.text:0000AA96                               ; ---------------------------------------------------------------------------
.text:0000AA96
.text:0000AA96                               loc_AA96                      ; CODE XREF: sub_AA60+16↑j
.text:0000AA96                                                             ; sub_AA60+22↑j
.text:0000AA96 0C 2D                         CMP             R5, #0xC
.text:0000AA98 03 D8                         BHI             loc_AAA2
.text:0000AA98
.text:0000AA9A 04 EB 85 00                   ADD.W           R0, R4, R5,LSL#2
.text:0000AA9E 08 30                         ADDS            R0, #8
.text:0000AAA0 11 E0                         B               loc_AAC6
.text:0000AAA0
.text:0000AAA2                               ; ---------------------------------------------------------------------------
.text:0000AAA2
.text:0000AAA2                               loc_AAA2                      ; CODE XREF: sub_AA60+38↑j
.text:0000AAA2 25 F0 03 00                   BIC.W           R0, R5, #3
.text:0000AAA6 C0 28                         CMP             R0, #0xC0
.text:0000AAA8 0F D1                         BNE             loc_AACA
.text:0000AAA8
.text:0000AAAA 94 F8 4C 00                   LDRB.W          R0, [R4,#0x4C]
.text:0000AAAE 30 B9                         CBNZ            R0, loc_AABE
.text:0000AAAE
.text:0000AAB0 01 20                         MOVS            R0, #1
.text:0000AAB2 84 F8 4C 00                   STRB.W          R0, [R4,#0x4C]
.text:0000AAB6 04 F5 EC 70                   ADD.W           R0, R4, #0x1D8
.text:0000AABA FF F7 0A EF                   BLX             sub_A8D0
.text:0000AABA
.text:0000AABE
.text:0000AABE                               loc_AABE                      ; CODE XREF: sub_AA60+4E↑j
.text:0000AABE 04 EB 85 00                   ADD.W           R0, R4, R5,LSL#2
.text:0000AAC2 A0 F5 94 70                   SUB.W           R0, R0, #0x128
.text:0000AAC2
.text:0000AAC6
.text:0000AAC6                               loc_AAC6                      ; CODE XREF: sub_AA60+28↑j
.text:0000AAC6                                                             ; sub_AA60+2E↑j
.text:0000AAC6                                                             ; sub_AA60+34↑j
.text:0000AAC6                                                             ; sub_AA60+40↑j
.text:0000AAC6 00 68                         LDR             R0, [R0]
.text:0000AAC8 B0 BD                         POP             {R4,R5,R7,PC}
.text:0000AAC8
.text:0000AACA                               ; ---------------------------------------------------------------------------
.text:0000AACA
.text:0000AACA                               loc_AACA                      ; CODE XREF: sub_AA60+48↑j
.text:0000AACA 05 48                         LDR             R0, =(aUint32TLibunwi - 0xAAD8) ; "uint32_t libunwind::Registers_arm::getR"...
.text:0000AACC 40 F2 AC 52                   MOVW            R2, #0x5AC
.text:0000AAD0 04 49                         LDR             R1, =(aExternalLibunw_1 - 0xAADA) ; "external/libunwind_llvm/src/Registers.h"...
.text:0000AAD2 05 4B                         LDR             R3, =(aUnsupportedArm - 0xAADC) ; "unsupported arm register"
.text:0000AAD4 78 44                         ADD             R0, PC        ; "uint32_t libunwind::Registers_arm::getR"...
.text:0000AAD6 79 44                         ADD             R1, PC        ; "external/libunwind_llvm/src/Registers.h"...
.text:0000AAD8 7B 44                         ADD             R3, PC        ; "unsupported arm register"
.text:0000AADA 00 F0 D1 F9                   BL              sub_AE80
.text:0000AADA
.text:0000AADA                               ; End of function sub_AA60
.text:0000AADA
.text:0000AADA                               ; ---------------------------------------------------------------------------
.text:0000AADE 00 BF                         ALIGN 0x10
.text:0000AAE0 1E 3B 00 00                   off_AAE0 DCD aUint32TLibunwi - 0xAAD8
.text:0000AAE0                                                             ; DATA XREF: sub_AA60:loc_AACA↑r
.text:0000AAE0                                                             ; "uint32_t libunwind::Registers_arm::getR"...
.text:0000AAE4 50 3B 00 00                   off_AAE4 DCD aExternalLibunw_1 - 0xAADA
.text:0000AAE4                                                             ; DATA XREF: sub_AA60+70↑r
.text:0000AAE4                                                             ; "external/libunwind_llvm/src/Registers.h"...
.text:0000AAE8 78 3B 00 00                   off_AAE8 DCD aUnsupportedArm - 0xAADC
.text:0000AAE8                                                             ; DATA XREF: sub_AA60+72↑r
.text:0000AAE8                               ; } // starts at AA60         ; "unsupported arm register"
.text:0000AAEC
.text:0000AAEC                               ; =============== S U B R O U T I N E =======================================
.text:0000AAEC
.text:0000AAEC
.text:0000AAEC                               ; int __fastcall sub_AAEC(int result, int, int)
.text:0000AAEC                               sub_AAEC                      ; DATA XREF: .data.rel.ro:00010C1C↓o
.text:0000AAEC                               ; __unwind {
.text:0000AAEC 70 B5                         PUSH            {R4-R6,LR}
.text:0000AAEE 0E 46                         MOV             R6, R1
.text:0000AAF0 14 46                         MOV             R4, R2
.text:0000AAF2 05 46                         MOV             R5, R0
.text:0000AAF4 0C 2E                         CMP             R6, #0xC
.text:0000AAF6 06 DD                         BLE             loc_AB06
.text:0000AAF6
.text:0000AAF8 0F 2E                         CMP             R6, #0xF
.text:0000AAFA 0A D0                         BEQ             loc_AB12
.text:0000AAFA
.text:0000AAFC 0E 2E                         CMP             R6, #0xE
.text:0000AAFE 0C D0                         BEQ             loc_AB1A
.text:0000AAFE
.text:0000AB00 0D 2E                         CMP             R6, #0xD
.text:0000AB02 08 D0                         BEQ             loc_AB16
.text:0000AB02
.text:0000AB04 0B E0                         B               loc_AB1E
.text:0000AB04
.text:0000AB06                               ; ---------------------------------------------------------------------------
.text:0000AB06
.text:0000AB06                               loc_AB06                      ; CODE XREF: sub_AAEC+A↑j
.text:0000AB06 16 F1 02 0F                   CMN.W           R6, #2
.text:0000AB0A 04 D0                         BEQ             loc_AB16
.text:0000AB0A
.text:0000AB0C B6 F1 FF 3F                   CMP.W           R6, #0xFFFFFFFF
.text:0000AB10 05 D1                         BNE             loc_AB1E
.text:0000AB10
.text:0000AB12
.text:0000AB12                               loc_AB12                      ; CODE XREF: sub_AAEC+E↑j
.text:0000AB12 6C 64                         STR             R4, [R5,#0x44]
.text:0000AB14 70 BD                         POP             {R4-R6,PC}
.text:0000AB14
.text:0000AB16                               ; ---------------------------------------------------------------------------
.text:0000AB16
.text:0000AB16                               loc_AB16                      ; CODE XREF: sub_AAEC+16↑j
.text:0000AB16                                                             ; sub_AAEC+1E↑j
.text:0000AB16 EC 63                         STR             R4, [R5,#0x3C]
.text:0000AB18 70 BD                         POP             {R4-R6,PC}
.text:0000AB18
.text:0000AB1A                               ; ---------------------------------------------------------------------------
.text:0000AB1A
.text:0000AB1A                               loc_AB1A                      ; CODE XREF: sub_AAEC+12↑j
.text:0000AB1A 2C 64                         STR             R4, [R5,#0x40]
.text:0000AB1C 70 BD                         POP             {R4-R6,PC}
.text:0000AB1C
.text:0000AB1E                               ; ---------------------------------------------------------------------------
.text:0000AB1E
.text:0000AB1E                               loc_AB1E                      ; CODE XREF: sub_AAEC+18↑j
.text:0000AB1E                                                             ; sub_AAEC+24↑j
.text:0000AB1E 0C 2E                         CMP             R6, #0xC
.text:0000AB20 03 D8                         BHI             loc_AB2A
.text:0000AB20
.text:0000AB22 05 EB 86 00                   ADD.W           R0, R5, R6,LSL#2
.text:0000AB26 84 60                         STR             R4, [R0,#8]
.text:0000AB28 70 BD                         POP             {R4-R6,PC}
.text:0000AB28
.text:0000AB2A                               ; ---------------------------------------------------------------------------
.text:0000AB2A
.text:0000AB2A                               loc_AB2A                      ; CODE XREF: sub_AAEC+34↑j
.text:0000AB2A 26 F0 03 00                   BIC.W           R0, R6, #3
.text:0000AB2E C0 28                         CMP             R0, #0xC0
.text:0000AB30 11 D1                         BNE             loc_AB56
.text:0000AB30
.text:0000AB32 95 F8 4C 00                   LDRB.W          R0, [R5,#0x4C]
.text:0000AB36 30 B9                         CBNZ            R0, loc_AB46
.text:0000AB36
.text:0000AB38 01 20                         MOVS            R0, #1
.text:0000AB3A 85 F8 4C 00                   STRB.W          R0, [R5,#0x4C]
.text:0000AB3E 05 F5 EC 70                   ADD.W           R0, R5, #0x1D8
.text:0000AB42 FF F7 C6 EE                   BLX             sub_A8D0
.text:0000AB42
.text:0000AB46
.text:0000AB46                               loc_AB46                      ; CODE XREF: sub_AAEC+4A↑j
.text:0000AB46 4F F6 D8 61                   MOVW            R1, #0xFED8
.text:0000AB4A 05 EB 86 00                   ADD.W           R0, R5, R6,LSL#2
.text:0000AB4E CF F6 FF 71                   MOVT            R1, #0xFFFF
.text:0000AB52 44 50                         STR             R4, [R0,R1]
.text:0000AB54 70 BD                         POP             {R4-R6,PC}
.text:0000AB54
.text:0000AB56                               ; ---------------------------------------------------------------------------
.text:0000AB56
.text:0000AB56                               loc_AB56                      ; CODE XREF: sub_AAEC+44↑j
.text:0000AB56 05 48                         LDR             R0, =(aVoidLibunwindR - 0xAB64) ; "void libunwind::Registers_arm::setRegis"...
.text:0000AB58 40 F2 BF 52                   MOVW            R2, #0x5BF
.text:0000AB5C 04 49                         LDR             R1, =(aExternalLibunw_1 - 0xAB66) ; "external/libunwind_llvm/src/Registers.h"...
.text:0000AB5E 05 4B                         LDR             R3, =(aUnsupportedArm - 0xAB68) ; "unsupported arm register"
.text:0000AB60 78 44                         ADD             R0, PC        ; "void libunwind::Registers_arm::setRegis"...
.text:0000AB62 79 44                         ADD             R1, PC        ; "external/libunwind_llvm/src/Registers.h"...
.text:0000AB64 7B 44                         ADD             R3, PC        ; "unsupported arm register"
.text:0000AB66 00 F0 8B F9                   BL              sub_AE80
.text:0000AB66
.text:0000AB66                               ; End of function sub_AAEC
.text:0000AB66
.text:0000AB66                               ; ---------------------------------------------------------------------------
.text:0000AB6A 00 BF                         ALIGN 4
.text:0000AB6C 09 3B 00 00                   off_AB6C DCD aVoidLibunwindR - 0xAB64
.text:0000AB6C                                                             ; DATA XREF: sub_AAEC:loc_AB56↑r
.text:0000AB6C                                                             ; "void libunwind::Registers_arm::setRegis"...
.text:0000AB70 C4 3A 00 00                   off_AB70 DCD aExternalLibunw_1 - 0xAB66
.text:0000AB70                                                             ; DATA XREF: sub_AAEC+70↑r
.text:0000AB70                                                             ; "external/libunwind_llvm/src/Registers.h"...
.text:0000AB74 EC 3A 00 00                   off_AB74 DCD aUnsupportedArm - 0xAB68
.text:0000AB74                                                             ; DATA XREF: sub_AAEC+72↑r
.text:0000AB74                               ; } // starts at AAEC         ; "unsupported arm register"
.text:0000AB78
.text:0000AB78                               ; =============== S U B R O U T I N E =======================================
.text:0000AB78
.text:0000AB78
.text:0000AB78                               ; int __fastcall sub_AB78(int, int)
.text:0000AB78                               sub_AB78                      ; DATA XREF: .data.rel.ro:00010C20↓o
.text:0000AB78                               ; __unwind {
.text:0000AB78 21 F0 0F 00                   BIC.W           R0, R1, #0xF
.text:0000AB7C 00 22                         MOVS            R2, #0
.text:0000AB7E 70 28                         CMP             R0, #0x70 ; 'p'
.text:0000AB80 4F F0 00 00                   MOV.W           R0, #0
.text:0000AB84 21 F0 1F 01                   BIC.W           R1, R1, #0x1F
.text:0000AB88 08 BF                         IT EQ
.text:0000AB8A 01 20                         MOVEQ           R0, #1
.text:0000AB8C B1 F5 80 7F                   CMP.W           R1, #0x100
.text:0000AB90 08 BF                         IT EQ
.text:0000AB92 01 22                         MOVEQ           R2, #1
.text:0000AB94 40 EA 02 00                   ORR.W           R0, R0, R2
.text:0000AB98 70 47                         BX              LR
.text:0000AB98
.text:0000AB98                               ; End of function sub_AB78
.text:0000AB98
.text:0000AB98                               ; ---------------------------------------------------------------------------
.text:0000AB9A 00 00                         ALIGN 4
.text:0000AB9A                               ; } // starts at AB78
.text:0000AB9C
.text:0000AB9C                               ; =============== S U B R O U T I N E =======================================
.text:0000AB9C
.text:0000AB9C
.text:0000AB9C                               ; __int64 __fastcall sub_AB9C(int, int)
.text:0000AB9C                               sub_AB9C                      ; DATA XREF: .data.rel.ro:00010C24↓o
.text:0000AB9C                               ; __unwind {
.text:0000AB9C B0 B5                         PUSH            {R4,R5,R7,LR}
.text:0000AB9E 0C 46                         MOV             R4, R1
.text:0000ABA0 05 46                         MOV             R5, R0
.text:0000ABA2 24 F0 0F 00                   BIC.W           R0, R4, #0xF
.text:0000ABA6 70 28                         CMP             R0, #0x70 ; 'p'
.text:0000ABA8 13 D0                         BEQ             loc_ABD2
.text:0000ABA8
.text:0000ABAA B0 F5 88 7F                   CMP.W           R0, #0x110
.text:0000ABAE 1F D0                         BEQ             loc_ABF0
.text:0000ABAE
.text:0000ABB0 B0 F5 80 7F                   CMP.W           R0, #0x100
.text:0000ABB4 34 D1                         BNE             loc_AC20
.text:0000ABB4
.text:0000ABB6 95 F8 49 00                   LDRB.W          R0, [R5,#0x49]
.text:0000ABBA 50 BB                         CBNZ            R0, loc_AC12
.text:0000ABBA
.text:0000ABBC 01 20                         MOVS            R0, #1
.text:0000ABBE 85 F8 49 00                   STRB.W          R0, [R5,#0x49]
.text:0000ABC2 05 F1 50 00                   ADD.W           R0, R5, #0x50 ; 'P'
.text:0000ABC6 95 F8 48 10                   LDRB.W          R1, [R5,#0x48]
.text:0000ABCA 01 B3                         CBZ             R1, loc_AC0E
.text:0000ABCA
.text:0000ABCC FF F7 56 EE                   BLX             sub_A87C
.text:0000ABCC
.text:0000ABD0 1F E0                         B               loc_AC12
.text:0000ABD0
.text:0000ABD2                               ; ---------------------------------------------------------------------------
.text:0000ABD2
.text:0000ABD2                               loc_ABD2                      ; CODE XREF: sub_AB9C+C↑j
.text:0000ABD2 95 F8 4B 00                   LDRB.W          R0, [R5,#0x4B]
.text:0000ABD6 30 B9                         CBNZ            R0, loc_ABE6
.text:0000ABD6
.text:0000ABD8 01 20                         MOVS            R0, #1
.text:0000ABDA 85 F8 4B 00                   STRB.W          R0, [R5,#0x4B]
.text:0000ABDE 05 F5 AC 70                   ADD.W           R0, R5, #0x158
.text:0000ABE2 FF F7 54 EE                   BLX             sub_A88C
.text:0000ABE2
.text:0000ABE6
.text:0000ABE6                               loc_ABE6                      ; CODE XREF: sub_AB9C+3A↑j
.text:0000ABE6 05 EB C4 00                   ADD.W           R0, R5, R4,LSL#3
.text:0000ABEA A0 F5 0A 70                   SUB.W           R0, R0, #0x228
.text:0000ABEE 14 E0                         B               loc_AC1A
.text:0000ABEE
.text:0000ABF0                               ; ---------------------------------------------------------------------------
.text:0000ABF0
.text:0000ABF0                               loc_ABF0                      ; CODE XREF: sub_AB9C+12↑j
.text:0000ABF0 95 F8 4A 00                   LDRB.W          R0, [R5,#0x4A]
.text:0000ABF4 30 B9                         CBNZ            R0, loc_AC04
.text:0000ABF4
.text:0000ABF6 01 20                         MOVS            R0, #1
.text:0000ABF8 85 F8 4A 00                   STRB.W          R0, [R5,#0x4A]
.text:0000ABFC 05 F1 D8 00                   ADD.W           R0, R5, #0xD8
.text:0000AC00 FF F7 40 EE                   BLX             sub_A884
.text:0000AC00
.text:0000AC04
.text:0000AC04                               loc_AC04                      ; CODE XREF: sub_AB9C+58↑j
.text:0000AC04 05 EB C4 00                   ADD.W           R0, R5, R4,LSL#3
.text:0000AC08 A0 F5 F5 60                   SUB.W           R0, R0, #0x7A8
.text:0000AC0C 05 E0                         B               loc_AC1A
.text:0000AC0C
.text:0000AC0E                               ; ---------------------------------------------------------------------------
.text:0000AC0E
.text:0000AC0E                               loc_AC0E                      ; CODE XREF: sub_AB9C+2E↑j
.text:0000AC0E FF F7 32 EE                   BLX             sub_A874
.text:0000AC0E
.text:0000AC12
.text:0000AC12                               loc_AC12                      ; CODE XREF: sub_AB9C+1E↑j
.text:0000AC12                                                             ; sub_AB9C+34↑j
.text:0000AC12 05 EB C4 00                   ADD.W           R0, R5, R4,LSL#3
.text:0000AC16 A0 F5 F6 60                   SUB.W           R0, R0, #0x7B0
.text:0000AC16
.text:0000AC1A
.text:0000AC1A                               loc_AC1A                      ; CODE XREF: sub_AB9C+52↑j
.text:0000AC1A                                                             ; sub_AB9C+70↑j
.text:0000AC1A D0 E9 00 01                   LDRD.W          R0, R1, [R0]
.text:0000AC1E B0 BD                         POP             {R4,R5,R7,PC}
.text:0000AC1E
.text:0000AC20                               ; ---------------------------------------------------------------------------
.text:0000AC20
.text:0000AC20                               loc_AC20                      ; CODE XREF: sub_AB9C+18↑j
.text:0000AC20 04 48                         LDR             R0, =(aUnwFpregTLibun - 0xAC2E) ; "unw_fpreg_t libunwind::Registers_arm::g"...
.text:0000AC22 40 F2 89 62                   MOVW            R2, #0x689
.text:0000AC26 04 49                         LDR             R1, =(aExternalLibunw_1 - 0xAC30) ; "external/libunwind_llvm/src/Registers.h"...
.text:0000AC28 04 4B                         LDR             R3, =(aUnknownArmFloa - 0xAC32) ; "Unknown ARM float register"
.text:0000AC2A 78 44                         ADD             R0, PC        ; "unw_fpreg_t libunwind::Registers_arm::g"...
.text:0000AC2C 79 44                         ADD             R1, PC        ; "external/libunwind_llvm/src/Registers.h"...
.text:0000AC2E 7B 44                         ADD             R3, PC        ; "Unknown ARM float register"
.text:0000AC30 00 F0 26 F9                   BL              sub_AE80
.text:0000AC30
.text:0000AC30                               ; End of function sub_AB9C
.text:0000AC30
.text:0000AC30                               ; ---------------------------------------------------------------------------
.text:0000AC34 79 3A 00 00                   off_AC34 DCD aUnwFpregTLibun - 0xAC2E
.text:0000AC34                                                             ; DATA XREF: sub_AB9C:loc_AC20↑r
.text:0000AC34                                                             ; "unw_fpreg_t libunwind::Registers_arm::g"...
.text:0000AC38 FA 39 00 00                   off_AC38 DCD aExternalLibunw_1 - 0xAC30
.text:0000AC38                                                             ; DATA XREF: sub_AB9C+8A↑r
.text:0000AC38                                                             ; "external/libunwind_llvm/src/Registers.h"...
.text:0000AC3C B1 3A 00 00                   off_AC3C DCD aUnknownArmFloa - 0xAC32
.text:0000AC3C                                                             ; DATA XREF: sub_AB9C+8C↑r
.text:0000AC3C                               ; } // starts at AB9C         ; "Unknown ARM float register"
.text:0000AC40
.text:0000AC40                               ; =============== S U B R O U T I N E =======================================
.text:0000AC40
.text:0000AC40
.text:0000AC40                               ; int __fastcall sub_AC40(int, int, int, int)
.text:0000AC40                               sub_AC40                      ; DATA XREF: .data.rel.ro:00010C28↓o
.text:0000AC40                               ; __unwind {
.text:0000AC40 F0 B5                         PUSH            {R4-R7,LR}
.text:0000AC42 81 B0                         SUB             SP, SP, #4
.text:0000AC44
.text:0000AC44                               loc_AC44
.text:0000AC44 0E 46                         MOV             R6, R1
.text:0000AC46 07 46                         MOV             R7, R0
.text:0000AC48 26 F0 0F 00                   BIC.W           R0, R6, #0xF
.text:0000AC4C 1D 46                         MOV             R5, R3
.text:0000AC4E 14 46                         MOV             R4, R2
.text:0000AC50 70 28                         CMP             R0, #0x70 ; 'p'
.text:0000AC52 13 D0                         BEQ             loc_AC7C
.text:0000AC52
.text:0000AC54 B0 F5 88 7F                   CMP.W           R0, #0x110
.text:0000AC58 24 D0                         BEQ             loc_ACA4
.text:0000AC58
.text:0000AC5A B0 F5 80 7F                   CMP.W           R0, #0x100
.text:0000AC5E 45 D1                         BNE             loc_ACEC
.text:0000AC5E
.text:0000AC60 97 F8 49 00                   LDRB.W          R0, [R7,#0x49]
.text:0000AC64 A0 BB                         CBNZ            R0, loc_ACD0
.text:0000AC64
.text:0000AC66 01 20                         MOVS            R0, #1
.text:0000AC68 87 F8 49 00                   STRB.W          R0, [R7,#0x49]
.text:0000AC6C 07 F1 50 00                   ADD.W           R0, R7, #0x50 ; 'P'
.text:0000AC70 97 F8 48 10                   LDRB.W          R1, [R7,#0x48]
.text:0000AC74 51 B3                         CBZ             R1, loc_ACCC
.text:0000AC74
.text:0000AC76 FF F7 02 EE                   BLX             sub_A87C
.text:0000AC76
.text:0000AC7A 29 E0                         B               loc_ACD0
.text:0000AC7A
.text:0000AC7C                               ; ---------------------------------------------------------------------------
.text:0000AC7C
.text:0000AC7C                               loc_AC7C                      ; CODE XREF: sub_AC40+12↑j
.text:0000AC7C 97 F8 4B 00                   LDRB.W          R0, [R7,#0x4B]
.text:0000AC80 30 B9                         CBNZ            R0, loc_AC90
.text:0000AC80
.text:0000AC82 01 20                         MOVS            R0, #1
.text:0000AC84 87 F8 4B 00                   STRB.W          R0, [R7,#0x4B]
.text:0000AC88 07 F5 AC 70                   ADD.W           R0, R7, #0x158
.text:0000AC8C FF F7 FE ED                   BLX             sub_A88C
.text:0000AC8C
.text:0000AC90
.text:0000AC90                               loc_AC90                      ; CODE XREF: sub_AC40+40↑j
.text:0000AC90 4F F6 DC 51                   MOVW            R1, #0xFDDC
.text:0000AC94 07 EB C6 00                   ADD.W           R0, R7, R6,LSL#3
.text:0000AC98 CF F6 FF 71                   MOVT            R1, #0xFFFF
.text:0000AC9C 45 50                         STR             R5, [R0,R1]
.text:0000AC9E 4F F6 D8 51                   MOVW            R1, #0xFDD8
.text:0000ACA2 1E E0                         B               loc_ACE2
.text:0000ACA2
.text:0000ACA4                               ; ---------------------------------------------------------------------------
.text:0000ACA4
.text:0000ACA4                               loc_ACA4                      ; CODE XREF: sub_AC40+18↑j
.text:0000ACA4 97 F8 4A 00                   LDRB.W          R0, [R7,#0x4A]
.text:0000ACA8 30 B9                         CBNZ            R0, loc_ACB8
.text:0000ACA8
.text:0000ACAA 01 20                         MOVS            R0, #1
.text:0000ACAC 87 F8 4A 00                   STRB.W          R0, [R7,#0x4A]
.text:0000ACB0 07 F1 D8 00                   ADD.W           R0, R7, #0xD8
.text:0000ACB4 FF F7 E6 ED                   BLX             sub_A884
.text:0000ACB4
.text:0000ACB8
.text:0000ACB8                               loc_ACB8                      ; CODE XREF: sub_AC40+68↑j
.text:0000ACB8 4F F6 5C 01                   MOVW            R1, #0xF85C
.text:0000ACBC 07 EB C6 00                   ADD.W           R0, R7, R6,LSL#3
.text:0000ACC0 CF F6 FF 71                   MOVT            R1, #0xFFFF
.text:0000ACC4 45 50                         STR             R5, [R0,R1]
.text:0000ACC6 4F F6 58 01                   MOVW            R1, #0xF858
.text:0000ACCA 0A E0                         B               loc_ACE2
.text:0000ACCA
.text:0000ACCC                               ; ---------------------------------------------------------------------------
.text:0000ACCC
.text:0000ACCC                               loc_ACCC                      ; CODE XREF: sub_AC40+34↑j
.text:0000ACCC FF F7 D2 ED                   BLX             sub_A874
.text:0000ACCC
.text:0000ACD0
.text:0000ACD0                               loc_ACD0                      ; CODE XREF: sub_AC40+24↑j
.text:0000ACD0                                                             ; sub_AC40+3A↑j
.text:0000ACD0 4F F6 54 01                   MOVW            R1, #0xF854
.text:0000ACD4 07 EB C6 00                   ADD.W           R0, R7, R6,LSL#3
.text:0000ACD8 CF F6 FF 71                   MOVT            R1, #0xFFFF
.text:0000ACDC 45 50                         STR             R5, [R0,R1]
.text:0000ACDE 4F F6 50 01                   MOVW            R1, #0xF850
.text:0000ACDE
.text:0000ACE2
.text:0000ACE2                               loc_ACE2                      ; CODE XREF: sub_AC40+62↑j
.text:0000ACE2                                                             ; sub_AC40+8A↑j
.text:0000ACE2 CF F6 FF 71                   MOVT            R1, #0xFFFF
.text:0000ACE6 44 50                         STR             R4, [R0,R1]
.text:0000ACE8 01 B0                         ADD             SP, SP, #4
.text:0000ACEA F0 BD                         POP             {R4-R7,PC}
.text:0000ACEA
.text:0000ACEC                               ; ---------------------------------------------------------------------------
.text:0000ACEC
.text:0000ACEC                               loc_ACEC                      ; CODE XREF: sub_AC40+1E↑j
.text:0000ACEC 04 48                         LDR             R0, =(aVoidLibunwindR_0 - 0xACFA) ; "void libunwind::Registers_arm::setFloat"...
.text:0000ACEE 40 F2 A4 62                   MOVW            R2, #0x6A4
.text:0000ACF2 04 49                         LDR             R1, =(aExternalLibunw_1 - 0xACFC) ; "external/libunwind_llvm/src/Registers.h"...
.text:0000ACF4 04 4B                         LDR             R3, =(aUnknownArmFloa - 0xACFE) ; "Unknown ARM float register"
.text:0000ACF6 78 44                         ADD             R0, PC        ; "void libunwind::Registers_arm::setFloat"...
.text:0000ACF8 79 44                         ADD             R1, PC        ; "external/libunwind_llvm/src/Registers.h"...
.text:0000ACFA 7B 44                         ADD             R3, PC        ; "Unknown ARM float register"
.text:0000ACFC 00 F0 C0 F8                   BL              sub_AE80
.text:0000ACFC
.text:0000ACFC                               ; End of function sub_AC40
.text:0000ACFC
.text:0000ACFC                               ; ---------------------------------------------------------------------------
.text:0000AD00 04 3A 00 00                   off_AD00 DCD aVoidLibunwindR_0 - 0xACFA
.text:0000AD00                                                             ; DATA XREF: sub_AC40:loc_ACEC↑r
.text:0000AD00                                                             ; "void libunwind::Registers_arm::setFloat"...
.text:0000AD04 2E 39 00 00                   off_AD04 DCD aExternalLibunw_1 - 0xACFC
.text:0000AD04                                                             ; DATA XREF: sub_AC40+B2↑r
.text:0000AD04                                                             ; "external/libunwind_llvm/src/Registers.h"...
.text:0000AD08 E5 39 00 00                   off_AD08 DCD aUnknownArmFloa - 0xACFE
.text:0000AD08                                                             ; DATA XREF: sub_AC40+B4↑r
.text:0000AD08                               ; } // starts at AC40         ; "Unknown ARM float register"
.text:0000AD0C
.text:0000AD0C                               ; =============== S U B R O U T I N E =======================================
.text:0000AD0C
.text:0000AD0C
.text:0000AD0C                               ; int __fastcall sub_AD0C(_DWORD *)
.text:0000AD0C                               sub_AD0C                      ; DATA XREF: .data.rel.ro:00010C2C↓o
.text:0000AD0C                               ; __unwind {
.text:0000AD0C B0 B5                         PUSH            {R4,R5,R7,LR}
.text:0000AD0E 04 46                         MOV             R4, R0
.text:0000AD10 94 F8 10 02                   LDRB.W          R0, [R4,#0x210]
.text:0000AD14 68 B9                         CBNZ            R0, loc_AD32
.text:0000AD14
.text:0000AD16 20 46                         MOV             R0, R4
.text:0000AD18 00 F0 C8 F8                   BL              sub_AEAC
.text:0000AD18
.text:0000AD1C 01 28                         CMP             R0, #1
.text:0000AD1E 18 BF                         IT NE
.text:0000AD20 B0 BD                         POPNE           {R4,R5,R7,PC}
.text:0000AD20
.text:0000AD22 20 68                         LDR             R0, [R4]
.text:0000AD24 01 21                         MOVS            R1, #1
.text:0000AD26 42 6B                         LDR             R2, [R0,#0x34]
.text:0000AD28 20 46                         MOV             R0, R4
.text:0000AD2A 90 47                         BLX             R2
.text:0000AD2A
.text:0000AD2C 94 F8 10 02                   LDRB.W          R0, [R4,#0x210]
.text:0000AD30 08 B1                         CBZ             R0, loc_AD36
.text:0000AD30
.text:0000AD32
.text:0000AD32                               loc_AD32                      ; CODE XREF: sub_AD0C+8↑j
.text:0000AD32 00 20                         MOVS            R0, #0
.text:0000AD34 B0 BD                         POP             {R4,R5,R7,PC}
.text:0000AD34
.text:0000AD36                               ; ---------------------------------------------------------------------------
.text:0000AD36
.text:0000AD36                               loc_AD36                      ; CODE XREF: sub_AD0C+24↑j
.text:0000AD36 D4 F8 F8 01                   LDR.W           R0, [R4,#0x1F8]
.text:0000AD3A 68 B1                         CBZ             R0, loc_AD58
.text:0000AD3A
.text:0000AD3C 20 68                         LDR             R0, [R4]
.text:0000AD3E 6F F0 01 01                   MOV             R1, #0xFFFFFFFE
.text:0000AD42 D0 E9 03 25                   LDRD.W          R2, R5, [R0,#0xC]
.text:0000AD46 20 46                         MOV             R0, R4
.text:0000AD48 90 47                         BLX             R2
.text:0000AD48
.text:0000AD4A D4 F8 F8 11                   LDR.W           R1, [R4,#0x1F8]
.text:0000AD4E 0A 18                         ADDS            R2, R1, R0
.text:0000AD50 20 46                         MOV             R0, R4
.text:0000AD52 6F F0 01 01                   MOV             R1, #0xFFFFFFFE
.text:0000AD56 A8 47                         BLX             R5
.text:0000AD56
.text:0000AD58
.text:0000AD58                               loc_AD58                      ; CODE XREF: sub_AD0C+2E↑j
.text:0000AD58 01 20                         MOVS            R0, #1
.text:0000AD5A B0 BD                         POP             {R4,R5,R7,PC}
.text:0000AD5A                               ; } // starts at AD0C
.text:0000AD5A
.text:0000AD5A                               ; End of function sub_AD0C
.text:0000AD5A
.text:0000AD5C
.text:0000AD5C                               ; =============== S U B R O U T I N E =======================================
.text:0000AD5C
.text:0000AD5C
.text:0000AD5C                               ; _DWORD *__fastcall sub_AD5C(int, _DWORD *)
.text:0000AD5C                               sub_AD5C                      ; DATA XREF: .data.rel.ro:00010C30↓o
.text:0000AD5C                               ; __unwind {
.text:0000AD5C 10 B5                         PUSH            {R4,LR}
.text:0000AD5E 00 F5 F4 70                   ADD.W           R0, R0, #0x1E8
.text:0000AD62 B0 E8 1C 50                   LDM.W           R0!, {R2-R4,R12,LR}
.text:0000AD66 A1 E8 1C 50                   STM.W           R1!, {R2-R4,R12,LR}
.text:0000AD6A 90 E8 1C 50                   LDM.W           R0, {R2-R4,R12,LR}
.text:0000AD6E 81 E8 1C 50                   STM.W           R1, {R2-R4,R12,LR}
.text:0000AD72 10 BD                         POP             {R4,PC}
.text:0000AD72
.text:0000AD72                               ; End of function sub_AD5C
.text:0000AD72
.text:0000AD74
.text:0000AD74                               ; =============== S U B R O U T I N E =======================================
.text:0000AD74
.text:0000AD74
.text:0000AD74                               ; int __fastcall sub_AD74(int)
.text:0000AD74                               sub_AD74                      ; DATA XREF: .data.rel.ro:00010C34↓o
.text:0000AD74 10 B5                         PUSH            {R4,LR}
.text:0000AD76 00 F1 08 04                   ADD.W           R4, R0, #8
.text:0000AD7A 20 46                         MOV             R0, R4
.text:0000AD7C 00 F0 C0 F8                   BL              sub_AF00
.text:0000AD7C
.text:0000AD80 20 46                         MOV             R0, R4
.text:0000AD82 BD E8 10 40                   POP.W           {R4,LR}
.text:0000AD86 00 F0 5B BC                   B.W             sub_B640
.text:0000AD86                               ; } // starts at AD5C
.text:0000AD86
.text:0000AD86                               ; End of function sub_AD74
.text:0000AD86
.text:0000AD8A
.text:0000AD8A                               ; =============== S U B R O U T I N E =======================================
.text:0000AD8A
.text:0000AD8A
.text:0000AD8A                               ; int __fastcall sub_AD8A(int)
.text:0000AD8A                               sub_AD8A                      ; DATA XREF: .data.rel.ro:00010C38↓o
.text:0000AD8A                               ; __unwind {
.text:0000AD8A 90 F8 11 02                   LDRB.W          R0, [R0,#0x211]
.text:0000AD8E 70 47                         BX              LR
.text:0000AD8E                               ; } // starts at AD8A
.text:0000AD8E
.text:0000AD8E                               ; End of function sub_AD8A
.text:0000AD8E
.text:0000AD90
.text:0000AD90                               ; =============== S U B R O U T I N E =======================================
.text:0000AD90
.text:0000AD90
.text:0000AD90                               ; int __fastcall sub_AD90(int, int, int, _DWORD *)
.text:0000AD90                               sub_AD90                      ; DATA XREF: .data.rel.ro:00010C3C↓o
.text:0000AD90
.text:0000AD90                               var_30= -0x30
.text:0000AD90                               var_2C= -0x2C
.text:0000AD90                               var_28= -0x28
.text:0000AD90                               var_20= -0x20
.text:0000AD90                               var_1C= -0x1C
.text:0000AD90                               var_18= -0x18
.text:0000AD90
.text:0000AD90                               ; __unwind {
.text:0000AD90 F0 B5                         PUSH            {R4-R7,LR}
.text:0000AD92 87 B0                         SUB             SP, SP, #0x1C
.text:0000AD94 0E 46                         MOV             R6, R1
.text:0000AD96 17 49                         LDR             R1, =(__stack_chk_guard_ptr - 0xADA0)
.text:0000AD98 15 46                         MOV             R5, R2
.text:0000AD9A 1C 46                         MOV             R4, R3
.text:0000AD9C 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:0000AD9E 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:0000ADA0 09 68                         LDR             R1, [R1]
.text:0000ADA2 06 91                         STR             R1, [SP,#0x30+var_18]
.text:0000ADA4 01 68                         LDR             R1, [R0]
.text:0000ADA6 CA 68                         LDR             R2, [R1,#0xC]
.text:0000ADA8 4F F0 FF 31                   MOV.W           R1, #0xFFFFFFFF
.text:0000ADAC 90 47                         BLX             R2
.text:0000ADAC
.text:0000ADAE 02 A9                         ADD             R1, SP, #0x30+var_28
.text:0000ADB0 07 46                         MOV             R7, R0
.text:0000ADB2 F8 F7 94 EB                   BLX             dladdr
.text:0000ADB2
.text:0000ADB6 88 B1                         CBZ             R0, loc_ADDC
.text:0000ADB6
.text:0000ADB8 04 98                         LDR             R0, [SP,#0x30+var_20]
.text:0000ADBA 78 B1                         CBZ             R0, loc_ADDC
.text:0000ADBA
.text:0000ADBC 01 90                         STR             R0, [SP,#0x30+var_2C]
.text:0000ADBE 29 46                         MOV             R1, R5
.text:0000ADC0 0D 48                         LDR             R0, =(aS_1 - 0xADCC) ; "%s"
.text:0000ADC2 00 22                         MOVS            R2, #0
.text:0000ADC4 4F F0 FF 33                   MOV.W           R3, #0xFFFFFFFF
.text:0000ADC8 78 44                         ADD             R0, PC        ; "%s"
.text:0000ADCA 00 90                         STR             R0, [SP,#0x30+var_30]
.text:0000ADCC 30 46                         MOV             R0, R6
.text:0000ADCE F8 F7 C4 E9                   BLX             __snprintf_chk
.text:0000ADCE
.text:0000ADD2 05 98                         LDR             R0, [SP,#0x30+var_1C]
.text:0000ADD4 38 1A                         SUBS            R0, R7, R0
.text:0000ADD6 20 60                         STR             R0, [R4]
.text:0000ADD8 01 20                         MOVS            R0, #1
.text:0000ADDA 00 E0                         B               loc_ADDE
.text:0000ADDA
.text:0000ADDC                               ; ---------------------------------------------------------------------------
.text:0000ADDC
.text:0000ADDC                               loc_ADDC                      ; CODE XREF: sub_AD90+26↑j
.text:0000ADDC                                                             ; sub_AD90+2A↑j
.text:0000ADDC 00 20                         MOVS            R0, #0
.text:0000ADDC
.text:0000ADDE
.text:0000ADDE                               loc_ADDE                      ; CODE XREF: sub_AD90+4A↑j
.text:0000ADDE 07 49                         LDR             R1, =(__stack_chk_guard_ptr - 0xADE6)
.text:0000ADE0 06 9A                         LDR             R2, [SP,#0x30+var_18]
.text:0000ADE2 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:0000ADE4 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:0000ADE6 09 68                         LDR             R1, [R1]
.text:0000ADE8 89 1A                         SUBS            R1, R1, R2
.text:0000ADEA 04 BF                         ITT EQ
.text:0000ADEC 07 B0                         ADDEQ           SP, SP, #0x1C
.text:0000ADEE F0 BD                         POPEQ           {R4-R7,PC}
.text:0000ADEE
.text:0000ADF0 F8 F7 F8 E8                   BLX             __stack_chk_fail
.text:0000ADF0
.text:0000ADF0                               ; End of function sub_AD90
.text:0000ADF0
.text:0000ADF0                               ; ---------------------------------------------------------------------------
.text:0000ADF4 F4 5F 00 00                   off_ADF4 DCD __stack_chk_guard_ptr - 0xADA0
.text:0000ADF4                                                             ; DATA XREF: sub_AD90+6↑r
.text:0000ADF8 74 39 00 00                   off_ADF8 DCD aS_1 - 0xADCC    ; DATA XREF: sub_AD90+30↑r
.text:0000ADF8                                                             ; "%s"
.text:0000ADFC AE 5F 00 00                   off_ADFC DCD __stack_chk_guard_ptr - 0xADE6
.text:0000ADFC                                                             ; DATA XREF: sub_AD90:loc_ADDE↑r
.text:0000ADFC                               ; } // starts at AD90
.text:0000AE00
.text:0000AE00                               ; =============== S U B R O U T I N E =======================================
.text:0000AE00
.text:0000AE00
.text:0000AE00                               ; int __fastcall sub_AE00(int *, int)
.text:0000AE00                               sub_AE00                      ; CODE XREF: sub_A8E4+34↑p
.text:0000AE00                                                             ; DATA XREF: .data.rel.ro:00010C40↓o
.text:0000AE00
.text:0000AE00                               var_20= -0x20
.text:0000AE00                               var_1C= -0x1C
.text:0000AE00                               var_18= -0x18
.text:0000AE00                               var_14= -0x14
.text:0000AE00
.text:0000AE00                               ; __unwind {
.text:0000AE00 70 B5                         PUSH            {R4-R6,LR}
.text:0000AE02 84 B0                         SUB             SP, SP, #0x10
.text:0000AE04 04 46                         MOV             R4, R0
.text:0000AE06 18 48                         LDR             R0, =(__stack_chk_guard_ptr - 0xAE12)
.text:0000AE08 0E 46                         MOV             R6, R1
.text:0000AE0A 4F F0 FF 31                   MOV.W           R1, #0xFFFFFFFF
.text:0000AE0E 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:0000AE10 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:0000AE12 00 68                         LDR             R0, [R0]
.text:0000AE14 03 90                         STR             R0, [SP,#0x20+var_14]
.text:0000AE16 20 68                         LDR             R0, [R4]
.text:0000AE18 C2 68                         LDR             R2, [R0,#0xC]
.text:0000AE1A 20 46                         MOV             R0, R4
.text:0000AE1C 90 47                         BLX             R2
.text:0000AE1C
.text:0000AE1E 00 21                         MOVS            R1, #0
.text:0000AE20 20 F0 01 05                   BIC.W           R5, R0, #1
.text:0000AE24 02 91                         STR             R1, [SP,#0x20+var_18]
.text:0000AE26 00 2E                         CMP             R6, #0
.text:0000AE28 18 BF                         IT NE
.text:0000AE2A 01 3D                         SUBNE           R5, #1
.text:0000AE2C 02 A9                         ADD             R1, SP, #0x20+var_18
.text:0000AE2E 28 46                         MOV             R0, R5
.text:0000AE30 F8 F7 5A EB                   BLX             __gnu_Unwind_Find_exidx
.text:0000AE30
.text:0000AE34 02 99                         LDR             R1, [SP,#0x20+var_18]
.text:0000AE36 00 28                         CMP             R0, #0
.text:0000AE38 00 90                         STR             R0, [SP,#0x20+var_20]
.text:0000AE3A 01 91                         STR             R1, [SP,#0x20+var_1C]
.text:0000AE3C 06 D0                         BEQ             loc_AE4C
.text:0000AE3C
.text:0000AE3E 29 B1                         CBZ             R1, loc_AE4C
.text:0000AE3E
.text:0000AE40 6A 46                         MOV             R2, SP
.text:0000AE42 20 46                         MOV             R0, R4
.text:0000AE44 29 46                         MOV             R1, R5
.text:0000AE46 00 F0 87 F8                   BL              sub_AF58
.text:0000AE46
.text:0000AE4A 10 B9                         CBNZ            R0, loc_AE52
.text:0000AE4A
.text:0000AE4C
.text:0000AE4C                               loc_AE4C                      ; CODE XREF: sub_AE00+3C↑j
.text:0000AE4C                                                             ; sub_AE00+3E↑j
.text:0000AE4C 01 20                         MOVS            R0, #1
.text:0000AE4E 84 F8 10 02                   STRB.W          R0, [R4,#0x210]
.text:0000AE4E
.text:0000AE52
.text:0000AE52                               loc_AE52                      ; CODE XREF: sub_AE00+4A↑j
.text:0000AE52 06 48                         LDR             R0, =(__stack_chk_guard_ptr - 0xAE5A)
.text:0000AE54 03 99                         LDR             R1, [SP,#0x20+var_14]
.text:0000AE56 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:0000AE58 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:0000AE5A 00 68                         LDR             R0, [R0]
.text:0000AE5C 40 1A                         SUBS            R0, R0, R1
.text:0000AE5E 04 BF                         ITT EQ
.text:0000AE60 04 B0                         ADDEQ           SP, SP, #0x10
.text:0000AE62 70 BD                         POPEQ           {R4-R6,PC}
.text:0000AE62
.text:0000AE64 F8 F7 BE E8                   BLX             __stack_chk_fail
.text:0000AE64
.text:0000AE64                               ; End of function sub_AE00
.text:0000AE64
.text:0000AE64                               ; ---------------------------------------------------------------------------
.text:0000AE68 82 5F 00 00                   off_AE68 DCD __stack_chk_guard_ptr - 0xAE12
.text:0000AE68                                                             ; DATA XREF: sub_AE00+6↑r
.text:0000AE6C 3A 5F 00 00                   off_AE6C DCD __stack_chk_guard_ptr - 0xAE5A
.text:0000AE6C                                                             ; DATA XREF: sub_AE00:loc_AE52↑r
.text:0000AE6C                               ; } // starts at AE00
.text:0000AE70                               ; ---------------------------------------------------------------------------
.text:0000AE70
.text:0000AE70                               loc_AE70                      ; DATA XREF: .data.rel.ro:00010C44↓o
.text:0000AE70                               ; __unwind {
.text:0000AE70 08 30                         ADDS            R0, #8
.text:0000AE72 00 F0 67 B9                   B.W             loc_B144
.text:0000AE72
.text:0000AE76
.text:0000AE76                               ; =============== S U B R O U T I N E =======================================
.text:0000AE76
.text:0000AE76
.text:0000AE76                               ; int __fastcall sub_AE76(int result)
.text:0000AE76                               sub_AE76                      ; DATA XREF: .data.rel.ro:00010C48↓o
.text:0000AE76 01 21                         MOVS            R1, #1
.text:0000AE78 80 F8 48 10                   STRB.W          R1, [R0,#0x48]
.text:0000AE7C 70 47                         BX              LR
.text:0000AE7C
.text:0000AE7C                               ; End of function sub_AE76
.text:0000AE7C
.text:0000AE7C                               ; ---------------------------------------------------------------------------
.text:0000AE7E 00 00                         ALIGN 0x10
.text:0000AE7E                               ; } // starts at AE70
.text:0000AE80
.text:0000AE80                               ; =============== S U B R O U T I N E =======================================
.text:0000AE80
.text:0000AE80                               ; Attributes: noreturn
.text:0000AE80
.text:0000AE80                               ; void __fastcall __noreturn sub_AE80(const char *, const char *, int, const char *)
.text:0000AE80                               sub_AE80                      ; CODE XREF: sub_AA60+7A↑p
.text:0000AE80                                                             ; sub_AAEC+7A↑p
.text:0000AE80                                                             ; sub_AB9C+94↑p
.text:0000AE80                                                             ; sub_AC40+BC↑p
.text:0000AE80                                                             ; sub_AF58+160↓p
.text:0000AE80                                                             ; sub_AF58+174↓p
.text:0000AE80
.text:0000AE80                               var_10= -0x10
.text:0000AE80
.text:0000AE80                               ; __unwind {
.text:0000AE80 80 B5                         PUSH            {R7,LR}
.text:0000AE82 82 B0                         SUB             SP, SP, #8
.text:0000AE84 86 46                         MOV             LR, R0
.text:0000AE86 07 48                         LDR             R0, =(stderr_ptr - 0xAE90)
.text:0000AE88 8C 46                         MOV             R12, R1
.text:0000AE8A 07 49                         LDR             R1, =(aLibunwindSSDS - 0xAE94) ; "libunwind: %s %s:%d - %s\n"
.text:0000AE8C 78 44                         ADD             R0, PC        ; stderr_ptr
.text:0000AE8E 00 68                         LDR             R0, [R0]      ; stderr
.text:0000AE90 79 44                         ADD             R1, PC        ; "libunwind: %s %s:%d - %s\n"
.text:0000AE92 00 68                         LDR             R0, [R0]      ; stream
.text:0000AE94 CD E9 00 23                   STRD.W          R2, R3, [SP,#0x10+var_10]
.text:0000AE98 72 46                         MOV             R2, LR
.text:0000AE9A 63 46                         MOV             R3, R12
.text:0000AE9C F8 F7 18 EB                   BLX             fprintf
.text:0000AE9C
.text:0000AEA0 F8 F7 10 EB                   BLX             abort
.text:0000AEA0
.text:0000AEA0                               ; End of function sub_AE80
.text:0000AEA0
.text:0000AEA0                               ; ---------------------------------------------------------------------------
.text:0000AEA4 70 5F 00 00                   off_AEA4 DCD stderr_ptr - 0xAE90
.text:0000AEA4                                                             ; DATA XREF: sub_AE80+6↑r
.text:0000AEA8 94 36 00 00                   off_AEA8 DCD aLibunwindSSDS - 0xAE94
.text:0000AEA8                                                             ; DATA XREF: sub_AE80+A↑r
.text:0000AEA8                               ; } // starts at AE80         ; "libunwind: %s %s:%d - %s\n"
.text:0000AEAC
.text:0000AEAC                               ; =============== S U B R O U T I N E =======================================
.text:0000AEAC
.text:0000AEAC
.text:0000AEAC                               ; int __fastcall sub_AEAC(int)
.text:0000AEAC                               sub_AEAC                      ; CODE XREF: sub_AD0C+C↑p
.text:0000AEAC
.text:0000AEAC                               var_1C= -0x1C
.text:0000AEAC                               var_18= -0x18
.text:0000AEAC                               var_14= -0x14
.text:0000AEAC
.text:0000AEAC                               ; __unwind {
.text:0000AEAC B0 B5                         PUSH            {R4,R5,R7,LR}
.text:0000AEAE 84 B0                         SUB             SP, SP, #0x10
.text:0000AEB0 05 46                         MOV             R5, R0
.text:0000AEB2 11 48                         LDR             R0, =(__stack_chk_guard_ptr - 0xAEBC)
.text:0000AEB4 00 24                         MOVS            R4, #0
.text:0000AEB6 01 A9                         ADD             R1, SP, #0x20+var_1C
.text:0000AEB8 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:0000AEBA 02 AA                         ADD             R2, SP, #0x20+var_18
.text:0000AEBC 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:0000AEBE 00 68                         LDR             R0, [R0]
.text:0000AEC0 03 90                         STR             R0, [SP,#0x20+var_14]
.text:0000AEC2 CD E9 01 44                   STRD.W          R4, R4, [SP,#0x20+var_1C]
.text:0000AEC6 D5 F8 08 02                   LDR.W           R0, [R5,#0x208]
.text:0000AECA FF F7 89 F8                   BL              sub_9FE0
.text:0000AECA
.text:0000AECE DD E9 01 23                   LDRD.W          R2, R3, [SP,#0x20+var_1C]
.text:0000AED2 01 46                         MOV             R1, R0
.text:0000AED4 28 46                         MOV             R0, R5
.text:0000AED6 FF F7 AD F8                   BL              sub_A034
.text:0000AED6
.text:0000AEDA 08 28                         CMP             R0, #8
.text:0000AEDC 07 48                         LDR             R0, =(__stack_chk_guard_ptr - 0xAEE8)
.text:0000AEDE 08 BF                         IT EQ
.text:0000AEE0 01 24                         MOVEQ           R4, #1
.text:0000AEE2 03 99                         LDR             R1, [SP,#0x20+var_14]
.text:0000AEE4 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:0000AEE6 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:0000AEE8 00 68                         LDR             R0, [R0]
.text:0000AEEA 40 1A                         SUBS            R0, R0, R1
.text:0000AEEC 02 BF                         ITTT EQ
.text:0000AEEE 20 46                         MOVEQ           R0, R4
.text:0000AEF0 04 B0                         ADDEQ           SP, SP, #0x10
.text:0000AEF2 B0 BD                         POPEQ           {R4,R5,R7,PC}
.text:0000AEF2
.text:0000AEF4 F8 F7 76 E8                   BLX             __stack_chk_fail
.text:0000AEF4
.text:0000AEF4                               ; End of function sub_AEAC
.text:0000AEF4
.text:0000AEF4                               ; ---------------------------------------------------------------------------
.text:0000AEF8 D8 5E 00 00                   off_AEF8 DCD __stack_chk_guard_ptr - 0xAEBC
.text:0000AEF8                                                             ; DATA XREF: sub_AEAC+6↑r
.text:0000AEFC AC 5E 00 00                   off_AEFC DCD __stack_chk_guard_ptr - 0xAEE8
.text:0000AEFC                                                             ; DATA XREF: sub_AEAC+30↑r
.text:0000AEFC                               ; } // starts at AEAC
.text:0000AF00
.text:0000AF00                               ; =============== S U B R O U T I N E =======================================
.text:0000AF00
.text:0000AF00
.text:0000AF00                               ; _DWORD *__fastcall sub_AF00(int)
.text:0000AF00                               sub_AF00                      ; CODE XREF: sub_AD74+8↑p
.text:0000AF00                               ; __unwind {
.text:0000AF00 10 B5                         PUSH            {R4,LR}
.text:0000AF02 04 46                         MOV             R4, R0
.text:0000AF04 94 F8 41 00                   LDRB.W          R0, [R4,#0x41]
.text:0000AF08 48 B1                         CBZ             R0, loc_AF1E
.text:0000AF08
.text:0000AF0A 94 F8 40 10                   LDRB.W          R1, [R4,#0x40]
.text:0000AF0E 04 F1 48 00                   ADD.W           R0, R4, #0x48 ; 'H'
.text:0000AF12 11 B1                         CBZ             R1, loc_AF1A
.text:0000AF12
.text:0000AF14 00 F0 48 EB                   BLX             sub_B5A8
.text:0000AF14
.text:0000AF18 01 E0                         B               loc_AF1E
.text:0000AF18
.text:0000AF1A                               ; ---------------------------------------------------------------------------
.text:0000AF1A
.text:0000AF1A                               loc_AF1A                      ; CODE XREF: sub_AF00+12↑j
.text:0000AF1A 00 F0 42 EB                   BLX             sub_B5A0
.text:0000AF1A
.text:0000AF1E
.text:0000AF1E                               loc_AF1E                      ; CODE XREF: sub_AF00+8↑j
.text:0000AF1E                                                             ; sub_AF00+18↑j
.text:0000AF1E B4 F8 42 00                   LDRH.W          R0, [R4,#0x42]
.text:0000AF22 10 F0 FF 0F                   TST.W           R0, #0xFF
.text:0000AF26 06 D0                         BEQ             loc_AF36
.text:0000AF26
.text:0000AF28 04 F1 D0 00                   ADD.W           R0, R4, #0xD0
.text:0000AF2C 00 F0 40 EB                   BLX             sub_B5B0
.text:0000AF2C
.text:0000AF30 94 F8 43 00                   LDRB.W          R0, [R4,#0x43]
.text:0000AF34 00 E0                         B               loc_AF38
.text:0000AF34
.text:0000AF36                               ; ---------------------------------------------------------------------------
.text:0000AF36
.text:0000AF36                               loc_AF36                      ; CODE XREF: sub_AF00+26↑j
.text:0000AF36 00 0A                         LSRS            R0, R0, #8
.text:0000AF36
.text:0000AF38
.text:0000AF38                               loc_AF38                      ; CODE XREF: sub_AF00+34↑j
.text:0000AF38 18 B1                         CBZ             R0, loc_AF42
.text:0000AF38
.text:0000AF3A 04 F5 A8 70                   ADD.W           R0, R4, #0x150
.text:0000AF3E 00 F0 3C EB                   BLX             sub_B5B8
.text:0000AF3E
.text:0000AF42
.text:0000AF42                               loc_AF42                      ; CODE XREF: sub_AF00:loc_AF38↑j
.text:0000AF42 94 F8 44 00                   LDRB.W          R0, [R4,#0x44]
.text:0000AF46 28 B1                         CBZ             R0, locret_AF54
.text:0000AF46
.text:0000AF48 04 F5 E8 70                   ADD.W           R0, R4, #0x1D0
.text:0000AF4C BD E8 10 40                   POP.W           {R4,LR}
.text:0000AF50 00 F0 7E BB                   B.W             sub_B650
.text:0000AF50
.text:0000AF54                               ; ---------------------------------------------------------------------------
.text:0000AF54
.text:0000AF54                               locret_AF54                   ; CODE XREF: sub_AF00+46↑j
.text:0000AF54 10 BD                         POP             {R4,PC}
.text:0000AF54
.text:0000AF54                               ; End of function sub_AF00
.text:0000AF54
.text:0000AF54                               ; ---------------------------------------------------------------------------
.text:0000AF56 00 00                         ALIGN 4
.text:0000AF56                               ; } // starts at AF00
.text:0000AF58
.text:0000AF58                               ; =============== S U B R O U T I N E =======================================
.text:0000AF58
.text:0000AF58
.text:0000AF58                               ; int __fastcall sub_AF58(int *, int, _DWORD *)
.text:0000AF58                               sub_AF58                      ; CODE XREF: sub_AE00+46↑p
.text:0000AF58
.text:0000AF58                               var_48= -0x48
.text:0000AF58                               var_40= -0x40
.text:0000AF58                               var_38= -0x38
.text:0000AF58                               var_34= -0x34
.text:0000AF58                               var_2C= -0x2C
.text:0000AF58                               var_28= -0x28
.text:0000AF58                               var_24= -0x24
.text:0000AF58                               var_20= -0x20
.text:0000AF58
.text:0000AF58                               ; __unwind {
.text:0000AF58 2D E9 F0 43                   PUSH.W          {R4-R9,LR}
.text:0000AF5C 8B B0                         SUB             SP, SP, #0x2C
.text:0000AF5E 04 46                         MOV             R4, R0
.text:0000AF60 5B 48                         LDR             R0, =(__stack_chk_guard_ptr - 0xAF6A)
.text:0000AF62 13 46                         MOV             R3, R2
.text:0000AF64 00 25                         MOVS            R5, #0
.text:0000AF66 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:0000AF68 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:0000AF6A 00 68                         LDR             R0, [R0]
.text:0000AF6C 0A 90                         STR             R0, [SP,#0x48+var_20]
.text:0000AF6E 09 A8                         ADD             R0, SP, #0x48+var_24
.text:0000AF70 08 91                         STR             R1, [SP,#0x48+var_28]
.text:0000AF72 08 A9                         ADD             R1, SP, #0x48+var_28
.text:0000AF74 5E 68                         LDR             R6, [R3,#4]
.text:0000AF76 62 68                         LDR             R2, [R4,#4]
.text:0000AF78 CD E9 00 62                   STRD.W          R6, R2, [SP,#0x48+var_48]
.text:0000AF7C CD E9 02 31                   STRD.W          R3, R1, [SP,#0x48+var_40]
.text:0000AF80 00 21                         MOVS            R1, #0
.text:0000AF82 04 90                         STR             R0, [SP,#0x48+var_38]
.text:0000AF84 05 A8                         ADD             R0, SP, #0x48+var_34
.text:0000AF86 00 F0 B9 F8                   BL              sub_B0FC
.text:0000AF86
.text:0000AF8A 05 98                         LDR             R0, [SP,#0x48+var_34]
.text:0000AF8C 00 28                         CMP             R0, #0
.text:0000AF8E 7E D0                         BEQ             loc_B08E
.text:0000AF8E
.text:0000AF90 B0 42                         CMP             R0, R6
.text:0000AF92 7C D0                         BEQ             loc_B08E
.text:0000AF92
.text:0000AF94 07 99                         LDR             R1, [SP,#0x48+var_2C]
.text:0000AF96 09 68                         LDR             R1, [R1]
.text:0000AF98 01 EB C0 01                   ADD.W           R1, R1, R0,LSL#3
.text:0000AF9C 08 46                         MOV             R0, R1
.text:0000AF9E 0A 46                         MOV             R2, R1
.text:0000AFA0 50 F8 04 59                   LDR.W           R5, [R0],#-4
.text:0000AFA4 52 F8 08 8D                   LDR.W           R8, [R2,#-8]!
.text:0000AFA8 10 B1                         CBZ             R0, loc_AFB0
.text:0000AFA8
.text:0000AFAA 07 68                         LDR             R7, [R0]
.text:0000AFAC 01 2F                         CMP             R7, #1
.text:0000AFAE 01 D1                         BNE             loc_AFB4
.text:0000AFAE
.text:0000AFB0
.text:0000AFB0                               loc_AFB0                      ; CODE XREF: sub_AF58+50↑j
.text:0000AFB0 00 25                         MOVS            R5, #0
.text:0000AFB2 6C E0                         B               loc_B08E
.text:0000AFB2
.text:0000AFB4                               ; ---------------------------------------------------------------------------
.text:0000AFB4
.text:0000AFB4                               loc_AFB4                      ; CODE XREF: sub_AF58+56↑j
.text:0000AFB4 00 2F                         CMP             R7, #0
.text:0000AFB6 1A DB                         BLT             loc_AFEE
.text:0000AFB6
.text:0000AFB8 4F F0 00 4C                   MOV.W           R12, #0x80000000
.text:0000AFBC 0C EA 47 06                   AND.W           R6, R12, R7,LSL#1
.text:0000AFC0 3E 43                         ORRS            R6, R7
.text:0000AFC2 37 58                         LDR             R7, [R6,R0]
.text:0000AFC4 30 44                         ADD             R0, R6
.text:0000AFC6 B7 F1 FF 3F                   CMP.W           R7, #0xFFFFFFFF
.text:0000AFCA 13 DD                         BLE             loc_AFF4
.text:0000AFCA
.text:0000AFCC 03 46                         MOV             R3, R0
.text:0000AFCE 0C EA 47 06                   AND.W           R6, R12, R7,LSL#1
.text:0000AFD2 53 F8 04 9F                   LDR.W           R9, [R3,#4]!
.text:0000AFD6 4F F0 00 0C                   MOV.W           R12, #0
.text:0000AFDA 37 43                         ORRS            R7, R6
.text:0000AFDC 07 EB 00 0E                   ADD.W           LR, R7, R0
.text:0000AFE0 4F EA 19 67                   MOV.W           R7, R9,LSR#24
.text:0000AFE4 03 EB 87 03                   ADD.W           R3, R3, R7,LSL#2
.text:0000AFE8 03 F1 04 09                   ADD.W           R9, R3, #4
.text:0000AFEC 17 E0                         B               loc_B01E
.text:0000AFEC
.text:0000AFEE                               ; ---------------------------------------------------------------------------
.text:0000AFEE
.text:0000AFEE                               loc_AFEE                      ; CODE XREF: sub_AF58+5E↑j
.text:0000AFEE 4F F0 01 0C                   MOV.W           R12, #1
.text:0000AFF2 01 E0                         B               loc_AFF8
.text:0000AFF2
.text:0000AFF4                               ; ---------------------------------------------------------------------------
.text:0000AFF4
.text:0000AFF4                               loc_AFF4                      ; CODE XREF: sub_AF58+72↑j
.text:0000AFF4 4F F0 00 0C                   MOV.W           R12, #0
.text:0000AFF4
.text:0000AFF8
.text:0000AFF8                               loc_AFF8                      ; CODE XREF: sub_AF58+9A↑j
.text:0000AFF8 C7 F3 03 66                   UBFX.W          R6, R7, #0x18, #4
.text:0000AFFC 02 2E                         CMP             R6, #2
.text:0000AFFE 10 D0                         BEQ             loc_B022
.text:0000AFFE
.text:0000B000 01 2E                         CMP             R6, #1
.text:0000B002 14 D0                         BEQ             loc_B02E
.text:0000B002
.text:0000B004 00 2E                         CMP             R6, #0
.text:0000B006 4F D1                         BNE             loc_B0A8
.text:0000B006
.text:0000B008 37 4E                         LDR             R6, =(off_10E0C - 0xB01C)
.text:0000B00A 00 F1 04 09                   ADD.W           R9, R0, #4
.text:0000B00E BC F1 00 0F                   CMP.W           R12, #0
.text:0000B012 18 BF                         IT NE
.text:0000B014 4F F0 00 09                   MOVNE.W         R9, #0
.text:0000B018 7E 44                         ADD             R6, PC        ; off_10E0C
.text:0000B01A D6 F8 00 E0                   LDR.W           LR, [R6]      ; sub_A550
.text:0000B01A
.text:0000B01E
.text:0000B01E                               loc_B01E                      ; CODE XREF: sub_AF58+94↑j
.text:0000B01E 00 26                         MOVS            R6, #0
.text:0000B020 18 E0                         B               loc_B054
.text:0000B020
.text:0000B022                               ; ---------------------------------------------------------------------------
.text:0000B022
.text:0000B022                               loc_B022                      ; CODE XREF: sub_AF58+A6↑j
.text:0000B022 2C 4E                         LDR             R6, =(off_10E04 - 0xB028)
.text:0000B024 7E 44                         ADD             R6, PC        ; off_10E04
.text:0000B026 D6 F8 00 E0                   LDR.W           LR, [R6]      ; sub_A5BC
.text:0000B02A 01 26                         MOVS            R6, #1
.text:0000B02C 04 E0                         B               loc_B038
.text:0000B02C
.text:0000B02E                               ; ---------------------------------------------------------------------------
.text:0000B02E
.text:0000B02E                               loc_B02E                      ; CODE XREF: sub_AF58+AA↑j
.text:0000B02E 2A 4E                         LDR             R6, =(off_10E08 - 0xB034)
.text:0000B030 7E 44                         ADD             R6, PC        ; off_10E08
.text:0000B032 D6 F8 00 E0                   LDR.W           LR, [R6]      ; sub_A5B4
.text:0000B036 00 26                         MOVS            R6, #0
.text:0000B036
.text:0000B038
.text:0000B038                               loc_B038                      ; CODE XREF: sub_AF58+D4↑j
.text:0000B038 C7 F3 07 43                   UBFX.W          R3, R7, #0x10, #8
.text:0000B03C 1F 46                         MOV             R7, R3
.text:0000B03E 00 2B                         CMP             R3, #0
.text:0000B040 18 BF                         IT NE
.text:0000B042 01 27                         MOVNE           R7, #1
.text:0000B044 07 EA 0C 07                   AND.W           R7, R7, R12
.text:0000B048 01 2F                         CMP             R7, #1
.text:0000B04A 37 D0                         BEQ             loc_B0BC
.text:0000B04A
.text:0000B04C 00 EB 83 03                   ADD.W           R3, R0, R3,LSL#2
.text:0000B050 03 F1 04 09                   ADD.W           R9, R3, #4
.text:0000B050
.text:0000B054
.text:0000B054                               loc_B054                      ; CODE XREF: sub_AF58+C8↑j
.text:0000B054 4F F0 00 43                   MOV.W           R3, #0x80000000
.text:0000B058 00 2E                         CMP             R6, #0
.text:0000B05A 03 EA 45 07                   AND.W           R7, R3, R5,LSL#1
.text:0000B05E 03 EA 48 03                   AND.W           R3, R3, R8,LSL#1
.text:0000B062 45 EA 07 05                   ORR.W           R5, R5, R7
.text:0000B066 43 EA 08 03                   ORR.W           R3, R3, R8
.text:0000B06A 29 44                         ADD             R1, R5
.text:0000B06C 1A 44                         ADD             R2, R3
.text:0000B06E C4 E9 7A 21                   STRD.W          R2, R1, [R4,#0x1E8]
.text:0000B072 4F F0 01 05                   MOV.W           R5, #1
.text:0000B076 C4 F8 08 02                   STR.W           R0, [R4,#0x208]
.text:0000B07A C4 E9 7C 9E                   STRD.W          R9, LR, [R4,#0x1F0]
.text:0000B07E 18 BF                         IT NE
.text:0000B080 02 26                         MOVNE           R6, #2
.text:0000B082 BC F1 00 0F                   CMP.W           R12, #0
.text:0000B086 18 BF                         IT NE
.text:0000B088 01 26                         MOVNE           R6, #1
.text:0000B08A C4 F8 FC 61                   STR.W           R6, [R4,#0x1FC]
.text:0000B08A
.text:0000B08E
.text:0000B08E                               loc_B08E                      ; CODE XREF: sub_AF58+36↑j
.text:0000B08E                                                             ; sub_AF58+3A↑j
.text:0000B08E                                                             ; sub_AF58+5A↑j
.text:0000B08E 1A 48                         LDR             R0, =(__stack_chk_guard_ptr - 0xB096)
.text:0000B090 0A 99                         LDR             R1, [SP,#0x48+var_20]
.text:0000B092 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:0000B094 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:0000B096 00 68                         LDR             R0, [R0]
.text:0000B098 40 1A                         SUBS            R0, R0, R1
.text:0000B09A 02 BF                         ITTT EQ
.text:0000B09C 28 46                         MOVEQ           R0, R5
.text:0000B09E 0B B0                         ADDEQ           SP, SP, #0x2C ; ','
.text:0000B0A0 BD E8 F0 83                   POPEQ.W         {R4-R9,PC}
.text:0000B0A0
.text:0000B0A4 F7 F7 9E EF                   BLX             __stack_chk_fail
.text:0000B0A4
.text:0000B0A8                               ; ---------------------------------------------------------------------------
.text:0000B0A8
.text:0000B0A8                               loc_B0A8                      ; CODE XREF: sub_AF58+AE↑j
.text:0000B0A8 10 48                         LDR             R0, =(aBoolLibunwindU - 0xB0B6) ; "bool libunwind::UnwindCursor<libunwind:"...
.text:0000B0AA 4F F4 42 72                   MOV.W           R2, #0x308
.text:0000B0AE 10 49                         LDR             R1, =(aExternalLibunw_0 - 0xB0B8) ; "external/libunwind_llvm/src/UnwindCurso"...
.text:0000B0B0 10 4B                         LDR             R3, =(aUnknownPersona - 0xB0BA) ; "unknown personality routine"
.text:0000B0B2 78 44                         ADD             R0, PC        ; "bool libunwind::UnwindCursor<libunwind:"...
.text:0000B0B4 79 44                         ADD             R1, PC        ; "external/libunwind_llvm/src/UnwindCurso"...
.text:0000B0B6 7B 44                         ADD             R3, PC        ; "unknown personality routine"
.text:0000B0B8 FF F7 E2 FE                   BL              sub_AE80
.text:0000B0B8
.text:0000B0BC                               ; ---------------------------------------------------------------------------
.text:0000B0BC
.text:0000B0BC                               loc_B0BC                      ; CODE XREF: sub_AF58+F2↑j
.text:0000B0BC 07 48                         LDR             R0, =(aBoolLibunwindU - 0xB0CA) ; "bool libunwind::UnwindCursor<libunwind:"...
.text:0000B0BE 40 F2 0F 32                   MOVW            R2, #0x30F
.text:0000B0C2 07 49                         LDR             R1, =(aExternalLibunw_0 - 0xB0CC) ; "external/libunwind_llvm/src/UnwindCurso"...
.text:0000B0C4 07 4B                         LDR             R3, =(aIndexInlinedTa - 0xB0CE) ; "index inlined table detected but pr fun"...
.text:0000B0C6 78 44                         ADD             R0, PC        ; "bool libunwind::UnwindCursor<libunwind:"...
.text:0000B0C8 79 44                         ADD             R1, PC        ; "external/libunwind_llvm/src/UnwindCurso"...
.text:0000B0CA 7B 44                         ADD             R3, PC        ; "index inlined table detected but pr fun"...
.text:0000B0CC FF F7 D8 FE                   BL              sub_AE80
.text:0000B0CC
.text:0000B0CC                               ; End of function sub_AF58
.text:0000B0CC
.text:0000B0CC                               ; ---------------------------------------------------------------------------
.text:0000B0D0 2A 5E 00 00                   off_B0D0 DCD __stack_chk_guard_ptr - 0xAF6A
.text:0000B0D0                                                             ; DATA XREF: sub_AF58+8↑r
.text:0000B0D4 DC 5D 00 00                   off_B0D4 DCD off_10E04 - 0xB028
.text:0000B0D4                                                             ; DATA XREF: sub_AF58:loc_B022↑r
.text:0000B0D8 D4 5D 00 00                   off_B0D8 DCD off_10E08 - 0xB034
.text:0000B0D8                                                             ; DATA XREF: sub_AF58:loc_B02E↑r
.text:0000B0DC 79 36 00 00                   off_B0DC DCD aBoolLibunwindU - 0xB0CA
.text:0000B0DC                                                             ; DATA XREF: sub_AF58:loc_B0BC↑r
.text:0000B0DC                                                             ; "bool libunwind::UnwindCursor<libunwind:"...
.text:0000B0E0 FD 34 00 00                   off_B0E0 DCD aExternalLibunw_0 - 0xB0CC
.text:0000B0E0                                                             ; DATA XREF: sub_AF58+16A↑r
.text:0000B0E0                                                             ; "external/libunwind_llvm/src/UnwindCurso"...
.text:0000B0E4 6F 37 00 00                   off_B0E4 DCD aIndexInlinedTa - 0xB0CE
.text:0000B0E4                                                             ; DATA XREF: sub_AF58+16C↑r
.text:0000B0E4                                                             ; "index inlined table detected but pr fun"...
.text:0000B0E8 F0 5D 00 00                   off_B0E8 DCD off_10E0C - 0xB01C
.text:0000B0E8                                                             ; DATA XREF: sub_AF58+B0↑r
.text:0000B0EC 8D 36 00 00                   off_B0EC DCD aBoolLibunwindU - 0xB0B6
.text:0000B0EC                                                             ; DATA XREF: sub_AF58:loc_B0A8↑r
.text:0000B0EC                                                             ; "bool libunwind::UnwindCursor<libunwind:"...
.text:0000B0F0 11 35 00 00                   off_B0F0 DCD aExternalLibunw_0 - 0xB0B8
.text:0000B0F0                                                             ; DATA XREF: sub_AF58+156↑r
.text:0000B0F0                                                             ; "external/libunwind_llvm/src/UnwindCurso"...
.text:0000B0F4 67 37 00 00                   off_B0F4 DCD aUnknownPersona - 0xB0BA
.text:0000B0F4                                                             ; DATA XREF: sub_AF58+158↑r
.text:0000B0F4                                                             ; "unknown personality routine"
.text:0000B0F8 FE 5C 00 00                   off_B0F8 DCD __stack_chk_guard_ptr - 0xB096
.text:0000B0F8                                                             ; DATA XREF: sub_AF58:loc_B08E↑r
.text:0000B0F8                               ; } // starts at AF58
.text:0000B0FC
.text:0000B0FC                               ; =============== S U B R O U T I N E =======================================
.text:0000B0FC
.text:0000B0FC
.text:0000B0FC                               ; _DWORD *__fastcall sub_B0FC(_DWORD *, int, int, _DWORD *, int, int, int, _DWORD *)
.text:0000B0FC                               sub_B0FC                      ; CODE XREF: sub_AF58+2E↑p
.text:0000B0FC
.text:0000B0FC                               arg_0=  0
.text:0000B0FC                               arg_C=  0xC
.text:0000B0FC
.text:0000B0FC                               ; __unwind {
.text:0000B0FC 2D E9 F0 41                   PUSH.W          {R4-R8,LR}
.text:0000B100 09 9E                         LDR             R6, [SP,#0x18+arg_C]
.text:0000B102 4F F0 00 4E                   MOV.W           LR, #0x80000000
.text:0000B106 06 9D                         LDR             R5, [SP,#0x18+arg_0]
.text:0000B108 D6 F8 00 C0                   LDR.W           R12, [R6]
.text:0000B10C 6C 1A                         SUBS            R4, R5, R1
.text:0000B10E 02 E0                         B               loc_B116
.text:0000B10E
.text:0000B110                               ; ---------------------------------------------------------------------------
.text:0000B110
.text:0000B110                               loc_B110                      ; CODE XREF: sub_B0FC+3E↓j
.text:0000B110 69 1E                         SUBS            R1, R5, #1
.text:0000B112 0C 1B                         SUBS            R4, R1, R4
.text:0000B114 71 1C                         ADDS            R1, R6, #1
.text:0000B114
.text:0000B116
.text:0000B116                               loc_B116                      ; CODE XREF: sub_B0FC+12↑j
.text:0000B116                                                             ; sub_B0FC+3C↓j
.text:0000B116 25 46                         MOV             R5, R4
.text:0000B118 85 B1                         CBZ             R5, loc_B13C
.text:0000B118
.text:0000B11A D3 F8 00 80                   LDR.W           R8, [R3]
.text:0000B11E 01 EB 55 06                   ADD.W           R6, R1, R5,LSR#1
.text:0000B122 58 F8 36 70                   LDR.W           R7, [R8,R6,LSL#3]
.text:0000B126 0E EA 47 04                   AND.W           R4, LR, R7,LSL#1
.text:0000B12A 3C 43                         ORRS            R4, R7
.text:0000B12C 08 EB C6 07                   ADD.W           R7, R8, R6,LSL#3
.text:0000B130 27 44                         ADD             R7, R4
.text:0000B132 4F EA 55 04                   MOV.W           R4, R5,LSR#1
.text:0000B136 BC 45                         CMP             R12, R7
.text:0000B138 ED D3                         BCC             loc_B116
.text:0000B138
.text:0000B13A E9 E7                         B               loc_B110
.text:0000B13A
.text:0000B13C                               ; ---------------------------------------------------------------------------
.text:0000B13C
.text:0000B13C                               loc_B13C                      ; CODE XREF: sub_B0FC+1C↑j
.text:0000B13C 0E C0                         STM             R0!, {R1-R3}
.text:0000B13E BD E8 F0 81                   POP.W           {R4-R8,PC}
.text:0000B13E
.text:0000B13E                               ; End of function sub_B0FC
.text:0000B13E
.text:0000B13E                               ; ---------------------------------------------------------------------------
.text:0000B142 00 00                         ALIGN 4
.text:0000B142                               ; } // starts at B0FC
.text:0000B144
.text:0000B144                               loc_B144                      ; CODE XREF: .text:0000AE72↑j
.text:0000B144                               ; __unwind {
.text:0000B144 8A 1C                         ADDS            R2, R1, #2
.text:0000B146 61 2A                         CMP             R2, #0x61 ; 'a' ; switch 98 cases
.text:0000B148 00 F2 6B 80                   BHI.W           def_B152      ; jumptable 0000B152 default case
.text:0000B148
.text:0000B14C DF F8 F8 02                   LDR.W           R0, =(aPc - 0xB154) ; "pc"
.text:0000B150 78 44                         ADD             R0, PC        ; "pc"
.text:0000B152 DF E8 12 F0                   TBH.W           [PC,R2,LSL#1] ; switch jump
.text:0000B152
.text:0000B152                               ; ---------------------------------------------------------------------------
.text:0000B156 62 00                         jpt_B152 DCW 0x62             ; jump table for switch statement
.text:0000B158 91 00                         DCW 0x91
.text:0000B15A 92 00                         DCW 0x92
.text:0000B15C 95 00                         DCW 0x95
.text:0000B15E 98 00                         DCW 0x98
.text:0000B160 9B 00                         DCW 0x9B
.text:0000B162 9E 00                         DCW 0x9E
.text:0000B164 A1 00                         DCW 0xA1
.text:0000B166 A4 00                         DCW 0xA4
.text:0000B168 A7 00                         DCW 0xA7
.text:0000B16A AA 00                         DCW 0xAA
.text:0000B16C AD 00                         DCW 0xAD
.text:0000B16E B0 00                         DCW 0xB0
.text:0000B170 B3 00                         DCW 0xB3
.text:0000B172 B6 00                         DCW 0xB6
.text:0000B174 62 00                         DCW 0x62
.text:0000B176 B9 00                         DCW 0xB9
.text:0000B178 91 00                         DCW 0x91
.text:0000B17A 8F 00                         DCW 0x8F
.text:0000B17C 8F 00                         DCW 0x8F
.text:0000B17E 8F 00                         DCW 0x8F
.text:0000B180 8F 00                         DCW 0x8F
.text:0000B182 8F 00                         DCW 0x8F
.text:0000B184 8F 00                         DCW 0x8F
.text:0000B186 8F 00                         DCW 0x8F
.text:0000B188 8F 00                         DCW 0x8F
.text:0000B18A 8F 00                         DCW 0x8F
.text:0000B18C 8F 00                         DCW 0x8F
.text:0000B18E 8F 00                         DCW 0x8F
.text:0000B190 8F 00                         DCW 0x8F
.text:0000B192 8F 00                         DCW 0x8F
.text:0000B194 8F 00                         DCW 0x8F
.text:0000B196 8F 00                         DCW 0x8F
.text:0000B198 8F 00                         DCW 0x8F
.text:0000B19A 8F 00                         DCW 0x8F
.text:0000B19C 8F 00                         DCW 0x8F
.text:0000B19E 8F 00                         DCW 0x8F
.text:0000B1A0 8F 00                         DCW 0x8F
.text:0000B1A2 8F 00                         DCW 0x8F
.text:0000B1A4 8F 00                         DCW 0x8F
.text:0000B1A6 8F 00                         DCW 0x8F
.text:0000B1A8 8F 00                         DCW 0x8F
.text:0000B1AA 8F 00                         DCW 0x8F
.text:0000B1AC 8F 00                         DCW 0x8F
.text:0000B1AE 8F 00                         DCW 0x8F
.text:0000B1B0 8F 00                         DCW 0x8F
.text:0000B1B2 8F 00                         DCW 0x8F
.text:0000B1B4 8F 00                         DCW 0x8F
.text:0000B1B6 8F 00                         DCW 0x8F
.text:0000B1B8 8F 00                         DCW 0x8F
.text:0000B1BA 8F 00                         DCW 0x8F
.text:0000B1BC 8F 00                         DCW 0x8F
.text:0000B1BE 8F 00                         DCW 0x8F
.text:0000B1C0 8F 00                         DCW 0x8F
.text:0000B1C2 8F 00                         DCW 0x8F
.text:0000B1C4 8F 00                         DCW 0x8F
.text:0000B1C6 8F 00                         DCW 0x8F
.text:0000B1C8 8F 00                         DCW 0x8F
.text:0000B1CA 8F 00                         DCW 0x8F
.text:0000B1CC 8F 00                         DCW 0x8F
.text:0000B1CE 8F 00                         DCW 0x8F
.text:0000B1D0 8F 00                         DCW 0x8F
.text:0000B1D2 8F 00                         DCW 0x8F
.text:0000B1D4 8F 00                         DCW 0x8F
.text:0000B1D6 8F 00                         DCW 0x8F
.text:0000B1D8 8F 00                         DCW 0x8F
.text:0000B1DA BC 00                         DCW 0xBC
.text:0000B1DC BF 00                         DCW 0xBF
.text:0000B1DE C2 00                         DCW 0xC2
.text:0000B1E0 C5 00                         DCW 0xC5
.text:0000B1E2 C8 00                         DCW 0xC8
.text:0000B1E4 CB 00                         DCW 0xCB
.text:0000B1E6 CE 00                         DCW 0xCE
.text:0000B1E8 D1 00                         DCW 0xD1
.text:0000B1EA D4 00                         DCW 0xD4
.text:0000B1EC D7 00                         DCW 0xD7
.text:0000B1EE DA 00                         DCW 0xDA
.text:0000B1F0 DD 00                         DCW 0xDD
.text:0000B1F2 E0 00                         DCW 0xE0
.text:0000B1F4 E3 00                         DCW 0xE3
.text:0000B1F6 E6 00                         DCW 0xE6
.text:0000B1F8 E9 00                         DCW 0xE9
.text:0000B1FA EC 00                         DCW 0xEC
.text:0000B1FC EF 00                         DCW 0xEF
.text:0000B1FE F2 00                         DCW 0xF2
.text:0000B200 F5 00                         DCW 0xF5
.text:0000B202 F8 00                         DCW 0xF8
.text:0000B204 FB 00                         DCW 0xFB
.text:0000B206 FE 00                         DCW 0xFE
.text:0000B208 01 01                         DCW 0x101
.text:0000B20A 04 01                         DCW 0x104
.text:0000B20C 07 01                         DCW 0x107
.text:0000B20E 0A 01                         DCW 0x10A
.text:0000B210 0D 01                         DCW 0x10D
.text:0000B212 10 01                         DCW 0x110
.text:0000B214 13 01                         DCW 0x113
.text:0000B216 16 01                         DCW 0x116
.text:0000B218 19 01                         DCW 0x119
.text:0000B21A                               ; ---------------------------------------------------------------------------
.text:0000B21A
.text:0000B21A                               loc_B21A                      ; CODE XREF: .text:0000B152↑j
.text:0000B21A DF F8 64 03                   LDR.W           R0, =(aSp - 0xB222) ; jumptable 0000B152 cases 0,15
.text:0000B21E 78 44                         ADD             R0, PC        ; "sp"
.text:0000B220 70 47                         BX              LR
.text:0000B220
.text:0000B222                               ; ---------------------------------------------------------------------------
.text:0000B222
.text:0000B222                               def_B152                      ; CODE XREF: .text:0000B148↑j
.text:0000B222 A1 F5 80 70                   SUB.W           R0, R1, #0x100 ; jumptable 0000B152 default case
.text:0000B226 1F 28                         CMP             R0, #0x1F
.text:0000B228 24 D8                         BHI             def_B22A      ; jumptable 0000B152 cases 18-65
.text:0000B228                                                             ; jumptable 0000B22A default case
.text:0000B228
.text:0000B22A DF E8 10 F0                   TBH.W           [PC,R0,LSL#1] ; switch jump
.text:0000B22A
.text:0000B22A                               ; ---------------------------------------------------------------------------
.text:0000B22E 20 00                         jpt_B22A DCW 0x20             ; jump table for switch statement
.text:0000B230 B0 00                         DCW 0xB0
.text:0000B232 B3 00                         DCW 0xB3
.text:0000B234 B6 00                         DCW 0xB6
.text:0000B236 B9 00                         DCW 0xB9
.text:0000B238 BC 00                         DCW 0xBC
.text:0000B23A BF 00                         DCW 0xBF
.text:0000B23C C2 00                         DCW 0xC2
.text:0000B23E C5 00                         DCW 0xC5
.text:0000B240 C8 00                         DCW 0xC8
.text:0000B242 CB 00                         DCW 0xCB
.text:0000B244 CE 00                         DCW 0xCE
.text:0000B246 D1 00                         DCW 0xD1
.text:0000B248 D4 00                         DCW 0xD4
.text:0000B24A D7 00                         DCW 0xD7
.text:0000B24C DA 00                         DCW 0xDA
.text:0000B24E DD 00                         DCW 0xDD
.text:0000B250 E0 00                         DCW 0xE0
.text:0000B252 E3 00                         DCW 0xE3
.text:0000B254 E6 00                         DCW 0xE6
.text:0000B256 E9 00                         DCW 0xE9
.text:0000B258 EC 00                         DCW 0xEC
.text:0000B25A EF 00                         DCW 0xEF
.text:0000B25C F2 00                         DCW 0xF2
.text:0000B25E F5 00                         DCW 0xF5
.text:0000B260 F8 00                         DCW 0xF8
.text:0000B262 FB 00                         DCW 0xFB
.text:0000B264 FE 00                         DCW 0xFE
.text:0000B266 01 01                         DCW 0x101
.text:0000B268 04 01                         DCW 0x104
.text:0000B26A 07 01                         DCW 0x107
.text:0000B26C 0A 01                         DCW 0x10A
.text:0000B26E                               ; ---------------------------------------------------------------------------
.text:0000B26E
.text:0000B26E                               loc_B26E                      ; CODE XREF: .text:0000B22A↑j
.text:0000B26E 96 48                         LDR             R0, =(aD0 - 0xB274) ; jumptable 0000B22A case 256
.text:0000B270 78 44                         ADD             R0, PC        ; "d0"
.text:0000B272 70 47                         BX              LR
.text:0000B272
.text:0000B274                               ; ---------------------------------------------------------------------------
.text:0000B274
.text:0000B274                               def_B22A                      ; CODE XREF: .text:0000B152↑j
.text:0000B274                                                             ; .text:0000B228↑j
.text:0000B274 C4 48                         LDR             R0, =(aUnknownRegiste - 0xB27A) ; jumptable 0000B152 cases 18-65
.text:0000B274                                                             ; jumptable 0000B22A default case
.text:0000B276 78 44                         ADD             R0, PC        ; "unknown register"
.text:0000B276
.text:0000B278
.text:0000B278                               locret_B278                   ; CODE XREF: .text:0000B152↑j
.text:0000B278 70 47                         BX              LR            ; jumptable 0000B152 cases 1,17
.text:0000B278
.text:0000B27A                               ; ---------------------------------------------------------------------------
.text:0000B27A
.text:0000B27A                               loc_B27A                      ; CODE XREF: .text:0000B152↑j
.text:0000B27A C0 48                         LDR             R0, =(aR0 - 0xB280) ; jumptable 0000B152 case 2
.text:0000B27C 78 44                         ADD             R0, PC        ; "r0"
.text:0000B27E 70 47                         BX              LR
.text:0000B27E
.text:0000B280                               ; ---------------------------------------------------------------------------
.text:0000B280
.text:0000B280                               loc_B280                      ; CODE XREF: .text:0000B152↑j
.text:0000B280 BD 48                         LDR             R0, =(aR1 - 0xB286) ; jumptable 0000B152 case 3
.text:0000B282 78 44                         ADD             R0, PC        ; "r1"
.text:0000B284 70 47                         BX              LR
.text:0000B284
.text:0000B286                               ; ---------------------------------------------------------------------------
.text:0000B286
.text:0000B286                               loc_B286                      ; CODE XREF: .text:0000B152↑j
.text:0000B286 BB 48                         LDR             R0, =(aR2 - 0xB28C) ; jumptable 0000B152 case 4
.text:0000B288 78 44                         ADD             R0, PC        ; "r2"
.text:0000B28A 70 47                         BX              LR
.text:0000B28A
.text:0000B28C                               ; ---------------------------------------------------------------------------
.text:0000B28C
.text:0000B28C                               loc_B28C                      ; CODE XREF: .text:0000B152↑j
.text:0000B28C B8 48                         LDR             R0, =(aR3 - 0xB292) ; jumptable 0000B152 case 5
.text:0000B28E 78 44                         ADD             R0, PC        ; "r3"
.text:0000B290 70 47                         BX              LR
.text:0000B290
.text:0000B292                               ; ---------------------------------------------------------------------------
.text:0000B292
.text:0000B292                               loc_B292                      ; CODE XREF: .text:0000B152↑j
.text:0000B292 B6 48                         LDR             R0, =(aR4 - 0xB298) ; jumptable 0000B152 case 6
.text:0000B294 78 44                         ADD             R0, PC        ; "r4"
.text:0000B296 70 47                         BX              LR
.text:0000B296
.text:0000B298                               ; ---------------------------------------------------------------------------
.text:0000B298
.text:0000B298                               loc_B298                      ; CODE XREF: .text:0000B152↑j
.text:0000B298 B3 48                         LDR             R0, =(aR5 - 0xB29E) ; jumptable 0000B152 case 7
.text:0000B29A 78 44                         ADD             R0, PC        ; "r5"
.text:0000B29C 70 47                         BX              LR
.text:0000B29C
.text:0000B29E                               ; ---------------------------------------------------------------------------
.text:0000B29E
.text:0000B29E                               loc_B29E                      ; CODE XREF: .text:0000B152↑j
.text:0000B29E B1 48                         LDR             R0, =(aR6 - 0xB2A4) ; jumptable 0000B152 case 8
.text:0000B2A0 78 44                         ADD             R0, PC        ; "r6"
.text:0000B2A2 70 47                         BX              LR
.text:0000B2A2
.text:0000B2A4                               ; ---------------------------------------------------------------------------
.text:0000B2A4
.text:0000B2A4                               loc_B2A4                      ; CODE XREF: .text:0000B152↑j
.text:0000B2A4 AE 48                         LDR             R0, =(aR7 - 0xB2AA) ; jumptable 0000B152 case 9
.text:0000B2A6 78 44                         ADD             R0, PC        ; "r7"
.text:0000B2A8 70 47                         BX              LR
.text:0000B2A8
.text:0000B2AA                               ; ---------------------------------------------------------------------------
.text:0000B2AA
.text:0000B2AA                               loc_B2AA                      ; CODE XREF: .text:0000B152↑j
.text:0000B2AA AC 48                         LDR             R0, =(aR8 - 0xB2B0) ; jumptable 0000B152 case 10
.text:0000B2AC 78 44                         ADD             R0, PC        ; "r8"
.text:0000B2AE 70 47                         BX              LR
.text:0000B2AE
.text:0000B2B0                               ; ---------------------------------------------------------------------------
.text:0000B2B0
.text:0000B2B0                               loc_B2B0                      ; CODE XREF: .text:0000B152↑j
.text:0000B2B0 A9 48                         LDR             R0, =(aR9 - 0xB2B6) ; jumptable 0000B152 case 11
.text:0000B2B2 78 44                         ADD             R0, PC        ; "r9"
.text:0000B2B4 70 47                         BX              LR
.text:0000B2B4
.text:0000B2B6                               ; ---------------------------------------------------------------------------
.text:0000B2B6
.text:0000B2B6                               loc_B2B6                      ; CODE XREF: .text:0000B152↑j
.text:0000B2B6 A7 48                         LDR             R0, =(aR10 - 0xB2BC) ; jumptable 0000B152 case 12
.text:0000B2B8 78 44                         ADD             R0, PC        ; "r10"
.text:0000B2BA 70 47                         BX              LR
.text:0000B2BA
.text:0000B2BC                               ; ---------------------------------------------------------------------------
.text:0000B2BC
.text:0000B2BC                               loc_B2BC                      ; CODE XREF: .text:0000B152↑j
.text:0000B2BC A4 48                         LDR             R0, =(aR11 - 0xB2C2) ; jumptable 0000B152 case 13
.text:0000B2BE 78 44                         ADD             R0, PC        ; "r11"
.text:0000B2C0 70 47                         BX              LR
.text:0000B2C0
.text:0000B2C2                               ; ---------------------------------------------------------------------------
.text:0000B2C2
.text:0000B2C2                               loc_B2C2                      ; CODE XREF: .text:0000B152↑j
.text:0000B2C2 A2 48                         LDR             R0, =(aR12 - 0xB2C8) ; jumptable 0000B152 case 14
.text:0000B2C4 78 44                         ADD             R0, PC        ; "r12"
.text:0000B2C6 70 47                         BX              LR
.text:0000B2C6
.text:0000B2C8                               ; ---------------------------------------------------------------------------
.text:0000B2C8
.text:0000B2C8                               loc_B2C8                      ; CODE XREF: .text:0000B152↑j
.text:0000B2C8 AE 48                         LDR             R0, =(aLr - 0xB2CE) ; jumptable 0000B152 case 16
.text:0000B2CA 78 44                         ADD             R0, PC        ; "lr"
.text:0000B2CC 70 47                         BX              LR
.text:0000B2CC
.text:0000B2CE                               ; ---------------------------------------------------------------------------
.text:0000B2CE
.text:0000B2CE                               loc_B2CE                      ; CODE XREF: .text:0000B152↑j
.text:0000B2CE 9E 48                         LDR             R0, =(aS0 - 0xB2D4) ; jumptable 0000B152 case 66
.text:0000B2D0 78 44                         ADD             R0, PC        ; "s0"
.text:0000B2D2 70 47                         BX              LR
.text:0000B2D2
.text:0000B2D4                               ; ---------------------------------------------------------------------------
.text:0000B2D4
.text:0000B2D4                               loc_B2D4                      ; CODE XREF: .text:0000B152↑j
.text:0000B2D4 9B 48                         LDR             R0, =(aS1 - 0xB2DA) ; jumptable 0000B152 case 67
.text:0000B2D6 78 44                         ADD             R0, PC        ; "s1"
.text:0000B2D8 70 47                         BX              LR
.text:0000B2D8
.text:0000B2DA                               ; ---------------------------------------------------------------------------
.text:0000B2DA
.text:0000B2DA                               loc_B2DA                      ; CODE XREF: .text:0000B152↑j
.text:0000B2DA 99 48                         LDR             R0, =(aS2 - 0xB2E0) ; jumptable 0000B152 case 68
.text:0000B2DC 78 44                         ADD             R0, PC        ; "s2"
.text:0000B2DE 70 47                         BX              LR
.text:0000B2DE
.text:0000B2E0                               ; ---------------------------------------------------------------------------
.text:0000B2E0
.text:0000B2E0                               loc_B2E0                      ; CODE XREF: .text:0000B152↑j
.text:0000B2E0 96 48                         LDR             R0, =(aS3 - 0xB2E6) ; jumptable 0000B152 case 69
.text:0000B2E2 78 44                         ADD             R0, PC        ; "s3"
.text:0000B2E4 70 47                         BX              LR
.text:0000B2E4
.text:0000B2E6                               ; ---------------------------------------------------------------------------
.text:0000B2E6
.text:0000B2E6                               loc_B2E6                      ; CODE XREF: .text:0000B152↑j
.text:0000B2E6 94 48                         LDR             R0, =(aS4 - 0xB2EC) ; jumptable 0000B152 case 70
.text:0000B2E8 78 44                         ADD             R0, PC        ; "s4"
.text:0000B2EA 70 47                         BX              LR
.text:0000B2EA
.text:0000B2EC                               ; ---------------------------------------------------------------------------
.text:0000B2EC
.text:0000B2EC                               loc_B2EC                      ; CODE XREF: .text:0000B152↑j
.text:0000B2EC 91 48                         LDR             R0, =(aS5 - 0xB2F2) ; jumptable 0000B152 case 71
.text:0000B2EE 78 44                         ADD             R0, PC        ; "s5"
.text:0000B2F0 70 47                         BX              LR
.text:0000B2F0
.text:0000B2F2                               ; ---------------------------------------------------------------------------
.text:0000B2F2
.text:0000B2F2                               loc_B2F2                      ; CODE XREF: .text:0000B152↑j
.text:0000B2F2 8F 48                         LDR             R0, =(aS6 - 0xB2F8) ; jumptable 0000B152 case 72
.text:0000B2F4 78 44                         ADD             R0, PC        ; "s6"
.text:0000B2F6 70 47                         BX              LR
.text:0000B2F6
.text:0000B2F8                               ; ---------------------------------------------------------------------------
.text:0000B2F8
.text:0000B2F8                               loc_B2F8                      ; CODE XREF: .text:0000B152↑j
.text:0000B2F8 8C 48                         LDR             R0, =(aS7 - 0xB2FE) ; jumptable 0000B152 case 73
.text:0000B2FA 78 44                         ADD             R0, PC        ; "s7"
.text:0000B2FC 70 47                         BX              LR
.text:0000B2FC
.text:0000B2FE                               ; ---------------------------------------------------------------------------
.text:0000B2FE
.text:0000B2FE                               loc_B2FE                      ; CODE XREF: .text:0000B152↑j
.text:0000B2FE 8A 48                         LDR             R0, =(aS8 - 0xB304) ; jumptable 0000B152 case 74
.text:0000B300 78 44                         ADD             R0, PC        ; "s8"
.text:0000B302 70 47                         BX              LR
.text:0000B302
.text:0000B304                               ; ---------------------------------------------------------------------------
.text:0000B304
.text:0000B304                               loc_B304                      ; CODE XREF: .text:0000B152↑j
.text:0000B304 87 48                         LDR             R0, =(aS9 - 0xB30A) ; jumptable 0000B152 case 75
.text:0000B306 78 44                         ADD             R0, PC        ; "s9"
.text:0000B308 70 47                         BX              LR
.text:0000B308
.text:0000B30A                               ; ---------------------------------------------------------------------------
.text:0000B30A
.text:0000B30A                               loc_B30A                      ; CODE XREF: .text:0000B152↑j
.text:0000B30A 85 48                         LDR             R0, =(aS10 - 0xB310) ; jumptable 0000B152 case 76
.text:0000B30C 78 44                         ADD             R0, PC        ; "s10"
.text:0000B30E 70 47                         BX              LR
.text:0000B30E
.text:0000B310                               ; ---------------------------------------------------------------------------
.text:0000B310
.text:0000B310                               loc_B310                      ; CODE XREF: .text:0000B152↑j
.text:0000B310 82 48                         LDR             R0, =(aS11 - 0xB316) ; jumptable 0000B152 case 77
.text:0000B312 78 44                         ADD             R0, PC        ; "s11"
.text:0000B314 70 47                         BX              LR
.text:0000B314
.text:0000B316                               ; ---------------------------------------------------------------------------
.text:0000B316
.text:0000B316                               loc_B316                      ; CODE XREF: .text:0000B152↑j
.text:0000B316 80 48                         LDR             R0, =(aS12 - 0xB31C) ; jumptable 0000B152 case 78
.text:0000B318 78 44                         ADD             R0, PC        ; "s12"
.text:0000B31A 70 47                         BX              LR
.text:0000B31A
.text:0000B31C                               ; ---------------------------------------------------------------------------
.text:0000B31C
.text:0000B31C                               loc_B31C                      ; CODE XREF: .text:0000B152↑j
.text:0000B31C 7D 48                         LDR             R0, =(aS13 - 0xB322) ; jumptable 0000B152 case 79
.text:0000B31E 78 44                         ADD             R0, PC        ; "s13"
.text:0000B320 70 47                         BX              LR
.text:0000B320
.text:0000B322                               ; ---------------------------------------------------------------------------
.text:0000B322
.text:0000B322                               loc_B322                      ; CODE XREF: .text:0000B152↑j
.text:0000B322 7B 48                         LDR             R0, =(aS14 - 0xB328) ; jumptable 0000B152 case 80
.text:0000B324 78 44                         ADD             R0, PC        ; "s14"
.text:0000B326 70 47                         BX              LR
.text:0000B326
.text:0000B328                               ; ---------------------------------------------------------------------------
.text:0000B328
.text:0000B328                               loc_B328                      ; CODE XREF: .text:0000B152↑j
.text:0000B328 78 48                         LDR             R0, =(aS15 - 0xB32E) ; jumptable 0000B152 case 81
.text:0000B32A 78 44                         ADD             R0, PC        ; "s15"
.text:0000B32C 70 47                         BX              LR
.text:0000B32C
.text:0000B32E                               ; ---------------------------------------------------------------------------
.text:0000B32E
.text:0000B32E                               loc_B32E                      ; CODE XREF: .text:0000B152↑j
.text:0000B32E 76 48                         LDR             R0, =(aS16 - 0xB334) ; jumptable 0000B152 case 82
.text:0000B330 78 44                         ADD             R0, PC        ; "s16"
.text:0000B332 70 47                         BX              LR
.text:0000B332
.text:0000B334                               ; ---------------------------------------------------------------------------
.text:0000B334
.text:0000B334                               loc_B334                      ; CODE XREF: .text:0000B152↑j
.text:0000B334 73 48                         LDR             R0, =(aS17 - 0xB33A) ; jumptable 0000B152 case 83
.text:0000B336 78 44                         ADD             R0, PC        ; "s17"
.text:0000B338 70 47                         BX              LR
.text:0000B338
.text:0000B33A                               ; ---------------------------------------------------------------------------
.text:0000B33A
.text:0000B33A                               loc_B33A                      ; CODE XREF: .text:0000B152↑j
.text:0000B33A 71 48                         LDR             R0, =(aS18 - 0xB340) ; jumptable 0000B152 case 84
.text:0000B33C 78 44                         ADD             R0, PC        ; "s18"
.text:0000B33E 70 47                         BX              LR
.text:0000B33E
.text:0000B340                               ; ---------------------------------------------------------------------------
.text:0000B340
.text:0000B340                               loc_B340                      ; CODE XREF: .text:0000B152↑j
.text:0000B340 6E 48                         LDR             R0, =(aS19 - 0xB346) ; jumptable 0000B152 case 85
.text:0000B342 78 44                         ADD             R0, PC        ; "s19"
.text:0000B344 70 47                         BX              LR
.text:0000B344
.text:0000B346                               ; ---------------------------------------------------------------------------
.text:0000B346
.text:0000B346                               loc_B346                      ; CODE XREF: .text:0000B152↑j
.text:0000B346 6C 48                         LDR             R0, =(aS20 - 0xB34C) ; jumptable 0000B152 case 86
.text:0000B348 78 44                         ADD             R0, PC        ; "s20"
.text:0000B34A 70 47                         BX              LR
.text:0000B34A
.text:0000B34C                               ; ---------------------------------------------------------------------------
.text:0000B34C
.text:0000B34C                               loc_B34C                      ; CODE XREF: .text:0000B152↑j
.text:0000B34C 69 48                         LDR             R0, =(aS21 - 0xB352) ; jumptable 0000B152 case 87
.text:0000B34E 78 44                         ADD             R0, PC        ; "s21"
.text:0000B350 70 47                         BX              LR
.text:0000B350
.text:0000B352                               ; ---------------------------------------------------------------------------
.text:0000B352
.text:0000B352                               loc_B352                      ; CODE XREF: .text:0000B152↑j
.text:0000B352 67 48                         LDR             R0, =(aS22 - 0xB358) ; jumptable 0000B152 case 88
.text:0000B354 78 44                         ADD             R0, PC        ; "s22"
.text:0000B356 70 47                         BX              LR
.text:0000B356
.text:0000B358                               ; ---------------------------------------------------------------------------
.text:0000B358
.text:0000B358                               loc_B358                      ; CODE XREF: .text:0000B152↑j
.text:0000B358 64 48                         LDR             R0, =(aS23 - 0xB35E) ; jumptable 0000B152 case 89
.text:0000B35A 78 44                         ADD             R0, PC        ; "s23"
.text:0000B35C 70 47                         BX              LR
.text:0000B35C
.text:0000B35E                               ; ---------------------------------------------------------------------------
.text:0000B35E
.text:0000B35E                               loc_B35E                      ; CODE XREF: .text:0000B152↑j
.text:0000B35E 62 48                         LDR             R0, =(aS24 - 0xB364) ; jumptable 0000B152 case 90
.text:0000B360 78 44                         ADD             R0, PC        ; "s24"
.text:0000B362 70 47                         BX              LR
.text:0000B362
.text:0000B364                               ; ---------------------------------------------------------------------------
.text:0000B364
.text:0000B364                               loc_B364                      ; CODE XREF: .text:0000B152↑j
.text:0000B364 5F 48                         LDR             R0, =(aS25 - 0xB36A) ; jumptable 0000B152 case 91
.text:0000B366 78 44                         ADD             R0, PC        ; "s25"
.text:0000B368 70 47                         BX              LR
.text:0000B368
.text:0000B36A                               ; ---------------------------------------------------------------------------
.text:0000B36A
.text:0000B36A                               loc_B36A                      ; CODE XREF: .text:0000B152↑j
.text:0000B36A 5D 48                         LDR             R0, =(aS26 - 0xB370) ; jumptable 0000B152 case 92
.text:0000B36C 78 44                         ADD             R0, PC        ; "s26"
.text:0000B36E 70 47                         BX              LR
.text:0000B36E
.text:0000B370                               ; ---------------------------------------------------------------------------
.text:0000B370
.text:0000B370                               loc_B370                      ; CODE XREF: .text:0000B152↑j
.text:0000B370 5A 48                         LDR             R0, =(aS27 - 0xB376) ; jumptable 0000B152 case 93
.text:0000B372 78 44                         ADD             R0, PC        ; "s27"
.text:0000B374 70 47                         BX              LR
.text:0000B374
.text:0000B376                               ; ---------------------------------------------------------------------------
.text:0000B376
.text:0000B376                               loc_B376                      ; CODE XREF: .text:0000B152↑j
.text:0000B376 58 48                         LDR             R0, =(aS28 - 0xB37C) ; jumptable 0000B152 case 94
.text:0000B378 78 44                         ADD             R0, PC        ; "s28"
.text:0000B37A 70 47                         BX              LR
.text:0000B37A
.text:0000B37C                               ; ---------------------------------------------------------------------------
.text:0000B37C
.text:0000B37C                               loc_B37C                      ; CODE XREF: .text:0000B152↑j
.text:0000B37C 55 48                         LDR             R0, =(aS29 - 0xB382) ; jumptable 0000B152 case 95
.text:0000B37E 78 44                         ADD             R0, PC        ; "s29"
.text:0000B380 70 47                         BX              LR
.text:0000B380
.text:0000B382                               ; ---------------------------------------------------------------------------
.text:0000B382
.text:0000B382                               loc_B382                      ; CODE XREF: .text:0000B152↑j
.text:0000B382 53 48                         LDR             R0, =(aS30 - 0xB388) ; jumptable 0000B152 case 96
.text:0000B384 78 44                         ADD             R0, PC        ; "s30"
.text:0000B386 70 47                         BX              LR
.text:0000B386
.text:0000B388                               ; ---------------------------------------------------------------------------
.text:0000B388
.text:0000B388                               loc_B388                      ; CODE XREF: .text:0000B152↑j
.text:0000B388 50 48                         LDR             R0, =(aS31 - 0xB38E) ; jumptable 0000B152 case 97
.text:0000B38A 78 44                         ADD             R0, PC        ; "s31"
.text:0000B38C 70 47                         BX              LR
.text:0000B38C
.text:0000B38E                               ; ---------------------------------------------------------------------------
.text:0000B38E
.text:0000B38E                               loc_B38E                      ; CODE XREF: .text:0000B22A↑j
.text:0000B38E 4D 48                         LDR             R0, =(aD1 - 0xB394) ; jumptable 0000B22A case 257
.text:0000B390 78 44                         ADD             R0, PC        ; "d1"
.text:0000B392 70 47                         BX              LR
.text:0000B392
.text:0000B394                               ; ---------------------------------------------------------------------------
.text:0000B394
.text:0000B394                               loc_B394                      ; CODE XREF: .text:0000B22A↑j
.text:0000B394 4A 48                         LDR             R0, =(aD2 - 0xB39A) ; jumptable 0000B22A case 258
.text:0000B396 78 44                         ADD             R0, PC        ; "d2"
.text:0000B398 70 47                         BX              LR
.text:0000B398
.text:0000B39A                               ; ---------------------------------------------------------------------------
.text:0000B39A
.text:0000B39A                               loc_B39A                      ; CODE XREF: .text:0000B22A↑j
.text:0000B39A 48 48                         LDR             R0, =(aD3 - 0xB3A0) ; jumptable 0000B22A case 259
.text:0000B39C 78 44                         ADD             R0, PC        ; "d3"
.text:0000B39E 70 47                         BX              LR
.text:0000B39E
.text:0000B3A0                               ; ---------------------------------------------------------------------------
.text:0000B3A0
.text:0000B3A0                               loc_B3A0                      ; CODE XREF: .text:0000B22A↑j
.text:0000B3A0 45 48                         LDR             R0, =(aD4 - 0xB3A6) ; jumptable 0000B22A case 260
.text:0000B3A2 78 44                         ADD             R0, PC        ; "d4"
.text:0000B3A4 70 47                         BX              LR
.text:0000B3A4
.text:0000B3A6                               ; ---------------------------------------------------------------------------
.text:0000B3A6
.text:0000B3A6                               loc_B3A6                      ; CODE XREF: .text:0000B22A↑j
.text:0000B3A6 43 48                         LDR             R0, =(aD5 - 0xB3AC) ; jumptable 0000B22A case 261
.text:0000B3A8 78 44                         ADD             R0, PC        ; "d5"
.text:0000B3AA 70 47                         BX              LR
.text:0000B3AA
.text:0000B3AC                               ; ---------------------------------------------------------------------------
.text:0000B3AC
.text:0000B3AC                               loc_B3AC                      ; CODE XREF: .text:0000B22A↑j
.text:0000B3AC 40 48                         LDR             R0, =(aD6 - 0xB3B2) ; jumptable 0000B22A case 262
.text:0000B3AE 78 44                         ADD             R0, PC        ; "d6"
.text:0000B3B0 70 47                         BX              LR
.text:0000B3B0
.text:0000B3B2                               ; ---------------------------------------------------------------------------
.text:0000B3B2
.text:0000B3B2                               loc_B3B2                      ; CODE XREF: .text:0000B22A↑j
.text:0000B3B2 3E 48                         LDR             R0, =(aD7 - 0xB3B8) ; jumptable 0000B22A case 263
.text:0000B3B4 78 44                         ADD             R0, PC        ; "d7"
.text:0000B3B6 70 47                         BX              LR
.text:0000B3B6
.text:0000B3B8                               ; ---------------------------------------------------------------------------
.text:0000B3B8
.text:0000B3B8                               loc_B3B8                      ; CODE XREF: .text:0000B22A↑j
.text:0000B3B8 3B 48                         LDR             R0, =(aD8 - 0xB3BE) ; jumptable 0000B22A case 264
.text:0000B3BA 78 44                         ADD             R0, PC        ; "d8"
.text:0000B3BC 70 47                         BX              LR
.text:0000B3BC
.text:0000B3BE                               ; ---------------------------------------------------------------------------
.text:0000B3BE
.text:0000B3BE                               loc_B3BE                      ; CODE XREF: .text:0000B22A↑j
.text:0000B3BE 39 48                         LDR             R0, =(aD9 - 0xB3C4) ; jumptable 0000B22A case 265
.text:0000B3C0 78 44                         ADD             R0, PC        ; "d9"
.text:0000B3C2 70 47                         BX              LR
.text:0000B3C2
.text:0000B3C4                               ; ---------------------------------------------------------------------------
.text:0000B3C4
.text:0000B3C4                               loc_B3C4                      ; CODE XREF: .text:0000B22A↑j
.text:0000B3C4 36 48                         LDR             R0, =(aD10 - 0xB3CA) ; jumptable 0000B22A case 266
.text:0000B3C6 78 44                         ADD             R0, PC        ; "d10"
.text:0000B3C8 70 47                         BX              LR
.text:0000B3C8
.text:0000B3CA                               ; ---------------------------------------------------------------------------
.text:0000B3CA
.text:0000B3CA                               loc_B3CA                      ; CODE XREF: .text:0000B22A↑j
.text:0000B3CA 34 48                         LDR             R0, =(aD11 - 0xB3D0) ; jumptable 0000B22A case 267
.text:0000B3CC 78 44                         ADD             R0, PC        ; "d11"
.text:0000B3CE 70 47                         BX              LR
.text:0000B3CE
.text:0000B3D0                               ; ---------------------------------------------------------------------------
.text:0000B3D0
.text:0000B3D0                               loc_B3D0                      ; CODE XREF: .text:0000B22A↑j
.text:0000B3D0 31 48                         LDR             R0, =(aD12 - 0xB3D6) ; jumptable 0000B22A case 268
.text:0000B3D2 78 44                         ADD             R0, PC        ; "d12"
.text:0000B3D4 70 47                         BX              LR
.text:0000B3D4
.text:0000B3D6                               ; ---------------------------------------------------------------------------
.text:0000B3D6
.text:0000B3D6                               loc_B3D6                      ; CODE XREF: .text:0000B22A↑j
.text:0000B3D6 2F 48                         LDR             R0, =(aD13 - 0xB3DC) ; jumptable 0000B22A case 269
.text:0000B3D8 78 44                         ADD             R0, PC        ; "d13"
.text:0000B3DA 70 47                         BX              LR
.text:0000B3DA
.text:0000B3DC                               ; ---------------------------------------------------------------------------
.text:0000B3DC
.text:0000B3DC                               loc_B3DC                      ; CODE XREF: .text:0000B22A↑j
.text:0000B3DC 2C 48                         LDR             R0, =(aD14 - 0xB3E2) ; jumptable 0000B22A case 270
.text:0000B3DE 78 44                         ADD             R0, PC        ; "d14"
.text:0000B3E0 70 47                         BX              LR
.text:0000B3E0
.text:0000B3E2                               ; ---------------------------------------------------------------------------
.text:0000B3E2
.text:0000B3E2                               loc_B3E2                      ; CODE XREF: .text:0000B22A↑j
.text:0000B3E2 2A 48                         LDR             R0, =(aD15 - 0xB3E8) ; jumptable 0000B22A case 271
.text:0000B3E4 78 44                         ADD             R0, PC        ; "d15"
.text:0000B3E6 70 47                         BX              LR
.text:0000B3E6
.text:0000B3E8                               ; ---------------------------------------------------------------------------
.text:0000B3E8
.text:0000B3E8                               loc_B3E8                      ; CODE XREF: .text:0000B22A↑j
.text:0000B3E8 27 48                         LDR             R0, =(aD16 - 0xB3EE) ; jumptable 0000B22A case 272
.text:0000B3EA 78 44                         ADD             R0, PC        ; "d16"
.text:0000B3EC 70 47                         BX              LR
.text:0000B3EC
.text:0000B3EE                               ; ---------------------------------------------------------------------------
.text:0000B3EE
.text:0000B3EE                               loc_B3EE                      ; CODE XREF: .text:0000B22A↑j
.text:0000B3EE 25 48                         LDR             R0, =(aD17 - 0xB3F4) ; jumptable 0000B22A case 273
.text:0000B3F0 78 44                         ADD             R0, PC        ; "d17"
.text:0000B3F2 70 47                         BX              LR
.text:0000B3F2
.text:0000B3F4                               ; ---------------------------------------------------------------------------
.text:0000B3F4
.text:0000B3F4                               loc_B3F4                      ; CODE XREF: .text:0000B22A↑j
.text:0000B3F4 22 48                         LDR             R0, =(aD18 - 0xB3FA) ; jumptable 0000B22A case 274
.text:0000B3F6 78 44                         ADD             R0, PC        ; "d18"
.text:0000B3F8 70 47                         BX              LR
.text:0000B3F8
.text:0000B3FA                               ; ---------------------------------------------------------------------------
.text:0000B3FA
.text:0000B3FA                               loc_B3FA                      ; CODE XREF: .text:0000B22A↑j
.text:0000B3FA 20 48                         LDR             R0, =(aD19 - 0xB400) ; jumptable 0000B22A case 275
.text:0000B3FC 78 44                         ADD             R0, PC        ; "d19"
.text:0000B3FE 70 47                         BX              LR
.text:0000B3FE
.text:0000B400                               ; ---------------------------------------------------------------------------
.text:0000B400
.text:0000B400                               loc_B400                      ; CODE XREF: .text:0000B22A↑j
.text:0000B400 1D 48                         LDR             R0, =(aD20 - 0xB406) ; jumptable 0000B22A case 276
.text:0000B402 78 44                         ADD             R0, PC        ; "d20"
.text:0000B404 70 47                         BX              LR
.text:0000B404
.text:0000B406                               ; ---------------------------------------------------------------------------
.text:0000B406
.text:0000B406                               loc_B406                      ; CODE XREF: .text:0000B22A↑j
.text:0000B406 1B 48                         LDR             R0, =(aD21 - 0xB40C) ; jumptable 0000B22A case 277
.text:0000B408 78 44                         ADD             R0, PC        ; "d21"
.text:0000B40A 70 47                         BX              LR
.text:0000B40A
.text:0000B40C                               ; ---------------------------------------------------------------------------
.text:0000B40C
.text:0000B40C                               loc_B40C                      ; CODE XREF: .text:0000B22A↑j
.text:0000B40C 18 48                         LDR             R0, =(aD22 - 0xB412) ; jumptable 0000B22A case 278
.text:0000B40E 78 44                         ADD             R0, PC        ; "d22"
.text:0000B410 70 47                         BX              LR
.text:0000B410
.text:0000B412                               ; ---------------------------------------------------------------------------
.text:0000B412
.text:0000B412                               loc_B412                      ; CODE XREF: .text:0000B22A↑j
.text:0000B412 16 48                         LDR             R0, =(aD23 - 0xB418) ; jumptable 0000B22A case 279
.text:0000B414 78 44                         ADD             R0, PC        ; "d23"
.text:0000B416 70 47                         BX              LR
.text:0000B416
.text:0000B418                               ; ---------------------------------------------------------------------------
.text:0000B418
.text:0000B418                               loc_B418                      ; CODE XREF: .text:0000B22A↑j
.text:0000B418 13 48                         LDR             R0, =(aD24 - 0xB41E) ; jumptable 0000B22A case 280
.text:0000B41A 78 44                         ADD             R0, PC        ; "d24"
.text:0000B41C 70 47                         BX              LR
.text:0000B41C
.text:0000B41E                               ; ---------------------------------------------------------------------------
.text:0000B41E
.text:0000B41E                               loc_B41E                      ; CODE XREF: .text:0000B22A↑j
.text:0000B41E 11 48                         LDR             R0, =(aD25 - 0xB424) ; jumptable 0000B22A case 281
.text:0000B420 78 44                         ADD             R0, PC        ; "d25"
.text:0000B422 70 47                         BX              LR
.text:0000B422
.text:0000B424                               ; ---------------------------------------------------------------------------
.text:0000B424
.text:0000B424                               loc_B424                      ; CODE XREF: .text:0000B22A↑j
.text:0000B424 0E 48                         LDR             R0, =(aD26 - 0xB42A) ; jumptable 0000B22A case 282
.text:0000B426 78 44                         ADD             R0, PC        ; "d26"
.text:0000B428 70 47                         BX              LR
.text:0000B428
.text:0000B42A                               ; ---------------------------------------------------------------------------
.text:0000B42A
.text:0000B42A                               loc_B42A                      ; CODE XREF: .text:0000B22A↑j
.text:0000B42A 0C 48                         LDR             R0, =(aD27 - 0xB430) ; jumptable 0000B22A case 283
.text:0000B42C 78 44                         ADD             R0, PC        ; "d27"
.text:0000B42E 70 47                         BX              LR
.text:0000B42E
.text:0000B430                               ; ---------------------------------------------------------------------------
.text:0000B430
.text:0000B430                               loc_B430                      ; CODE XREF: .text:0000B22A↑j
.text:0000B430 09 48                         LDR             R0, =(aD28 - 0xB436) ; jumptable 0000B22A case 284
.text:0000B432 78 44                         ADD             R0, PC        ; "d28"
.text:0000B434 70 47                         BX              LR
.text:0000B434
.text:0000B436                               ; ---------------------------------------------------------------------------
.text:0000B436
.text:0000B436                               loc_B436                      ; CODE XREF: .text:0000B22A↑j
.text:0000B436 07 48                         LDR             R0, =(aD29 - 0xB43C) ; jumptable 0000B22A case 285
.text:0000B438 78 44                         ADD             R0, PC        ; "d29"
.text:0000B43A 70 47                         BX              LR
.text:0000B43A
.text:0000B43C                               ; ---------------------------------------------------------------------------
.text:0000B43C
.text:0000B43C                               loc_B43C                      ; CODE XREF: .text:0000B22A↑j
.text:0000B43C 04 48                         LDR             R0, =(aD30 - 0xB442) ; jumptable 0000B22A case 286
.text:0000B43E 78 44                         ADD             R0, PC        ; "d30"
.text:0000B440 70 47                         BX              LR
.text:0000B440
.text:0000B442                               ; ---------------------------------------------------------------------------
.text:0000B442
.text:0000B442                               loc_B442                      ; CODE XREF: .text:0000B22A↑j
.text:0000B442 02 48                         LDR             R0, =(aD31 - 0xB448) ; jumptable 0000B22A case 287
.text:0000B444 78 44                         ADD             R0, PC        ; "d31"
.text:0000B446 70 47                         BX              LR
.text:0000B446
.text:0000B446                               ; ---------------------------------------------------------------------------
.text:0000B448 2B 37 00 00                   off_B448 DCD aPc - 0xB154     ; DATA XREF: .text:0000B14C↑r
.text:0000B448                                                             ; "pc"
.text:0000B44C 52 35 00 00                   off_B44C DCD aD31 - 0xB448    ; DATA XREF: .text:loc_B442↑r
.text:0000B44C                                                             ; "d31"
.text:0000B450 54 35 00 00                   off_B450 DCD aD30 - 0xB442    ; DATA XREF: .text:loc_B43C↑r
.text:0000B450                                                             ; "d30"
.text:0000B454 56 35 00 00                   off_B454 DCD aD29 - 0xB43C    ; DATA XREF: .text:loc_B436↑r
.text:0000B454                                                             ; "d29"
.text:0000B458 58 35 00 00                   off_B458 DCD aD28 - 0xB436    ; DATA XREF: .text:loc_B430↑r
.text:0000B458                                                             ; "d28"
.text:0000B45C 5A 35 00 00                   off_B45C DCD aD27 - 0xB430    ; DATA XREF: .text:loc_B42A↑r
.text:0000B45C                                                             ; "d27"
.text:0000B460 5C 35 00 00                   off_B460 DCD aD26 - 0xB42A    ; DATA XREF: .text:loc_B424↑r
.text:0000B460                                                             ; "d26"
.text:0000B464 5E 35 00 00                   off_B464 DCD aD25 - 0xB424    ; DATA XREF: .text:loc_B41E↑r
.text:0000B464                                                             ; "d25"
.text:0000B468 60 35 00 00                   off_B468 DCD aD24 - 0xB41E    ; DATA XREF: .text:loc_B418↑r
.text:0000B468                                                             ; "d24"
.text:0000B46C 62 35 00 00                   off_B46C DCD aD23 - 0xB418    ; DATA XREF: .text:loc_B412↑r
.text:0000B46C                                                             ; "d23"
.text:0000B470 64 35 00 00                   off_B470 DCD aD22 - 0xB412    ; DATA XREF: .text:loc_B40C↑r
.text:0000B470                                                             ; "d22"
.text:0000B474 66 35 00 00                   off_B474 DCD aD21 - 0xB40C    ; DATA XREF: .text:loc_B406↑r
.text:0000B474                                                             ; "d21"
.text:0000B478 68 35 00 00                   off_B478 DCD aD20 - 0xB406    ; DATA XREF: .text:loc_B400↑r
.text:0000B478                                                             ; "d20"
.text:0000B47C 6A 35 00 00                   off_B47C DCD aD19 - 0xB400    ; DATA XREF: .text:loc_B3FA↑r
.text:0000B47C                                                             ; "d19"
.text:0000B480 6C 35 00 00                   off_B480 DCD aD18 - 0xB3FA    ; DATA XREF: .text:loc_B3F4↑r
.text:0000B480                                                             ; "d18"
.text:0000B484 6E 35 00 00                   off_B484 DCD aD17 - 0xB3F4    ; DATA XREF: .text:loc_B3EE↑r
.text:0000B484                                                             ; "d17"
.text:0000B488 70 35 00 00                   off_B488 DCD aD16 - 0xB3EE    ; DATA XREF: .text:loc_B3E8↑r
.text:0000B488                                                             ; "d16"
.text:0000B48C 72 35 00 00                   off_B48C DCD aD15 - 0xB3E8    ; DATA XREF: .text:loc_B3E2↑r
.text:0000B48C                                                             ; "d15"
.text:0000B490 74 35 00 00                   off_B490 DCD aD14 - 0xB3E2    ; DATA XREF: .text:loc_B3DC↑r
.text:0000B490                                                             ; "d14"
.text:0000B494 76 35 00 00                   off_B494 DCD aD13 - 0xB3DC    ; DATA XREF: .text:loc_B3D6↑r
.text:0000B494                                                             ; "d13"
.text:0000B498 78 35 00 00                   off_B498 DCD aD12 - 0xB3D6    ; DATA XREF: .text:loc_B3D0↑r
.text:0000B498                                                             ; "d12"
.text:0000B49C 7A 35 00 00                   off_B49C DCD aD11 - 0xB3D0    ; DATA XREF: .text:loc_B3CA↑r
.text:0000B49C                                                             ; "d11"
.text:0000B4A0 7C 35 00 00                   off_B4A0 DCD aD10 - 0xB3CA    ; DATA XREF: .text:loc_B3C4↑r
.text:0000B4A0                                                             ; "d10"
.text:0000B4A4 7F 35 00 00                   off_B4A4 DCD aD9 - 0xB3C4     ; DATA XREF: .text:loc_B3BE↑r
.text:0000B4A4                                                             ; "d9"
.text:0000B4A8 82 35 00 00                   off_B4A8 DCD aD8 - 0xB3BE     ; DATA XREF: .text:loc_B3B8↑r
.text:0000B4A8                                                             ; "d8"
.text:0000B4AC 85 35 00 00                   off_B4AC DCD aD7 - 0xB3B8     ; DATA XREF: .text:loc_B3B2↑r
.text:0000B4AC                                                             ; "d7"
.text:0000B4B0 88 35 00 00                   off_B4B0 DCD aD6 - 0xB3B2     ; DATA XREF: .text:loc_B3AC↑r
.text:0000B4B0                                                             ; "d6"
.text:0000B4B4 8B 35 00 00                   off_B4B4 DCD aD5 - 0xB3AC     ; DATA XREF: .text:loc_B3A6↑r
.text:0000B4B4                                                             ; "d5"
.text:0000B4B8 8E 35 00 00                   off_B4B8 DCD aD4 - 0xB3A6     ; DATA XREF: .text:loc_B3A0↑r
.text:0000B4B8                                                             ; "d4"
.text:0000B4BC 91 35 00 00                   off_B4BC DCD aD3 - 0xB3A0     ; DATA XREF: .text:loc_B39A↑r
.text:0000B4BC                                                             ; "d3"
.text:0000B4C0 94 35 00 00                   off_B4C0 DCD aD2 - 0xB39A     ; DATA XREF: .text:loc_B394↑r
.text:0000B4C0                                                             ; "d2"
.text:0000B4C4 97 35 00 00                   off_B4C4 DCD aD1 - 0xB394     ; DATA XREF: .text:loc_B38E↑r
.text:0000B4C4                                                             ; "d1"
.text:0000B4C8 B4 36 00 00                   off_B4C8 DCD aD0 - 0xB274     ; DATA XREF: .text:loc_B26E↑r
.text:0000B4C8                                                             ; "d0"
.text:0000B4CC 96 35 00 00                   off_B4CC DCD aS31 - 0xB38E    ; DATA XREF: .text:loc_B388↑r
.text:0000B4CC                                                             ; "s31"
.text:0000B4D0 98 35 00 00                   off_B4D0 DCD aS30 - 0xB388    ; DATA XREF: .text:loc_B382↑r
.text:0000B4D0                                                             ; "s30"
.text:0000B4D4 9A 35 00 00                   off_B4D4 DCD aS29 - 0xB382    ; DATA XREF: .text:loc_B37C↑r
.text:0000B4D4                                                             ; "s29"
.text:0000B4D8 9C 35 00 00                   off_B4D8 DCD aS28 - 0xB37C    ; DATA XREF: .text:loc_B376↑r
.text:0000B4D8                                                             ; "s28"
.text:0000B4DC 9E 35 00 00                   off_B4DC DCD aS27 - 0xB376    ; DATA XREF: .text:loc_B370↑r
.text:0000B4DC                                                             ; "s27"
.text:0000B4E0 A0 35 00 00                   off_B4E0 DCD aS26 - 0xB370    ; DATA XREF: .text:loc_B36A↑r
.text:0000B4E0                                                             ; "s26"
.text:0000B4E4 A2 35 00 00                   off_B4E4 DCD aS25 - 0xB36A    ; DATA XREF: .text:loc_B364↑r
.text:0000B4E4                                                             ; "s25"
.text:0000B4E8 A4 35 00 00                   off_B4E8 DCD aS24 - 0xB364    ; DATA XREF: .text:loc_B35E↑r
.text:0000B4E8                                                             ; "s24"
.text:0000B4EC A6 35 00 00                   off_B4EC DCD aS23 - 0xB35E    ; DATA XREF: .text:loc_B358↑r
.text:0000B4EC                                                             ; "s23"
.text:0000B4F0 A8 35 00 00                   off_B4F0 DCD aS22 - 0xB358    ; DATA XREF: .text:loc_B352↑r
.text:0000B4F0                                                             ; "s22"
.text:0000B4F4 AA 35 00 00                   off_B4F4 DCD aS21 - 0xB352    ; DATA XREF: .text:loc_B34C↑r
.text:0000B4F4                                                             ; "s21"
.text:0000B4F8 AC 35 00 00                   off_B4F8 DCD aS20 - 0xB34C    ; DATA XREF: .text:loc_B346↑r
.text:0000B4F8                                                             ; "s20"
.text:0000B4FC AE 35 00 00                   off_B4FC DCD aS19 - 0xB346    ; DATA XREF: .text:loc_B340↑r
.text:0000B4FC                                                             ; "s19"
.text:0000B500 B0 35 00 00                   off_B500 DCD aS18 - 0xB340    ; DATA XREF: .text:loc_B33A↑r
.text:0000B500                                                             ; "s18"
.text:0000B504 B2 35 00 00                   off_B504 DCD aS17 - 0xB33A    ; DATA XREF: .text:loc_B334↑r
.text:0000B504                                                             ; "s17"
.text:0000B508 B4 35 00 00                   off_B508 DCD aS16 - 0xB334    ; DATA XREF: .text:loc_B32E↑r
.text:0000B508                                                             ; "s16"
.text:0000B50C B6 35 00 00                   off_B50C DCD aS15 - 0xB32E    ; DATA XREF: .text:loc_B328↑r
.text:0000B50C                                                             ; "s15"
.text:0000B510 B8 35 00 00                   off_B510 DCD aS14 - 0xB328    ; DATA XREF: .text:loc_B322↑r
.text:0000B510                                                             ; "s14"
.text:0000B514 BA 35 00 00                   off_B514 DCD aS13 - 0xB322    ; DATA XREF: .text:loc_B31C↑r
.text:0000B514                                                             ; "s13"
.text:0000B518 BC 35 00 00                   off_B518 DCD aS12 - 0xB31C    ; DATA XREF: .text:loc_B316↑r
.text:0000B518                                                             ; "s12"
.text:0000B51C BE 35 00 00                   off_B51C DCD aS11 - 0xB316    ; DATA XREF: .text:loc_B310↑r
.text:0000B51C                                                             ; "s11"
.text:0000B520 C0 35 00 00                   off_B520 DCD aS10 - 0xB310    ; DATA XREF: .text:loc_B30A↑r
.text:0000B520                                                             ; "s10"
.text:0000B524 C3 35 00 00                   off_B524 DCD aS9 - 0xB30A     ; DATA XREF: .text:loc_B304↑r
.text:0000B524                                                             ; "s9"
.text:0000B528 C6 35 00 00                   off_B528 DCD aS8 - 0xB304     ; DATA XREF: .text:loc_B2FE↑r
.text:0000B528                                                             ; "s8"
.text:0000B52C C9 35 00 00                   off_B52C DCD aS7 - 0xB2FE     ; DATA XREF: .text:loc_B2F8↑r
.text:0000B52C                                                             ; "s7"
.text:0000B530 CC 35 00 00                   off_B530 DCD aS6 - 0xB2F8     ; DATA XREF: .text:loc_B2F2↑r
.text:0000B530                                                             ; "s6"
.text:0000B534 CF 35 00 00                   off_B534 DCD aS5 - 0xB2F2     ; DATA XREF: .text:loc_B2EC↑r
.text:0000B534                                                             ; "s5"
.text:0000B538 D2 35 00 00                   off_B538 DCD aS4 - 0xB2EC     ; DATA XREF: .text:loc_B2E6↑r
.text:0000B538                                                             ; "s4"
.text:0000B53C D5 35 00 00                   off_B53C DCD aS3 - 0xB2E6     ; DATA XREF: .text:loc_B2E0↑r
.text:0000B53C                                                             ; "s3"
.text:0000B540 D8 35 00 00                   off_B540 DCD aS2 - 0xB2E0     ; DATA XREF: .text:loc_B2DA↑r
.text:0000B540                                                             ; "s2"
.text:0000B544 DB 35 00 00                   off_B544 DCD aS1 - 0xB2DA     ; DATA XREF: .text:loc_B2D4↑r
.text:0000B544                                                             ; "s1"
.text:0000B548 DE 35 00 00                   off_B548 DCD aS0 - 0xB2D4     ; DATA XREF: .text:loc_B2CE↑r
.text:0000B548                                                             ; "s0"
.text:0000B54C E6 35 00 00                   off_B54C DCD aR12 - 0xB2C8    ; DATA XREF: .text:loc_B2C2↑r
.text:0000B54C                                                             ; "r12"
.text:0000B550 E8 35 00 00                   off_B550 DCD aR11 - 0xB2C2    ; DATA XREF: .text:loc_B2BC↑r
.text:0000B550                                                             ; "r11"
.text:0000B554 EA 35 00 00                   off_B554 DCD aR10 - 0xB2BC    ; DATA XREF: .text:loc_B2B6↑r
.text:0000B554                                                             ; "r10"
.text:0000B558 ED 35 00 00                   off_B558 DCD aR9 - 0xB2B6     ; DATA XREF: .text:loc_B2B0↑r
.text:0000B558                                                             ; "r9"
.text:0000B55C F0 35 00 00                   off_B55C DCD aR8 - 0xB2B0     ; DATA XREF: .text:loc_B2AA↑r
.text:0000B55C                                                             ; "r8"
.text:0000B560 F3 35 00 00                   off_B560 DCD aR7 - 0xB2AA     ; DATA XREF: .text:loc_B2A4↑r
.text:0000B560                                                             ; "r7"
.text:0000B564 F6 35 00 00                   off_B564 DCD aR6 - 0xB2A4     ; DATA XREF: .text:loc_B29E↑r
.text:0000B564                                                             ; "r6"
.text:0000B568 F9 35 00 00                   off_B568 DCD aR5 - 0xB29E     ; DATA XREF: .text:loc_B298↑r
.text:0000B568                                                             ; "r5"
.text:0000B56C FC 35 00 00                   off_B56C DCD aR4 - 0xB298     ; DATA XREF: .text:loc_B292↑r
.text:0000B56C                                                             ; "r4"
.text:0000B570 FF 35 00 00                   off_B570 DCD aR3 - 0xB292     ; DATA XREF: .text:loc_B28C↑r
.text:0000B570                                                             ; "r3"
.text:0000B574 02 36 00 00                   off_B574 DCD aR2 - 0xB28C     ; DATA XREF: .text:loc_B286↑r
.text:0000B574                                                             ; "r2"
.text:0000B578 05 36 00 00                   off_B578 DCD aR1 - 0xB286     ; DATA XREF: .text:loc_B280↑r
.text:0000B578                                                             ; "r1"
.text:0000B57C 08 36 00 00                   off_B57C DCD aR0 - 0xB280     ; DATA XREF: .text:loc_B27A↑r
.text:0000B57C                                                             ; "r0"
.text:0000B580 63 36 00 00                   off_B580 DCD aSp - 0xB222     ; DATA XREF: .text:loc_B21A↑r
.text:0000B580                                                             ; "sp"
.text:0000B584 B4 35 00 00                   off_B584 DCD aLr - 0xB2CE     ; DATA XREF: .text:loc_B2C8↑r
.text:0000B584                                                             ; "lr"
.text:0000B588 24 37 00 00                   off_B588 DCD aUnknownRegiste - 0xB27A
.text:0000B588                                                             ; DATA XREF: .text:def_B22A↑r
.text:0000B588                               ; } // starts at B144         ; "unknown register"
.text:0000B58C                               CODE32
.text:0000B58C
.text:0000B58C                               ; =============== S U B R O U T I N E =======================================
.text:0000B58C
.text:0000B58C
.text:0000B58C                               ; int __fastcall sub_B58C(int)
.text:0000B58C                               sub_B58C                      ; DATA XREF: sub_B640:loc_B644↓o
.text:0000B58C                                                             ; sub_B640+8↓o
.text:0000B58C                                                             ; sub_B640:off_B64C↓o
.text:0000B58C 00 E0 A0 E1                   MOV             LR, R0
.text:0000B590 FF 1F 9E E8                   LDM             LR, {R0-R12}
.text:0000B594 34 D0 9E E5                   LDR             SP, [LR,#0x34]
.text:0000B598 3C E0 9E E5                   LDR             LR, [LR,#0x3C]
.text:0000B59C 1E FF 2F E1                   BX              LR
.text:0000B59C
.text:0000B59C                               ; End of function sub_B58C
.text:0000B59C
.text:0000B5A0
.text:0000B5A0                               ; =============== S U B R O U T I N E =======================================
.text:0000B5A0
.text:0000B5A0
.text:0000B5A0                               ; void sub_B5A0()
.text:0000B5A0                               sub_B5A0                      ; CODE XREF: sub_AF00:loc_AF1A↑p
.text:0000B5A0 20 0B 90 EC                   VLDM            R0, {D0-D15}
.text:0000B5A4 1E FF 2F E1                   BX              LR
.text:0000B5A4
.text:0000B5A4                               ; End of function sub_B5A0
.text:0000B5A4
.text:0000B5A8
.text:0000B5A8                               ; =============== S U B R O U T I N E =======================================
.text:0000B5A8
.text:0000B5A8
.text:0000B5A8                               ; void sub_B5A8()
.text:0000B5A8                               sub_B5A8                      ; CODE XREF: sub_AF00+14↑p
.text:0000B5A8 20 0B 90 EC                   VLDM            R0, {D0-D15}
.text:0000B5AC 1E FF 2F E1                   BX              LR
.text:0000B5AC
.text:0000B5AC                               ; End of function sub_B5A8
.text:0000B5AC
.text:0000B5B0
.text:0000B5B0                               ; =============== S U B R O U T I N E =======================================
.text:0000B5B0
.text:0000B5B0
.text:0000B5B0                               ; void sub_B5B0()
.text:0000B5B0                               sub_B5B0                      ; CODE XREF: sub_AF00+2C↑p
.text:0000B5B0 20 0B D0 EC                   VLDM            R0, {D16-D31}
.text:0000B5B4 1E FF 2F E1                   BX              LR
.text:0000B5B4
.text:0000B5B4                               ; End of function sub_B5B0
.text:0000B5B4
.text:0000B5B8
.text:0000B5B8                               ; =============== S U B R O U T I N E =======================================
.text:0000B5B8
.text:0000B5B8
.text:0000B5B8                               ; _DWORD *__fastcall sub_B5B8(int *)
.text:0000B5B8                               sub_B5B8                      ; CODE XREF: sub_AF00+3E↑p
.text:0000B5B8 02 01 F0 EC                   LDCL            p1, c0, [R0],#8
.text:0000B5BC 02 11 F0 EC                   LDCL            p1, c1, [R0],#8
.text:0000B5C0 02 21 F0 EC                   LDCL            p1, c2, [R0],#8
.text:0000B5C4 02 31 F0 EC                   LDCL            p1, c3, [R0],#8
.text:0000B5C8 02 41 F0 EC                   LDCL            p1, c4, [R0],#8
.text:0000B5CC 02 51 F0 EC                   LDCL            p1, c5, [R0],#8
.text:0000B5D0 02 61 F0 EC                   LDCL            p1, c6, [R0],#8
.text:0000B5D4 02 71 F0 EC                   LDCL            p1, c7, [R0],#8
.text:0000B5D8 02 81 F0 EC                   LDCL            p1, c8, [R0],#8
.text:0000B5DC 02 91 F0 EC                   LDCL            p1, c9, [R0],#8
.text:0000B5E0 02 A1 F0 EC                   LDCL            p1, c10, [R0],#8
.text:0000B5E4 02 B1 F0 EC                   LDCL            p1, c11, [R0],#8
.text:0000B5E8 02 C1 F0 EC                   LDCL            p1, c12, [R0],#8
.text:0000B5EC 02 D1 F0 EC                   LDCL            p1, c13, [R0],#8
.text:0000B5F0 02 E1 F0 EC                   LDCL            p1, c14, [R0],#8
.text:0000B5F4 02 F1 F0 EC                   LDCL            p1, c15, [R0],#8
.text:0000B5F8 1E FF 2F E1                   BX              LR
.text:0000B5F8
.text:0000B5F8                               ; End of function sub_B5B8
.text:0000B5F8
.text:0000B5FC
.text:0000B5FC                               ; =============== S U B R O U T I N E =======================================
.text:0000B5FC
.text:0000B5FC
.text:0000B5FC                               ; _DWORD *__fastcall sub_B5FC(int *)
.text:0000B5FC                               sub_B5FC                      ; DATA XREF: sub_B650:loc_B654↓o
.text:0000B5FC                                                             ; sub_B650+8↓o
.text:0000B5FC                                                             ; sub_B650:off_B65C↓o
.text:0000B5FC 01 81 B0 FC                   LDC2            p1, c8, [R0],#4
.text:0000B600 01 91 B0 FC                   LDC2            p1, c9, [R0],#4
.text:0000B604 01 A1 B0 FC                   LDC2            p1, c10, [R0],#4
.text:0000B608 01 B1 B0 FC                   LDC2            p1, c11, [R0],#4
.text:0000B60C 1E FF 2F E1                   BX              LR
.text:0000B60C
.text:0000B60C                               ; End of function sub_B5FC
.text:0000B60C
.text:0000B610                               CODE16
.text:0000B610
.text:0000B610                               ; =============== S U B R O U T I N E =======================================
.text:0000B610
.text:0000B610                               ; Attributes: thunk
.text:0000B610
.text:0000B610                               ; void __fastcall j_free(void *ptr)
.text:0000B610                               j_free                        ; CODE XREF: sub_52B8+36↑j
.text:0000B610                                                             ; sub_5520+6A↑j
.text:0000B610                                                             ; sub_605C+EA↑j
.text:0000B610                                                             ; sub_61B8+CE↑j
.text:0000B610                                                             ; audio_route_free+14↑j
.text:0000B610 78 47                         BX              PC
.text:0000B610
.text:0000B610                               ; ---------------------------------------------------------------------------
.text:0000B612 C0 46                         ALIGN 4
.text:0000B614                               CODE32
.text:0000B614
.text:0000B614                               loc_B614                      ; CODE XREF: j_free↑j
.text:0000B614 00 C0 9F E5                   LDR             R12, =(free - 0xB620)
.text:0000B618 0F F0 8C E0                   ADD             PC, R12, PC   ; free
.text:0000B618
.text:0000B618                               ; ---------------------------------------------------------------------------
.text:0000B61C 08 7B FF FF                   off_B61C DCD free - 0xB620    ; DATA XREF: j_free:loc_B614↑r
.text:0000B61C                               ; End of function j_free
.text:0000B61C
.text:0000B620                               CODE16
.text:0000B620
.text:0000B620                               ; =============== S U B R O U T I N E =======================================
.text:0000B620
.text:0000B620                               ; Attributes: thunk
.text:0000B620
.text:0000B620                               ; int __fastcall j_pthread_mutex_unlock(pthread_mutex_t *mutex)
.text:0000B620                               j_pthread_mutex_unlock        ; CODE XREF: sub_569C+8E↑j
.text:0000B620 78 47                         BX              PC
.text:0000B620
.text:0000B620                               ; ---------------------------------------------------------------------------
.text:0000B622 C0 46                         ALIGN 4
.text:0000B624                               CODE32
.text:0000B624
.text:0000B624                               loc_B624                      ; CODE XREF: j_pthread_mutex_unlock↑j
.text:0000B624 00 C0 9F E5                   LDR             R12, =(pthread_mutex_unlock - 0xB630)
.text:0000B628 0F F0 8C E0                   ADD             PC, R12, PC   ; pthread_mutex_unlock
.text:0000B628
.text:0000B628                               ; ---------------------------------------------------------------------------
.text:0000B62C 14 7A FF FF                   off_B62C DCD pthread_mutex_unlock - 0xB630
.text:0000B62C                                                             ; DATA XREF: j_pthread_mutex_unlock:loc_B624↑r
.text:0000B62C                               ; End of function j_pthread_mutex_unlock
.text:0000B62C
.text:0000B630                               CODE16
.text:0000B630
.text:0000B630                               ; =============== S U B R O U T I N E =======================================
.text:0000B630
.text:0000B630                               ; Attributes: thunk
.text:0000B630
.text:0000B630                               ; char *__fastcall j_strdup(const char *s)
.text:0000B630                               j_strdup                      ; CODE XREF: sub_7F78+4↑j
.text:0000B630 78 47                         BX              PC
.text:0000B630
.text:0000B630                               ; ---------------------------------------------------------------------------
.text:0000B632 C0 46                         ALIGN 4
.text:0000B634                               CODE32
.text:0000B634
.text:0000B634                               loc_B634                      ; CODE XREF: j_strdup↑j
.text:0000B634 00 C0 9F E5                   LDR             R12, =(strdup - 0xB640)
.text:0000B638 0F F0 8C E0                   ADD             PC, R12, PC   ; strdup
.text:0000B638
.text:0000B638                               ; ---------------------------------------------------------------------------
.text:0000B63C E4 7B FF FF                   off_B63C DCD strdup - 0xB640  ; DATA XREF: j_strdup:loc_B634↑r
.text:0000B63C                               ; End of function j_strdup
.text:0000B63C
.text:0000B640                               CODE16
.text:0000B640
.text:0000B640                               ; =============== S U B R O U T I N E =======================================
.text:0000B640
.text:0000B640                               ; Attributes: thunk
.text:0000B640
.text:0000B640                               ; int __fastcall sub_B640(int)
.text:0000B640                               sub_B640                      ; CODE XREF: sub_AD74+12↑j
.text:0000B640 78 47                         BX              PC
.text:0000B640
.text:0000B640                               ; ---------------------------------------------------------------------------
.text:0000B642 C0 46                         ALIGN 4
.text:0000B644                               CODE32
.text:0000B644
.text:0000B644                               loc_B644                      ; CODE XREF: sub_B640↑j
.text:0000B644 00 C0 9F E5                   LDR             R12, =(sub_B58C - 0xB650)
.text:0000B648 0F F0 8C E0                   ADD             PC, R12, PC   ; sub_B58C
.text:0000B648
.text:0000B648                               ; ---------------------------------------------------------------------------
.text:0000B64C 3C FF FF FF                   off_B64C DCD sub_B58C - 0xB650
.text:0000B64C                                                             ; DATA XREF: sub_B640:loc_B644↑r
.text:0000B64C                               ; End of function sub_B640
.text:0000B64C
.text:0000B650                               CODE16
.text:0000B650
.text:0000B650                               ; =============== S U B R O U T I N E =======================================
.text:0000B650
.text:0000B650                               ; Attributes: thunk
.text:0000B650
.text:0000B650                               ; _DWORD *__fastcall sub_B650(int *)
.text:0000B650                               sub_B650                      ; CODE XREF: sub_AF00+50↑j
.text:0000B650 78 47                         BX              PC
.text:0000B650
.text:0000B650                               ; ---------------------------------------------------------------------------
.text:0000B652 C0 46                         ALIGN 4
.text:0000B654                               CODE32
.text:0000B654
.text:0000B654                               loc_B654                      ; CODE XREF: sub_B650↑j
.text:0000B654 00 C0 9F E5                   LDR             R12, =(sub_B5FC - 0xB660)
.text:0000B658 0F F0 8C E0                   ADD             PC, R12, PC   ; sub_B5FC
.text:0000B658
.text:0000B658                               ; ---------------------------------------------------------------------------
.text:0000B65C 9C FF FF FF                   off_B65C DCD sub_B5FC - 0xB660
.text:0000B65C                                                             ; DATA XREF: sub_B650:loc_B654↑r
.text:0000B65C                               ; End of function sub_B650
.text:0000B65C
.text:0000B65C                               ; .text ends
.text:0000B65C
.ARM.extab:0000B660                               ; ===========================================================================
.ARM.extab:0000B660
.ARM.extab:0000B660                               ; Segment type: Pure data
.ARM.extab:0000B660                               AREA .ARM.extab, DATA, READONLY
.ARM.extab:0000B660 9A                            DCB 0x9A
.ARM.extab:0000B661 B2                            DCB 0xB2
.ARM.extab:0000B662 01                            DCB    1
.ARM.extab:0000B663 81                            DCB 0x81
.ARM.extab:0000B664 B0                            DCB 0xB0
.ARM.extab:0000B665 B0                            DCB 0xB0
.ARM.extab:0000B666 AF                            DCB 0xAF
.ARM.extab:0000B667 07                            DCB    7
.ARM.extab:0000B668 00                            DCB    0
.ARM.extab:0000B669 00                            DCB    0
.ARM.extab:0000B66A 00                            DCB    0
.ARM.extab:0000B66B 00                            DCB    0
.ARM.extab:0000B66C A2                            DCB 0xA2
.ARM.extab:0000B66D B2                            DCB 0xB2
.ARM.extab:0000B66E 01                            DCB    1
.ARM.extab:0000B66F 81                            DCB 0x81
.ARM.extab:0000B670 B0                            DCB 0xB0
.ARM.extab:0000B671 B0                            DCB 0xB0
.ARM.extab:0000B672 AB                            DCB 0xAB
.ARM.extab:0000B673 03                            DCB    3
.ARM.extab:0000B674 00                            DCB    0
.ARM.extab:0000B675 00                            DCB    0
.ARM.extab:0000B676 00                            DCB    0
.ARM.extab:0000B677 00                            DCB    0
.ARM.extab:0000B678 A5                            DCB 0xA5
.ARM.extab:0000B679 B2                            DCB 0xB2
.ARM.extab:0000B67A 01                            DCB    1
.ARM.extab:0000B67B 81                            DCB 0x81
.ARM.extab:0000B67C B0                            DCB 0xB0
.ARM.extab:0000B67D B0                            DCB 0xB0
.ARM.extab:0000B67E AE                            DCB 0xAE
.ARM.extab:0000B67F 01                            DCB    1
.ARM.extab:0000B680 00                            DCB    0
.ARM.extab:0000B681 00                            DCB    0
.ARM.extab:0000B682 00                            DCB    0
.ARM.extab:0000B683 00                            DCB    0
.ARM.extab:0000B684 7F                            DCB 0x7F ; 
.ARM.extab:0000B685 B2                            DCB 0xB2
.ARM.extab:0000B686 01                            DCB    1
.ARM.extab:0000B687 81                            DCB 0x81
.ARM.extab:0000B688 B0                            DCB 0xB0
.ARM.extab:0000B689 B0                            DCB 0xB0
.ARM.extab:0000B68A 0B                            DCB  0xB
.ARM.extab:0000B68B 84                            DCB 0x84
.ARM.extab:0000B68C 00                            DCB    0
.ARM.extab:0000B68D 00                            DCB    0
.ARM.extab:0000B68E 00                            DCB    0
.ARM.extab:0000B68F 00                            DCB    0
.ARM.extab:0000B68F                               ; .ARM.extab ends
.ARM.extab:0000B68F
.ARM.exidx:0000B690                               ; ===========================================================================
.ARM.exidx:0000B690
.ARM.exidx:0000B690                               ; Segment type: Pure data
.ARM.exidx:0000B690                               AREA .ARM.exidx, DATA, READONLY
.ARM.exidx:0000B690 50                            unk_B690 DCB 0x50 ; P         ; DATA XREF: LOAD:0000011C↑o
.ARM.exidx:0000B691 7F                            DCB 0x7F ; 
.ARM.exidx:0000B692 FF                            DCB 0xFF
.ARM.exidx:0000B693 7F                            DCB 0x7F ; 
.ARM.exidx:0000B694 CC                            DCB 0xCC
.ARM.exidx:0000B695 FF                            DCB 0xFF
.ARM.exidx:0000B696 FF                            DCB 0xFF
.ARM.exidx:0000B697 7F                            DCB 0x7F ; 
.ARM.exidx:0000B698 64                            DCB 0x64 ; d
.ARM.exidx:0000B699 80                            DCB 0x80
.ARM.exidx:0000B69A FF                            DCB 0xFF
.ARM.exidx:0000B69B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B69C B0                            DCB 0xB0
.ARM.exidx:0000B69D AE                            DCB 0xAE
.ARM.exidx:0000B69E 01                            DCB    1
.ARM.exidx:0000B69F 80                            DCB 0x80
.ARM.exidx:0000B6A0 60                            DCB 0x60 ; `
.ARM.exidx:0000B6A1 81                            DCB 0x81
.ARM.exidx:0000B6A2 FF                            DCB 0xFF
.ARM.exidx:0000B6A3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B6A4 0B                            DCB  0xB
.ARM.exidx:0000B6A5 84                            DCB 0x84
.ARM.exidx:0000B6A6 01                            DCB    1
.ARM.exidx:0000B6A7 80                            DCB 0x80
.ARM.exidx:0000B6A8 60                            DCB 0x60 ; `
.ARM.exidx:0000B6A9 82                            DCB 0x82
.ARM.exidx:0000B6AA FF                            DCB 0xFF
.ARM.exidx:0000B6AB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B6AC B0                            DCB 0xB0
.ARM.exidx:0000B6AD AC                            DCB 0xAC
.ARM.exidx:0000B6AE 01                            DCB    1
.ARM.exidx:0000B6AF 80                            DCB 0x80
.ARM.exidx:0000B6B0 B4                            DCB 0xB4
.ARM.exidx:0000B6B1 84                            DCB 0x84
.ARM.exidx:0000B6B2 FF                            DCB 0xFF
.ARM.exidx:0000B6B3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B6B4 B0                            DCB 0xB0
.ARM.exidx:0000B6B5 B0                            DCB 0xB0
.ARM.exidx:0000B6B6 B0                            DCB 0xB0
.ARM.exidx:0000B6B7 80                            DCB 0x80
.ARM.exidx:0000B6B8 C4                            DCB 0xC4
.ARM.exidx:0000B6B9 84                            DCB 0x84
.ARM.exidx:0000B6BA FF                            DCB 0xFF
.ARM.exidx:0000B6BB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B6BC B0                            DCB 0xB0
.ARM.exidx:0000B6BD AF                            DCB 0xAF
.ARM.exidx:0000B6BE 1A                            DCB 0x1A
.ARM.exidx:0000B6BF 80                            DCB 0x80
.ARM.exidx:0000B6C0 C8                            DCB 0xC8
.ARM.exidx:0000B6C1 89                            DCB 0x89
.ARM.exidx:0000B6C2 FF                            DCB 0xFF
.ARM.exidx:0000B6C3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B6C4 B0                            DCB 0xB0
.ARM.exidx:0000B6C5 A8                            DCB 0xA8
.ARM.exidx:0000B6C6 03                            DCB    3
.ARM.exidx:0000B6C7 80                            DCB 0x80
.ARM.exidx:0000B6C8 30                            DCB 0x30 ; 0
.ARM.exidx:0000B6C9 8A                            DCB 0x8A
.ARM.exidx:0000B6CA FF                            DCB 0xFF
.ARM.exidx:0000B6CB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B6CC B0                            DCB 0xB0
.ARM.exidx:0000B6CD 0B                            DCB  0xB
.ARM.exidx:0000B6CE 84                            DCB 0x84
.ARM.exidx:0000B6CF 80                            DCB 0x80
.ARM.exidx:0000B6D0 C8                            DCB 0xC8
.ARM.exidx:0000B6D1 8A                            DCB 0x8A
.ARM.exidx:0000B6D2 FF                            DCB 0xFF
.ARM.exidx:0000B6D3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B6D4 B0                            DCB 0xB0
.ARM.exidx:0000B6D5 08                            DCB    8
.ARM.exidx:0000B6D6 84                            DCB 0x84
.ARM.exidx:0000B6D7 80                            DCB 0x80
.ARM.exidx:0000B6D8 D8                            DCB 0xD8
.ARM.exidx:0000B6D9 8A                            DCB 0x8A
.ARM.exidx:0000B6DA FF                            DCB 0xFF
.ARM.exidx:0000B6DB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B6DC B0                            DCB 0xB0
.ARM.exidx:0000B6DD AD                            DCB 0xAD
.ARM.exidx:0000B6DE 0A                            DCB  0xA
.ARM.exidx:0000B6DF 80                            DCB 0x80
.ARM.exidx:0000B6E0 9C                            DCB 0x9C
.ARM.exidx:0000B6E1 8B                            DCB 0x8B
.ARM.exidx:0000B6E2 FF                            DCB 0xFF
.ARM.exidx:0000B6E3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B6E4 0B                            DCB  0xB
.ARM.exidx:0000B6E5 84                            DCB 0x84
.ARM.exidx:0000B6E6 01                            DCB    1
.ARM.exidx:0000B6E7 80                            DCB 0x80
.ARM.exidx:0000B6E8 7C                            DCB 0x7C ; |
.ARM.exidx:0000B6E9 8C                            DCB 0x8C
.ARM.exidx:0000B6EA FF                            DCB 0xFF
.ARM.exidx:0000B6EB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B6EC B0                            DCB 0xB0
.ARM.exidx:0000B6ED B0                            DCB 0xB0
.ARM.exidx:0000B6EE AA                            DCB 0xAA
.ARM.exidx:0000B6EF 80                            DCB 0x80
.ARM.exidx:0000B6F0 A4                            DCB 0xA4
.ARM.exidx:0000B6F1 8C                            DCB 0x8C
.ARM.exidx:0000B6F2 FF                            DCB 0xFF
.ARM.exidx:0000B6F3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B6F4 B0                            DCB 0xB0
.ARM.exidx:0000B6F5 B0                            DCB 0xB0
.ARM.exidx:0000B6F6 A8                            DCB 0xA8
.ARM.exidx:0000B6F7 80                            DCB 0x80
.ARM.exidx:0000B6F8 B4                            DCB 0xB4
.ARM.exidx:0000B6F9 8C                            DCB 0x8C
.ARM.exidx:0000B6FA FF                            DCB 0xFF
.ARM.exidx:0000B6FB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B6FC B0                            DCB 0xB0
.ARM.exidx:0000B6FD AD                            DCB 0xAD
.ARM.exidx:0000B6FE 04                            DCB    4
.ARM.exidx:0000B6FF 80                            DCB 0x80
.ARM.exidx:0000B700 24                            DCB 0x24 ; $
.ARM.exidx:0000B701 8D                            DCB 0x8D
.ARM.exidx:0000B702 FF                            DCB 0xFF
.ARM.exidx:0000B703 7F                            DCB 0x7F ; 
.ARM.exidx:0000B704 AB                            DCB 0xAB
.ARM.exidx:0000B705 3F                            DCB 0x3F ; ?
.ARM.exidx:0000B706 02                            DCB    2
.ARM.exidx:0000B707 80                            DCB 0x80
.ARM.exidx:0000B708 D8                            DCB 0xD8
.ARM.exidx:0000B709 8F                            DCB 0x8F
.ARM.exidx:0000B70A FF                            DCB 0xFF
.ARM.exidx:0000B70B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B70C B0                            DCB 0xB0
.ARM.exidx:0000B70D B0                            DCB 0xB0
.ARM.exidx:0000B70E A8                            DCB 0xA8
.ARM.exidx:0000B70F 80                            DCB 0x80
.ARM.exidx:0000B710 FA                            DCB 0xFA
.ARM.exidx:0000B711 8F                            DCB 0x8F
.ARM.exidx:0000B712 FF                            DCB 0xFF
.ARM.exidx:0000B713 7F                            DCB 0x7F ; 
.ARM.exidx:0000B714 B0                            DCB 0xB0
.ARM.exidx:0000B715 B0                            DCB 0xB0
.ARM.exidx:0000B716 B0                            DCB 0xB0
.ARM.exidx:0000B717 80                            DCB 0x80
.ARM.exidx:0000B718 F8                            DCB 0xF8
.ARM.exidx:0000B719 8F                            DCB 0x8F
.ARM.exidx:0000B71A FF                            DCB 0xFF
.ARM.exidx:0000B71B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B71C B0                            DCB 0xB0
.ARM.exidx:0000B71D AF                            DCB 0xAF
.ARM.exidx:0000B71E 0A                            DCB  0xA
.ARM.exidx:0000B71F 80                            DCB 0x80
.ARM.exidx:0000B720 04                            DCB    4
.ARM.exidx:0000B721 91                            DCB 0x91
.ARM.exidx:0000B722 FF                            DCB 0xFF
.ARM.exidx:0000B723 7F                            DCB 0x7F ; 
.ARM.exidx:0000B724 B0                            DCB 0xB0
.ARM.exidx:0000B725 B0                            DCB 0xB0
.ARM.exidx:0000B726 B0                            DCB 0xB0
.ARM.exidx:0000B727 80                            DCB 0x80
.ARM.exidx:0000B728 04                            DCB    4
.ARM.exidx:0000B729 91                            DCB 0x91
.ARM.exidx:0000B72A FF                            DCB 0xFF
.ARM.exidx:0000B72B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B72C B0                            DCB 0xB0
.ARM.exidx:0000B72D AB                            DCB 0xAB
.ARM.exidx:0000B72E 02                            DCB    2
.ARM.exidx:0000B72F 80                            DCB 0x80
.ARM.exidx:0000B730 04                            DCB    4
.ARM.exidx:0000B731 94                            DCB 0x94
.ARM.exidx:0000B732 FF                            DCB 0xFF
.ARM.exidx:0000B733 7F                            DCB 0x7F ; 
.ARM.exidx:0000B734 B0                            DCB 0xB0
.ARM.exidx:0000B735 B0                            DCB 0xB0
.ARM.exidx:0000B736 B0                            DCB 0xB0
.ARM.exidx:0000B737 80                            DCB 0x80
.ARM.exidx:0000B738 10                            DCB 0x10
.ARM.exidx:0000B739 94                            DCB 0x94
.ARM.exidx:0000B73A FF                            DCB 0xFF
.ARM.exidx:0000B73B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B73C B0                            DCB 0xB0
.ARM.exidx:0000B73D AD                            DCB 0xAD
.ARM.exidx:0000B73E 0A                            DCB  0xA
.ARM.exidx:0000B73F 80                            DCB 0x80
.ARM.exidx:0000B740 2C                            DCB 0x2C ; ,
.ARM.exidx:0000B741 97                            DCB 0x97
.ARM.exidx:0000B742 FF                            DCB 0xFF
.ARM.exidx:0000B743 7F                            DCB 0x7F ; 
.ARM.exidx:0000B744 B0                            DCB 0xB0
.ARM.exidx:0000B745 AA                            DCB 0xAA
.ARM.exidx:0000B746 0B                            DCB  0xB
.ARM.exidx:0000B747 80                            DCB 0x80
.ARM.exidx:0000B748 88                            DCB 0x88
.ARM.exidx:0000B749 98                            DCB 0x98
.ARM.exidx:0000B74A FF                            DCB 0xFF
.ARM.exidx:0000B74B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B74C B0                            DCB 0xB0
.ARM.exidx:0000B74D B0                            DCB 0xB0
.ARM.exidx:0000B74E A8                            DCB 0xA8
.ARM.exidx:0000B74F 80                            DCB 0x80
.ARM.exidx:0000B750 18                            DCB 0x18
.ARM.exidx:0000B751 99                            DCB 0x99
.ARM.exidx:0000B752 FF                            DCB 0xFF
.ARM.exidx:0000B753 7F                            DCB 0x7F ; 
.ARM.exidx:0000B754 B0                            DCB 0xB0
.ARM.exidx:0000B755 AF                            DCB 0xAF
.ARM.exidx:0000B756 00                            DCB    0
.ARM.exidx:0000B757 80                            DCB 0x80
.ARM.exidx:0000B758 60                            DCB 0x60 ; `
.ARM.exidx:0000B759 9B                            DCB 0x9B
.ARM.exidx:0000B75A FF                            DCB 0xFF
.ARM.exidx:0000B75B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B75C B0                            DCB 0xB0
.ARM.exidx:0000B75D B0                            DCB 0xB0
.ARM.exidx:0000B75E AA                            DCB 0xAA
.ARM.exidx:0000B75F 80                            DCB 0x80
.ARM.exidx:0000B760 94                            DCB 0x94
.ARM.exidx:0000B761 9B                            DCB 0x9B
.ARM.exidx:0000B762 FF                            DCB 0xFF
.ARM.exidx:0000B763 7F                            DCB 0x7F ; 
.ARM.exidx:0000B764 B0                            DCB 0xB0
.ARM.exidx:0000B765 AF                            DCB 0xAF
.ARM.exidx:0000B766 20                            DCB 0x20
.ARM.exidx:0000B767 80                            DCB 0x80
.ARM.exidx:0000B768 B8                            DCB 0xB8
.ARM.exidx:0000B769 9D                            DCB 0x9D
.ARM.exidx:0000B76A FF                            DCB 0xFF
.ARM.exidx:0000B76B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B76C B0                            DCB 0xB0
.ARM.exidx:0000B76D AA                            DCB 0xAA
.ARM.exidx:0000B76E 01                            DCB    1
.ARM.exidx:0000B76F 80                            DCB 0x80
.ARM.exidx:0000B770 30                            DCB 0x30 ; 0
.ARM.exidx:0000B771 9E                            DCB 0x9E
.ARM.exidx:0000B772 FF                            DCB 0xFF
.ARM.exidx:0000B773 7F                            DCB 0x7F ; 
.ARM.exidx:0000B774 B0                            DCB 0xB0
.ARM.exidx:0000B775 B0                            DCB 0xB0
.ARM.exidx:0000B776 B0                            DCB 0xB0
.ARM.exidx:0000B777 80                            DCB 0x80
.ARM.exidx:0000B778 2C                            DCB 0x2C ; ,
.ARM.exidx:0000B779 9E                            DCB 0x9E
.ARM.exidx:0000B77A FF                            DCB 0xFF
.ARM.exidx:0000B77B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B77C B0                            DCB 0xB0
.ARM.exidx:0000B77D B0                            DCB 0xB0
.ARM.exidx:0000B77E AA                            DCB 0xAA
.ARM.exidx:0000B77F 80                            DCB 0x80
.ARM.exidx:0000B780 68                            DCB 0x68 ; h
.ARM.exidx:0000B781 9E                            DCB 0x9E
.ARM.exidx:0000B782 FF                            DCB 0xFF
.ARM.exidx:0000B783 7F                            DCB 0x7F ; 
.ARM.exidx:0000B784 0B                            DCB  0xB
.ARM.exidx:0000B785 84                            DCB 0x84
.ARM.exidx:0000B786 01                            DCB    1
.ARM.exidx:0000B787 80                            DCB 0x80
.ARM.exidx:0000B788 14                            DCB 0x14
.ARM.exidx:0000B789 9F                            DCB 0x9F
.ARM.exidx:0000B78A FF                            DCB 0xFF
.ARM.exidx:0000B78B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B78C B0                            DCB 0xB0
.ARM.exidx:0000B78D B0                            DCB 0xB0
.ARM.exidx:0000B78E AA                            DCB 0xAA
.ARM.exidx:0000B78F 80                            DCB 0x80
.ARM.exidx:0000B790 A0                            DCB 0xA0
.ARM.exidx:0000B791 9F                            DCB 0x9F
.ARM.exidx:0000B792 FF                            DCB 0xFF
.ARM.exidx:0000B793 7F                            DCB 0x7F ; 
.ARM.exidx:0000B794 B0                            DCB 0xB0
.ARM.exidx:0000B795 AF                            DCB 0xAF
.ARM.exidx:0000B796 26                            DCB 0x26 ; &
.ARM.exidx:0000B797 80                            DCB 0x80
.ARM.exidx:0000B798 C4                            DCB 0xC4
.ARM.exidx:0000B799 A8                            DCB 0xA8
.ARM.exidx:0000B79A FF                            DCB 0xFF
.ARM.exidx:0000B79B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B79C B0                            DCB 0xB0
.ARM.exidx:0000B79D AA                            DCB 0xAA
.ARM.exidx:0000B79E 01                            DCB    1
.ARM.exidx:0000B79F 80                            DCB 0x80
.ARM.exidx:0000B7A0 C4                            DCB 0xC4
.ARM.exidx:0000B7A1 A9                            DCB 0xA9
.ARM.exidx:0000B7A2 FF                            DCB 0xFF
.ARM.exidx:0000B7A3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B7A4 B0                            DCB 0xB0
.ARM.exidx:0000B7A5 B0                            DCB 0xB0
.ARM.exidx:0000B7A6 A8                            DCB 0xA8
.ARM.exidx:0000B7A7 80                            DCB 0x80
.ARM.exidx:0000B7A8 10                            DCB 0x10
.ARM.exidx:0000B7A9 AA                            DCB 0xAA
.ARM.exidx:0000B7AA FF                            DCB 0xFF
.ARM.exidx:0000B7AB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B7AC B0                            DCB 0xB0
.ARM.exidx:0000B7AD B0                            DCB 0xB0
.ARM.exidx:0000B7AE AC                            DCB 0xAC
.ARM.exidx:0000B7AF 80                            DCB 0x80
.ARM.exidx:0000B7B0 EC                            DCB 0xEC
.ARM.exidx:0000B7B1 AA                            DCB 0xAA
.ARM.exidx:0000B7B2 FF                            DCB 0xFF
.ARM.exidx:0000B7B3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B7B4 B0                            DCB 0xB0
.ARM.exidx:0000B7B5 B0                            DCB 0xB0
.ARM.exidx:0000B7B6 A8                            DCB 0xA8
.ARM.exidx:0000B7B7 80                            DCB 0x80
.ARM.exidx:0000B7B8 28                            DCB 0x28 ; (
.ARM.exidx:0000B7B9 AB                            DCB 0xAB
.ARM.exidx:0000B7BA FF                            DCB 0xFF
.ARM.exidx:0000B7BB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B7BC B0                            DCB 0xB0
.ARM.exidx:0000B7BD AB                            DCB 0xAB
.ARM.exidx:0000B7BE 08                            DCB    8
.ARM.exidx:0000B7BF 80                            DCB 0x80
.ARM.exidx:0000B7C0 84                            DCB 0x84
.ARM.exidx:0000B7C1 AE                            DCB 0xAE
.ARM.exidx:0000B7C2 FF                            DCB 0xFF
.ARM.exidx:0000B7C3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B7C4 B0                            DCB 0xB0
.ARM.exidx:0000B7C5 0B                            DCB  0xB
.ARM.exidx:0000B7C6 84                            DCB 0x84
.ARM.exidx:0000B7C7 80                            DCB 0x80
.ARM.exidx:0000B7C8 E8                            DCB 0xE8
.ARM.exidx:0000B7C9 AE                            DCB 0xAE
.ARM.exidx:0000B7CA FF                            DCB 0xFF
.ARM.exidx:0000B7CB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B7CC B0                            DCB 0xB0
.ARM.exidx:0000B7CD AF                            DCB 0xAF
.ARM.exidx:0000B7CE 14                            DCB 0x14
.ARM.exidx:0000B7CF 80                            DCB 0x80
.ARM.exidx:0000B7D0 EC                            DCB 0xEC
.ARM.exidx:0000B7D1 B4                            DCB 0xB4
.ARM.exidx:0000B7D2 FF                            DCB 0xFF
.ARM.exidx:0000B7D3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B7D4 B0                            DCB 0xB0
.ARM.exidx:0000B7D5 B0                            DCB 0xB0
.ARM.exidx:0000B7D6 A8                            DCB 0xA8
.ARM.exidx:0000B7D7 80                            DCB 0x80
.ARM.exidx:0000B7D8 7C                            DCB 0x7C ; |
.ARM.exidx:0000B7D9 B5                            DCB 0xB5
.ARM.exidx:0000B7DA FF                            DCB 0xFF
.ARM.exidx:0000B7DB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B7DC B0                            DCB 0xB0
.ARM.exidx:0000B7DD AF                            DCB 0xAF
.ARM.exidx:0000B7DE 00                            DCB    0
.ARM.exidx:0000B7DF 80                            DCB 0x80
.ARM.exidx:0000B7E0 28                            DCB 0x28 ; (
.ARM.exidx:0000B7E1 B6                            DCB 0xB6
.ARM.exidx:0000B7E2 FF                            DCB 0xFF
.ARM.exidx:0000B7E3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B7E4 B0                            DCB 0xB0
.ARM.exidx:0000B7E5 B0                            DCB 0xB0
.ARM.exidx:0000B7E6 B0                            DCB 0xB0
.ARM.exidx:0000B7E7 80                            DCB 0x80
.ARM.exidx:0000B7E8 50                            DCB 0x50 ; P
.ARM.exidx:0000B7E9 B6                            DCB 0xB6
.ARM.exidx:0000B7EA FF                            DCB 0xFF
.ARM.exidx:0000B7EB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B7EC B0                            DCB 0xB0
.ARM.exidx:0000B7ED AF                            DCB 0xAF
.ARM.exidx:0000B7EE 0C                            DCB  0xC
.ARM.exidx:0000B7EF 80                            DCB 0x80
.ARM.exidx:0000B7F0 4C                            DCB 0x4C ; L
.ARM.exidx:0000B7F1 BA                            DCB 0xBA
.ARM.exidx:0000B7F2 FF                            DCB 0xFF
.ARM.exidx:0000B7F3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B7F4 AF                            DCB 0xAF
.ARM.exidx:0000B7F5 3F                            DCB 0x3F ; ?
.ARM.exidx:0000B7F6 00                            DCB    0
.ARM.exidx:0000B7F7 80                            DCB 0x80
.ARM.exidx:0000B7F8 28                            DCB 0x28 ; (
.ARM.exidx:0000B7F9 BB                            DCB 0xBB
.ARM.exidx:0000B7FA FF                            DCB 0xFF
.ARM.exidx:0000B7FB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B7FC B0                            DCB 0xB0
.ARM.exidx:0000B7FD B0                            DCB 0xB0
.ARM.exidx:0000B7FE B0                            DCB 0xB0
.ARM.exidx:0000B7FF 80                            DCB 0x80
.ARM.exidx:0000B800 44                            DCB 0x44 ; D
.ARM.exidx:0000B801 BB                            DCB 0xBB
.ARM.exidx:0000B802 FF                            DCB 0xFF
.ARM.exidx:0000B803 7F                            DCB 0x7F ; 
.ARM.exidx:0000B804 B0                            DCB 0xB0
.ARM.exidx:0000B805 AF                            DCB 0xAF
.ARM.exidx:0000B806 18                            DCB 0x18
.ARM.exidx:0000B807 80                            DCB 0x80
.ARM.exidx:0000B808 88                            DCB 0x88
.ARM.exidx:0000B809 C4                            DCB 0xC4
.ARM.exidx:0000B80A FF                            DCB 0xFF
.ARM.exidx:0000B80B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B80C B0                            DCB 0xB0
.ARM.exidx:0000B80D B0                            DCB 0xB0
.ARM.exidx:0000B80E B0                            DCB 0xB0
.ARM.exidx:0000B80F 80                            DCB 0x80
.ARM.exidx:0000B810 8C                            DCB 0x8C
.ARM.exidx:0000B811 C4                            DCB 0xC4
.ARM.exidx:0000B812 FF                            DCB 0xFF
.ARM.exidx:0000B813 7F                            DCB 0x7F ; 
.ARM.exidx:0000B814 B0                            DCB 0xB0
.ARM.exidx:0000B815 AE                            DCB 0xAE
.ARM.exidx:0000B816 01                            DCB    1
.ARM.exidx:0000B817 80                            DCB 0x80
.ARM.exidx:0000B818 14                            DCB 0x14
.ARM.exidx:0000B819 C5                            DCB 0xC5
.ARM.exidx:0000B81A FF                            DCB 0xFF
.ARM.exidx:0000B81B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B81C B0                            DCB 0xB0
.ARM.exidx:0000B81D A8                            DCB 0xA8
.ARM.exidx:0000B81E 01                            DCB    1
.ARM.exidx:0000B81F 80                            DCB 0x80
.ARM.exidx:0000B820 8C                            DCB 0x8C
.ARM.exidx:0000B821 C5                            DCB 0xC5
.ARM.exidx:0000B822 FF                            DCB 0xFF
.ARM.exidx:0000B823 7F                            DCB 0x7F ; 
.ARM.exidx:0000B824 B0                            DCB 0xB0
.ARM.exidx:0000B825 B0                            DCB 0xB0
.ARM.exidx:0000B826 B0                            DCB 0xB0
.ARM.exidx:0000B827 80                            DCB 0x80
.ARM.exidx:0000B828 CC                            DCB 0xCC
.ARM.exidx:0000B829 C5                            DCB 0xC5
.ARM.exidx:0000B82A FF                            DCB 0xFF
.ARM.exidx:0000B82B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B82C B0                            DCB 0xB0
.ARM.exidx:0000B82D AF                            DCB 0xAF
.ARM.exidx:0000B82E 0A                            DCB  0xA
.ARM.exidx:0000B82F 80                            DCB 0x80
.ARM.exidx:0000B830 48                            DCB 0x48 ; H
.ARM.exidx:0000B831 C7                            DCB 0xC7
.ARM.exidx:0000B832 FF                            DCB 0xFF
.ARM.exidx:0000B833 7F                            DCB 0x7F ; 
.ARM.exidx:0000B834 B0                            DCB 0xB0
.ARM.exidx:0000B835 B0                            DCB 0xB0
.ARM.exidx:0000B836 B0                            DCB 0xB0
.ARM.exidx:0000B837 80                            DCB 0x80
.ARM.exidx:0000B838 58                            DCB 0x58 ; X
.ARM.exidx:0000B839 C7                            DCB 0xC7
.ARM.exidx:0000B83A FF                            DCB 0xFF
.ARM.exidx:0000B83B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B83C B0                            DCB 0xB0
.ARM.exidx:0000B83D AF                            DCB 0xAF
.ARM.exidx:0000B83E 0E                            DCB  0xE
.ARM.exidx:0000B83F 80                            DCB 0x80
.ARM.exidx:0000B840 14                            DCB 0x14
.ARM.exidx:0000B841 D2                            DCB 0xD2
.ARM.exidx:0000B842 FF                            DCB 0xFF
.ARM.exidx:0000B843 7F                            DCB 0x7F ; 
.ARM.exidx:0000B844 B0                            DCB 0xB0
.ARM.exidx:0000B845 B0                            DCB 0xB0
.ARM.exidx:0000B846 B0                            DCB 0xB0
.ARM.exidx:0000B847 80                            DCB 0x80
.ARM.exidx:0000B848 10                            DCB 0x10
.ARM.exidx:0000B849 D2                            DCB 0xD2
.ARM.exidx:0000B84A FF                            DCB 0xFF
.ARM.exidx:0000B84B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B84C B0                            DCB 0xB0
.ARM.exidx:0000B84D AF                            DCB 0xAF
.ARM.exidx:0000B84E 00                            DCB    0
.ARM.exidx:0000B84F 80                            DCB 0x80
.ARM.exidx:0000B850 84                            DCB 0x84
.ARM.exidx:0000B851 D3                            DCB 0xD3
.ARM.exidx:0000B852 FF                            DCB 0xFF
.ARM.exidx:0000B853 7F                            DCB 0x7F ; 
.ARM.exidx:0000B854 B0                            DCB 0xB0
.ARM.exidx:0000B855 AB                            DCB 0xAB
.ARM.exidx:0000B856 00                            DCB    0
.ARM.exidx:0000B857 80                            DCB 0x80
.ARM.exidx:0000B858 38                            DCB 0x38 ; 8
.ARM.exidx:0000B859 D4                            DCB 0xD4
.ARM.exidx:0000B85A FF                            DCB 0xFF
.ARM.exidx:0000B85B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B85C B0                            DCB 0xB0
.ARM.exidx:0000B85D B0                            DCB 0xB0
.ARM.exidx:0000B85E B0                            DCB 0xB0
.ARM.exidx:0000B85F 80                            DCB 0x80
.ARM.exidx:0000B860 3E                            DCB 0x3E ; >
.ARM.exidx:0000B861 D4                            DCB 0xD4
.ARM.exidx:0000B862 FF                            DCB 0xFF
.ARM.exidx:0000B863 7F                            DCB 0x7F ; 
.ARM.exidx:0000B864 B0                            DCB 0xB0
.ARM.exidx:0000B865 AD                            DCB 0xAD
.ARM.exidx:0000B866 00                            DCB    0
.ARM.exidx:0000B867 80                            DCB 0x80
.ARM.exidx:0000B868 BC                            DCB 0xBC
.ARM.exidx:0000B869 D4                            DCB 0xD4
.ARM.exidx:0000B86A FF                            DCB 0xFF
.ARM.exidx:0000B86B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B86C B0                            DCB 0xB0
.ARM.exidx:0000B86D B0                            DCB 0xB0
.ARM.exidx:0000B86E AA                            DCB 0xAA
.ARM.exidx:0000B86F 80                            DCB 0x80
.ARM.exidx:0000B870 E4                            DCB 0xE4
.ARM.exidx:0000B871 D4                            DCB 0xD4
.ARM.exidx:0000B872 FF                            DCB 0xFF
.ARM.exidx:0000B873 7F                            DCB 0x7F ; 
.ARM.exidx:0000B874 B0                            DCB 0xB0
.ARM.exidx:0000B875 B0                            DCB 0xB0
.ARM.exidx:0000B876 AC                            DCB 0xAC
.ARM.exidx:0000B877 80                            DCB 0x80
.ARM.exidx:0000B878 6C                            DCB 0x6C ; l
.ARM.exidx:0000B879 D5                            DCB 0xD5
.ARM.exidx:0000B87A FF                            DCB 0xFF
.ARM.exidx:0000B87B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B87C B0                            DCB 0xB0
.ARM.exidx:0000B87D AB                            DCB 0xAB
.ARM.exidx:0000B87E 00                            DCB    0
.ARM.exidx:0000B87F 80                            DCB 0x80
.ARM.exidx:0000B880 10                            DCB 0x10
.ARM.exidx:0000B881 D6                            DCB 0xD6
.ARM.exidx:0000B882 FF                            DCB 0xFF
.ARM.exidx:0000B883 7F                            DCB 0x7F ; 
.ARM.exidx:0000B884 B0                            DCB 0xB0
.ARM.exidx:0000B885 AF                            DCB 0xAF
.ARM.exidx:0000B886 06                            DCB    6
.ARM.exidx:0000B887 80                            DCB 0x80
.ARM.exidx:0000B888 A8                            DCB 0xA8
.ARM.exidx:0000B889 D8                            DCB 0xD8
.ARM.exidx:0000B88A FF                            DCB 0xFF
.ARM.exidx:0000B88B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B88C B0                            DCB 0xB0
.ARM.exidx:0000B88D AF                            DCB 0xAF
.ARM.exidx:0000B88E 04                            DCB    4
.ARM.exidx:0000B88F 80                            DCB 0x80
.ARM.exidx:0000B890 D8                            DCB 0xD8
.ARM.exidx:0000B891 DC                            DCB 0xDC
.ARM.exidx:0000B892 FF                            DCB 0xFF
.ARM.exidx:0000B893 7F                            DCB 0x7F ; 
.ARM.exidx:0000B894 B0                            DCB 0xB0
.ARM.exidx:0000B895 B0                            DCB 0xB0
.ARM.exidx:0000B896 B0                            DCB 0xB0
.ARM.exidx:0000B897 80                            DCB 0x80
.ARM.exidx:0000B898 D8                            DCB 0xD8
.ARM.exidx:0000B899 DC                            DCB 0xDC
.ARM.exidx:0000B89A FF                            DCB 0xFF
.ARM.exidx:0000B89B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B89C B0                            DCB 0xB0
.ARM.exidx:0000B89D AB                            DCB 0xAB
.ARM.exidx:0000B89E 00                            DCB    0
.ARM.exidx:0000B89F 80                            DCB 0x80
.ARM.exidx:0000B8A0 1A                            DCB 0x1A
.ARM.exidx:0000B8A1 DD                            DCB 0xDD
.ARM.exidx:0000B8A2 FF                            DCB 0xFF
.ARM.exidx:0000B8A3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B8A4 B0                            DCB 0xB0
.ARM.exidx:0000B8A5 B0                            DCB 0xB0
.ARM.exidx:0000B8A6 A8                            DCB 0xA8
.ARM.exidx:0000B8A7 80                            DCB 0x80
.ARM.exidx:0000B8A8 78                            DCB 0x78 ; x
.ARM.exidx:0000B8A9 DD                            DCB 0xDD
.ARM.exidx:0000B8AA FF                            DCB 0xFF
.ARM.exidx:0000B8AB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B8AC B0                            DCB 0xB0
.ARM.exidx:0000B8AD 0B                            DCB  0xB
.ARM.exidx:0000B8AE 84                            DCB 0x84
.ARM.exidx:0000B8AF 80                            DCB 0x80
.ARM.exidx:0000B8B0 C4                            DCB 0xC4
.ARM.exidx:0000B8B1 DD                            DCB 0xDD
.ARM.exidx:0000B8B2 FF                            DCB 0xFF
.ARM.exidx:0000B8B3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B8B4 B0                            DCB 0xB0
.ARM.exidx:0000B8B5 AB                            DCB 0xAB
.ARM.exidx:0000B8B6 00                            DCB    0
.ARM.exidx:0000B8B7 80                            DCB 0x80
.ARM.exidx:0000B8B8 70                            DCB 0x70 ; p
.ARM.exidx:0000B8B9 DE                            DCB 0xDE
.ARM.exidx:0000B8BA FF                            DCB 0xFF
.ARM.exidx:0000B8BB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B8BC AA                            DCB 0xAA
.ARM.exidx:0000B8BD 3F                            DCB 0x3F ; ?
.ARM.exidx:0000B8BE 03                            DCB    3
.ARM.exidx:0000B8BF 80                            DCB 0x80
.ARM.exidx:0000B8C0 88                            DCB 0x88
.ARM.exidx:0000B8C1 DF                            DCB 0xDF
.ARM.exidx:0000B8C2 FF                            DCB 0xFF
.ARM.exidx:0000B8C3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B8C4 B0                            DCB 0xB0
.ARM.exidx:0000B8C5 AB                            DCB 0xAB
.ARM.exidx:0000B8C6 00                            DCB    0
.ARM.exidx:0000B8C7 80                            DCB 0x80
.ARM.exidx:0000B8C8 FC                            DCB 0xFC
.ARM.exidx:0000B8C9 DF                            DCB 0xDF
.ARM.exidx:0000B8CA FF                            DCB 0xFF
.ARM.exidx:0000B8CB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B8CC B0                            DCB 0xB0
.ARM.exidx:0000B8CD B0                            DCB 0xB0
.ARM.exidx:0000B8CE B0                            DCB 0xB0
.ARM.exidx:0000B8CF 80                            DCB 0x80
.ARM.exidx:0000B8D0 08                            DCB    8
.ARM.exidx:0000B8D1 E0                            DCB 0xE0
.ARM.exidx:0000B8D2 FF                            DCB 0xFF
.ARM.exidx:0000B8D3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B8D4 B0                            DCB 0xB0
.ARM.exidx:0000B8D5 B0                            DCB 0xB0
.ARM.exidx:0000B8D6 AC                            DCB 0xAC
.ARM.exidx:0000B8D7 80                            DCB 0x80
.ARM.exidx:0000B8D8 94                            DCB 0x94
.ARM.exidx:0000B8D9 E0                            DCB 0xE0
.ARM.exidx:0000B8DA FF                            DCB 0xFF
.ARM.exidx:0000B8DB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B8DC B0                            DCB 0xB0
.ARM.exidx:0000B8DD AF                            DCB 0xAF
.ARM.exidx:0000B8DE 02                            DCB    2
.ARM.exidx:0000B8DF 80                            DCB 0x80
.ARM.exidx:0000B8E0 70                            DCB 0x70 ; p
.ARM.exidx:0000B8E1 E2                            DCB 0xE2
.ARM.exidx:0000B8E2 FF                            DCB 0xFF
.ARM.exidx:0000B8E3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B8E4 B0                            DCB 0xB0
.ARM.exidx:0000B8E5 AC                            DCB 0xAC
.ARM.exidx:0000B8E6 01                            DCB    1
.ARM.exidx:0000B8E7 80                            DCB 0x80
.ARM.exidx:0000B8E8 EC                            DCB 0xEC
.ARM.exidx:0000B8E9 E2                            DCB 0xE2
.ARM.exidx:0000B8EA FF                            DCB 0xFF
.ARM.exidx:0000B8EB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B8EC B0                            DCB 0xB0
.ARM.exidx:0000B8ED B0                            DCB 0xB0
.ARM.exidx:0000B8EE A8                            DCB 0xA8
.ARM.exidx:0000B8EF 80                            DCB 0x80
.ARM.exidx:0000B8F0 84                            DCB 0x84
.ARM.exidx:0000B8F1 E3                            DCB 0xE3
.ARM.exidx:0000B8F2 FF                            DCB 0xFF
.ARM.exidx:0000B8F3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B8F4 B0                            DCB 0xB0
.ARM.exidx:0000B8F5 AB                            DCB 0xAB
.ARM.exidx:0000B8F6 00                            DCB    0
.ARM.exidx:0000B8F7 80                            DCB 0x80
.ARM.exidx:0000B8F8 08                            DCB    8
.ARM.exidx:0000B8F9 E4                            DCB 0xE4
.ARM.exidx:0000B8FA FF                            DCB 0xFF
.ARM.exidx:0000B8FB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B8FC B0                            DCB 0xB0
.ARM.exidx:0000B8FD AF                            DCB 0xAF
.ARM.exidx:0000B8FE 0A                            DCB  0xA
.ARM.exidx:0000B8FF 80                            DCB 0x80
.ARM.exidx:0000B900 24                            DCB 0x24 ; $
.ARM.exidx:0000B901 E6                            DCB 0xE6
.ARM.exidx:0000B902 FF                            DCB 0xFF
.ARM.exidx:0000B903 7F                            DCB 0x7F ; 
.ARM.exidx:0000B904 B0                            DCB 0xB0
.ARM.exidx:0000B905 B0                            DCB 0xB0
.ARM.exidx:0000B906 AB                            DCB 0xAB
.ARM.exidx:0000B907 80                            DCB 0x80
.ARM.exidx:0000B908 D8                            DCB 0xD8
.ARM.exidx:0000B909 E6                            DCB 0xE6
.ARM.exidx:0000B90A FF                            DCB 0xFF
.ARM.exidx:0000B90B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B90C B0                            DCB 0xB0
.ARM.exidx:0000B90D B0                            DCB 0xB0
.ARM.exidx:0000B90E B0                            DCB 0xB0
.ARM.exidx:0000B90F 80                            DCB 0x80
.ARM.exidx:0000B910 24                            DCB 0x24 ; $
.ARM.exidx:0000B911 E7                            DCB 0xE7
.ARM.exidx:0000B912 FF                            DCB 0xFF
.ARM.exidx:0000B913 7F                            DCB 0x7F ; 
.ARM.exidx:0000B914 B0                            DCB 0xB0
.ARM.exidx:0000B915 AF                            DCB 0xAF
.ARM.exidx:0000B916 02                            DCB    2
.ARM.exidx:0000B917 80                            DCB 0x80
.ARM.exidx:0000B918 CC                            DCB 0xCC
.ARM.exidx:0000B919 E9                            DCB 0xE9
.ARM.exidx:0000B91A FF                            DCB 0xFF
.ARM.exidx:0000B91B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B91C B0                            DCB 0xB0
.ARM.exidx:0000B91D B0                            DCB 0xB0
.ARM.exidx:0000B91E AA                            DCB 0xAA
.ARM.exidx:0000B91F 80                            DCB 0x80
.ARM.exidx:0000B920 F4                            DCB 0xF4
.ARM.exidx:0000B921 EA                            DCB 0xEA
.ARM.exidx:0000B922 FF                            DCB 0xFF
.ARM.exidx:0000B923 7F                            DCB 0x7F ; 
.ARM.exidx:0000B924 B0                            DCB 0xB0
.ARM.exidx:0000B925 AE                            DCB 0xAE
.ARM.exidx:0000B926 05                            DCB    5
.ARM.exidx:0000B927 80                            DCB 0x80
.ARM.exidx:0000B928 28                            DCB 0x28 ; (
.ARM.exidx:0000B929 EC                            DCB 0xEC
.ARM.exidx:0000B92A FF                            DCB 0xFF
.ARM.exidx:0000B92B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B92C B0                            DCB 0xB0
.ARM.exidx:0000B92D B0                            DCB 0xB0
.ARM.exidx:0000B92E B0                            DCB 0xB0
.ARM.exidx:0000B92F 80                            DCB 0x80
.ARM.exidx:0000B930 28                            DCB 0x28 ; (
.ARM.exidx:0000B931 EC                            DCB 0xEC
.ARM.exidx:0000B932 FF                            DCB 0xFF
.ARM.exidx:0000B933 7F                            DCB 0x7F ; 
.ARM.exidx:0000B934 0B                            DCB  0xB
.ARM.exidx:0000B935 84                            DCB 0x84
.ARM.exidx:0000B936 0B                            DCB  0xB
.ARM.exidx:0000B937 80                            DCB 0x80
.ARM.exidx:0000B938 7C                            DCB 0x7C ; |
.ARM.exidx:0000B939 EC                            DCB 0xEC
.ARM.exidx:0000B93A FF                            DCB 0xFF
.ARM.exidx:0000B93B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B93C B0                            DCB 0xB0
.ARM.exidx:0000B93D B0                            DCB 0xB0
.ARM.exidx:0000B93E B0                            DCB 0xB0
.ARM.exidx:0000B93F 80                            DCB 0x80
.ARM.exidx:0000B940 84                            DCB 0x84
.ARM.exidx:0000B941 EC                            DCB 0xEC
.ARM.exidx:0000B942 FF                            DCB 0xFF
.ARM.exidx:0000B943 7F                            DCB 0x7F ; 
.ARM.exidx:0000B944 28                            DCB 0x28 ; (
.ARM.exidx:0000B945 FD                            DCB 0xFD
.ARM.exidx:0000B946 FF                            DCB 0xFF
.ARM.exidx:0000B947 7F                            DCB 0x7F ; 
.ARM.exidx:0000B948 28                            DCB 0x28 ; (
.ARM.exidx:0000B949 ED                            DCB 0xED
.ARM.exidx:0000B94A FF                            DCB 0xFF
.ARM.exidx:0000B94B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B94C 2C                            DCB 0x2C ; ,
.ARM.exidx:0000B94D FD                            DCB 0xFD
.ARM.exidx:0000B94E FF                            DCB 0xFF
.ARM.exidx:0000B94F 7F                            DCB 0x7F ; 
.ARM.exidx:0000B950 0C                            DCB  0xC
.ARM.exidx:0000B951 EE                            DCB 0xEE
.ARM.exidx:0000B952 FF                            DCB 0xFF
.ARM.exidx:0000B953 7F                            DCB 0x7F ; 
.ARM.exidx:0000B954 B0                            DCB 0xB0
.ARM.exidx:0000B955 B0                            DCB 0xB0
.ARM.exidx:0000B956 B0                            DCB 0xB0
.ARM.exidx:0000B957 80                            DCB 0x80
.ARM.exidx:0000B958 08                            DCB    8
.ARM.exidx:0000B959 EE                            DCB 0xEE
.ARM.exidx:0000B95A FF                            DCB 0xFF
.ARM.exidx:0000B95B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B95C 28                            DCB 0x28 ; (
.ARM.exidx:0000B95D FD                            DCB 0xFD
.ARM.exidx:0000B95E FF                            DCB 0xFF
.ARM.exidx:0000B95F 7F                            DCB 0x7F ; 
.ARM.exidx:0000B960 34                            DCB 0x34 ; 4
.ARM.exidx:0000B961 EE                            DCB 0xEE
.ARM.exidx:0000B962 FF                            DCB 0xFF
.ARM.exidx:0000B963 7F                            DCB 0x7F ; 
.ARM.exidx:0000B964 08                            DCB    8
.ARM.exidx:0000B965 84                            DCB 0x84
.ARM.exidx:0000B966 01                            DCB    1
.ARM.exidx:0000B967 80                            DCB 0x80
.ARM.exidx:0000B968 5C                            DCB 0x5C ; \
.ARM.exidx:0000B969 EE                            DCB 0xEE
.ARM.exidx:0000B96A FF                            DCB 0xFF
.ARM.exidx:0000B96B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B96C 08                            DCB    8
.ARM.exidx:0000B96D 84                            DCB 0x84
.ARM.exidx:0000B96E 0B                            DCB  0xB
.ARM.exidx:0000B96F 80                            DCB 0x80
.ARM.exidx:0000B970 CC                            DCB 0xCC
.ARM.exidx:0000B971 EE                            DCB 0xEE
.ARM.exidx:0000B972 FF                            DCB 0xFF
.ARM.exidx:0000B973 7F                            DCB 0x7F ; 
.ARM.exidx:0000B974 B0                            DCB 0xB0
.ARM.exidx:0000B975 B0                            DCB 0xB0
.ARM.exidx:0000B976 B0                            DCB 0xB0
.ARM.exidx:0000B977 80                            DCB 0x80
.ARM.exidx:0000B978 D0                            DCB 0xD0
.ARM.exidx:0000B979 EE                            DCB 0xEE
.ARM.exidx:0000B97A FF                            DCB 0xFF
.ARM.exidx:0000B97B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B97C B0                            DCB 0xB0
.ARM.exidx:0000B97D 08                            DCB    8
.ARM.exidx:0000B97E 84                            DCB 0x84
.ARM.exidx:0000B97F 80                            DCB 0x80
.ARM.exidx:0000B980 DC                            DCB 0xDC
.ARM.exidx:0000B981 EE                            DCB 0xEE
.ARM.exidx:0000B982 FF                            DCB 0xFF
.ARM.exidx:0000B983 7F                            DCB 0x7F ; 
.ARM.exidx:0000B984 01                            DCB    1
.ARM.exidx:0000B985 00                            DCB    0
.ARM.exidx:0000B986 00                            DCB    0
.ARM.exidx:0000B987 00                            DCB    0
.ARM.exidx:0000B988 5C                            DCB 0x5C ; \
.ARM.exidx:0000B989 EF                            DCB 0xEF
.ARM.exidx:0000B98A FF                            DCB 0xFF
.ARM.exidx:0000B98B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B98C B0                            DCB 0xB0
.ARM.exidx:0000B98D B0                            DCB 0xB0
.ARM.exidx:0000B98E A8                            DCB 0xA8
.ARM.exidx:0000B98F 80                            DCB 0x80
.ARM.exidx:0000B990 98                            DCB 0x98
.ARM.exidx:0000B991 EF                            DCB 0xEF
.ARM.exidx:0000B992 FF                            DCB 0xFF
.ARM.exidx:0000B993 7F                            DCB 0x7F ; 
.ARM.exidx:0000B994 B0                            DCB 0xB0
.ARM.exidx:0000B995 B0                            DCB 0xB0
.ARM.exidx:0000B996 AA                            DCB 0xAA
.ARM.exidx:0000B997 80                            DCB 0x80
.ARM.exidx:0000B998 32                            DCB 0x32 ; 2
.ARM.exidx:0000B999 F0                            DCB 0xF0
.ARM.exidx:0000B99A FF                            DCB 0xFF
.ARM.exidx:0000B99B 7F                            DCB 0x7F ; 
.ARM.exidx:0000B99C B0                            DCB 0xB0
.ARM.exidx:0000B99D B0                            DCB 0xB0
.ARM.exidx:0000B99E AC                            DCB 0xAC
.ARM.exidx:0000B99F 80                            DCB 0x80
.ARM.exidx:0000B9A0 62                            DCB 0x62 ; b
.ARM.exidx:0000B9A1 F0                            DCB 0xF0
.ARM.exidx:0000B9A2 FF                            DCB 0xFF
.ARM.exidx:0000B9A3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B9A4 B0                            DCB 0xB0
.ARM.exidx:0000B9A5 B0                            DCB 0xB0
.ARM.exidx:0000B9A6 B0                            DCB 0xB0
.ARM.exidx:0000B9A7 80                            DCB 0x80
.ARM.exidx:0000B9A8 60                            DCB 0x60 ; `
.ARM.exidx:0000B9A9 F0                            DCB 0xF0
.ARM.exidx:0000B9AA FF                            DCB 0xFF
.ARM.exidx:0000B9AB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B9AC B0                            DCB 0xB0
.ARM.exidx:0000B9AD B0                            DCB 0xB0
.ARM.exidx:0000B9AE A8                            DCB 0xA8
.ARM.exidx:0000B9AF 80                            DCB 0x80
.ARM.exidx:0000B9B0 76                            DCB 0x76 ; v
.ARM.exidx:0000B9B1 F0                            DCB 0xF0
.ARM.exidx:0000B9B2 FF                            DCB 0xFF
.ARM.exidx:0000B9B3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B9B4 B0                            DCB 0xB0
.ARM.exidx:0000B9B5 08                            DCB    8
.ARM.exidx:0000B9B6 84                            DCB 0x84
.ARM.exidx:0000B9B7 80                            DCB 0x80
.ARM.exidx:0000B9B8 80                            DCB 0x80
.ARM.exidx:0000B9B9 F0                            DCB 0xF0
.ARM.exidx:0000B9BA FF                            DCB 0xFF
.ARM.exidx:0000B9BB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B9BC B0                            DCB 0xB0
.ARM.exidx:0000B9BD B0                            DCB 0xB0
.ARM.exidx:0000B9BE B0                            DCB 0xB0
.ARM.exidx:0000B9BF 80                            DCB 0x80
.ARM.exidx:0000B9C0 A0                            DCB 0xA0
.ARM.exidx:0000B9C1 F0                            DCB 0xF0
.ARM.exidx:0000B9C2 FF                            DCB 0xFF
.ARM.exidx:0000B9C3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B9C4 B0                            DCB 0xB0
.ARM.exidx:0000B9C5 0B                            DCB  0xB
.ARM.exidx:0000B9C6 84                            DCB 0x84
.ARM.exidx:0000B9C7 80                            DCB 0x80
.ARM.exidx:0000B9C8 24                            DCB 0x24 ; $
.ARM.exidx:0000B9C9 F1                            DCB 0xF1
.ARM.exidx:0000B9CA FF                            DCB 0xFF
.ARM.exidx:0000B9CB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B9CC B0                            DCB 0xB0
.ARM.exidx:0000B9CD B0                            DCB 0xB0
.ARM.exidx:0000B9CE AA                            DCB 0xAA
.ARM.exidx:0000B9CF 80                            DCB 0x80
.ARM.exidx:0000B9D0 A8                            DCB 0xA8
.ARM.exidx:0000B9D1 F1                            DCB 0xF1
.ARM.exidx:0000B9D2 FF                            DCB 0xFF
.ARM.exidx:0000B9D3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B9D4 B0                            DCB 0xB0
.ARM.exidx:0000B9D5 B0                            DCB 0xB0
.ARM.exidx:0000B9D6 B0                            DCB 0xB0
.ARM.exidx:0000B9D7 80                            DCB 0x80
.ARM.exidx:0000B9D8 C4                            DCB 0xC4
.ARM.exidx:0000B9D9 F1                            DCB 0xF1
.ARM.exidx:0000B9DA FF                            DCB 0xFF
.ARM.exidx:0000B9DB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B9DC B0                            DCB 0xB0
.ARM.exidx:0000B9DD 0B                            DCB  0xB
.ARM.exidx:0000B9DE 84                            DCB 0x84
.ARM.exidx:0000B9DF 80                            DCB 0x80
.ARM.exidx:0000B9E0 60                            DCB 0x60 ; `
.ARM.exidx:0000B9E1 F2                            DCB 0xF2
.ARM.exidx:0000B9E2 FF                            DCB 0xFF
.ARM.exidx:0000B9E3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B9E4 B0                            DCB 0xB0
.ARM.exidx:0000B9E5 AB                            DCB 0xAB
.ARM.exidx:0000B9E6 00                            DCB    0
.ARM.exidx:0000B9E7 80                            DCB 0x80
.ARM.exidx:0000B9E8 24                            DCB 0x24 ; $
.ARM.exidx:0000B9E9 F3                            DCB 0xF3
.ARM.exidx:0000B9EA FF                            DCB 0xFF
.ARM.exidx:0000B9EB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B9EC B0                            DCB 0xB0
.ARM.exidx:0000B9ED 0B                            DCB  0xB
.ARM.exidx:0000B9EE 84                            DCB 0x84
.ARM.exidx:0000B9EF 80                            DCB 0x80
.ARM.exidx:0000B9F0 6C                            DCB 0x6C ; l
.ARM.exidx:0000B9F1 F3                            DCB 0xF3
.ARM.exidx:0000B9F2 FF                            DCB 0xFF
.ARM.exidx:0000B9F3 7F                            DCB 0x7F ; 
.ARM.exidx:0000B9F4 B0                            DCB 0xB0
.ARM.exidx:0000B9F5 B0                            DCB 0xB0
.ARM.exidx:0000B9F6 A8                            DCB 0xA8
.ARM.exidx:0000B9F7 80                            DCB 0x80
.ARM.exidx:0000B9F8 92                            DCB 0x92
.ARM.exidx:0000B9F9 F3                            DCB 0xF3
.ARM.exidx:0000B9FA FF                            DCB 0xFF
.ARM.exidx:0000B9FB 7F                            DCB 0x7F ; 
.ARM.exidx:0000B9FC B0                            DCB 0xB0
.ARM.exidx:0000B9FD B0                            DCB 0xB0
.ARM.exidx:0000B9FE B0                            DCB 0xB0
.ARM.exidx:0000B9FF 80                            DCB 0x80
.ARM.exidx:0000BA00 90                            DCB 0x90
.ARM.exidx:0000BA01 F3                            DCB 0xF3
.ARM.exidx:0000BA02 FF                            DCB 0xFF
.ARM.exidx:0000BA03 7F                            DCB 0x7F ; 
.ARM.exidx:0000BA04 B0                            DCB 0xB0
.ARM.exidx:0000BA05 AB                            DCB 0xAB
.ARM.exidx:0000BA06 06                            DCB    6
.ARM.exidx:0000BA07 80                            DCB 0x80
.ARM.exidx:0000BA08 F8                            DCB 0xF8
.ARM.exidx:0000BA09 F3                            DCB 0xF3
.ARM.exidx:0000BA0A FF                            DCB 0xFF
.ARM.exidx:0000BA0B 7F                            DCB 0x7F ; 
.ARM.exidx:0000BA0C B0                            DCB 0xB0
.ARM.exidx:0000BA0D AA                            DCB 0xAA
.ARM.exidx:0000BA0E 03                            DCB    3
.ARM.exidx:0000BA0F 80                            DCB 0x80
.ARM.exidx:0000BA10 60                            DCB 0x60 ; `
.ARM.exidx:0000BA11 F4                            DCB 0xF4
.ARM.exidx:0000BA12 FF                            DCB 0xFF
.ARM.exidx:0000BA13 7F                            DCB 0x7F ; 
.ARM.exidx:0000BA14 B0                            DCB 0xB0
.ARM.exidx:0000BA15 B0                            DCB 0xB0
.ARM.exidx:0000BA16 B0                            DCB 0xB0
.ARM.exidx:0000BA17 80                            DCB 0x80
.ARM.exidx:0000BA18 68                            DCB 0x68 ; h
.ARM.exidx:0000BA19 F4                            DCB 0xF4
.ARM.exidx:0000BA1A FF                            DCB 0xFF
.ARM.exidx:0000BA1B 7F                            DCB 0x7F ; 
.ARM.exidx:0000BA1C 08                            DCB    8
.ARM.exidx:0000BA1D 84                            DCB 0x84
.ARM.exidx:0000BA1E 01                            DCB    1
.ARM.exidx:0000BA1F 80                            DCB 0x80
.ARM.exidx:0000BA20 8C                            DCB 0x8C
.ARM.exidx:0000BA21 F4                            DCB 0xF4
.ARM.exidx:0000BA22 FF                            DCB 0xFF
.ARM.exidx:0000BA23 7F                            DCB 0x7F ; 
.ARM.exidx:0000BA24 0B                            DCB  0xB
.ARM.exidx:0000BA25 84                            DCB 0x84
.ARM.exidx:0000BA26 03                            DCB    3
.ARM.exidx:0000BA27 80                            DCB 0x80
.ARM.exidx:0000BA28 D8                            DCB 0xD8
.ARM.exidx:0000BA29 F4                            DCB 0xF4
.ARM.exidx:0000BA2A FF                            DCB 0xFF
.ARM.exidx:0000BA2B 7F                            DCB 0x7F ; 
.ARM.exidx:0000BA2C B0                            DCB 0xB0
.ARM.exidx:0000BA2D B0                            DCB 0xB0
.ARM.exidx:0000BA2E A8                            DCB 0xA8
.ARM.exidx:0000BA2F 80                            DCB 0x80
.ARM.exidx:0000BA30 28                            DCB 0x28 ; (
.ARM.exidx:0000BA31 F5                            DCB 0xF5
.ARM.exidx:0000BA32 FF                            DCB 0xFF
.ARM.exidx:0000BA33 7F                            DCB 0x7F ; 
.ARM.exidx:0000BA34 B0                            DCB 0xB0
.ARM.exidx:0000BA35 AD                            DCB 0xAD
.ARM.exidx:0000BA36 0A                            DCB  0xA
.ARM.exidx:0000BA37 80                            DCB 0x80
.ARM.exidx:0000BA38 C4                            DCB 0xC4
.ARM.exidx:0000BA39 F6                            DCB 0xF6
.ARM.exidx:0000BA3A FF                            DCB 0xFF
.ARM.exidx:0000BA3B 7F                            DCB 0x7F ; 
.ARM.exidx:0000BA3C B0                            DCB 0xB0
.ARM.exidx:0000BA3D B0                            DCB 0xB0
.ARM.exidx:0000BA3E AC                            DCB 0xAC
.ARM.exidx:0000BA3F 80                            DCB 0x80
.ARM.exidx:0000BA40 04                            DCB    4
.ARM.exidx:0000BA41 F7                            DCB 0xF7
.ARM.exidx:0000BA42 FF                            DCB 0xFF
.ARM.exidx:0000BA43 7F                            DCB 0x7F ; 
.ARM.exidx:0000BA44 B0                            DCB 0xB0
.ARM.exidx:0000BA45 B0                            DCB 0xB0
.ARM.exidx:0000BA46 B0                            DCB 0xB0
.ARM.exidx:0000BA47 80                            DCB 0x80
.ARM.exidx:0000BA48 44                            DCB 0x44 ; D
.ARM.exidx:0000BA49 FB                            DCB 0xFB
.ARM.exidx:0000BA4A FF                            DCB 0xFF
.ARM.exidx:0000BA4B 7F                            DCB 0x7F ; 
.ARM.exidx:0000BA4C 01                            DCB    1
.ARM.exidx:0000BA4D 00                            DCB    0
.ARM.exidx:0000BA4E 00                            DCB    0
.ARM.exidx:0000BA4F 00                            DCB    0
.ARM.exidx:0000BA4F                               ; .ARM.exidx ends
.ARM.exidx:0000BA4F
.rodata:0000BA50                               ; ===========================================================================
.rodata:0000BA50
.rodata:0000BA50                               ; Segment type: Pure data
.rodata:0000BA50                               AREA .rodata, DATA, READONLY, ALIGN=4
.rodata:0000BA50 41 55 44 49 4F 5F 43 48 41 4E+aAudioChannelOu DCB "AUDIO_CHANNEL_OUT_STEREO",0
.rodata:0000BA50 4E 45 4C 5F 4F 55 54 5F 53 54+                              ; DATA XREF: .data.rel.ro:out_channels_name_to_enum_table↓o
.rodata:0000BA69 41 55 44 49 4F 5F 43 48 41 4E+aAudioChannelOu_0 DCB "AUDIO_CHANNEL_OUT_5POINT1",0
.rodata:0000BA69 4E 45 4C 5F 4F 55 54 5F 35 50+                              ; DATA XREF: .data.rel.ro:00010974↓o
.rodata:0000BA83 41 55 44 49 4F 5F 43 48 41 4E+aAudioChannelOu_1 DCB "AUDIO_CHANNEL_OUT_7POINT1",0
.rodata:0000BA83 4E 45 4C 5F 4F 55 54 5F 37 50+                              ; DATA XREF: .data.rel.ro:0001097C↓o
.rodata:0000BA9D 30 00                         a0 DCB "0",0                  ; DATA XREF: pcm_data_dump+10↑o
.rodata:0000BA9D                                                             ; pcm_data_dump+1E↑o
.rodata:0000BA9D                                                             ; .text:off_36DC↑o
.rodata:0000BA9D                                                             ; sub_4424+13A↑o
.rodata:0000BA9D                                                             ; sub_4424+142↑o
.rodata:0000BA9D                                                             ; .text:off_4690↑o
.rodata:0000BA9D                                                             ; sub_52F4+48↑o
.rodata:0000BA9D                                                             ; sub_52F4+52↑o
.rodata:0000BA9D                                                             ; .text:off_54B4↑o
.rodata:0000BA9D                                                             ; sub_5730+66↑o
.rodata:0000BA9D                                                             ; sub_5730+6C↑o
.rodata:0000BA9D                                                             ; .text:off_5F3C↑o
.rodata:0000BA9F 61 75 64 69 6F 5F 68 77 5F 70+aAudioHwPrimary DCB "audio_hw_primary",0
.rodata:0000BA9F 72 69 6D 61 72 79 00                                        ; DATA XREF: pcm_data_dump:loc_3684↑o
.rodata:0000BA9F                                                             ; pcm_data_dump+AA↑o
.rodata:0000BA9F                                                             ; pcm_data_dump+BA↑o
.rodata:0000BA9F                                                             ; pcm_data_dump+C2↑o
.rodata:0000BA9F                                                             ; .text:off_36E0↑o
.rodata:0000BA9F                                                             ; .text:off_36F0↑o
.rodata:0000BA9F                                                             ; get_output_device_id:loc_375A↑o
.rodata:0000BA9F                                                             ; get_output_device_id+6E↑o
.rodata:0000BA9F                                                             ; .text:off_37F0↑o
.rodata:0000BA9F                                                             ; get_input_source_id+34↑o
.rodata:0000BA9F                                                             ; get_input_source_id+3A↑o
.rodata:0000BA9F                                                             ; get_input_source_id+64↑o
.rodata:0000BA9F                                                             ; get_input_source_id+66↑o
.rodata:0000BA9F                                                             ; get_input_source_id+9E↑o
.rodata:0000BA9F                                                             ; get_input_source_id+A0↑o ...
.rodata:0000BAB0 54 68 65 20 66 69 6C 65 20 70+aTheFilePathIsn DCB "The file path isn't valid",0
.rodata:0000BAB0 61 74 68 20 69 73 6E 27 74 20+                              ; DATA XREF: pcm_data_dump+CC↑o
.rodata:0000BAB0 76 61 6C 69 64 00                                           ; pcm_data_dump+D2↑o
.rodata:0000BAB0                                                             ; .text:off_36E8↑o
.rodata:0000BACA 61 62 2B 00                   aAb DCB "ab+",0               ; DATA XREF: pcm_data_dump:loc_365C↑o
.rodata:0000BACA                                                             ; pcm_data_dump+80↑o
.rodata:0000BACA                                                             ; .text:off_36EC↑o
.rodata:0000BACE 46 61 69 6C 65 64 20 74 6F 20+aFailedToOpenTh DCB "Failed to open the file",0
.rodata:0000BACE 6F 70 65 6E 20 74 68 65 20 66+                              ; DATA XREF: pcm_data_dump+A8↑o
.rodata:0000BACE 69 6C 65 00                                                 ; pcm_data_dump+AC↑o
.rodata:0000BACE                                                             ; .text:off_36F4↑o
.rodata:0000BAE6 25 73 28 29 3A 20 63 68 61 6E+aSChangeTwoOutp DCB "%s(): change two output devices to one: %x",0
.rodata:0000BAE6 67 65 20 74 77 6F 20 6F 75 74+                              ; DATA XREF: get_output_device_id+6C↑o
.rodata:0000BAE6 70 75 74 20 64 65 76 69 63 65+                              ; get_output_device_id+74↑o
.rodata:0000BAE6 73 20 74 6F 20 6F 6E 65 3A 20+                              ; .text:off_37F4↑o
.rodata:0000BB11 67 65 74 5F 6F 75 74 70 75 74+aGetOutputDevic_0 DCB "get_output_device_id",0
.rodata:0000BB11 5F 64 65 76 69 63 65 5F 69 64+                              ; DATA XREF: get_output_device_id+66↑o
.rodata:0000BB11 00                                                          ; get_output_device_id+70↑o
.rodata:0000BB11                                                             ; .text:off_37F8↑o
.rodata:0000BB26 25 73 28 29 3A 20 61 64 65 76+aSAdevOutDevice DCB "%s(): adev->out_device=%x",0
.rodata:0000BB26 2D 3E 6F 75 74 5F 64 65 76 69+                              ; DATA XREF: get_output_device_id+7E↑o
.rodata:0000BB26 63 65 3D 25 78 00                                           ; get_output_device_id+86↑o
.rodata:0000BB26                                                             ; .text:off_37FC↑o
.rodata:0000BB40 25 73 28 29 3A 20 6D 69 63 5F+aSMicNrOffD DCB "%s(): mic_nr_off=%d",0
.rodata:0000BB40 6E 72 5F 6F 66 66 3D 25 64 00                               ; DATA XREF: get_input_source_id+36↑o
.rodata:0000BB40                                                             ; get_input_source_id+3E↑o
.rodata:0000BB40                                                             ; .text:off_3900↑o
.rodata:0000BB54 67 65 74 5F 69 6E 70 75 74 5F+aGetInputSource_0 DCB "get_input_source_id",0
.rodata:0000BB54 73 6F 75 72 63 65 5F 69 64 00                               ; DATA XREF: get_input_source_id+38↑o
.rodata:0000BB54                                                             ; get_input_source_id+40↑o
.rodata:0000BB54                                                             ; get_input_source_id+58↑o
.rodata:0000BB54                                                             ; get_input_source_id+60↑o
.rodata:0000BB54                                                             ; get_input_source_id+90↑o
.rodata:0000BB54                                                             ; get_input_source_id+96↑o
.rodata:0000BB54                                                             ; .text:off_38E8↑o
.rodata:0000BB54                                                             ; .text:off_38F8↑o
.rodata:0000BB54                                                             ; .text:off_3904↑o
.rodata:0000BB68 25 73 28 29 3A 20 76 6F 69 63+aSVoiceCallWbDB DCB "%s(): voice_call_wb=%d, bluetooth_nrec=%d",0
.rodata:0000BB68 65 5F 63 61 6C 6C 5F 77 62 3D+                              ; DATA XREF: get_input_source_id+56↑o
.rodata:0000BB68 25 64 2C 20 62 6C 75 65 74 6F+                              ; get_input_source_id+5E↑o
.rodata:0000BB68 6F 74 68 5F 6E 72 65 63 3D 25+                              ; .text:off_38F4↑o
.rodata:0000BB92 25 73 28 29 3A 20 76 6F 69 63+aSVoiceRecognit DCB "%s(): voice recognition: rate=%d, asr_ready=%d",0
.rodata:0000BB92 65 20 72 65 63 6F 67 6E 69 74+                              ; DATA XREF: get_input_source_id+8E↑o
.rodata:0000BB92 69 6F 6E 3A 20 72 61 74 65 3D+                              ; get_input_source_id+94↑o
.rodata:0000BB92 25 64 2C 20 61 73 72 5F 72 65+                              ; .text:off_38E4↑o
.rodata:0000BBC1 6D 65 64 69 61 2D 73 70 65 61+aMediaSpeaker_0 DCB "media-speaker",0
.rodata:0000BBC1 6B 65 72 00                                                 ; DATA XREF: .data.rel.ro:media_speaker↓o
.rodata:0000BBC1                                                             ; .data.rel.ro:media_speaker_mic_nr_off↓o
.rodata:0000BBC1                                                             ; .data.rel.ro:camcorder_speaker↓o
.rodata:0000BBCF 6D 65 64 69 61 2D 6D 61 69 6E+aMediaMainMic DCB "media-main-mic",0
.rodata:0000BBCF 2D 6D 69 63 00                                              ; DATA XREF: .data.rel.ro:00010988↓o
.rodata:0000BBCF                                                             ; .data.rel.ro:00010990↓o
.rodata:0000BBCF                                                             ; .data.rel.ro:000109A0↓o
.rodata:0000BBCF                                                             ; .data.rel.ro:000109C8↓o
.rodata:0000BBCF                                                             ; .data.rel.ro:000109D0↓o
.rodata:0000BBCF                                                             ; .data.rel.ro:000109E8↓o
.rodata:0000BBDE 6D 65 64 69 61 2D 68 65 61 64+aMediaHeadphone_2 DCB "media-headphones",0
.rodata:0000BBDE 70 68 6F 6E 65 73 00                                        ; DATA XREF: .data.rel.ro:media_headphones↓o
.rodata:0000BBDE                                                             ; .data.rel.ro:media_headset↓o
.rodata:0000BBDE                                                             ; .data.rel.ro:media_headphones_mic_nr_off↓o
.rodata:0000BBDE                                                             ; .data.rel.ro:media_headset_mic_nr_off↓o
.rodata:0000BBDE                                                             ; .data.rel.ro:camcorder_headphones↓o
.rodata:0000BBEF 6D 65 64 69 61 2D 68 65 61 64+aMediaHeadsetMi_0 DCB "media-headset-mic",0
.rodata:0000BBEF 73 65 74 2D 6D 69 63 00                                     ; DATA XREF: .data.rel.ro:00010998↓o
.rodata:0000BBEF                                                             ; .data.rel.ro:000109D8↓o
.rodata:0000BC01 6D 65 64 69 61 2D 65 61 72 70+aMediaEarphones DCB "media-earphones",0
.rodata:0000BC01 68 6F 6E 65 73 00                                           ; DATA XREF: .data.rel.ro:media_earpiece↓o
.rodata:0000BC01                                                             ; .data.rel.ro:media_earpiece_mic_nr_off↓o
.rodata:0000BC01                                                             ; .data.rel.ro:camcorder_earpiece↓o
.rodata:0000BC11 6D 65 64 69 61 2D 6D 61 69 6E+aMediaMainMicNr DCB "media-main-mic-nr-off",0
.rodata:0000BC11 2D 6D 69 63 2D 6E 72 2D 6F 66+                              ; DATA XREF: .data.rel.ro:000109A8↓o
.rodata:0000BC11 66 00                                                       ; .data.rel.ro:000109B0↓o
.rodata:0000BC11                                                             ; .data.rel.ro:000109C0↓o
.rodata:0000BC27 6D 65 64 69 61 2D 68 65 61 64+aMediaHeadsetMi_1 DCB "media-headset-mic-nr-off",0
.rodata:0000BC27 73 65 74 2D 6D 69 63 2D 6E 72+                              ; DATA XREF: .data.rel.ro:000109B8↓o
.rodata:0000BC40 6D 65 64 69 61 2D 73 70 65 61+aMediaSpeakerXu_0 DCB "media-speaker-xunfei",0
.rodata:0000BC40 6B 65 72 2D 78 75 6E 66 65 69+                              ; DATA XREF: .data.rel.ro:media_speaker_xunfei↓o
.rodata:0000BC55 6D 65 64 69 61 2D 68 65 61 64+aMediaHeadphone_3 DCB "media-headphones-xunfei",0
.rodata:0000BC55 70 68 6F 6E 65 73 2D 78 75 6E+                              ; DATA XREF: .data.rel.ro:media_headphones_xunfei↓o
.rodata:0000BC55 66 65 69 00                                                 ; .data.rel.ro:media_headset_xunfei↓o
.rodata:0000BC6D 6D 65 64 69 61 2D 62 74 2D 73+aMediaBtScoHead DCB "media-bt-sco-headset-xunfei",0
.rodata:0000BC6D 63 6F 2D 68 65 61 64 73 65 74+                              ; DATA XREF: .data.rel.ro:bluetooth_sco_xunfei↓o
.rodata:0000BC89 6D 65 64 69 61 2D 62 74 2D 73+aMediaBtScoMic DCB "media-bt-sco-mic",0
.rodata:0000BC89 63 6F 2D 6D 69 63 00                                        ; DATA XREF: .data.rel.ro:000109E0↓o
.rodata:0000BC89                                                             ; .data.rel.ro:00010AC0↓o
.rodata:0000BC9A 6D 65 64 69 61 2D 65 61 72 70+aMediaEarphones_0 DCB "media-earphones-xunfei",0
.rodata:0000BC9A 68 6F 6E 65 73 2D 78 75 6E 66+                              ; DATA XREF: .data.rel.ro:media_earpiece_xunfei↓o
.rodata:0000BCB1 76 6F 69 63 65 2D 63 61 6C 6C+aVoiceCallSpeak_0 DCB "voice-call-speaker",0
.rodata:0000BCB1 2D 73 70 65 61 6B 65 72 00                                  ; DATA XREF: .data.rel.ro:voice_call_speaker↓o
.rodata:0000BCC4 76 6F 69 63 65 2D 63 61 6C 6C+aVoiceCallMainM DCB "voice-call-main-mic",0
.rodata:0000BCC4 2D 6D 61 69 6E 2D 6D 69 63 00                               ; DATA XREF: .data.rel.ro:000109F0↓o
.rodata:0000BCC4                                                             ; .data.rel.ro:000109F8↓o
.rodata:0000BCC4                                                             ; .data.rel.ro:00010A08↓o
.rodata:0000BCD8 76 6F 69 63 65 2D 63 61 6C 6C+aVoiceCallHeadp_0 DCB "voice-call-headphones",0
.rodata:0000BCD8 2D 68 65 61 64 70 68 6F 6E 65+                              ; DATA XREF: .data.rel.ro:voice_call_headphones↓o
.rodata:0000BCEE 76 6F 69 63 65 2D 63 61 6C 6C+aVoiceCallHeads_0 DCB "voice-call-headset",0
.rodata:0000BCEE 2D 68 65 61 64 73 65 74 00                                  ; DATA XREF: .data.rel.ro:voice_call_headset↓o
.rodata:0000BD01 76 6F 69 63 65 2D 63 61 6C 6C+aVoiceCallHeads_1 DCB "voice-call-headset-mic",0
.rodata:0000BD01 2D 68 65 61 64 73 65 74 2D 6D+                              ; DATA XREF: .data.rel.ro:00010A00↓o
.rodata:0000BD18 76 6F 69 63 65 2D 63 61 6C 6C+aVoiceCallEarph DCB "voice-call-earphones",0
.rodata:0000BD18 2D 65 61 72 70 68 6F 6E 65 73+                              ; DATA XREF: .data.rel.ro:voice_call_earpiece↓o
.rodata:0000BD2D 76 6F 69 63 65 2D 62 74 2D 73+aVoiceBtScoHead DCB "voice-bt-sco-headset",0
.rodata:0000BD2D 63 6F 2D 68 65 61 64 73 65 74+                              ; DATA XREF: .data.rel.ro:voice_call_bluetooth_sco↓o
.rodata:0000BD42 76 6F 69 63 65 2D 62 74 2D 73+aVoiceBtScoMic DCB "voice-bt-sco-mic",0
.rodata:0000BD42 63 6F 2D 6D 69 63 00                                        ; DATA XREF: .data.rel.ro:00010A10↓o
.rodata:0000BD42                                                             ; .data.rel.ro:00010A18↓o
.rodata:0000BD53 76 6F 69 63 65 2D 62 74 2D 73+aVoiceBtScoNrec DCB "voice-bt-sco-nrec-off-headset",0
.rodata:0000BD53 63 6F 2D 6E 72 65 63 2D 6F 66+                              ; DATA XREF: .data.rel.ro:voice_call_bluetooth_sco_nrec_off↓o
.rodata:0000BD71 76 6F 69 63 65 2D 63 61 6C 6C+aVoiceCallWbSpe_0 DCB "voice-call-wb-speaker",0
.rodata:0000BD71 2D 77 62 2D 73 70 65 61 6B 65+                              ; DATA XREF: .data.rel.ro:voice_call_wb_speaker↓o
.rodata:0000BD87 76 6F 69 63 65 2D 63 61 6C 6C+aVoiceCallWbMai DCB "voice-call-wb-main-mic",0
.rodata:0000BD87 2D 77 62 2D 6D 61 69 6E 2D 6D+                              ; DATA XREF: .data.rel.ro:00010A20↓o
.rodata:0000BD87 69 63 00                                                    ; .data.rel.ro:00010A28↓o
.rodata:0000BD87                                                             ; .data.rel.ro:00010A38↓o
.rodata:0000BD9E 76 6F 69 63 65 2D 63 61 6C 6C+aVoiceCallWbHea_1 DCB "voice-call-wb-headphones",0
.rodata:0000BD9E 2D 77 62 2D 68 65 61 64 70 68+                              ; DATA XREF: .data.rel.ro:voice_call_wb_headphones↓o
.rodata:0000BDB7 76 6F 69 63 65 2D 63 61 6C 6C+aVoiceCallWbHea_2 DCB "voice-call-wb-headset",0
.rodata:0000BDB7 2D 77 62 2D 68 65 61 64 73 65+                              ; DATA XREF: .data.rel.ro:voice_call_wb_headset↓o
.rodata:0000BDCD 76 6F 69 63 65 2D 63 61 6C 6C+aVoiceCallWbHea_3 DCB "voice-call-wb-headset-mic",0
.rodata:0000BDCD 2D 77 62 2D 68 65 61 64 73 65+                              ; DATA XREF: .data.rel.ro:00010A30↓o
.rodata:0000BDE7 76 6F 69 63 65 2D 63 61 6C 6C+aVoiceCallWbEar_0 DCB "voice-call-wb-earphones",0
.rodata:0000BDE7 2D 77 62 2D 65 61 72 70 68 6F+                              ; DATA XREF: .data.rel.ro:voice_call_wb_earpiece↓o
.rodata:0000BDFF 76 6F 69 63 65 2D 77 62 2D 62+aVoiceWbBtScoHe DCB "voice-wb-bt-sco-headset",0
.rodata:0000BDFF 74 2D 73 63 6F 2D 68 65 61 64+                              ; DATA XREF: .data.rel.ro:voice_call_wb_bluetooth_sco↓o
.rodata:0000BE17 76 6F 69 63 65 2D 77 62 2D 62+aVoiceWbBtScoMi DCB "voice-wb-bt-sco-mic",0
.rodata:0000BE17 74 2D 73 63 6F 2D 6D 69 63 00                               ; DATA XREF: .data.rel.ro:00010A40↓o
.rodata:0000BE17                                                             ; .data.rel.ro:00010A48↓o
.rodata:0000BE2B 76 6F 69 63 65 2D 77 62 2D 62+aVoiceWbBtScoNr DCB "voice-wb-bt-sco-nrec-off-headset",0
.rodata:0000BE2B 74 2D 73 63 6F 2D 6E 72 65 63+                              ; DATA XREF: .data.rel.ro:voice_call_wb_bluetooth_sco_nrec_off↓o
.rodata:0000BE4C 6D 65 64 69 61 2D 73 65 63 6F+aMediaSecondMic DCB "media-second-mic",0
.rodata:0000BE4C 6E 64 2D 6D 69 63 00                                        ; DATA XREF: .data.rel.ro:00010A50↓o
.rodata:0000BE4C                                                             ; .data.rel.ro:00010A58↓o
.rodata:0000BE4C                                                             ; .data.rel.ro:00010A60↓o
.rodata:0000BE5D 76 6F 69 63 65 2D 72 65 63 2D+aVoiceRecSpeake_0 DCB "voice-rec-speaker",0
.rodata:0000BE5D 73 70 65 61 6B 65 72 00                                     ; DATA XREF: .data.rel.ro:voice_rec_speaker↓o
.rodata:0000BE6F 76 6F 69 63 65 2D 72 65 63 2D+aVoiceRecMainMi DCB "voice-rec-main-mic",0
.rodata:0000BE6F 6D 61 69 6E 2D 6D 69 63 00                                  ; DATA XREF: .data.rel.ro:00010A68↓o
.rodata:0000BE6F                                                             ; .data.rel.ro:00010A70↓o
.rodata:0000BE6F                                                             ; .data.rel.ro:00010A80↓o
.rodata:0000BE82 76 6F 69 63 65 2D 72 65 63 2D+aVoiceRecHeadph_0 DCB "voice-rec-headphones",0
.rodata:0000BE82 68 65 61 64 70 68 6F 6E 65 73+                              ; DATA XREF: .data.rel.ro:voice_rec_headphones↓o
.rodata:0000BE82 00                                                          ; .data.rel.ro:voice_rec_headset↓o
.rodata:0000BE97 76 6F 69 63 65 2D 72 65 63 2D+aVoiceRecHeadse_0 DCB "voice-rec-headset-mic",0
.rodata:0000BE97 68 65 61 64 73 65 74 2D 6D 69+                              ; DATA XREF: .data.rel.ro:00010A78↓o
.rodata:0000BEAD 76 6F 69 63 65 2D 72 65 63 2D+aVoiceRecEarpho DCB "voice-rec-earphones",0
.rodata:0000BEAD 65 61 72 70 68 6F 6E 65 73 00                               ; DATA XREF: .data.rel.ro:voice_rec_earpiece↓o
.rodata:0000BEC1 63 6F 6D 6D 75 6E 69 63 61 74+aCommunicationS_0 DCB "communication-speaker",0
.rodata:0000BEC1 69 6F 6E 2D 73 70 65 61 6B 65+                              ; DATA XREF: .data.rel.ro:communication_speaker↓o
.rodata:0000BED7 63 6F 6D 6D 75 6E 69 63 61 74+aCommunicationM DCB "communication-main-mic",0
.rodata:0000BED7 69 6F 6E 2D 6D 61 69 6E 2D 6D+                              ; DATA XREF: .data.rel.ro:00010A88↓o
.rodata:0000BED7 69 63 00                                                    ; .data.rel.ro:00010A90↓o
.rodata:0000BED7                                                             ; .data.rel.ro:00010AA0↓o
.rodata:0000BEEE 63 6F 6D 6D 75 6E 69 63 61 74+aCommunicationH_1 DCB "communication-headphones",0
.rodata:0000BEEE 69 6F 6E 2D 68 65 61 64 70 68+                              ; DATA XREF: .data.rel.ro:communication_headphones↓o
.rodata:0000BF07 63 6F 6D 6D 75 6E 69 63 61 74+aCommunicationH_2 DCB "communication-headset",0
.rodata:0000BF07 69 6F 6E 2D 68 65 61 64 73 65+                              ; DATA XREF: .data.rel.ro:communication_headset↓o
.rodata:0000BF1D 63 6F 6D 6D 75 6E 69 63 61 74+aCommunicationH_3 DCB "communication-headset-mic",0
.rodata:0000BF1D 69 6F 6E 2D 68 65 61 64 73 65+                              ; DATA XREF: .data.rel.ro:00010A98↓o
.rodata:0000BF37 63 6F 6D 6D 75 6E 69 63 61 74+aCommunicationE_0 DCB "communication-earphones",0
.rodata:0000BF37 69 6F 6E 2D 65 61 72 70 68 6F+                              ; DATA XREF: .data.rel.ro:communication_earpiece↓o
.rodata:0000BF4F 63 6F 6D 6D 75 6E 69 63 61 74+aCommunicationB_0 DCB "communication-bt-sco-headset",0
.rodata:0000BF4F 69 6F 6E 2D 62 74 2D 73 63 6F+                              ; DATA XREF: .data.rel.ro:communication_bluetooth_sco↓o
.rodata:0000BF6C 63 6F 6D 6D 75 6E 69 63 61 74+aCommunicationB_1 DCB "communication-bt-sco-mic",0
.rodata:0000BF6C 69 6F 6E 2D 62 74 2D 73 63 6F+                              ; DATA XREF: .data.rel.ro:00010AA8↓o
.rodata:0000BF85 73 70 65 61 6B 65 72 2D 61 6E+aSpeakerAndHead_0 DCB "speaker-and-headphones",0
.rodata:0000BF85 64 2D 68 65 61 64 70 68 6F 6E+                              ; DATA XREF: .data.rel.ro:speaker_and_headphones↓o
.rodata:0000BF9C 6D 61 69 6E 2D 6D 69 63 00    aMainMic DCB "main-mic",0     ; DATA XREF: .data.rel.ro:00010AB0↓o
.rodata:0000BF9C                                                             ; .data.rel.ro:00010AB8↓o
.rodata:0000BFA5 73 70 65 61 6B 65 72 2D 61 6E+aSpeakerAndBtSc_0 DCB "speaker-and-bt-sco",0
.rodata:0000BFA5 64 2D 62 74 2D 73 63 6F 00                                  ; DATA XREF: .data.rel.ro:speaker_and_bt_sco↓o
.rodata:0000BFB8 6D 65 64 69 61 2D 62 74 2D 73+aMediaBtScoHead_0 DCB "media-bt-sco-headset",0
.rodata:0000BFB8 63 6F 2D 68 65 61 64 73 65 74+                              ; DATA XREF: .data.rel.ro:bluetooth_sco↓o
.rodata:0000BFCD 25 73 28 29 3A 20 65 6E 74 65+aSEnter DCB "%s(): enter",0   ; DATA XREF: thread_refresh_audio_route+A↑o
.rodata:0000BFCD 72 00                                                       ; thread_refresh_audio_route+12↑o
.rodata:0000BFCD                                                             ; .text:off_3ADC↑o
.rodata:0000BFD9 74 68 72 65 61 64 5F 72 65 66+aThreadRefreshA_0 DCB "thread_refresh_audio_route",0
.rodata:0000BFD9 72 65 73 68 5F 61 75 64 69 6F+                              ; DATA XREF: thread_refresh_audio_route+E↑o
.rodata:0000BFD9 5F 72 6F 75 74 65 00                                        ; thread_refresh_audio_route+14↑o
.rodata:0000BFD9                                                             ; thread_refresh_audio_route+50↑o
.rodata:0000BFD9                                                             ; thread_refresh_audio_route+56↑o
.rodata:0000BFD9                                                             ; thread_refresh_audio_route+5E↑o
.rodata:0000BFD9                                                             ; thread_refresh_audio_route+64↑o
.rodata:0000BFD9                                                             ; thread_refresh_audio_route+92↑o
.rodata:0000BFD9                                                             ; thread_refresh_audio_route+98↑o
.rodata:0000BFD9                                                             ; thread_refresh_audio_route+19C↑o
.rodata:0000BFD9                                                             ; thread_refresh_audio_route+1A2↑o
.rodata:0000BFD9                                                             ; thread_refresh_audio_route+1BC↑o
.rodata:0000BFD9                                                             ; thread_refresh_audio_route+1C2↑o
.rodata:0000BFD9                                                             ; .text:off_3AE0↑o
.rodata:0000BFD9                                                             ; .text:off_3AF4↑o
.rodata:0000BFD9                                                             ; .text:off_3B34↑o ...
.rodata:0000BFF4 25 73 28 29 3A 20 57 61 69 74+aSWaitingForEsc DCB "%s(): Waiting for escore being ready timeout",0
.rodata:0000BFF4 69 6E 67 20 66 6F 72 20 65 73+                              ; DATA XREF: thread_refresh_audio_route+4E↑o
.rodata:0000BFF4 63 6F 72 65 20 62 65 69 6E 67+                              ; thread_refresh_audio_route+54↑o
.rodata:0000BFF4 20 72 65 61 64 79 20 74 69 6D+                              ; .text:off_3B50↑o
.rodata:0000C021 25 73 28 29 3A 20 55 6E 61 62+aSUnableToOpenM DCB "%s(): Unable to open mixer",0
.rodata:0000C021 6C 65 20 74 6F 20 6F 70 65 6E+                              ; DATA XREF: thread_refresh_audio_route+5C↑o
.rodata:0000C021 20 6D 69 78 65 72 00                                        ; thread_refresh_audio_route+62↑o
.rodata:0000C021                                                             ; .text:off_3B5C↑o
.rodata:0000C03C 49 6E 74 65 72 6E 61 6C 20 52+aInternalRoute DCB "Internal Route",0
.rodata:0000C03C 6F 75 74 65 00                                              ; DATA XREF: thread_refresh_audio_route+1A↑o
.rodata:0000C03C                                                             ; thread_refresh_audio_route+1E↑o
.rodata:0000C03C                                                             ; .text:off_3AE4↑o
.rodata:0000C03C                                                             ; .data:00011104↓o
.rodata:0000C03C                                                             ; .data:000111C4↓o
.rodata:0000C03C                                                             ; .data:00011218↓o
.rodata:0000C03C                                                             ; .data:00011308↓o
.rodata:0000C03C                                                             ; .data:0001135C↓o
.rodata:0000C03C                                                             ; .data:000113BC↓o
.rodata:0000C03C                                                             ; .data:0001144C↓o
.rodata:0000C03C                                                             ; .data:00011530↓o
.rodata:0000C03C                                                             ; .data:000115B4↓o
.rodata:0000C04B 2F 73 79 73 74 65 6D 2F 65 74+aSystemEtcMixer DCB "/system/etc/mixer_paths.xml",0
.rodata:0000C04B 63 2F 6D 69 78 65 72 5F 70 61+                              ; DATA XREF: thread_refresh_audio_route+7C↑o
.rodata:0000C04B 74 68 73 2E 78 6D 6C 00                                     ; thread_refresh_audio_route+80↑o
.rodata:0000C04B                                                             ; .text:off_3AE8↑o
.rodata:0000C04B                                                             ; sub_4424+B4↑o
.rodata:0000C04B                                                             ; sub_4424+BA↑o
.rodata:0000C04B                                                             ; .text:off_4688↑o
.rodata:0000C04B                                                             ; audio_route_init:loc_8FAA↑o
.rodata:0000C04B                                                             ; audio_route_init+122↑o
.rodata:0000C04B                                                             ; audio_route_init+21A↑o
.rodata:0000C04B                                                             ; audio_route_init+220↑o
.rodata:0000C04B                                                             ; .text:off_90F8↑o
.rodata:0000C04B                                                             ; .text:off_9110↑o
.rodata:0000C067 25 73 28 29 3A 20 66 61 69 6C+aSFailedToOpenA DCB "%s(): failed to open audio route",0
.rodata:0000C067 65 64 20 74 6F 20 6F 70 65 6E+                              ; DATA XREF: thread_refresh_audio_route+90↑o
.rodata:0000C067 20 61 75 64 69 6F 20 72 6F 75+                              ; thread_refresh_audio_route+96↑o
.rodata:0000C067 74 65 00                                                    ; .text:off_3AF0↑o
.rodata:0000C088 25 73 28 29 3A 20 66 61 69 6C+aSFailedToBring_0 DCB "%s(): failed to bring up amplifier, speaker will be silent",0
.rodata:0000C088 65 64 20 74 6F 20 62 72 69 6E+                              ; DATA XREF: thread_refresh_audio_route+19A↑o
.rodata:0000C088 67 20 75 70 20 61 6D 70 6C 69+                              ; thread_refresh_audio_route+1A0↑o
.rodata:0000C088 66 69 65 72 2C 20 73 70 65 61+                              ; .text:off_3B30↑o
.rodata:0000C0C3 25 73 28 29 3A 20 6C 65 61 76+aSLeave DCB "%s(): leave",0   ; DATA XREF: thread_refresh_audio_route+1BA↑o
.rodata:0000C0C3 65 00                                                       ; thread_refresh_audio_route+1C0↑o
.rodata:0000C0C3                                                             ; .text:off_3B44↑o
.rodata:0000C0CF 25 73 28 29 3A 20 2E 2E 2E 00 aS DCB "%s(): ...",0          ; DATA XREF: wav_player_start+1A↑o
.rodata:0000C0CF                                                             ; wav_player_start+22↑o
.rodata:0000C0CF                                                             ; .text:off_3FCC↑o
.rodata:0000C0D9 77 61 76 5F 70 6C 61 79 65 72+aWavPlayerStart_0 DCB "wav_player_start",0
.rodata:0000C0D9 5F 73 74 61 72 74 00                                        ; DATA XREF: wav_player_start+12↑o
.rodata:0000C0D9                                                             ; wav_player_start+1E↑o
.rodata:0000C0D9                                                             ; .text:off_3FD0↑o
.rodata:0000C0EA 72 62 00                      aRb DCB "rb",0                ; DATA XREF: wav_player_start+3A↑o
.rodata:0000C0EA                                                             ; wav_player_start+40↑o
.rodata:0000C0EA                                                             ; .text:off_3FD4↑o
.rodata:0000C0EA                                                             ; cvq_open+80↑o
.rodata:0000C0EA                                                             ; cvq_open+84↑o
.rodata:0000C0EA                                                             ; .text:off_9830↑o
.rodata:0000C0ED 55 6E 61 62 6C 65 20 74 6F 20+aUnableToOpenFi DCB "Unable to open file '%s' [%s]",0
.rodata:0000C0ED 6F 70 65 6E 20 66 69 6C 65 20+                              ; DATA XREF: wav_player_start+104↑o
.rodata:0000C0ED 27 25 73 27 20 5B 25 73 5D 00                               ; wav_player_start+10C↑o
.rodata:0000C0ED                                                             ; .text:off_4078↑o
.rodata:0000C10B 45 72 72 6F 72 3A 20 27 25 73+aErrorSIsNotARi DCB "Error: '%s' is not a riff/wave file",0
.rodata:0000C10B 27 20 69 73 20 6E 6F 74 20 61+                              ; DATA XREF: wav_player_start+DE↑o
.rodata:0000C10B 20 72 69 66 66 2F 77 61 76 65+                              ; wav_player_start+E4↑o
.rodata:0000C10B 20 66 69 6C 65 00                                           ; .text:off_3FDC↑o
.rodata:0000C12F 45 53 37 30 35 20 52 58 31 20+aEs705Rx1Enable DCB "ES705 RX1 Enable",0
.rodata:0000C12F 45 6E 61 62 6C 65 00                                        ; DATA XREF: .data:default_settings↓o
.rodata:0000C12F                                                             ; .data:000111B8↓o
.rodata:0000C12F                                                             ; .data:test_headphone↓o
.rodata:0000C12F                                                             ; .data:000112FC↓o
.rodata:0000C12F                                                             ; .data:test_pri_mic↓o
.rodata:0000C12F                                                             ; .data:test_sec_mic↓o
.rodata:0000C12F                                                             ; .data:test_ter_mic↓o
.rodata:0000C12F                                                             ; .data:test_modem_loopback_earphone↓o
.rodata:0000C12F                                                             ; .data:test_modem_loopback_headphone↓o
.rodata:0000C140 48 65 61 64 73 65 74 20 4D 69+aHeadsetMicSwit DCB "Headset Mic Switch",0
.rodata:0000C140 63 20 53 77 69 74 63 68 00                                  ; DATA XREF: .data:00011110↓o
.rodata:0000C140                                                             ; .data:0001117C↓o
.rodata:0000C140                                                             ; .data:0001123C↓o
.rodata:0000C140                                                             ; .data:000112A8↓o
.rodata:0000C140                                                             ; .data:00011470↓o
.rodata:0000C140                                                             ; .data:000115D8↓o
.rodata:0000C153 45 50 4F 55 54 20 44 69 67 69+aEpoutDigitalSw DCB "EPOUT Digital Switch",0
.rodata:0000C153 74 61 6C 20 53 77 69 74 63 68+                              ; DATA XREF: sub_5730+1F0↑o
.rodata:0000C153 00                                                          ; sub_5730+1FA↑o
.rodata:0000C153                                                             ; sub_5730+75C↑o
.rodata:0000C153                                                             ; sub_5730+764↑o
.rodata:0000C153                                                             ; .text:off_5F68↑o
.rodata:0000C153                                                             ; .text:off_604C↑o
.rodata:0000C153                                                             ; .data:0001111C↓o
.rodata:0000C153                                                             ; .data:000111A0↓o
.rodata:0000C153                                                             ; .data:00011494↓o
.rodata:0000C153                                                             ; .data:00011554↓o
.rodata:0000C168 45 61 72 70 69 65 63 65 20 53+aEarpieceSwitch DCB "Earpiece Switch",0
.rodata:0000C168 77 69 74 63 68 00                                           ; DATA XREF: .data:00011128↓o
.rodata:0000C168                                                             ; .data:000111AC↓o
.rodata:0000C168                                                             ; .data:000114A0↓o
.rodata:0000C168                                                             ; .data:00011560↓o
.rodata:0000C178 48 50 4F 55 54 20 44 69 67 69+aHpoutDigitalSw DCB "HPOUT Digital Switch",0
.rodata:0000C178 74 61 6C 20 53 77 69 74 63 68+                              ; DATA XREF: sub_5730:loc_5910↑o
.rodata:0000C178 00                                                          ; sub_5730+1EA↑o
.rodata:0000C178                                                             ; sub_5730+74E↑o
.rodata:0000C178                                                             ; sub_5730+756↑o
.rodata:0000C178                                                             ; .text:off_5F64↑o
.rodata:0000C178                                                             ; .text:off_6048↑o
.rodata:0000C178                                                             ; .data:00011134↓o
.rodata:0000C178                                                             ; .data:000111E8↓o
.rodata:0000C178                                                             ; .data:0001126C↓o
.rodata:0000C178                                                             ; .data:0001132C↓o
.rodata:0000C178                                                             ; .data:0001138C↓o
.rodata:0000C178                                                             ; .data:000113EC↓o
.rodata:0000C178                                                             ; .data:000114D0↓o
.rodata:0000C178                                                             ; .data:00011620↓o
.rodata:0000C18D 48 65 61 64 70 68 6F 6E 65 20+aHeadphoneSwitc DCB "Headphone Switch",0
.rodata:0000C18D 53 77 69 74 63 68 00                                        ; DATA XREF: .data:00011140↓o
.rodata:0000C18D                                                             ; .data:000111F4↓o
.rodata:0000C18D                                                             ; .data:00011278↓o
.rodata:0000C18D                                                             ; .data:00011338↓o
.rodata:0000C18D                                                             ; .data:00011398↓o
.rodata:0000C18D                                                             ; .data:000113F8↓o
.rodata:0000C18D                                                             ; .data:000114DC↓o
.rodata:0000C18D                                                             ; .data:0001162C↓o
.rodata:0000C19E 53 65 63 20 4D 69 63 20 53 77+aSecMicSwitch DCB "Sec Mic Switch",0
.rodata:0000C19E 69 74 63 68 00                                              ; DATA XREF: .data:0001114C↓o
.rodata:0000C19E                                                             ; .data:00011428↓o
.rodata:0000C19E                                                             ; .data:00011590↓o
.rodata:0000C1AD 49 4E 32 4D 55 58 20 49 6E 70+aIn2muxInput DCB "IN2MUX Input",0
.rodata:0000C1AD 75 74 00                                                    ; DATA XREF: .data:test_earphones↓o
.rodata:0000C1AD                                                             ; .data:00011224↓o
.rodata:0000C1AD                                                             ; .data:test_speaker↓o
.rodata:0000C1AD                                                             ; .data:0001141C↓o
.rodata:0000C1AD                                                             ; .data:00011458↓o
.rodata:0000C1AD                                                             ; .data:00011584↓o
.rodata:0000C1AD                                                             ; .data:000115C0↓o
.rodata:0000C1BA 49 4E 32 42 00                aIn2b DCB "IN2B",0            ; DATA XREF: .data:0001116C↓o
.rodata:0000C1BA                                                             ; .data:0001122C↓o
.rodata:0000C1BA                                                             ; .data:00011298↓o
.rodata:0000C1BA                                                             ; .data:00011460↓o
.rodata:0000C1BA                                                             ; .data:000115C8↓o
.rodata:0000C1BF 49 4E 32 20 56 6F 6C 75 6D 65+aIn2Volume DCB "IN2 Volume",0 ; DATA XREF: .data:00011170↓o
.rodata:0000C1BF 00                                                          ; .data:00011230↓o
.rodata:0000C1BF                                                             ; .data:0001129C↓o
.rodata:0000C1BF                                                             ; .data:00011464↓o
.rodata:0000C1BF                                                             ; .data:000115CC↓o
.rodata:0000C1CA 45 50 4F 55 54 20 49 6E 70 75+aEpoutInput1 DCB "EPOUT Input 1",0
.rodata:0000C1CA 74 20 31 00                                                 ; DATA XREF: .data:00011188↓o
.rodata:0000C1CA                                                             ; .data:0001147C↓o
.rodata:0000C1CA                                                             ; .data:0001153C↓o
.rodata:0000C1D8 49 4E 32 4C 00                aIn2l DCB "IN2L",0            ; DATA XREF: .data:00011190↓o
.rodata:0000C1D8                                                             ; .data:00011250↓o
.rodata:0000C1D8                                                             ; .data:0001125C↓o
.rodata:0000C1D8                                                             ; .data:000112BC↓o
.rodata:0000C1D8                                                             ; .data:000112C8↓o
.rodata:0000C1D8                                                             ; .data:0001140C↓o
.rodata:0000C1D8                                                             ; .data:00011418↓o
.rodata:0000C1D8                                                             ; .data:00011484↓o
.rodata:0000C1D8                                                             ; .data:00011574↓o
.rodata:0000C1D8                                                             ; .data:00011580↓o
.rodata:0000C1D8                                                             ; .data:000115EC↓o
.rodata:0000C1D8                                                             ; .data:000115F8↓o
.rodata:0000C1DD 45 50 4F 55 54 20 44 69 67 69+aEpoutDigitalVo DCB "EPOUT Digital Volume",0
.rodata:0000C1DD 74 61 6C 20 56 6F 6C 75 6D 65+                              ; DATA XREF: .data:00011194↓o
.rodata:0000C1DD 00                                                          ; .data:00011488↓o
.rodata:0000C1DD                                                             ; .data:00011548↓o
.rodata:0000C1F2 48 50 4F 55 54 4C 20 49 6E 70+aHpoutlInput1 DCB "HPOUTL Input 1",0
.rodata:0000C1F2 75 74 20 31 00                                              ; DATA XREF: .data:000111D0↓o
.rodata:0000C1F2                                                             ; .data:00011248↓o
.rodata:0000C1F2                                                             ; .data:00011314↓o
.rodata:0000C1F2                                                             ; .data:00011368↓o
.rodata:0000C1F2                                                             ; .data:000113C8↓o
.rodata:0000C1F2                                                             ; .data:000114AC↓o
.rodata:0000C1F2                                                             ; .data:000115FC↓o
.rodata:0000C201 41 49 46 31 52 58 31 00       aAif1rx1 DCB "AIF1RX1",0      ; DATA XREF: .data:000111D8↓o
.rodata:0000C201                                                             ; .data:0001131C↓o
.rodata:0000C201                                                             ; .data:00011370↓o
.rodata:0000C201                                                             ; .data:0001137C↓o
.rodata:0000C201                                                             ; .data:000113D0↓o
.rodata:0000C201                                                             ; .data:000113DC↓o
.rodata:0000C201                                                             ; .data:000114B4↓o
.rodata:0000C201                                                             ; .data:000114C0↓o
.rodata:0000C201                                                             ; .data:00011544↓o
.rodata:0000C201                                                             ; .data:00011604↓o
.rodata:0000C201                                                             ; .data:00011610↓o
.rodata:0000C209 48 50 4F 55 54 20 44 69 67 69+aHpoutDigitalVo DCB "HPOUT Digital Volume",0
.rodata:0000C209 74 61 6C 20 56 6F 6C 75 6D 65+                              ; DATA XREF: sub_42F0+50↑o
.rodata:0000C209 00                                                          ; sub_42F0+58↑o
.rodata:0000C209                                                             ; .text:off_4360↑o
.rodata:0000C209                                                             ; .data:000111DC↓o
.rodata:0000C209                                                             ; .data:00011260↓o
.rodata:0000C209                                                             ; .data:00011320↓o
.rodata:0000C209                                                             ; .data:00011380↓o
.rodata:0000C209                                                             ; .data:000113E0↓o
.rodata:0000C209                                                             ; .data:000114C4↓o
.rodata:0000C209                                                             ; .data:00011614↓o
.rodata:0000C21E 48 50 4F 55 54 52 20 49 6E 70+aHpoutrInput1 DCB "HPOUTR Input 1",0
.rodata:0000C21E 75 74 20 31 00                                              ; DATA XREF: .data:00011254↓o
.rodata:0000C21E                                                             ; .data:00011374↓o
.rodata:0000C21E                                                             ; .data:000113D4↓o
.rodata:0000C21E                                                             ; .data:000114B8↓o
.rodata:0000C21E                                                             ; .data:00011608↓o
.rodata:0000C22D 49 53 52 43 32 49 4E 54 31 20+aIsrc2int1Input DCB "ISRC2INT1 Input",0
.rodata:0000C22D 49 6E 70 75 74 00                                           ; DATA XREF: .data:000112B4↓o
.rodata:0000C23D 49 53 52 43 32 49 4E 54 32 20+aIsrc2int2Input DCB "ISRC2INT2 Input",0
.rodata:0000C23D 49 6E 70 75 74 00                                           ; DATA XREF: .data:000112C0↓o
.rodata:0000C24D 41 49 46 33 54 58 31 20 49 6E+aAif3tx1Input1 DCB "AIF3TX1 Input 1",0
.rodata:0000C24D 70 75 74 20 31 00                                           ; DATA XREF: .data:000112CC↓o
.rodata:0000C25D 49 53 52 43 32 49 4E 54 31 00 aIsrc2int1 DCB "ISRC2INT1",0  ; DATA XREF: .data:000112D4↓o
.rodata:0000C267 41 49 46 33 54 58 32 20 49 6E+aAif3tx2Input1 DCB "AIF3TX2 Input 1",0
.rodata:0000C267 70 75 74 20 31 00                                           ; DATA XREF: .data:000112D8↓o
.rodata:0000C277 49 53 52 43 32 49 4E 54 32 00 aIsrc2int2 DCB "ISRC2INT2",0  ; DATA XREF: .data:000112E0↓o
.rodata:0000C281 41 49 46 33 54 58 31 20 49 6E+aAif3tx1Input1V DCB "AIF3TX1 Input 1 Volume",0
.rodata:0000C281 70 75 74 20 31 20 56 6F 6C 75+                              ; DATA XREF: .data:000112E4↓o
.rodata:0000C298 41 49 46 33 54 58 32 20 49 6E+aAif3tx2Input1V DCB "AIF3TX2 Input 1 Volume",0
.rodata:0000C298 70 75 74 20 31 20 56 6F 6C 75+                              ; DATA XREF: .data:000112F0↓o
.rodata:0000C2AF 41 49 46 31 54 58 31 20 49 6E+aAif1tx1Input1 DCB "AIF1TX1 Input 1",0
.rodata:0000C2AF 70 75 74 20 31 00                                           ; DATA XREF: .data:00011404↓o
.rodata:0000C2AF                                                             ; .data:000114E8↓o
.rodata:0000C2AF                                                             ; .data:0001156C↓o
.rodata:0000C2AF                                                             ; .data:000115E4↓o
.rodata:0000C2BF 41 49 46 31 54 58 32 20 49 6E+aAif1tx2Input1 DCB "AIF1TX2 Input 1",0
.rodata:0000C2BF 70 75 74 20 31 00                                           ; DATA XREF: .data:00011410↓o
.rodata:0000C2BF                                                             ; .data:000114F4↓o
.rodata:0000C2BF                                                             ; .data:00011578↓o
.rodata:0000C2BF                                                             ; .data:000115F0↓o
.rodata:0000C2CF 49 4E 32 41 00                aIn2a DCB "IN2A",0            ; DATA XREF: .data:00011424↓o
.rodata:0000C2CF                                                             ; .data:0001158C↓o
.rodata:0000C2D4 49 4E 31 4C 00                aIn1l DCB "IN1L",0            ; DATA XREF: .data:000114F0↓o
.rodata:0000C2D4                                                             ; .data:000114FC↓o
.rodata:0000C2D9 49 4E 31 4D 55 58 4C 20 49 6E+aIn1muxlInput DCB "IN1MUXL Input",0
.rodata:0000C2D9 70 75 74 00                                                 ; DATA XREF: .data:00011500↓o
.rodata:0000C2E7 49 4E 31 41 00                aIn1a DCB "IN1A",0            ; DATA XREF: .data:00011508↓o
.rodata:0000C2EC 54 65 72 20 4D 69 63 20 53 77+aTerMicSwitch DCB "Ter Mic Switch",0
.rodata:0000C2EC 69 74 63 68 00                                              ; DATA XREF: .data:0001150C↓o
.rodata:0000C2FB 2F 73 79 73 2F 63 6C 61 73 73+aSysClassSwitch DCB "/sys/class/switch/h2w/state",0
.rodata:0000C2FB 2F 73 77 69 74 63 68 2F 68 32+                              ; DATA XREF: is_headphone_on+12↑o
.rodata:0000C2FB 77 2F 73 74 61 74 65 00                                     ; is_headphone_on+14↑o
.rodata:0000C2FB                                                             ; .text:off_40EC↑o
.rodata:0000C317 72 00                         aR DCB "r",0                  ; DATA XREF: is_headphone_on+6↑o
.rodata:0000C317                                                             ; is_headphone_on+C↑o
.rodata:0000C317                                                             ; .text:off_40F0↑o
.rodata:0000C317                                                             ; audio_route_init+120↑o
.rodata:0000C317                                                             ; audio_route_init+128↑o
.rodata:0000C317                                                             ; .text:off_90FC↑o
.rodata:0000C319 6E 6F 74 20 6F 70 65 6E 20 70+aNotOpenPcmDevi DCB "not open pcm devices yet",0
.rodata:0000C319 63 6D 20 64 65 76 69 63 65 73+                              ; DATA XREF: amplifier_calibrate+76↑o
.rodata:0000C319 20 79 65 74 00                                              ; amplifier_calibrate+7A↑o
.rodata:0000C319                                                             ; .text:off_4194↑o
.rodata:0000C332 73 70 65 61 6B 65 72 00       aSpeaker DCB "speaker",0      ; DATA XREF: thread_refresh_audio_route+FA↑o
.rodata:0000C332                                                             ; thread_refresh_audio_route+100↑o
.rodata:0000C332                                                             ; .text:off_3B18↑o
.rodata:0000C332                                                             ; amplifier_calibrate+18↑o
.rodata:0000C332                                                             ; amplifier_calibrate+1E↑o
.rodata:0000C332                                                             ; .text:off_4180↑o
.rodata:0000C332                                                             ; sub_66B0+5A↑o
.rodata:0000C332                                                             ; sub_66B0+60↑o
.rodata:0000C332                                                             ; .text:off_6BE8↑o
.rodata:0000C33A 66 61 69 6C 65 64 20 74 6F 20+aFailedToCalibr DCB "failed to calibrate tfa98xx: %d",0
.rodata:0000C33A 63 61 6C 69 62 72 61 74 65 20+                              ; DATA XREF: amplifier_calibrate+40↑o
.rodata:0000C33A 74 66 61 39 38 78 78 3A 20 25+                              ; amplifier_calibrate+46↑o
.rodata:0000C33A 64 00                                                       ; .text:off_4188↑o
.rodata:0000C35A 64 75 6D 6D 79 00             aDummy DCB "dummy",0          ; DATA XREF: amplifier_calibrate+5C↑o
.rodata:0000C35A                                                             ; amplifier_calibrate+62↑o
.rodata:0000C35A                                                             ; .text:off_418C↑o
.rodata:0000C35A                                                             ; sub_5730+5A6↑o
.rodata:0000C35A                                                             ; sub_5730+5AC↑o
.rodata:0000C35A                                                             ; .text:off_600C↑o
.rodata:0000C360 2F 64 61 74 61 2F 64 61 74 61+aDataDataFactor DCB "/data/data/factory_test.wav",0
.rodata:0000C360 2F 66 61 63 74 6F 72 79 5F 74+                              ; DATA XREF: thread_test_hifi+2↑o
.rodata:0000C360 65 73 74 2E 77 61 76 00                                     ; thread_test_hifi+8↑o
.rodata:0000C360                                                             ; .text:off_41AC↑o
.rodata:0000C37C 25 66 00                      aF DCB "%f",0                 ; DATA XREF: adev_set_headset_volume+36↑o
.rodata:0000C37C                                                             ; adev_set_headset_volume+40↑o
.rodata:0000C37C                                                             ; .text:off_4270↑o
.rodata:0000C37C                                                             ; sub_4710+2C↑o
.rodata:0000C37C                                                             ; sub_4710+34↑o
.rodata:0000C37C                                                             ; .text:off_480C↑o
.rodata:0000C37F 61 75 64 69 6F 00             aAudio DCB "audio",0          ; DATA XREF: .data:00011650↓o
.rodata:0000C385 4D 45 49 5A 55 20 61 75 64 69+aMeizuAudioHwHa DCB "MEIZU audio HW HAL",0
.rodata:0000C385 6F 20 48 57 20 48 41 4C 00                                  ; DATA XREF: .data:00011654↓o
.rodata:0000C398 54 68 65 20 41 6E 64 72 6F 69+aTheAndroidOpen DCB "The Android Open Source Project",0
.rodata:0000C398 64 20 4F 70 65 6E 20 53 6F 75+                              ; DATA XREF: .data:00011658↓o
.rodata:0000C3B8 46 61 69 6C 65 64 20 74 6F 20+aFailedToCreate DCB "Failed to create directory: %s",0
.rodata:0000C3B8 63 72 65 61 74 65 20 64 69 72+                              ; DATA XREF: pcm_data_dump+BE↑o
.rodata:0000C3B8 65 63 74 6F 72 79 3A 20 25 73+                              ; pcm_data_dump+C4↑o
.rodata:0000C3B8 00                                                          ; .text:off_36E4↑o
.rodata:0000C3D7 25 73 28 29 3A 20 70 63 6D 5F+aSPcmOpenBacken DCB "%s(): pcm_open(BACKEND) failed: %s",0
.rodata:0000C3D7 6F 70 65 6E 28 42 41 43 4B 45+                              ; DATA XREF: thread_refresh_audio_route+150↑o
.rodata:0000C3D7 4E 44 29 20 66 61 69 6C 65 64+                              ; thread_refresh_audio_route+158↑o
.rodata:0000C3D7 3A 20 25 73 00                                              ; .text:off_3B00↑o
.rodata:0000C3FA 61 6D 70 6C 69 66 69 65 72 5F+aAmplifierIniti DCB "amplifier_initialize",0
.rodata:0000C3FA 69 6E 69 74 69 61 6C 69 7A 65+                              ; DATA XREF: thread_refresh_audio_route+132↑o
.rodata:0000C3FA 00                                                          ; thread_refresh_audio_route+138↑o
.rodata:0000C3FA                                                             ; thread_refresh_audio_route+152↑o
.rodata:0000C3FA                                                             ; thread_refresh_audio_route+15A↑o
.rodata:0000C3FA                                                             ; thread_refresh_audio_route+170↑o
.rodata:0000C3FA                                                             ; thread_refresh_audio_route+178↑o
.rodata:0000C3FA                                                             ; .text:off_3B04↑o
.rodata:0000C3FA                                                             ; .text:off_3B14↑o
.rodata:0000C3FA                                                             ; .text:off_3B28↑o
.rodata:0000C40F 25 73 28 29 3A 20 70 63 6D 5F+aSPcmOpenAmplif DCB "%s(): pcm_open(AMPLIFIER) failed: %s",0
.rodata:0000C40F 6F 70 65 6E 28 41 4D 50 4C 49+                              ; DATA XREF: thread_refresh_audio_route+16E↑o
.rodata:0000C40F 46 49 45 52 29 20 66 61 69 6C+                              ; thread_refresh_audio_route+176↑o
.rodata:0000C40F 65 64 3A 20 25 73 00                                        ; .text:off_3B10↑o
.rodata:0000C434 25 73 28 29 3A 20 66 61 69 6C+aSFailedToBring DCB "%s(): failed to bring up tfa98xx",0
.rodata:0000C434 65 64 20 74 6F 20 62 72 69 6E+                              ; DATA XREF: thread_refresh_audio_route+130↑o
.rodata:0000C434 67 20 75 70 20 74 66 61 39 38+                              ; thread_refresh_audio_route+136↑o
.rodata:0000C434 78 78 00                                                    ; .text:off_3B24↑o
.rodata:0000C455 70 72 69 6D 61 72 79 2E 70 61+aPrimaryPaReady DCB "primary.pa.ready",0
.rodata:0000C455 2E 72 65 61 64 79 00                                        ; DATA XREF: thread_refresh_audio_route:loc_3AB2↑o
.rodata:0000C455                                                             ; thread_refresh_audio_route+1AE↑o
.rodata:0000C455                                                             ; .text:off_3B38↑o
.rodata:0000C466 31 00                         a1 DCB "1",0                  ; DATA XREF: thread_refresh_audio_route+1AC↑o
.rodata:0000C466                                                             ; thread_refresh_audio_route+1B0↑o
.rodata:0000C466                                                             ; .text:off_3B3C↑o
.rodata:0000C466                                                             ; sub_52F4+64↑o
.rodata:0000C466                                                             ; sub_52F4+6A↑o
.rodata:0000C466                                                             ; .text:off_54B8↑o
.rodata:0000C466                                                             ; sub_5730+78↑o
.rodata:0000C466                                                             ; sub_5730+7E↑o
.rodata:0000C466                                                             ; .text:off_5F40↑o
.rodata:0000C468 55 6E 61 62 6C 65 20 74 6F 20+aUnableToOpenPc_0 DCB "Unable to open PCM device %u (%s)",0
.rodata:0000C468 6F 70 65 6E 20 50 43 4D 20 64+                              ; DATA XREF: wav_player_start+3DA↑o
.rodata:0000C468 65 76 69 63 65 20 25 75 20 28+                              ; wav_player_start+3E0↑o
.rodata:0000C468 25 73 29 00                                                 ; .text:off_4068↑o
.rodata:0000C48A 25 73 28 29 3A 20 73 65 74 20+aSSetHifiGainDD DCB "%s(): set hifi gain: %d, %d",0
.rodata:0000C48A 68 69 66 69 20 67 61 69 6E 3A+                              ; DATA XREF: wav_player_start+230↑o
.rodata:0000C48A 20 25 64 2C 20 25 64 00                                     ; wav_player_start+238↑o
.rodata:0000C48A                                                             ; .text:off_400C↑o
.rodata:0000C4A6 70 6C 61 79 5F 73 61 6D 70 6C+aPlaySample DCB "play_sample",0
.rodata:0000C4A6 65 00                                                       ; DATA XREF: wav_player_start+234↑o
.rodata:0000C4A6                                                             ; wav_player_start+23A↑o
.rodata:0000C4A6                                                             ; .text:off_4010↑o
.rodata:0000C4B2 47 61 69 6E 20 73 65 6C 65 63+aGainSelection DCB "Gain selection",0
.rodata:0000C4B2 74 69 6F 6E 00                                              ; DATA XREF: wav_player_start+24A↑o
.rodata:0000C4B2                                                             ; wav_player_start+250↑o
.rodata:0000C4B2                                                             ; .text:off_4014↑o
.rodata:0000C4B2                                                             ; sub_62E0+254↑o
.rodata:0000C4B2                                                             ; sub_62E0+25C↑o
.rodata:0000C4B2                                                             ; .text:off_6610↑o
.rodata:0000C4C1 4D 61 73 74 65 72 20 50 6C 61+aMasterPlayback DCB "Master Playback Volume",0
.rodata:0000C4C1 79 62 61 63 6B 20 56 6F 6C 75+                              ; DATA XREF: wav_player_start+256↑o
.rodata:0000C4C1 6D 65 00                                                    ; wav_player_start+25C↑o
.rodata:0000C4C1                                                             ; .text:off_4018↑o
.rodata:0000C4C1                                                             ; sub_427C+50↑o
.rodata:0000C4C1                                                             ; sub_427C+58↑o
.rodata:0000C4C1                                                             ; .text:off_42EC↑o
.rodata:0000C4D8 46 69 6C 74 65 72 20 53 68 61+aFilterShape DCB "Filter Shape",0
.rodata:0000C4D8 70 65 00                                                    ; DATA XREF: wav_player_start+262↑o
.rodata:0000C4D8                                                             ; wav_player_start+268↑o
.rodata:0000C4D8                                                             ; .text:off_401C↑o
.rodata:0000C4D8                                                             ; sub_62E0+22A↑o
.rodata:0000C4D8                                                             ; sub_62E0+232↑o
.rodata:0000C4D8                                                             ; .text:off_6604↑o
.rodata:0000C4E5 62 79 70 61 73 73 20 49 49 52+aBypassIir DCB "bypass IIR",0 ; DATA XREF: wav_player_start+26E↑o
.rodata:0000C4E5 00                                                          ; wav_player_start+274↑o
.rodata:0000C4E5                                                             ; .text:off_4020↑o
.rodata:0000C4E5                                                             ; sub_62E0+238↑o
.rodata:0000C4E5                                                             ; sub_62E0+240↑o
.rodata:0000C4E5                                                             ; .text:off_6608↑o
.rodata:0000C4F0 54 48 44 20 43 6F 6D 70 65 6E+aThdCompensatio DCB "THD Compensation",0
.rodata:0000C4F0 73 61 74 69 6F 6E 00                                        ; DATA XREF: wav_player_start+27A↑o
.rodata:0000C4F0                                                             ; wav_player_start+280↑o
.rodata:0000C4F0                                                             ; .text:off_4024↑o
.rodata:0000C4F0                                                             ; sub_62E0+262↑o
.rodata:0000C4F0                                                             ; sub_62E0+26A↑o
.rodata:0000C4F0                                                             ; .text:off_6614↑o
.rodata:0000C501 32 6E 64 20 48 61 72 6D 6F 6E+a2ndHarmonicCom DCB "2nd Harmonic Compensation",0
.rodata:0000C501 69 63 20 43 6F 6D 70 65 6E 73+                              ; DATA XREF: wav_player_start+286↑o
.rodata:0000C501 61 74 69 6F 6E 00                                           ; wav_player_start+28C↑o
.rodata:0000C501                                                             ; .text:off_4028↑o
.rodata:0000C501                                                             ; sub_62E0+270↑o
.rodata:0000C501                                                             ; sub_62E0+278↑o
.rodata:0000C501                                                             ; .text:off_6618↑o
.rodata:0000C51B 33 6E 64 20 48 61 72 6D 6F 6E+a3ndHarmonicCom DCB "3nd Harmonic Compensation",0
.rodata:0000C51B 69 63 20 43 6F 6D 70 65 6E 73+                              ; DATA XREF: wav_player_start+292↑o
.rodata:0000C51B 61 74 69 6F 6E 00                                           ; wav_player_start+298↑o
.rodata:0000C51B                                                             ; .text:off_402C↑o
.rodata:0000C51B                                                             ; sub_62E0+27E↑o
.rodata:0000C51B                                                             ; sub_62E0+286↑o
.rodata:0000C51B                                                             ; .text:off_661C↑o
.rodata:0000C535 55 6E 61 62 6C 65 20 74 6F 20+aUnableToAlloca DCB "Unable to allocate %d bytes",0
.rodata:0000C535 61 6C 6C 6F 63 61 74 65 20 25+                              ; DATA XREF: wav_player_start+3F0↑o
.rodata:0000C535 64 20 62 79 74 65 73 00                                     ; wav_player_start+3F6↑o
.rodata:0000C535                                                             ; .text:off_4058↑o
.rodata:0000C551 50 6C 61 79 69 6E 67 20 73 61+aPlayingSampleU DCB "Playing sample: %u ch, %u hz, %u bit",0xA,0
.rodata:0000C551 6D 70 6C 65 3A 20 25 75 20 63+                              ; DATA XREF: wav_player_start+2D4↑o
.rodata:0000C551 68 2C 20 25 75 20 68 7A 2C 20+                              ; wav_player_start+2DC↑o
.rodata:0000C551 25 75 20 62 69 74 0A 00                                     ; .text:off_4038↑o
.rodata:0000C577 45 72 72 6F 72 20 70 6C 61 79+aErrorPlayingSa DCB "Error playing sample",0
.rodata:0000C577 69 6E 67 20 73 61 6D 70 6C 65+                              ; DATA XREF: wav_player_start+406↑o
.rodata:0000C577 00                                                          ; wav_player_start+40A↑o
.rodata:0000C577                                                             ; .text:off_4048↑o
.rodata:0000C58C 55 6E 61 62 6C 65 20 74 6F 20+aUnableToOpenPc DCB "Unable to open PCM device %u.",0
.rodata:0000C58C 6F 70 65 6E 20 50 43 4D 20 64+                              ; DATA XREF: wav_player_start+3C4↑o
.rodata:0000C58C 65 76 69 63 65 20 25 75 2E 00                               ; wav_player_start+3C8↑o
.rodata:0000C58C                                                             ; .text:off_4070↑o
.rodata:0000C5AA 53 61 6D 70 6C 65 20 72 61 74+aSampleRate DCB "Sample rate",0
.rodata:0000C5AA 65 00                                                       ; DATA XREF: wav_player_start+176↑o
.rodata:0000C5AA                                                             ; wav_player_start+17E↑o
.rodata:0000C5AA                                                             ; .text:off_3FE4↑o
.rodata:0000C5B6 48 7A 00                      aHz DCB "Hz",0                ; DATA XREF: wav_player_start+170↑o
.rodata:0000C5B6                                                             ; wav_player_start+17C↑o
.rodata:0000C5B6                                                             ; .text:off_3FE0↑o
.rodata:0000C5B9 53 61 6D 70 6C 65 00          aSample DCB "Sample",0        ; DATA XREF: wav_player_start+190↑o
.rodata:0000C5B9                                                             ; wav_player_start+19A↑o
.rodata:0000C5B9                                                             ; .text:off_3FEC↑o
.rodata:0000C5C0 20 63 68 61 6E 6E 65 6C 73 00 aChannels DCB " channels",0   ; DATA XREF: wav_player_start+18C↑o
.rodata:0000C5C0                                                             ; wav_player_start+192↑o
.rodata:0000C5C0                                                             ; .text:off_3FE8↑o
.rodata:0000C5CA 42 69 74 72 61 74 65 00       aBitrate DCB "Bitrate",0      ; DATA XREF: wav_player_start+1A6↑o
.rodata:0000C5CA                                                             ; wav_player_start+1B0↑o
.rodata:0000C5CA                                                             ; .text:off_3FF4↑o
.rodata:0000C5D2 20 62 69 74 73 00             aBits DCB " bits",0           ; DATA XREF: wav_player_start+1A4↑o
.rodata:0000C5D2                                                             ; wav_player_start+1AA↑o
.rodata:0000C5D2                                                             ; .text:off_3FF0↑o
.rodata:0000C5D8 50 65 72 69 6F 64 20 73 69 7A+aPeriodSize DCB "Period size",0
.rodata:0000C5D8 65 00                                                       ; DATA XREF: wav_player_start+1BA↑o
.rodata:0000C5D8                                                             ; wav_player_start+1C2↑o
.rodata:0000C5D8                                                             ; .text:off_3FF8↑o
.rodata:0000C5E4 50 65 72 69 6F 64 20 63 6F 75+aPeriodCount DCB "Period count",0
.rodata:0000C5E4 6E 74 00                                                    ; DATA XREF: wav_player_start+1D0↑o
.rodata:0000C5E4                                                             ; wav_player_start+1D8↑o
.rodata:0000C5E4                                                             ; .text:off_3FFC↑o
.rodata:0000C5F1 25 73 20 69 73 20 25 75 25 73+aSIsUSDeviceOnl DCB "%s is %u%s, device only supports >= %u%s",0
.rodata:0000C5F1 2C 20 64 65 76 69 63 65 20 6F+                              ; DATA XREF: sub_43AC+1E↑o
.rodata:0000C5F1 6E 6C 79 20 73 75 70 70 6F 72+                              ; sub_43AC+26↑o
.rodata:0000C5F1 74 73 20 3E 3D 20 25 75 25 73+                              ; .text:off_4418↑o
.rodata:0000C61A 25 73 20 69 73 20 25 75 25 73+aSIsUSDeviceOnl_0 DCB "%s is %u%s, device only supports <= %u%s",0
.rodata:0000C61A 2C 20 64 65 76 69 63 65 20 6F+                              ; DATA XREF: sub_43AC+48↑o
.rodata:0000C61A 6E 6C 79 20 73 75 70 70 6F 72+                              ; sub_43AC+50↑o
.rodata:0000C61A 74 73 20 3C 3D 20 25 75 25 73+                              ; .text:off_4420↑o
.rodata:0000C643 25 73 28 29 3A 20 76 6F 6C 75+aSVolumeD DCB "%s(): volume=%d",0
.rodata:0000C643 6D 65 3D 25 64 00                                           ; DATA XREF: sub_427C+40↑o
.rodata:0000C643                                                             ; sub_427C+46↑o
.rodata:0000C643                                                             ; .text:off_42E4↑o
.rodata:0000C653 73 65 74 5F 68 69 66 69 5F 76+aSetHifiVolume DCB "set_hifi_volume",0
.rodata:0000C653 6F 6C 75 6D 65 00                                           ; DATA XREF: sub_427C+42↑o
.rodata:0000C653                                                             ; sub_427C+4A↑o
.rodata:0000C653                                                             ; .text:off_42E8↑o
.rodata:0000C663 25 73 28 29 3A 20 68 65 61 64+aSHeadphoneVolu DCB "%s(): headphone volume=%d",0
.rodata:0000C663 70 68 6F 6E 65 20 76 6F 6C 75+                              ; DATA XREF: sub_42F0+40↑o
.rodata:0000C663 6D 65 3D 25 64 00                                           ; sub_42F0+46↑o
.rodata:0000C663                                                             ; .text:off_4358↑o
.rodata:0000C67D 73 65 74 5F 68 65 61 64 70 68+aSetHeadphoneVo DCB "set_headphone_volume",0
.rodata:0000C67D 6F 6E 65 5F 76 6F 6C 75 6D 65+                              ; DATA XREF: sub_42F0+42↑o
.rodata:0000C67D 00                                                          ; sub_42F0+4A↑o
.rodata:0000C67D                                                             ; .text:off_435C↑o
.rodata:0000C692 61 75 64 69 6F 5F 68 77 5F 69+aAudioHwIf DCB "audio_hw_if",0
.rodata:0000C692 66 00                                                       ; DATA XREF: sub_4424+A↑o
.rodata:0000C692                                                             ; sub_4424+10↑o
.rodata:0000C692                                                             ; .text:off_4640↑o
.rodata:0000C69E 25 73 28 29 3A 20 66 61 69 6C+aSFailedToOpenA_0 DCB "%s(): failed to open audio route, abort...",0
.rodata:0000C69E 65 64 20 74 6F 20 6F 70 65 6E+                              ; DATA XREF: sub_4424+1AC↑o
.rodata:0000C69E 20 61 75 64 69 6F 20 72 6F 75+                              ; sub_4424+1B2↑o
.rodata:0000C69E 74 65 2C 20 61 62 6F 72 74 2E+                              ; .text:off_46D4↑o
.rodata:0000C6C9 61 64 65 76 5F 6F 70 65 6E 00 aAdevOpen DCB "adev_open",0   ; DATA XREF: sub_4424+160↑o
.rodata:0000C6C9                                                             ; sub_4424+16A↑o
.rodata:0000C6C9                                                             ; sub_4424+190↑o
.rodata:0000C6C9                                                             ; sub_4424+19A↑o
.rodata:0000C6C9                                                             ; sub_4424+1AE↑o
.rodata:0000C6C9                                                             ; sub_4424+1B4↑o
.rodata:0000C6C9                                                             ; sub_4424+1C2↑o
.rodata:0000C6C9                                                             ; sub_4424+1C8↑o
.rodata:0000C6C9                                                             ; sub_4424+1D6↑o
.rodata:0000C6C9                                                             ; sub_4424+1DC↑o
.rodata:0000C6C9                                                             ; .text:off_46A0↑o
.rodata:0000C6C9                                                             ; .text:off_46B4↑o
.rodata:0000C6C9                                                             ; .text:off_46C0↑o
.rodata:0000C6C9                                                             ; .text:off_46CC↑o
.rodata:0000C6C9                                                             ; .text:off_46D8↑o
.rodata:0000C6D3 25 73 28 29 3A 20 66 61 69 6C+aSFailedToOpenM DCB "%s(): failed to open mixer, abort...",0
.rodata:0000C6D3 65 64 20 74 6F 20 6F 70 65 6E+                              ; DATA XREF: sub_4424+1C0↑o
.rodata:0000C6D3 20 6D 69 78 65 72 2C 20 61 62+                              ; sub_4424+1C6↑o
.rodata:0000C6D3 6F 72 74 2E 2E 2E 00                                        ; .text:off_46C8↑o
.rodata:0000C6F8 25 73 28 29 3A 20 66 61 69 6C+aSFailedToOpenH DCB "%s(): failed to open HiFi mixer, abort...",0
.rodata:0000C6F8 65 64 20 74 6F 20 6F 70 65 6E+                              ; DATA XREF: sub_4424+1D4↑o
.rodata:0000C6F8 20 48 69 46 69 20 6D 69 78 65+                              ; sub_4424+1DA↑o
.rodata:0000C6F8 72 2C 20 61 62 6F 72 74 2E 2E+                              ; .text:off_46BC↑o
.rodata:0000C722 72 6F 2E 70 72 6F 64 75 63 74+aRoProductLocal DCB "ro.product.locale.region",0
.rodata:0000C722 2E 6C 6F 63 61 6C 65 2E 72 65+                              ; DATA XREF: sub_4424+13E↑o
.rodata:0000C722 67 69 6F 6E 00                                              ; sub_4424+144↑o
.rodata:0000C722                                                             ; .text:off_468C↑o
.rodata:0000C73B 72 6F 2E 70 72 6F 64 75 63 74+aRoProductLocal_0 DCB "ro.product.locale.language",0
.rodata:0000C73B 2E 6C 6F 63 61 6C 65 2E 6C 61+                              ; DATA XREF: sub_4424+14C↑o
.rodata:0000C73B 6E 67 75 61 67 65 00                                        ; sub_4424+154↑o
.rodata:0000C73B                                                             ; .text:off_4694↑o
.rodata:0000C756 25 73 3A 72 65 67 69 6F 6E 3D+aSRegionSLangua DCB "%s:region=%s,language=%s",0
.rodata:0000C756 25 73 2C 6C 61 6E 67 75 61 67+                              ; DATA XREF: sub_4424+15E↑o
.rodata:0000C756 65 3D 25 73 00                                              ; sub_4424+164↑o
.rodata:0000C756                                                             ; .text:off_469C↑o
.rodata:0000C76F 43 4E 00                      aCn DCB "CN",0                ; DATA XREF: sub_4424+170↑o
.rodata:0000C76F                                                             ; sub_4424+174↑o
.rodata:0000C76F                                                             ; .text:off_46A4↑o
.rodata:0000C772 7A 68 00                      aZh DCB "zh",0                ; DATA XREF: sub_4424+17C↑o
.rodata:0000C772                                                             ; sub_4424+180↑o
.rodata:0000C772                                                             ; .text:off_46A8↑o
.rodata:0000C775 25 73 3A 69 73 5F 6F 76 65 72+aSIsOverseaD DCB "%s:is_oversea=%d",0
.rodata:0000C775 73 65 61 3D 25 64 00                                        ; DATA XREF: sub_4424+18E↑o
.rodata:0000C775                                                             ; sub_4424+198↑o
.rodata:0000C775                                                             ; .text:off_46B0↑o
.rodata:0000C786 25 73 28 29 3A 20 76 6F 69 63+aSVoiceVolumeS DCB "%s(): voice volume = %s",0
.rodata:0000C786 65 20 76 6F 6C 75 6D 65 20 3D+                              ; DATA XREF: sub_4710+4A↑o
.rodata:0000C786 20 25 73 00                                                 ; sub_4710+58↑o
.rodata:0000C786                                                             ; .text:off_4814↑o
.rodata:0000C79E 61 64 65 76 5F 73 65 74 5F 76+aAdevSetVoiceVo DCB "adev_set_voice_volume",0
.rodata:0000C79E 6F 69 63 65 5F 76 6F 6C 75 6D+                              ; DATA XREF: sub_4710+4E↑o
.rodata:0000C79E 65 00                                                       ; sub_4710+5A↑o
.rodata:0000C79E                                                             ; .text:off_4818↑o
.rodata:0000C7B4 25 73 28 29 3A 20 61 75 74 6F+aSAutoAnswerFix DCB "%s(): auto answer, fixed modem volume at 0dB",0
.rodata:0000C7B4 20 61 6E 73 77 65 72 2C 20 66+                              ; DATA XREF: sub_55E8+3A↑o
.rodata:0000C7B4 69 78 65 64 20 6D 6F 64 65 6D+                              ; sub_55E8+40↑o
.rodata:0000C7B4 20 76 6F 6C 75 6D 65 20 61 74+                              ; .text:off_567C↑o
.rodata:0000C7E1 73 65 74 5F 76 6F 69 63 65 5F+aSetVoiceVolume DCB "set_voice_volume",0
.rodata:0000C7E1 76 6F 6C 75 6D 65 00                                        ; DATA XREF: sub_55E8+3C↑o
.rodata:0000C7E1                                                             ; sub_55E8+42↑o
.rodata:0000C7E1                                                             ; sub_55E8+52↑o
.rodata:0000C7E1                                                             ; sub_55E8+5C↑o
.rodata:0000C7E1                                                             ; sub_55E8+7A↑o
.rodata:0000C7E1                                                             ; sub_55E8+82↑o
.rodata:0000C7E1                                                             ; .text:off_5680↑o
.rodata:0000C7E1                                                             ; .text:off_568C↑o
.rodata:0000C7E1                                                             ; .text:off_5698↑o
.rodata:0000C7F2 25 73 28 29 3A 20 6F 75 74 5F+aSOutDevice0x02 DCB "%s(): out_device=0x%02x, voice_volome_level=%d",0
.rodata:0000C7F2 64 65 76 69 63 65 3D 30 78 25+                              ; DATA XREF: sub_55E8+50↑o
.rodata:0000C7F2 30 32 78 2C 20 76 6F 69 63 65+                              ; sub_55E8+5A↑o
.rodata:0000C7F2 5F 76 6F 6C 6F 6D 65 5F 6C 65+                              ; .text:off_5688↑o
.rodata:0000C821 25 73 28 29 3A 20 66 61 69 6C+aSFailedToSetCp DCB "%s(): failed to set cp volume, retry again, ret=%d",0
.rodata:0000C821 65 64 20 74 6F 20 73 65 74 20+                              ; DATA XREF: sub_55E8+78↑o
.rodata:0000C821 63 70 20 76 6F 6C 75 6D 65 2C+                              ; sub_55E8+80↑o
.rodata:0000C821 20 72 65 74 72 79 20 61 67 61+                              ; .text:off_5694↑o
.rodata:0000C854 25 73 28 29 3A 20 6D 6F 64 65+aSModeChangeDD DCB "%s(): mode change: (%d >> %d)",0
.rodata:0000C854 20 63 68 61 6E 67 65 3A 20 28+                              ; DATA XREF: sub_482C+6↑o
.rodata:0000C854 25 64 20 3E 3E 20 25 64 29 00                               ; sub_482C+10↑o
.rodata:0000C854                                                             ; .text:off_4AC0↑o
.rodata:0000C872 61 64 65 76 5F 73 65 74 5F 6D+aAdevSetMode DCB "adev_set_mode",0
.rodata:0000C872 6F 64 65 00                                                 ; DATA XREF: sub_482C+12↑o
.rodata:0000C872                                                             ; sub_482C+1A↑o
.rodata:0000C872                                                             ; .text:off_4AC4↑o
.rodata:0000C880 45 6E 74 65 72 69 6E 67 20 49+aEnteringInCall DCB "Entering IN_CALL state",0
.rodata:0000C880 4E 5F 43 41 4C 4C 20 73 74 61+                              ; DATA XREF: sub_482C+4C↑o
.rodata:0000C880 74 65 00                                                    ; sub_482C+50↑o
.rodata:0000C880                                                             ; .text:off_4AE8↑o
.rodata:0000C897 4C 65 61 76 69 6E 67 20 49 4E+aLeavingInCallS DCB "Leaving IN_CALL state",0
.rodata:0000C897 5F 43 41 4C 4C 20 73 74 61 74+                              ; DATA XREF: sub_482C+7C↑o
.rodata:0000C897 65 00                                                       ; sub_482C+80↑o
.rodata:0000C897                                                             ; .text:off_4ACC↑o
.rodata:0000C8AD 45 6E 74 65 72 69 6E 67 20 49+aEnteringInComm DCB "Entering IN_COMMUNICATION state",0
.rodata:0000C8AD 4E 5F 43 4F 4D 4D 55 4E 49 43+                              ; DATA XREF: sub_482C+222↑o
.rodata:0000C8AD 41 54 49 4F 4E 20 73 74 61 74+                              ; sub_482C+226↑o
.rodata:0000C8AD 65 00                                                       ; .text:off_4B30↑o
.rodata:0000C8CD 4C 65 61 76 69 6E 67 20 49 4E+aLeavingInCommu DCB "Leaving IN_COMMUNICATION state",0
.rodata:0000C8CD 5F 43 4F 4D 4D 55 4E 49 43 41+                              ; DATA XREF: sub_482C+24E↑o
.rodata:0000C8CD 54 49 4F 4E 20 73 74 61 74 65+                              ; sub_482C+252↑o
.rodata:0000C8CD 00                                                          ; .text:off_4B28↑o
.rodata:0000C8EC 25 73 28 29 3A 2E 2E 2E 00    aS_0 DCB "%s():...",0         ; DATA XREF: sub_482C+88↑o
.rodata:0000C8EC                                                             ; sub_482C+90↑o
.rodata:0000C8EC                                                             ; sub_482C+110↑o
.rodata:0000C8EC                                                             ; sub_482C+11A↑o
.rodata:0000C8EC                                                             ; .text:off_4AD0↑o
.rodata:0000C8EC                                                             ; .text:off_4AF0↑o
.rodata:0000C8EC                                                             ; sub_52F4+16↑o
.rodata:0000C8EC                                                             ; sub_52F4+1E↑o
.rodata:0000C8EC                                                             ; .text:off_54A8↑o
.rodata:0000C8EC                                                             ; sub_5730+488↑o
.rodata:0000C8EC                                                             ; sub_5730+492↑o
.rodata:0000C8EC                                                             ; sub_5730+504↑o
.rodata:0000C8EC                                                             ; sub_5730+50E↑o
.rodata:0000C8EC                                                             ; .text:off_5FD8↑o
.rodata:0000C8EC                                                             ; .text:off_5FE4↑o ...
.rodata:0000C8F5 64 6F 5F 69 6E 5F 73 74 61 6E+aDoInStandby DCB "do_in_standby",0
.rodata:0000C8F5 64 62 79 00                                                 ; DATA XREF: sub_605C+C↑o
.rodata:0000C8F5                                                             ; sub_605C+14↑o
.rodata:0000C8F5                                                             ; sub_605C+4E↑o
.rodata:0000C8F5                                                             ; sub_605C+68↑o
.rodata:0000C8F5                                                             ; .text:off_6154↑o
.rodata:0000C8F5                                                             ; .text:off_6160↑o
.rodata:0000C903 25 73 28 29 3A 20 61 73 72 5F+aSAsrReadyDIsCv DCB "%s(): asr_ready=%d, is_cvq=%d",0
.rodata:0000C903 72 65 61 64 79 3D 25 64 2C 20+                              ; DATA XREF: sub_605C+4C↑o
.rodata:0000C903 69 73 5F 63 76 71 3D 25 64 00                               ; sub_605C+54↑o
.rodata:0000C903                                                             ; .text:off_615C↑o
.rodata:0000C921 25 73 28 29 3A 20 66 61 69 6C+aSFailedToPower_0 DCB "%s(): failed to power off tfa98xx",0
.rodata:0000C921 65 64 20 74 6F 20 70 6F 77 65+                              ; DATA XREF: sub_6164+E↑o
.rodata:0000C921 72 20 6F 66 66 20 74 66 61 39+                              ; sub_6164+14↑o
.rodata:0000C921 38 78 78 00                                                 ; .text:off_61B0↑o
.rodata:0000C921                                                             ; sub_66B0+426↑o
.rodata:0000C921                                                             ; sub_66B0+42C↑o
.rodata:0000C921                                                             ; .text:off_6C9C↑o
.rodata:0000C943 73 74 6F 70 5F 61 6D 70 6C 69+aStopAmplifier DCB "stop_amplifier",0
.rodata:0000C943 66 69 65 72 00                                              ; DATA XREF: sub_6164+10↑o
.rodata:0000C943                                                             ; sub_6164+16↑o
.rodata:0000C943                                                             ; .text:off_61B4↑o
.rodata:0000C952 64 6F 5F 6F 75 74 5F 73 74 61+aDoOutStandby DCB "do_out_standby",0
.rodata:0000C952 6E 64 62 79 00                                              ; DATA XREF: sub_61B8+C↑o
.rodata:0000C952                                                             ; sub_61B8+16↑o
.rodata:0000C952                                                             ; .text:off_6298↑o
.rodata:0000C961 73 74 6F 70 5F 62 61 63 6B 65+aStopBackend DCB "stop_backend",0
.rodata:0000C961 6E 64 00                                                    ; DATA XREF: sub_629C+A↑o
.rodata:0000C961                                                             ; sub_629C+10↑o
.rodata:0000C961                                                             ; .text:off_62DC↑o
.rodata:0000C96E 73 74 61 72 74 5F 63 61 6C 6C+aStartCall DCB "start_call",0 ; DATA XREF: sub_482C+112↑o
.rodata:0000C96E 00                                                          ; sub_482C+11C↑o
.rodata:0000C96E                                                             ; sub_482C+13A↑o
.rodata:0000C96E                                                             ; sub_482C+142↑o
.rodata:0000C96E                                                             ; sub_482C+1BC↑o
.rodata:0000C96E                                                             ; sub_482C+1C4↑o
.rodata:0000C96E                                                             ; sub_482C+1D8↑o
.rodata:0000C96E                                                             ; sub_482C+1E0↑o
.rodata:0000C96E                                                             ; .text:off_4AF4↑o
.rodata:0000C96E                                                             ; .text:off_4B00↑o
.rodata:0000C96E                                                             ; .text:off_4B10↑o
.rodata:0000C96E                                                             ; .text:off_4B20↑o
.rodata:0000C979 25 73 28 29 3A 20 66 61 69 6C+aSFailedToEnabl DCB "%s(): failed to enable cp i2s clock, retry again, ret=%d",0
.rodata:0000C979 65 64 20 74 6F 20 65 6E 61 62+                              ; DATA XREF: sub_482C+138↑o
.rodata:0000C979 6C 65 20 63 70 20 69 32 73 20+                              ; sub_482C+140↑o
.rodata:0000C979 63 6C 6F 63 6B 2C 20 72 65 74+                              ; .text:off_4AFC↑o
.rodata:0000C9B2 25 73 28 29 3A 20 70 63 6D 5F+aSPcmOpenVoiceO DCB "%s(): pcm_open(VOICE_OUT) failed: %s",0
.rodata:0000C9B2 6F 70 65 6E 28 56 4F 49 43 45+                              ; DATA XREF: sub_482C+1BA↑o
.rodata:0000C9B2 5F 4F 55 54 29 20 66 61 69 6C+                              ; sub_482C+1C2↑o
.rodata:0000C9B2 65 64 3A 20 25 73 00                                        ; .text:off_4B0C↑o
.rodata:0000C9D7 25 73 28 29 3A 20 70 63 6D 5F+aSPcmOpenVoiceI DCB "%s(): pcm_open(VOICE_IN) failed: %s",0
.rodata:0000C9D7 6F 70 65 6E 28 56 4F 49 43 45+                              ; DATA XREF: sub_482C+1D6↑o
.rodata:0000C9D7 5F 49 4E 29 20 66 61 69 6C 65+                              ; sub_482C+1DE↑o
.rodata:0000C9D7 64 3A 20 25 73 00                                           ; .text:off_4B1C↑o
.rodata:0000C9FB 25 73 28 29 3A 20 64 65 76 69+aSDevicesXInput DCB "%s(): devices %#x input src %d output route %s input route %s",0
.rodata:0000C9FB 63 65 73 20 25 23 78 20 69 6E+                              ; DATA XREF: sub_5730+666↑o
.rodata:0000C9FB 70 75 74 20 73 72 63 20 25 64+                              ; sub_5730+66C↑o
.rodata:0000C9FB 20 6F 75 74 70 75 74 20 72 6F+                              ; .text:off_6024↑o
.rodata:0000CA39 73 65 6C 65 63 74 5F 64 65 76+aSelectDevices DCB "select_devices",0
.rodata:0000CA39 69 63 65 73 00                                              ; DATA XREF: sub_5730+668↑o
.rodata:0000CA39                                                             ; sub_5730+66E↑o
.rodata:0000CA39                                                             ; sub_5730+690↑o
.rodata:0000CA39                                                             ; sub_5730+696↑o
.rodata:0000CA39                                                             ; .text:off_6028↑o
.rodata:0000CA39                                                             ; .text:off_6034↑o
.rodata:0000CA48 6E 6F 6E 65 00                aNone DCB "none",0            ; DATA XREF: sub_5730:loc_5D70↑o
.rodata:0000CA48                                                             ; sub_5730+648↑o
.rodata:0000CA48                                                             ; .text:off_601C↑o
.rodata:0000CA4D 25 73 28 29 3A 20 72 6F 75 74+aSRouteTimeMeas DCB "%s(): route time measurement: start",0
.rodata:0000CA4D 65 20 74 69 6D 65 20 6D 65 61+                              ; DATA XREF: sub_5730+692↑o
.rodata:0000CA4D 73 75 72 65 6D 65 6E 74 3A 20+                              ; sub_5730+69A↑o
.rodata:0000CA4D 73 74 61 72 74 00                                           ; .text:off_6030↑o
.rodata:0000CA71 25 73 28 29 3A 20 72 6F 75 74+aSRouteTimeMeas_0 DCB "%s(): route time measurement: end",0
.rodata:0000CA71 65 20 74 69 6D 65 20 6D 65 61+                              ; DATA XREF: sub_5730+6AA↑o
.rodata:0000CA71 73 75 72 65 6D 65 6E 74 3A 20+                              ; sub_5730+6B2↑o
.rodata:0000CA71 65 6E 64 00                                                 ; .text:off_6038↑o
.rodata:0000CA93 68 77 2E 6D 65 73 73 61 67 65+aHwMessagerecor DCB "hw.messagerecord.state",0
.rodata:0000CA93 72 65 63 6F 72 64 2E 73 74 61+                              ; DATA XREF: sub_5730+60↑o
.rodata:0000CA93 74 65 00                                                    ; sub_5730+6A↑o
.rodata:0000CA93                                                             ; .text:off_5F38↑o
.rodata:0000CAAA 25 73 28 29 3A 20 63 61 6E 6E+aSCannTGetHwMes DCB "%s(): cann't get hw.messagerecord.state",0
.rodata:0000CAAA 27 74 20 67 65 74 20 68 77 2E+                              ; DATA XREF: sub_5730+C6↑o
.rodata:0000CAAA 6D 65 73 73 61 67 65 72 65 63+                              ; sub_5730+D0↑o
.rodata:0000CAAA 6F 72 64 2E 73 74 61 74 65 00                               ; .text:off_5F4C↑o
.rodata:0000CAD2 73 65 74 5F 76 6F 69 63 65 5F+aSetVoiceAutoan DCB "set_voice_autoanswer",0
.rodata:0000CAD2 61 75 74 6F 61 6E 73 77 65 72+                              ; DATA XREF: sub_5730+CA↑o
.rodata:0000CAD2 00                                                          ; sub_5730+D2↑o
.rodata:0000CAD2                                                             ; .text:off_5F50↑o
.rodata:0000CAE7 76 6F 69 63 65 2D 63 61 6C 6C+aVoiceCallAutoA DCB "voice-call-auto-answer-capture",0
.rodata:0000CAE7 2D 61 75 74 6F 2D 61 6E 73 77+                              ; DATA XREF: sub_5730+A8↑o
.rodata:0000CAE7 65 72 2D 63 61 70 74 75 72 65+                              ; sub_5730+B0↑o
.rodata:0000CAE7 00                                                          ; .text:off_5F44↑o
.rodata:0000CB06 2F 73 79 73 2F 63 6C 61 73 73+aSysClassArizon DCB "/sys/class/arizona/wm8998_hp_impedance/hp_impedance",0
.rodata:0000CB06 2F 61 72 69 7A 6F 6E 61 2F 77+                              ; DATA XREF: sub_62E0+12↑o
.rodata:0000CB06 6D 38 39 39 38 5F 68 70 5F 69+                              ; sub_62E0+14↑o
.rodata:0000CB06 6D 70 65 64 61 6E 63 65 2F 68+                              ; sub_62E0:loc_631E↑o
.rodata:0000CB06 70 5F 69 6D 70 65 64 61 6E 63+                              ; sub_62E0+44↑o
.rodata:0000CB06 65 00                                                       ; sub_62E0:loc_6342↑o
.rodata:0000CB06                                                             ; sub_62E0+68↑o
.rodata:0000CB06                                                             ; .text:off_65BC↑o
.rodata:0000CB06                                                             ; .text:off_65C0↑o
.rodata:0000CB06                                                             ; .text:off_65D0↑o
.rodata:0000CB3A 25 73 20 3A 20 25 64 00       aSD DCB "%s : %d",0           ; DATA XREF: sub_62E0+F4↑o
.rodata:0000CB3A                                                             ; sub_62E0+FC↑o
.rodata:0000CB3A                                                             ; .text:off_6638↑o
.rodata:0000CB42 73 65 74 5F 68 69 66 69 5F 67+aSetHifiGain DCB "set_hifi_gain",0
.rodata:0000CB42 61 69 6E 00                                                 ; DATA XREF: sub_62E0+98↑o
.rodata:0000CB42                                                             ; sub_62E0+9E↑o
.rodata:0000CB42                                                             ; sub_62E0+F6↑o
.rodata:0000CB42                                                             ; sub_62E0+FE↑o
.rodata:0000CB42                                                             ; sub_62E0+106↑o
.rodata:0000CB42                                                             ; sub_62E0+10C↑o
.rodata:0000CB42                                                             ; sub_62E0+1B6↑o
.rodata:0000CB42                                                             ; sub_62E0+1BE↑o
.rodata:0000CB42                                                             ; sub_62E0+210↑o
.rodata:0000CB42                                                             ; sub_62E0+21A↑o
.rodata:0000CB42                                                             ; .text:off_65E8↑o
.rodata:0000CB42                                                             ; .text:off_65F4↑o
.rodata:0000CB42                                                             ; .text:off_6600↑o
.rodata:0000CB42                                                             ; .text:off_6630↑o
.rodata:0000CB42                                                             ; .text:off_663C↑o
.rodata:0000CB50 25 73 28 29 3A 20 68 70 5F 69+aSHpImpedanceDG DCB "%s(): hp_impedance=%d, gain_state=%d",0
.rodata:0000CB50 6D 70 65 64 61 6E 63 65 3D 25+                              ; DATA XREF: sub_62E0+8C↑o
.rodata:0000CB50 64 2C 20 67 61 69 6E 5F 73 74+                              ; sub_62E0+96↑o
.rodata:0000CB50 61 74 65 3D 25 64 00                                        ; .text:off_65E4↑o
.rodata:0000CB75 25 73 28 29 3A 20 69 6E 76 61+aSInvalidGainSt DCB "%s(): invalid gain state",0
.rodata:0000CB75 6C 69 64 20 67 61 69 6E 20 73+                              ; DATA XREF: sub_62E0+104↑o
.rodata:0000CB75 74 61 74 65 00                                              ; sub_62E0+10A↑o
.rodata:0000CB75                                                             ; .text:off_662C↑o
.rodata:0000CB8E 25 73 3A 69 73 5F 6F 76 65 72+aSIsOverseaDImp DCB "%s:is_oversea=%d,impedance=%d",0
.rodata:0000CB8E 73 65 61 3D 25 64 2C 69 6D 70+                              ; DATA XREF: sub_62E0+1B4↑o
.rodata:0000CB8E 65 64 61 6E 63 65 3D 25 64 00                               ; sub_62E0+1BC↑o
.rodata:0000CB8E                                                             ; .text:off_65F0↑o
.rodata:0000CBAC 25 73 28 29 3A 20 67 61 69 6E+aSGainDDVolumeC DCB "%s(): gain: %d >> %d,volume_compensation=%d",0
.rodata:0000CBAC 3A 20 25 64 20 3E 3E 20 25 64+                              ; DATA XREF: sub_62E0+20E↑o
.rodata:0000CBAC 2C 76 6F 6C 75 6D 65 5F 63 6F+                              ; sub_62E0+218↑o
.rodata:0000CBAC 6D 70 65 6E 73 61 74 69 6F 6E+                              ; .text:off_65FC↑o
.rodata:0000CBD8 49 49 52 20 62 61 6E 64 77 69+aIirBandwidth DCB "IIR bandwidth",0
.rodata:0000CBD8 64 74 68 00                                                 ; DATA XREF: sub_62E0+246↑o
.rodata:0000CBD8                                                             ; sub_62E0+24E↑o
.rodata:0000CBD8                                                             ; .text:off_660C↑o
.rodata:0000CBE6 63 75 73 74 6F 6D 20 46 49 52+aCustomFirEnabl DCB "custom FIR enable",0
.rodata:0000CBE6 20 65 6E 61 62 6C 65 00                                     ; DATA XREF: sub_62E0+28C↑o
.rodata:0000CBE6                                                             ; sub_62E0+294↑o
.rodata:0000CBE6                                                             ; .text:off_6620↑o
.rodata:0000CBF8 73 74 61 67 65 32 20 66 69 6C+aStage2FilterTy DCB "stage2 filter type",0
.rodata:0000CBF8 74 65 72 20 74 79 70 65 00                                  ; DATA XREF: sub_62E0+29A↑o
.rodata:0000CBF8                                                             ; sub_62E0+2A2↑o
.rodata:0000CBF8                                                             ; .text:off_6624↑o
.rodata:0000CC0B 25 73 28 29 3A 20 66 61 69 6C+aSFailedToReadS DCB "%s(): failed to read %s",0
.rodata:0000CC0B 65 64 20 74 6F 20 72 65 61 64+                              ; DATA XREF: sub_62E0+66↑o
.rodata:0000CC0B 20 25 73 00                                                 ; sub_62E0+70↑o
.rodata:0000CC0B                                                             ; .text:off_65D8↑o
.rodata:0000CC23 72 65 61 64 5F 69 6D 70 65 64+aReadImpedance DCB "read_impedance",0
.rodata:0000CC23 61 6E 63 65 00                                              ; DATA XREF: sub_62E0+46↑o
.rodata:0000CC23                                                             ; sub_62E0+4E↑o
.rodata:0000CC23                                                             ; sub_62E0+6A↑o
.rodata:0000CC23                                                             ; sub_62E0+72↑o
.rodata:0000CC23                                                             ; .text:off_65CC↑o
.rodata:0000CC23                                                             ; .text:off_65DC↑o
.rodata:0000CC32 25 73 28 29 3A 20 66 61 69 6C+aSFailedToOpenS DCB "%s(): failed to open %s",0xA,0
.rodata:0000CC32 65 64 20 74 6F 20 6F 70 65 6E+                              ; DATA XREF: sub_62E0+42↑o
.rodata:0000CC32 20 25 73 0A 00                                              ; sub_62E0+4C↑o
.rodata:0000CC32                                                             ; .text:off_65C8↑o
.rodata:0000CC4B 25 73 28 29 3A 20 6F 70 65 6E+aSOpenSDaiRateD DCB "%s(): open %s-dai, rate=%d, format=%d,channels=%d",0
.rodata:0000CC4B 20 25 73 2D 64 61 69 2C 20 72+                              ; DATA XREF: sub_5730+2A2↑o
.rodata:0000CC4B 61 74 65 3D 25 64 2C 20 66 6F+                              ; sub_5730+2AC↑o
.rodata:0000CC4B 72 6D 61 74 3D 25 64 2C 63 68+                              ; .text:off_5F8C↑o
.rodata:0000CC7D 73 74 61 72 74 5F 62 61 63 6B+aStartBackend DCB "start_backend",0
.rodata:0000CC7D 65 6E 64 00                                                 ; DATA XREF: sub_5730+2AE↑o
.rodata:0000CC7D                                                             ; sub_5730+2B8↑o
.rodata:0000CC7D                                                             ; sub_5730+35A↑o
.rodata:0000CC7D                                                             ; sub_5730+364↑o
.rodata:0000CC7D                                                             ; sub_5730+37E↑o
.rodata:0000CC7D                                                             ; sub_5730+388↑o
.rodata:0000CC7D                                                             ; .text:off_5F90↑o
.rodata:0000CC7D                                                             ; .text:off_5F9C↑o
.rodata:0000CC7D                                                             ; .text:off_5FA8↑o
.rodata:0000CC8B 6D 65 64 69 61 00             aMedia DCB "media",0          ; DATA XREF: sub_5730+2A8↑o
.rodata:0000CC8B                                                             ; sub_5730+2B6↑o
.rodata:0000CC8B                                                             ; .text:off_5F84↑o
.rodata:0000CC91 25 73 28 29 3A 20 70 63 6D 5F+aSPcmOpenBacken_0 DCB "%s(): pcm_open(BACKEND_OUT) failed: %s",0
.rodata:0000CC91 6F 70 65 6E 28 42 41 43 4B 45+                              ; DATA XREF: sub_5730+356↑o
.rodata:0000CC91 4E 44 5F 4F 55 54 29 20 66 61+                              ; sub_5730+362↑o
.rodata:0000CC91 69 6C 65 64 3A 20 25 73 00                                  ; .text:off_5F98↑o
.rodata:0000CCB8 25 73 28 29 3A 20 70 63 6D 5F+aSPcmOpenBacken_1 DCB "%s(): pcm_open(BACKEND_IN) failed: %s",0
.rodata:0000CCB8 6F 70 65 6E 28 42 41 43 4B 45+                              ; DATA XREF: sub_5730+37A↑o
.rodata:0000CCB8 4E 44 5F 49 4E 29 20 66 61 69+                              ; sub_5730+386↑o
.rodata:0000CCB8 6C 65 64 3A 20 25 73 00                                     ; .text:off_5FA4↑o
.rodata:0000CCDE 41 49 46 32 54 58 31 20 49 6E+aAif2tx1Input1 DCB "AIF2TX1 Input 1",0
.rodata:0000CCDE 70 75 74 20 31 00                                           ; DATA XREF: sub_5730+200↑o
.rodata:0000CCDE                                                             ; sub_5730+20A↑o
.rodata:0000CCDE                                                             ; sub_5730+76A↑o
.rodata:0000CCDE                                                             ; sub_5730+772↑o
.rodata:0000CCDE                                                             ; .text:off_5F6C↑o
.rodata:0000CCDE                                                             ; .text:off_6050↑o
.rodata:0000CCEE 41 49 46 32 54 58 32 20 49 6E+aAif2tx2Input1 DCB "AIF2TX2 Input 1",0
.rodata:0000CCEE 70 75 74 20 31 00                                           ; DATA XREF: sub_5730+210↑o
.rodata:0000CCEE                                                             ; sub_5730+21A↑o
.rodata:0000CCEE                                                             ; sub_5730+778↑o
.rodata:0000CCEE                                                             ; sub_5730+780↑o
.rodata:0000CCEE                                                             ; .text:off_5F70↑o
.rodata:0000CCEE                                                             ; .text:off_6054↑o
.rodata:0000CCFE 25 73 28 29 3A 20 70 63 6D 5F+aSPcmOpenPaOutF DCB "%s(): pcm_open(PA_OUT) failed: %s",0
.rodata:0000CCFE 6F 70 65 6E 28 50 41 5F 4F 55+                              ; DATA XREF: sub_5730+7B0↑o
.rodata:0000CCFE 54 29 20 66 61 69 6C 65 64 3A+                              ; sub_5730+7B8↑o
.rodata:0000CCFE 20 25 73 00                                                 ; .text:off_5FC0↑o
.rodata:0000CD20 70 72 65 5F 73 74 61 72 74 5F+aPreStartAmplif DCB "pre_start_amplifier",0
.rodata:0000CD20 61 6D 70 6C 69 66 69 65 72 00                               ; DATA XREF: sub_5730+7B2↑o
.rodata:0000CD20                                                             ; sub_5730+7BA↑o
.rodata:0000CD20                                                             ; sub_5730+7CE↑o
.rodata:0000CD20                                                             ; sub_5730+7D6↑o
.rodata:0000CD20                                                             ; .text:off_5FC4↑o
.rodata:0000CD20                                                             ; .text:off_5FD0↑o
.rodata:0000CD34 25 73 28 29 3A 20 70 63 6D 5F+aSPcmOpenPaInFa DCB "%s(): pcm_open(PA_IN) failed: %s",0
.rodata:0000CD34 6F 70 65 6E 28 50 41 5F 49 4E+                              ; DATA XREF: sub_5730+7CC↑o
.rodata:0000CD34 29 20 66 61 69 6C 65 64 3A 20+                              ; sub_5730+7D4↑o
.rodata:0000CD34 25 73 00                                                    ; .text:off_5FCC↑o
.rodata:0000CD55 73 74 61 72 74 5F 62 74 5F 73+aStartBtSco DCB "start_bt_sco",0
.rodata:0000CD55 63 6F 00                                                    ; DATA XREF: sub_5730+48C↑o
.rodata:0000CD55                                                             ; sub_5730+494↑o
.rodata:0000CD55                                                             ; sub_5730+554↑o
.rodata:0000CD55                                                             ; sub_5730+55E↑o
.rodata:0000CD55                                                             ; sub_5730+572↑o
.rodata:0000CD55                                                             ; sub_5730+57A↑o
.rodata:0000CD55                                                             ; .text:off_5FE8↑o
.rodata:0000CD55                                                             ; .text:off_5FF8↑o
.rodata:0000CD55                                                             ; .text:off_6008↑o
.rodata:0000CD62 25 73 28 29 3A 20 70 63 6D 5F+aSPcmOpenScoOut DCB "%s(): pcm_open(SCO_OUT) failed: %s",0
.rodata:0000CD62 6F 70 65 6E 28 53 43 4F 5F 4F+                              ; DATA XREF: sub_5730+550↑o
.rodata:0000CD62 55 54 29 20 66 61 69 6C 65 64+                              ; sub_5730+55C↑o
.rodata:0000CD62 3A 20 25 73 00                                              ; .text:off_5FF4↑o
.rodata:0000CD85 25 73 28 29 3A 20 70 63 6D 5F+aSPcmOpenScoInF DCB "%s(): pcm_open(SCO_IN) failed: %s",0
.rodata:0000CD85 6F 70 65 6E 28 53 43 4F 5F 49+                              ; DATA XREF: sub_5730+570↑o
.rodata:0000CD85 4E 29 20 66 61 69 6C 65 64 3A+                              ; sub_5730+578↑o
.rodata:0000CD85 20 25 73 00                                                 ; .text:off_6004↑o
.rodata:0000CDA7 73 74 6F 70 5F 62 74 5F 73 63+aStopBtSco DCB "stop_bt_sco",0
.rodata:0000CDA7 6F 00                                                       ; DATA XREF: sub_5730+508↑o
.rodata:0000CDA7                                                             ; sub_5730+510↑o
.rodata:0000CDA7                                                             ; .text:off_5FDC↑o
.rodata:0000CDB3 25 73 28 29 3A 20 66 61 69 6C+aSFailedToPower DCB "%s(): failed to power on tfa98xx",0
.rodata:0000CDB3 65 64 20 74 6F 20 70 6F 77 65+                              ; DATA XREF: sub_5730+718↑o
.rodata:0000CDB3 72 20 6F 6E 20 74 66 61 39 38+                              ; sub_5730+71E↑o
.rodata:0000CDB3 78 78 00                                                    ; .text:off_6040↑o
.rodata:0000CDB3                                                             ; sub_66B0+364↑o
.rodata:0000CDB3                                                             ; sub_66B0+36A↑o
.rodata:0000CDB3                                                             ; .text:off_6CA8↑o
.rodata:0000CDD4 73 74 61 72 74 5F 61 6D 70 6C+aStartAmplifier DCB "start_amplifier",0
.rodata:0000CDD4 69 66 69 65 72 00                                           ; DATA XREF: sub_5730+71A↑o
.rodata:0000CDD4                                                             ; sub_5730+720↑o
.rodata:0000CDD4                                                             ; .text:off_6044↑o
.rodata:0000CDE4 65 6E 64 5F 63 61 6C 6C 00    aEndCall DCB "end_call",0     ; DATA XREF: sub_482C+8C↑o
.rodata:0000CDE4                                                             ; sub_482C+94↑o
.rodata:0000CDE4                                                             ; sub_482C+E8↑o
.rodata:0000CDE4                                                             ; sub_482C+F0↑o
.rodata:0000CDE4                                                             ; .text:off_4AD4↑o
.rodata:0000CDE4                                                             ; .text:off_4AE0↑o
.rodata:0000CDED 25 73 28 29 3A 20 66 61 69 6C+aSFailedToDisab DCB "%s(): failed to disable cp i2s clock, retry again, ret=%d",0
.rodata:0000CDED 65 64 20 74 6F 20 64 69 73 61+                              ; DATA XREF: sub_482C+E6↑o
.rodata:0000CDED 62 6C 65 20 63 70 20 69 32 73+                              ; sub_482C+EE↑o
.rodata:0000CDED 20 63 6C 6F 63 6B 2C 20 72 65+                              ; .text:off_4ADC↑o
.rodata:0000CE27 25 73 28 29 3A 20 6B 76 70 61+aSKvpairsS DCB "%s(): kvpairs = %s",0
.rodata:0000CE27 69 72 73 20 3D 20 25 73 00                                  ; DATA XREF: sub_4B48+1E↑o
.rodata:0000CE27                                                             ; sub_4B48+26↑o
.rodata:0000CE27                                                             ; .text:off_4E00↑o
.rodata:0000CE27                                                             ; sub_4E6C+1C↑o
.rodata:0000CE27                                                             ; sub_4E6C+24↑o
.rodata:0000CE27                                                             ; .text:off_4F94↑o
.rodata:0000CE3A 61 64 65 76 5F 73 65 74 5F 70+aAdevSetParamet DCB "adev_set_parameters",0
.rodata:0000CE3A 61 72 61 6D 65 74 65 72 73 00                               ; DATA XREF: sub_4B48+22↑o
.rodata:0000CE3A                                                             ; sub_4B48+2C↑o
.rodata:0000CE3A                                                             ; sub_4B48+A8↑o
.rodata:0000CE3A                                                             ; sub_4B48+B2↑o
.rodata:0000CE3A                                                             ; sub_4B48+110↑o
.rodata:0000CE3A                                                             ; sub_4B48+11A↑o
.rodata:0000CE3A                                                             ; sub_4B48+158↑o
.rodata:0000CE3A                                                             ; sub_4B48+162↑o
.rodata:0000CE3A                                                             ; .text:off_4E04↑o
.rodata:0000CE3A                                                             ; .text:off_4E24↑o
.rodata:0000CE3A                                                             ; .text:off_4E3C↑o
.rodata:0000CE3A                                                             ; .text:off_4E4C↑o
.rodata:0000CE4E 62 74 5F 68 65 61 64 73 65 74+aBtHeadsetNrec DCB "bt_headset_nrec",0
.rodata:0000CE4E 5F 6E 72 65 63 00                                           ; DATA XREF: sub_4B48+32↑o
.rodata:0000CE4E                                                             ; sub_4B48+3A↑o
.rodata:0000CE4E                                                             ; .text:off_4E08↑o
.rodata:0000CE5E 6F 6E 00                      aOn DCB "on",0                ; DATA XREF: sub_4B48+44↑o
.rodata:0000CE5E                                                             ; sub_4B48+48↑o
.rodata:0000CE5E                                                             ; sub_4B48+6C↑o
.rodata:0000CE5E                                                             ; sub_4B48+70↑o
.rodata:0000CE5E                                                             ; sub_4B48+232↑o
.rodata:0000CE5E                                                             ; sub_4B48+236↑o
.rodata:0000CE5E                                                             ; sub_4B48+278↑o
.rodata:0000CE5E                                                             ; sub_4B48+27C↑o
.rodata:0000CE5E                                                             ; .text:off_4E0C↑o
.rodata:0000CE5E                                                             ; .text:off_4E14↑o
.rodata:0000CE5E                                                             ; .text:off_4E5C↑o
.rodata:0000CE5E                                                             ; .text:off_4E64↑o
.rodata:0000CE5E                                                             ; sub_6E38+2E6↑o
.rodata:0000CE5E                                                             ; sub_6E38+2EA↑o
.rodata:0000CE5E                                                             ; .text:off_7220↑o
.rodata:0000CE61 73 63 72 65 65 6E 5F 73 74 61+aScreenState DCB "screen_state",0
.rodata:0000CE61 74 65 00                                                    ; DATA XREF: sub_4B48:loc_4BA2↑o
.rodata:0000CE61                                                             ; sub_4B48+62↑o
.rodata:0000CE61                                                             ; .text:off_4E10↑o
.rodata:0000CE6E 68 69 66 69 5F 67 61 69 6E 00 aHifiGain DCB "hifi_gain",0   ; DATA XREF: sub_4B48:loc_4BCA↑o
.rodata:0000CE6E                                                             ; sub_4B48+8A↑o
.rodata:0000CE6E                                                             ; .text:off_4E18↑o
.rodata:0000CE78 25 73 28 29 3A 20 68 69 66 69+aSHifiGainChang DCB "%s(): hifi_gain change: (%d >> %d)",0
.rodata:0000CE78 5F 67 61 69 6E 20 63 68 61 6E+                              ; DATA XREF: sub_4B48+A6↑o
.rodata:0000CE78 67 65 3A 20 28 25 64 20 3E 3E+                              ; sub_4B48+B0↑o
.rodata:0000CE78 20 25 64 29 00                                              ; .text:off_4E20↑o
.rodata:0000CE9B 64 69 72 61 63 00             aDirac DCB "dirac",0          ; DATA XREF: sub_4B48:loc_4C18↑o
.rodata:0000CE9B                                                             ; sub_4B48+D8↑o
.rodata:0000CE9B                                                             ; .text:off_4E28↑o
.rodata:0000CEA1 63 6C 6F 73 65 00             aClose_0 DCB "close",0        ; DATA XREF: sub_4B48+E2↑o
.rodata:0000CEA1                                                             ; sub_4B48+E6↑o
.rodata:0000CEA1                                                             ; .text:off_4E2C↑o
.rodata:0000CEA7 64 69 73 61 62 6C 65 00       aDisable DCB "disable",0      ; DATA XREF: sub_4B48+EE↑o
.rodata:0000CEA7                                                             ; sub_4B48+F2↑o
.rodata:0000CEA7                                                             ; .text:off_4E30↑o
.rodata:0000CEAF 25 73 28 29 3A 20 64 69 72 61+aSDiracStateDD DCB "%s(): dirac state (%d >> %d)",0
.rodata:0000CEAF 63 20 73 74 61 74 65 20 28 25+                              ; DATA XREF: sub_4B48+10E↑o
.rodata:0000CEAF 64 20 3E 3E 20 25 64 29 00                                  ; sub_4B48+118↑o
.rodata:0000CEAF                                                             ; .text:off_4E38↑o
.rodata:0000CECC 61 73 73 69 73 74 61 6E 74 5F+aAssistantReady DCB "assistant_ready",0
.rodata:0000CECC 72 65 61 64 79 00                                           ; DATA XREF: sub_4B48:loc_4C76↑o
.rodata:0000CECC                                                             ; sub_4B48+138↑o
.rodata:0000CECC                                                             ; .text:off_4E40↑o
.rodata:0000CEDC 25 73 28 29 3A 20 78 75 6E 66+aSXunfeiAssista DCB "%s(): xunfei assistant asr_ready change: (%d >> %d)",0
.rodata:0000CEDC 65 69 20 61 73 73 69 73 74 61+                              ; DATA XREF: sub_4B48+156↑o
.rodata:0000CEDC 6E 74 20 61 73 72 5F 72 65 61+                              ; sub_4B48+160↑o
.rodata:0000CEDC 64 79 20 63 68 61 6E 67 65 3A+                              ; .text:off_4E48↑o
.rodata:0000CF10 66 61 63 74 6F 72 79 5F 74 65+aFactoryTest DCB "factory_test",0
.rodata:0000CF10 73 74 00                                                    ; DATA XREF: sub_4B48:loc_4D02↑o
.rodata:0000CF10                                                             ; sub_4B48+1C2↑o
.rodata:0000CF10                                                             ; .text:off_4E50↑o
.rodata:0000CF10                                                             ; sub_4E6C:loc_4ECA↑o
.rodata:0000CF10                                                             ; sub_4E6C+66↑o
.rodata:0000CF10                                                             ; .text:off_4FA0↑o
.rodata:0000CF10                                                             ; sub_66B0+20↑o
.rodata:0000CF10                                                             ; sub_66B0+2A↑o
.rodata:0000CF10                                                             ; .text:off_6BD4↑o
.rodata:0000CF1D 72 6F 75 74 69 6E 67 00       aRouting DCB "routing",0      ; DATA XREF: sub_4B48+1E6↑o
.rodata:0000CF1D                                                             ; sub_4B48+1EE↑o
.rodata:0000CF1D                                                             ; .text:off_4E54↑o
.rodata:0000CF1D                                                             ; sub_6E38+38↑o
.rodata:0000CF1D                                                             ; sub_6E38+40↑o
.rodata:0000CF1D                                                             ; .text:off_71D4↑o
.rodata:0000CF1D                                                             ; sub_7DF4:loc_7E7A↑o
.rodata:0000CF1D                                                             ; sub_7DF4+8E↑o
.rodata:0000CF1D                                                             ; .text:off_7F64↑o
.rodata:0000CF25 76 6F 69 63 65 5F 63 61 6C 6C+aVoiceCallWb DCB "voice_call_wb",0
.rodata:0000CF25 5F 77 62 00                                                 ; DATA XREF: sub_4B48:loc_4D60↑o
.rodata:0000CF25                                                             ; sub_4B48+220↑o
.rodata:0000CF25                                                             ; .text:off_4E58↑o
.rodata:0000CF33 6D 69 63 5F 6E 72 5F 6F 66 66+aMicNrOff DCB "mic_nr_off",0  ; DATA XREF: sub_4B48:loc_4DAE↑o
.rodata:0000CF33 00                                                          ; sub_4B48+26E↑o
.rodata:0000CF33                                                             ; .text:off_4E60↑o
.rodata:0000CF3E 65 61 72 70 68 6F 6E 65 00    aEarphone DCB "earphone",0    ; DATA XREF: sub_66B0+3A↑o
.rodata:0000CF3E                                                             ; sub_66B0+40↑o
.rodata:0000CF3E                                                             ; .text:off_6BD8↑o
.rodata:0000CF47 68 65 61 64 70 68 6F 6E 65 00 aHeadphone DCB "headphone",0  ; DATA XREF: sub_66B0+4A↑o
.rodata:0000CF47                                                             ; sub_66B0+50↑o
.rodata:0000CF47                                                             ; .text:off_6BE0↑o
.rodata:0000CF51 70 72 69 5F 6D 69 63 00       aPriMic DCB "pri_mic",0       ; DATA XREF: sub_66B0+6A↑o
.rodata:0000CF51                                                             ; sub_66B0+70↑o
.rodata:0000CF51                                                             ; .text:off_6BF0↑o
.rodata:0000CF59 73 65 63 5F 6D 69 63 00       aSecMic DCB "sec_mic",0       ; DATA XREF: sub_66B0+7A↑o
.rodata:0000CF59                                                             ; sub_66B0+80↑o
.rodata:0000CF59                                                             ; .text:off_6BF8↑o
.rodata:0000CF61 74 65 72 5F 6D 69 63 00       aTerMic DCB "ter_mic",0       ; DATA XREF: sub_66B0+8A↑o
.rodata:0000CF61                                                             ; sub_66B0+90↑o
.rodata:0000CF61                                                             ; .text:off_6C00↑o
.rodata:0000CF69 68 69 66 69 5F 68 69 67 68 5F+aHifiHighGain DCB "hifi_high_gain",0
.rodata:0000CF69 67 61 69 6E 00                                              ; DATA XREF: sub_66B0+9A↑o
.rodata:0000CF69                                                             ; sub_66B0+A0↑o
.rodata:0000CF69                                                             ; .text:off_6C08↑o
.rodata:0000CF78 68 69 66 69 5F 6C 6F 77 5F 67+aHifiLowGain DCB "hifi_low_gain",0
.rodata:0000CF78 61 69 6E 00                                                 ; DATA XREF: sub_66B0+AC↑o
.rodata:0000CF78                                                             ; sub_66B0+B2↑o
.rodata:0000CF78                                                             ; .text:off_6C0C↑o
.rodata:0000CF86 70 61 5F 63 61 6C 69 62 72 61+aPaCalibration DCB "pa_calibration",0
.rodata:0000CF86 74 69 6F 6E 00                                              ; DATA XREF: sub_4E6C+78↑o
.rodata:0000CF86                                                             ; sub_4E6C+7E↑o
.rodata:0000CF86                                                             ; .text:off_4FA8↑o
.rodata:0000CF86                                                             ; sub_66B0+BE↑o
.rodata:0000CF86                                                             ; sub_66B0+C4↑o
.rodata:0000CF86                                                             ; .text:off_6C10↑o
.rodata:0000CF95 6D 6F 64 65 6D 5F 6C 6F 6F 70+aModemLoopback DCB "modem_loopback",0
.rodata:0000CF95 62 61 63 6B 00                                              ; DATA XREF: sub_66B0+D0↑o
.rodata:0000CF95                                                             ; sub_66B0+D6↑o
.rodata:0000CF95                                                             ; .text:off_6C14↑o
.rodata:0000CFA4 74 65 73 74 20 6D 6F 64 65 6D+aTestModemLoopb_1 DCB "test modem loopback: outdevice=headphone",0
.rodata:0000CFA4 20 6C 6F 6F 70 62 61 63 6B 3A+                              ; DATA XREF: sub_66B0+486↑o
.rodata:0000CFA4 20 6F 75 74 64 65 76 69 63 65+                              ; sub_66B0+48A↑o
.rodata:0000CFA4 3D 68 65 61 64 70 68 6F 6E 65+                              ; .text:off_6C4C↑o
.rodata:0000CFCD 74 65 73 74 20 6D 6F 64 65 6D+aTestModemLoopb_2 DCB "test modem loopback: outdevice=earphone",0
.rodata:0000CFCD 20 6C 6F 6F 70 62 61 63 6B 3A+                              ; DATA XREF: sub_66B0+4EE↑o
.rodata:0000CFCD 20 6F 75 74 64 65 76 69 63 65+                              ; sub_66B0+4F2↑o
.rodata:0000CFCD 3D 65 61 72 70 68 6F 6E 65 00                               ; .text:off_6C40↑o
.rodata:0000CFF5 6F 66 66 00                   aOff DCB "off",0              ; DATA XREF: sub_66B0+E2↑o
.rodata:0000CFF5                                                             ; sub_66B0+E8↑o
.rodata:0000CFF5                                                             ; .text:off_6C18↑o
.rodata:0000CFF9 25 73 28 29 3A 20 66 61 63 74+aSFactoryTestOv DCB "%s(): factory test over, close all pcm streams",0
.rodata:0000CFF9 6F 72 79 20 74 65 73 74 20 6F+                              ; DATA XREF: sub_66B0+49E↑o
.rodata:0000CFF9 76 65 72 2C 20 63 6C 6F 73 65+                              ; sub_66B0+4A4↑o
.rodata:0000CFF9 20 61 6C 6C 20 70 63 6D 20 73+                              ; .text:off_6C2C↑o
.rodata:0000D028 61 75 64 69 6F 5F 74 65 73 74+aAudioTest DCB "audio_test",0 ; DATA XREF: sub_66B0+FE↑o
.rodata:0000D028 00                                                          ; sub_66B0+106↑o
.rodata:0000D028                                                             ; sub_66B0+366↑o
.rodata:0000D028                                                             ; sub_66B0+36C↑o
.rodata:0000D028                                                             ; sub_66B0+3EE↑o
.rodata:0000D028                                                             ; sub_66B0+3F4↑o
.rodata:0000D028                                                             ; sub_66B0+428↑o
.rodata:0000D028                                                             ; sub_66B0+42E↑o
.rodata:0000D028                                                             ; sub_66B0+4A0↑o
.rodata:0000D028                                                             ; sub_66B0+4A6↑o
.rodata:0000D028                                                             ; .text:off_6C24↑o
.rodata:0000D028                                                             ; .text:off_6C30↑o
.rodata:0000D028                                                             ; .text:off_6C94↑o
.rodata:0000D028                                                             ; .text:off_6CA0↑o
.rodata:0000D028                                                             ; .text:off_6CAC↑o
.rodata:0000D033 25 73 28 29 3A 20 75 6E 73 75+aSUnsupportedFa DCB "%s(): unsupported factory test command",0
.rodata:0000D033 70 70 6F 72 74 65 64 20 66 61+                              ; DATA XREF: sub_66B0+FA↑o
.rodata:0000D033 63 74 6F 72 79 20 74 65 73 74+                              ; sub_66B0+104↑o
.rodata:0000D033 20 63 6F 6D 6D 61 6E 64 00                                  ; .text:off_6C20↑o
.rodata:0000D05A 25 73 28 29 3A 20 66 61 69 6C+aSFailedToStart DCB "%s(): failed to start pcms",0
.rodata:0000D05A 65 64 20 74 6F 20 73 74 61 72+                              ; DATA XREF: sub_66B0+3EC↑o
.rodata:0000D05A 74 20 70 63 6D 73 00                                        ; sub_66B0+3F2↑o
.rodata:0000D05A                                                             ; .text:off_6C90↑o
.rodata:0000D075 25 73 28 29 3A 20 66 61 69 6C+aSFailedToSetCt DCB "%s(): failed to set ctl: %s ",0
.rodata:0000D075 65 64 20 74 6F 20 73 65 74 20+                              ; DATA XREF: sub_6D54+8C↑o
.rodata:0000D075 63 74 6C 3A 20 25 73 20 00                                  ; sub_6D54+94↑o
.rodata:0000D075                                                             ; .text:off_6E00↑o
.rodata:0000D092 73 65 74 5F 72 6F 75 74 65 5F+aSetRouteByArra DCB "set_route_by_array",0
.rodata:0000D092 62 79 5F 61 72 72 61 79 00                                  ; DATA XREF: sub_6D54+8E↑o
.rodata:0000D092                                                             ; sub_6D54+96↑o
.rodata:0000D092                                                             ; .text:off_6E04↑o
.rodata:0000D0A5 4F 66 66 00                   aOff_0 DCB "Off",0            ; DATA XREF: sub_6D54+14↑o
.rodata:0000D0A5                                                             ; sub_6D54+1C↑o
.rodata:0000D0A5                                                             ; .text:off_6DF8↑o
.rodata:0000D0A9 70 63 6D 5F 6F 70 65 6E 28 56+aPcmOpenVoiceBe DCB "pcm_open(VOICE_BE_OUT) failed: %s",0
.rodata:0000D0A9 4F 49 43 45 5F 42 45 5F 4F 55+                              ; DATA XREF: sub_66B0+2E4↑o
.rodata:0000D0A9 54 29 20 66 61 69 6C 65 64 3A+                              ; sub_66B0+2EA↑o
.rodata:0000D0A9 20 25 73 00                                                 ; .text:off_6C60↑o
.rodata:0000D0CB 70 63 6D 5F 6F 70 65 6E 28 56+aPcmOpenVoiceBe_0 DCB "pcm_open(VOICE_BE_IN) failed: %s",0
.rodata:0000D0CB 4F 49 43 45 5F 42 45 5F 49 4E+                              ; DATA XREF: sub_66B0+2FE↑o
.rodata:0000D0CB 29 20 66 61 69 6C 65 64 3A 20+                              ; sub_66B0+304↑o
.rodata:0000D0CB 25 73 00                                                    ; .text:off_6C68↑o
.rodata:0000D0EC 70 63 6D 5F 6F 70 65 6E 28 56+aPcmOpenVoiceOu DCB "pcm_open(VOICE_OUT) failed: %s",0
.rodata:0000D0EC 4F 49 43 45 5F 4F 55 54 29 20+                              ; DATA XREF: sub_66B0+318↑o
.rodata:0000D0EC 66 61 69 6C 65 64 3A 20 25 73+                              ; sub_66B0+31E↑o
.rodata:0000D0EC 00                                                          ; .text:off_6C70↑o
.rodata:0000D10B 70 63 6D 5F 6F 70 65 6E 28 56+aPcmOpenVoiceIn DCB "pcm_open(VOICE_IN) failed: %s",0
.rodata:0000D10B 4F 49 43 45 5F 49 4E 29 20 66+                              ; DATA XREF: sub_66B0+332↑o
.rodata:0000D10B 61 69 6C 65 64 3A 20 25 73 00                               ; sub_66B0+338↑o
.rodata:0000D10B                                                             ; .text:off_6C78↑o
.rodata:0000D129 70 63 6D 5F 6F 70 65 6E 28 50+aPcmOpenPaOutFa DCB "pcm_open(PA_OUT) failed: %s",0
.rodata:0000D129 41 5F 4F 55 54 29 20 66 61 69+                              ; DATA XREF: sub_66B0+37C↑o
.rodata:0000D129 6C 65 64 3A 20 25 73 00                                     ; sub_66B0+382↑o
.rodata:0000D129                                                             ; .text:off_6C80↑o
.rodata:0000D145 70 63 6D 5F 6F 70 65 6E 28 50+aPcmOpenPaInFai DCB "pcm_open(PA_IN) failed: %s",0
.rodata:0000D145 41 5F 49 4E 29 20 66 61 69 6C+                              ; DATA XREF: sub_66B0+396↑o
.rodata:0000D145 65 64 3A 20 25 73 00                                        ; sub_66B0+39C↑o
.rodata:0000D145                                                             ; .text:off_6C88↑o
.rodata:0000D160 61 64 65 76 5F 67 65 74 5F 70+aAdevGetParamet DCB "adev_get_parameters",0
.rodata:0000D160 61 72 61 6D 65 74 65 72 73 00                               ; DATA XREF: sub_4E6C+20↑o
.rodata:0000D160                                                             ; sub_4E6C+28↑o
.rodata:0000D160                                                             ; sub_4E6C+FA↑o
.rodata:0000D160                                                             ; sub_4E6C+102↑o
.rodata:0000D160                                                             ; .text:off_4F98↑o
.rodata:0000D160                                                             ; .text:off_4FC4↑o
.rodata:0000D174 65 63 5F 73 75 70 70 6F 72 74+aEcSupported DCB "ec_supported",0
.rodata:0000D174 65 64 00                                                    ; DATA XREF: sub_4E6C+2E↑o
.rodata:0000D174                                                             ; sub_4E6C+36↑o
.rodata:0000D174                                                             ; .text:off_4F9C↑o
.rodata:0000D181 65 63 5F 73 75 70 70 6F 72 74+aEcSupportedYes DCB "ec_supported=yes",0
.rodata:0000D181 65 64 3D 79 65 73 00                                        ; DATA XREF: sub_4E6C+46↑o
.rodata:0000D181                                                             ; sub_4E6C+48↑o
.rodata:0000D181                                                             ; .text:off_4FC8↑o
.rodata:0000D192 00                            unk_D192 DCB    0             ; DATA XREF: sub_4E6C+86↑o
.rodata:0000D192                                                             ; sub_4E6C+88↑o
.rodata:0000D192                                                             ; sub_4E6C:loc_4EF8↑o
.rodata:0000D192                                                             ; sub_4E6C+8E↑o
.rodata:0000D192                                                             ; .text:off_4FA4↑o
.rodata:0000D192                                                             ; .text:off_4FAC↑o
.rodata:0000D192                                                             ; sub_7F78↑o
.rodata:0000D192                                                             ; sub_7F78+2↑o
.rodata:0000D192                                                             ; .text:off_7F80↑o
.rodata:0000D193 66 61 63 74 6F 72 79 5F 74 65+aFactoryTestPaC DCB "factory_test=pa_calibration",0
.rodata:0000D193 73 74 3D 70 61 5F 63 61 6C 69+                              ; DATA XREF: sub_4E6C:loc_4F04↑o
.rodata:0000D193 62 72 61 74 69 6F 6E 00                                     ; sub_4E6C+9C↑o
.rodata:0000D193                                                             ; .text:off_4FB0↑o
.rodata:0000D1AF 73 70 65 61 6B 65 72 5F 69 6D+aSpeakerImpedan DCB "speaker_impedance=%f",0
.rodata:0000D1AF 70 65 64 61 6E 63 65 3D 25 66+                              ; DATA XREF: sub_4E6C+BC↑o
.rodata:0000D1AF 00                                                          ; sub_4E6C+C6↑o
.rodata:0000D1AF                                                             ; .text:off_4FB4↑o
.rodata:0000D1C4 66 61 63 74 6F 72 79 5F 74 65+aFactoryTestOff DCB "factory_test=off",0
.rodata:0000D1C4 73 74 3D 6F 66 66 00                                        ; DATA XREF: sub_4E6C+EA↑o
.rodata:0000D1C4                                                             ; sub_4E6C+EE↑o
.rodata:0000D1C4                                                             ; .text:off_4FB8↑o
.rodata:0000D1D5 25 73 28 29 3A 20 25 73 00    aSS DCB "%s(): %s",0          ; DATA XREF: sub_4E6C+F8↑o
.rodata:0000D1D5                                                             ; sub_4E6C+FE↑o
.rodata:0000D1D5                                                             ; .text:off_4FC0↑o
.rodata:0000D1DE 25 73 28 29 3A 20 6F 75 74 70+aSOutputStreamH DCB "%s(): output stream has been opened, abort...",0
.rodata:0000D1DE 75 74 20 73 74 72 65 61 6D 20+                              ; DATA XREF: sub_5068+16↑o
.rodata:0000D1DE 68 61 73 20 62 65 65 6E 20 6F+                              ; sub_5068+1C↑o
.rodata:0000D1DE 70 65 6E 65 64 2C 20 61 62 6F+                              ; .text:off_5258↑o
.rodata:0000D20C 61 64 65 76 5F 6F 70 65 6E 5F+aAdevOpenOutput DCB "adev_open_output_stream",0
.rodata:0000D20C 6F 75 74 70 75 74 5F 73 74 72+                              ; DATA XREF: sub_5068+18↑o
.rodata:0000D20C 65 61 6D 00                                                 ; sub_5068+1E↑o
.rodata:0000D20C                                                             ; sub_5068+1B2↑o
.rodata:0000D20C                                                             ; sub_5068+1B8↑o
.rodata:0000D20C                                                             ; .text:off_525C↑o
.rodata:0000D20C                                                             ; .text:off_52B4↑o
.rodata:0000D224 25 73 28 29 3A 20 6F 75 74 70+aSOutputDeviceB DCB "%s(): output device busy, abort...",0
.rodata:0000D224 75 74 20 64 65 76 69 63 65 20+                              ; DATA XREF: sub_5068+1B0↑o
.rodata:0000D224 62 75 73 79 2C 20 61 62 6F 72+                              ; sub_5068+1B6↑o
.rodata:0000D224 74 2E 2E 2E 00                                              ; .text:off_52B0↑o
.rodata:0000D247 25 73 28 29 3A 20 6F 75 74 5F+aSOutDeviceChan DCB "%s(): out_device change: (0x%x >> 0x%x)",0
.rodata:0000D247 64 65 76 69 63 65 20 63 68 61+                              ; DATA XREF: sub_6E38+CC↑o
.rodata:0000D247 6E 67 65 3A 20 28 30 78 25 78+                              ; sub_6E38+D6↑o
.rodata:0000D247 20 3E 3E 20 30 78 25 78 29 00                               ; sub_6E38+12C↑o
.rodata:0000D247                                                             ; sub_6E38+134↑o
.rodata:0000D247                                                             ; sub_6E38+1B6↑o
.rodata:0000D247                                                             ; sub_6E38+1BE↑o
.rodata:0000D247                                                             ; .text:off_71DC↑o
.rodata:0000D247                                                             ; .text:off_71E8↑o
.rodata:0000D247                                                             ; .text:off_71F4↑o
.rodata:0000D26F 6F 75 74 5F 73 65 74 5F 70 61+aOutSetParamete DCB "out_set_parameters",0
.rodata:0000D26F 72 61 6D 65 74 65 72 73 00                                  ; DATA XREF: sub_6E38+CE↑o
.rodata:0000D26F                                                             ; sub_6E38+D8↑o
.rodata:0000D26F                                                             ; sub_6E38+138↑o
.rodata:0000D26F                                                             ; sub_6E38+13C↑o
.rodata:0000D26F                                                             ; sub_6E38+1C2↑o
.rodata:0000D26F                                                             ; sub_6E38+1C6↑o
.rodata:0000D26F                                                             ; sub_6E38+22C↑o
.rodata:0000D26F                                                             ; sub_6E38+236↑o
.rodata:0000D26F                                                             ; sub_6E38+28C↑o
.rodata:0000D26F                                                             ; sub_6E38+296↑o
.rodata:0000D26F                                                             ; sub_6E38+2FE↑o
.rodata:0000D26F                                                             ; sub_6E38+308↑o
.rodata:0000D26F                                                             ; .text:off_71E0↑o
.rodata:0000D26F                                                             ; .text:off_71EC↑o
.rodata:0000D26F                                                             ; .text:off_71F8↑o ...
.rodata:0000D282 73 61 6D 70 6C 69 6E 67 5F 72+aSamplingRate DCB "sampling_rate",0
.rodata:0000D282 61 74 65 00                                                 ; DATA XREF: sub_6E38:loc_703C↑o
.rodata:0000D282                                                             ; sub_6E38+20C↑o
.rodata:0000D282                                                             ; .text:off_71FC↑o
.rodata:0000D290 25 73 28 29 3A 20 73 61 6D 70+aSSampleRateCha DCB "%s(): sample_rate change: (%d >> %d)",0
.rodata:0000D290 6C 65 5F 72 61 74 65 20 63 68+                              ; DATA XREF: sub_6E38+22A↑o
.rodata:0000D290 61 6E 67 65 3A 20 28 25 64 20+                              ; sub_6E38+234↑o
.rodata:0000D290 3E 3E 20 25 64 29 00                                        ; .text:off_7204↑o
.rodata:0000D2B5 66 6F 72 6D 61 74 00          aFormat DCB "format",0        ; DATA XREF: sub_6E38:loc_70A2↑o
.rodata:0000D2B5                                                             ; sub_6E38+272↑o
.rodata:0000D2B5                                                             ; .text:off_720C↑o
.rodata:0000D2BC 25 73 28 29 3A 20 66 6F 72 6D+aSFormatChangeD DCB "%s(): format change: (%d >> %d)",0
.rodata:0000D2BC 61 74 20 63 68 61 6E 67 65 3A+                              ; DATA XREF: sub_6E38+28A↑o
.rodata:0000D2BC 20 28 25 64 20 3E 3E 20 25 64+                              ; sub_6E38+294↑o
.rodata:0000D2BC 29 00                                                       ; .text:off_7214↑o
.rodata:0000D2DC 68 69 66 69 5F 73 74 61 74 65+aHifiState DCB "hifi_state",0 ; DATA XREF: sub_6E38:loc_710C↑o
.rodata:0000D2DC 00                                                          ; sub_6E38+2DC↑o
.rodata:0000D2DC                                                             ; .text:off_721C↑o
.rodata:0000D2E7 25 73 28 29 3A 20 25 73 20 68+aSSHifiCard DCB "%s(): %s hifi_card",0
.rodata:0000D2E7 69 66 69 5F 63 61 72 64 00                                  ; DATA XREF: sub_6E38+2FA↑o
.rodata:0000D2E7                                                             ; sub_6E38+304↑o
.rodata:0000D2E7                                                             ; .text:off_7230↑o
.rodata:0000D2FA 45 6E 61 62 6C 65 00          aEnable DCB "Enable",0        ; DATA XREF: sub_6E38+2F2↑o
.rodata:0000D2FA                                                             ; sub_6E38+2F8↑o
.rodata:0000D2FA                                                             ; .text:off_7224↑o
.rodata:0000D301 44 69 73 61 62 6C 65 00       aDisable_0 DCB "Disable",0    ; DATA XREF: sub_6E38+2F4↑o
.rodata:0000D301                                                             ; sub_6E38+2FC↑o
.rodata:0000D301                                                             ; .text:off_7228↑o
.rodata:0000D309 73 75 70 5F 63 68 61 6E 6E 65+aSupChannels DCB "sup_channels",0
.rodata:0000D309 6C 73 00                                                    ; DATA XREF: sub_723C+20↑o
.rodata:0000D309                                                             ; sub_723C+28↑o
.rodata:0000D309                                                             ; sub_723C:loc_72CA↑o
.rodata:0000D309                                                             ; sub_723C+94↑o
.rodata:0000D309                                                             ; .text:off_7310↑o
.rodata:0000D309                                                             ; .text:off_7318↑o
.rodata:0000D316 2F 73 64 63 61 72 64 2F 41 6E+aSdcardAndroidL DCB "/sdcard/Android/log/audio_dump/audio_hw_out1.pcm",0
.rodata:0000D316 64 72 6F 69 64 2F 6C 6F 67 2F+                              ; DATA XREF: sub_7344+5CE↑o
.rodata:0000D316 61 75 64 69 6F 5F 64 75 6D 70+                              ; sub_7344+5D6↑o
.rodata:0000D316 2F 61 75 64 69 6F 5F 68 77 5F+                              ; .text:off_7C68↑o
.rodata:0000D347 61 75 64 69 6F 2E 68 77 2E 70+aAudioHwPcmDump DCB "audio.hw.pcm.dump",0
.rodata:0000D347 63 6D 2E 64 75 6D 70 00                                     ; DATA XREF: sub_7344+5D2↑o
.rodata:0000D347                                                             ; sub_7344+5D8↑o
.rodata:0000D347                                                             ; sub_7344+720↑o
.rodata:0000D347                                                             ; sub_7344+728↑o
.rodata:0000D347                                                             ; .text:off_7C6C↑o
.rodata:0000D347                                                             ; .text:off_7C7C↑o
.rodata:0000D347                                                             ; sub_7F90+8EC↑o
.rodata:0000D347                                                             ; sub_7F90+8F2↑o
.rodata:0000D347                                                             ; .text:off_8A18↑o
.rodata:0000D359 2F 73 64 63 61 72 64 2F 41 6E+aSdcardAndroidL_0 DCB "/sdcard/Android/log/audio_dump/audio_hw_out2.pcm",0
.rodata:0000D359 64 72 6F 69 64 2F 6C 6F 67 2F+                              ; DATA XREF: sub_7344+71E↑o
.rodata:0000D359 61 75 64 69 6F 5F 64 75 6D 70+                              ; sub_7344+724↑o
.rodata:0000D359 2F 61 75 64 69 6F 5F 68 77 5F+                              ; .text:off_7C78↑o
.rodata:0000D38A 25 73 3A 20 72 65 74 3D 25 64+aSRetDCardDevic DCB "%s: ret=%d, card_device = %d, error=%s",0
.rodata:0000D38A 2C 20 63 61 72 64 5F 64 65 76+                              ; DATA XREF: sub_7344+766↑o
.rodata:0000D38A 69 63 65 20 3D 20 25 64 2C 20+                              ; sub_7344+76E↑o
.rodata:0000D38A 65 72 72 6F 72 3D 25 73 00                                  ; .text:off_7C8C↑o
.rodata:0000D3B1 6F 75 74 5F 77 72 69 74 65 00 aOutWrite DCB "out_write",0   ; DATA XREF: sub_7344+730↑o
.rodata:0000D3B1                                                             ; sub_7344+73C↑o
.rodata:0000D3B1                                                             ; .text:off_7C80↑o
.rodata:0000D3BB 25 73 28 29 3A 20 6D 6F 64 65+aSModeDOutDevic DCB "%s(): mode=%d, out_device=0x%x",0
.rodata:0000D3BB 3D 25 64 2C 20 6F 75 74 5F 64+                              ; DATA XREF: sub_7344+116↑o
.rodata:0000D3BB 65 76 69 63 65 3D 30 78 25 78+                              ; sub_7344+120↑o
.rodata:0000D3BB 00                                                          ; .text:off_7BF0↑o
.rodata:0000D3DA 73 74 61 72 74 5F 6F 75 74 70+aStartOutputStr DCB "start_output_stream",0
.rodata:0000D3DA 75 74 5F 73 74 72 65 61 6D 00                               ; DATA XREF: sub_7344+126↑o
.rodata:0000D3DA                                                             ; sub_7344+12C↑o
.rodata:0000D3DA                                                             ; sub_7344+324↑o
.rodata:0000D3DA                                                             ; sub_7344+32E↑o
.rodata:0000D3DA                                                             ; sub_7344+3D4↑o
.rodata:0000D3DA                                                             ; sub_7344+3DC↑o
.rodata:0000D3DA                                                             ; sub_7344+434↑o
.rodata:0000D3DA                                                             ; sub_7344+43C↑o
.rodata:0000D3DA                                                             ; sub_7344+49E↑o
.rodata:0000D3DA                                                             ; sub_7344+4A6↑o
.rodata:0000D3DA                                                             ; sub_7344+512↑o
.rodata:0000D3DA                                                             ; sub_7344+51C↑o
.rodata:0000D3DA                                                             ; sub_7344+538↑o
.rodata:0000D3DA                                                             ; sub_7344+542↑o
.rodata:0000D3DA                                                             ; sub_7344+55C↑o ...
.rodata:0000D3EE 25 73 28 29 3A 20 70 72 69 6D+aSPrimaryPcmOpe DCB "%s(): primary: pcm_open card=%d, device=%d, sample_rate=%d, format=%d, period_size=%d",0
.rodata:0000D3EE 61 72 79 3A 20 70 63 6D 5F 6F+                              ; DATA XREF: sub_7344+320↑o
.rodata:0000D3EE 70 65 6E 20 63 61 72 64 3D 25+                              ; sub_7344+32C↑o
.rodata:0000D3EE 64 2C 20 64 65 76 69 63 65 3D+                              ; .text:off_7C08↑o
.rodata:0000D444 25 73 28 29 3A 20 70 63 6D 5F+aSPcmOpenPcmCar DCB "%s(): pcm_open(PCM_CARD_PRIMARY) failed: %s",0
.rodata:0000D444 6F 70 65 6E 28 50 43 4D 5F 43+                              ; DATA XREF: sub_7344+50E↑o
.rodata:0000D444 41 52 44 5F 50 52 49 4D 41 52+                              ; sub_7344+51A↑o
.rodata:0000D444 59 29 20 66 61 69 6C 65 64 3A+                              ; .text:off_7C14↑o
.rodata:0000D444 20 25 73 00                                                 ; sub_7F90+24A↑o
.rodata:0000D444                                                             ; sub_7F90+256↑o
.rodata:0000D444                                                             ; .text:off_89AC↑o
.rodata:0000D470 25 73 28 29 3A 20 68 69 66 69+aSHifiPcmOpenCa DCB "%s(): hifi: pcm_open card=%d, device=%d, sample_rate=%d,format=%d, period_size=%d",0
.rodata:0000D470 3A 20 70 63 6D 5F 6F 70 65 6E+                              ; DATA XREF: sub_7344+3E4↑o
.rodata:0000D470 20 63 61 72 64 3D 25 64 2C 20+                              ; sub_7344+3EE↑o
.rodata:0000D470 64 65 76 69 63 65 3D 25 64 2C+                              ; .text:off_7C28↑o
.rodata:0000D4C2 25 73 28 29 3A 20 70 63 6D 5F+aSPcmOpenPcmCar_0 DCB "%s(): pcm_open(PCM_CARD_HIFI) failed: %s",0
.rodata:0000D4C2 6F 70 65 6E 28 50 43 4D 5F 43+                              ; DATA XREF: sub_7344+534↑o
.rodata:0000D4C2 41 52 44 5F 48 49 46 49 29 20+                              ; sub_7344+540↑o
.rodata:0000D4C2 66 61 69 6C 65 64 3A 20 25 73+                              ; .text:off_7C34↑o
.rodata:0000D4EB 25 73 28 29 3A 20 73 70 64 69+aSSpdifPcmOpenC DCB "%s(): spdif: pcm_open card=%d, device=%d, sample_rate=%d",0
.rodata:0000D4EB 66 3A 20 70 63 6D 5F 6F 70 65+                              ; DATA XREF: sub_7344+442↑o
.rodata:0000D4EB 6E 20 63 61 72 64 3D 25 64 2C+                              ; sub_7344+44A↑o
.rodata:0000D4EB 20 64 65 76 69 63 65 3D 25 64+                              ; .text:off_7C40↑o
.rodata:0000D524 25 73 28 29 3A 20 70 63 6D 5F+aSPcmOpenPcmCar_1 DCB "%s(): pcm_open(PCM_CARD_SPDIF) failed: %s",0
.rodata:0000D524 6F 70 65 6E 28 50 43 4D 5F 43+                              ; DATA XREF: sub_7344+558↑o
.rodata:0000D524 41 52 44 5F 53 50 44 49 46 29+                              ; sub_7344+564↑o
.rodata:0000D524 20 66 61 69 6C 65 64 3A 20 25+                              ; .text:off_7C4C↑o
.rodata:0000D54E 25 73 28 29 3A 20 63 72 65 61+aSCreateResampl DCB "%s(): create_resampler: (%d >> %d)",0
.rodata:0000D54E 74 65 5F 72 65 73 61 6D 70 6C+                              ; DATA XREF: sub_7344+49A↑o
.rodata:0000D54E 65 72 3A 20 28 25 64 20 3E 3E+                              ; sub_7344+4A4↑o
.rodata:0000D54E 20 25 64 29 00                                              ; .text:off_7C58↑o
.rodata:0000D54E                                                             ; sub_7F90+302↑o
.rodata:0000D54E                                                             ; sub_7F90+30A↑o
.rodata:0000D54E                                                             ; .text:off_89CC↑o
.rodata:0000D571 25 73 28 29 3A 20 62 75 66 66+aSBufferSizeD DCB "%s(): buffer_size=%d",0
.rodata:0000D571 65 72 5F 73 69 7A 65 3D 25 64+                              ; DATA XREF: sub_7D2C+36↑o
.rodata:0000D571 00                                                          ; sub_7D2C+44↑o
.rodata:0000D571                                                             ; .text:off_7DA4↑o
.rodata:0000D586 67 65 74 5F 6F 75 74 70 75 74+aGetOutputBuffe DCB "get_output_buffer_size",0
.rodata:0000D586 5F 62 75 66 66 65 72 5F 73 69+                              ; DATA XREF: sub_7D2C+20↑o
.rodata:0000D586 7A 65 00                                                    ; sub_7D2C+28↑o
.rodata:0000D586                                                             ; sub_7D2C+3A↑o
.rodata:0000D586                                                             ; sub_7D2C+48↑o
.rodata:0000D586                                                             ; .text:off_7D98↑o
.rodata:0000D586                                                             ; .text:off_7DA8↑o
.rodata:0000D59D 25 73 28 29 3A 20 69 6E 76 61+aSInvalidSampli DCB "%s(): invalid sampling rate: %d",0
.rodata:0000D59D 6C 69 64 20 73 61 6D 70 6C 69+                              ; DATA XREF: sub_7D2C+1E↑o
.rodata:0000D59D 6E 67 20 72 61 74 65 3A 20 25+                              ; sub_7D2C+26↑o
.rodata:0000D59D 64 00                                                       ; .text:off_7D94↑o
.rodata:0000D5BD 61 64 65 76 5F 6F 70 65 6E 5F+aAdevOpenInputS DCB "adev_open_input_stream",0
.rodata:0000D5BD 69 6E 70 75 74 5F 73 74 72 65+                              ; DATA XREF: sub_52F4+10↑o
.rodata:0000D5BD 61 6D 00                                                    ; sub_52F4+1A↑o
.rodata:0000D5BD                                                             ; .text:off_54AC↑o
.rodata:0000D5D4 70 65 72 73 69 73 74 2E 73 79+aPersistSysAudi DCB "persist.sys.audience.ustrhal",0
.rodata:0000D5D4 73 2E 61 75 64 69 65 6E 63 65+                              ; DATA XREF: sub_52F4+44↑o
.rodata:0000D5D4 2E 75 73 74 72 68 61 6C 00                                  ; sub_52F4+4C↑o
.rodata:0000D5D4                                                             ; .text:off_54B0↑o
.rodata:0000D5F1 61 75 64 69 6F 20 61 75 64 69+aAudioAudienceC DCB "audio audience cvq enabled",0
.rodata:0000D5F1 65 6E 63 65 20 63 76 71 20 65+                              ; DATA XREF: sub_52F4+7C↑o
.rodata:0000D5F1 6E 61 62 6C 65 64 00                                        ; sub_52F4+80↑o
.rodata:0000D5F1                                                             ; sub_52F4+A0↑o
.rodata:0000D5F1                                                             ; sub_52F4+A4↑o
.rodata:0000D5F1                                                             ; .text:off_54C8↑o
.rodata:0000D5F1                                                             ; .text:off_54D0↑o
.rodata:0000D60C 61 75 64 69 6F 20 63 76 71 20+aAudioCvqErrorA DCB "audio cvq Error audio in assigning mcvqstream",0
.rodata:0000D60C 45 72 72 6F 72 20 61 75 64 69+                              ; DATA XREF: sub_52F4+17A↑o
.rodata:0000D60C 6F 20 69 6E 20 61 73 73 69 67+                              ; sub_52F4+17E↑o
.rodata:0000D60C 6E 69 6E 67 20 6D 63 76 71 73+                              ; .text:off_5518↑o
.rodata:0000D63A 61 75 64 69 6F 20 61 75 64 69+aAudioAudienceC_0 DCB "audio audience cvq disable",0
.rodata:0000D63A 65 6E 63 65 20 63 76 71 20 64+                              ; DATA XREF: sub_52F4+E6↑o
.rodata:0000D63A 69 73 61 62 6C 65 00                                        ; sub_52F4+EA↑o
.rodata:0000D63A                                                             ; .text:off_54C0↑o
.rodata:0000D655 69 6E 70 75 74 5F 73 6F 75 72+aInputSource DCB "input_source",0
.rodata:0000D655 63 65 00                                                    ; DATA XREF: sub_7DF4+32↑o
.rodata:0000D655                                                             ; sub_7DF4+3A↑o
.rodata:0000D655                                                             ; .text:off_7F54↑o
.rodata:0000D662 25 73 28 29 3A 20 69 6E 70 75+aSInputSourceCh DCB "%s(): input_source change: (0x%x >> 0x%x)",0
.rodata:0000D662 74 5F 73 6F 75 72 63 65 20 63+                              ; DATA XREF: sub_7DF4+52↑o
.rodata:0000D662 68 61 6E 67 65 3A 20 28 30 78+                              ; sub_7DF4+5C↑o
.rodata:0000D662 25 78 20 3E 3E 20 30 78 25 78+                              ; .text:off_7F5C↑o
.rodata:0000D68C 69 6E 5F 73 65 74 5F 70 61 72+aInSetParameter DCB "in_set_parameters",0
.rodata:0000D68C 61 6D 65 74 65 72 73 00                                     ; DATA XREF: sub_7DF4+54↑o
.rodata:0000D68C                                                             ; sub_7DF4+5E↑o
.rodata:0000D68C                                                             ; sub_7DF4+AA↑o
.rodata:0000D68C                                                             ; sub_7DF4+B4↑o
.rodata:0000D68C                                                             ; .text:off_7F60↑o
.rodata:0000D68C                                                             ; .text:off_7F70↑o
.rodata:0000D69E 25 73 28 29 3A 20 69 6E 5F 64+aSInDeviceChang DCB "%s(): in_device change: (0x%x >> 0x%x)",0
.rodata:0000D69E 65 76 69 63 65 20 63 68 61 6E+                              ; DATA XREF: sub_7DF4+A8↑o
.rodata:0000D69E 67 65 3A 20 28 30 78 25 78 20+                              ; sub_7DF4+B2↑o
.rodata:0000D69E 3E 3E 20 30 78 25 78 29 00                                  ; .text:off_7F6C↑o
.rodata:0000D6C5 23 23 23 23 20 73 74 61 72 74+aStartPcmReadTh DCB "#### start pcm read thread ####",0
.rodata:0000D6C5 20 70 63 6D 20 72 65 61 64 20+                              ; DATA XREF: sub_7F90+420↑o
.rodata:0000D6C5 74 68 72 65 61 64 20 23 23 23+                              ; sub_7F90+428↑o
.rodata:0000D6C5 23 00                                                       ; .text:off_8A20↑o
.rodata:0000D6E5 23 23 23 23 20 70 63 6D 5F 72+aPcmReadThreadT DCB "#### pcm_read_thread() thread creation failed ####",0
.rodata:0000D6E5 65 61 64 5F 74 68 72 65 61 64+                              ; DATA XREF: sub_7F90:loc_83E8↑o
.rodata:0000D6E5 28 29 20 74 68 72 65 61 64 20+                              ; sub_7F90+460↑o
.rodata:0000D6E5 63 72 65 61 74 69 6F 6E 20 66+                              ; .text:off_8A28↑o
.rodata:0000D718 23 23 23 23 20 50 63 6D 20 72+aPcmReadThreadC DCB "#### Pcm read thread created successfully ####",0
.rodata:0000D718 65 61 64 20 74 68 72 65 61 64+                              ; DATA XREF: sub_7F90+444↑o
.rodata:0000D718 20 63 72 65 61 74 65 64 20 73+                              ; sub_7F90+454↑o
.rodata:0000D718 75 63 63 65 73 73 66 75 6C 6C+                              ; .text:off_8A2C↑o
.rodata:0000D747 23 23 23 23 20 50 63 6D 20 72+aPcmReadThreadS DCB "#### Pcm read thread stopped successfully ####",0
.rodata:0000D747 65 61 64 20 74 68 72 65 61 64+                              ; DATA XREF: sub_7F90+48C↑o
.rodata:0000D747 20 73 74 6F 70 70 65 64 20 73+                              ; sub_7F90+494↑o
.rodata:0000D747 75 63 63 65 73 73 66 75 6C 6C+                              ; .text:off_8A50↑o
.rodata:0000D776 62 65 66 6F 72 65 20 73 6C 69+aBeforeSlimRead DCB "before slim read",0
.rodata:0000D776 6D 20 72 65 61 64 00                                        ; DATA XREF: sub_7F90+4AA↑o
.rodata:0000D776                                                             ; sub_7F90+4B2↑o
.rodata:0000D776                                                             ; .text:off_8A3C↑o
.rodata:0000D787 62 65 66 6F 72 65 20 77 72 69+aBeforeWriteOve DCB "before write overflow - (write offset, max bytes) = (%d, %d)",0
.rodata:0000D787 74 65 20 6F 76 65 72 66 6C 6F+                              ; DATA XREF: sub_7F90+4DC↑o
.rodata:0000D787 77 20 2D 20 28 77 72 69 74 65+                              ; sub_7F90+4E8↑o
.rodata:0000D787 20 6F 66 66 73 65 74 2C 20 6D+                              ; .text:off_8A40↑o
.rodata:0000D7C4 61 66 74 65 72 20 77 72 69 74+aAfterWriteOver DCB "after write overflow - (write offset, max bytes) = (%d, %d)",0
.rodata:0000D7C4 65 20 6F 76 65 72 66 6C 6F 77+                              ; DATA XREF: sub_7F90+528↑o
.rodata:0000D7C4 20 2D 20 28 77 72 69 74 65 20+                              ; sub_7F90+530↑o
.rodata:0000D7C4 6F 66 66 73 65 74 2C 20 6D 61+                              ; .text:off_8A44↑o
.rodata:0000D800 61 66 74 65 72 20 73 6C 69 6D+aAfterSlimRead DCB "after slim read",0
.rodata:0000D800 20 72 65 61 64 00                                           ; DATA XREF: sub_7F90:loc_84D4↑o
.rodata:0000D800                                                             ; sub_7F90+54C↑o
.rodata:0000D800                                                             ; sub_7F90:loc_8508↑o
.rodata:0000D800                                                             ; sub_7F90+580↑o
.rodata:0000D800                                                             ; .text:off_8A48↑o
.rodata:0000D800                                                             ; .text:off_8A4C↑o
.rodata:0000D810 23 23 23 23 20 62 65 66 6F 72+aBeforeWaitingF DCB "#### before waiting for first read - %d ####",0
.rodata:0000D810 65 20 77 61 69 74 69 6E 67 20+                              ; DATA XREF: sub_7F90+592↑o
.rodata:0000D810 66 6F 72 20 66 69 72 73 74 20+                              ; sub_7F90+59C↑o
.rodata:0000D810 72 65 61 64 20 2D 20 25 64 20+                              ; .text:off_8A30↑o
.rodata:0000D83D 23 23 23 23 20 61 66 74 65 72+aAfterWaitingFo DCB "#### after waiting for first read  - %d ####",0
.rodata:0000D83D 20 77 61 69 74 69 6E 67 20 66+                              ; DATA XREF: sub_7F90+5B0↑o
.rodata:0000D83D 6F 72 20 66 69 72 73 74 20 72+                              ; sub_7F90+5B8↑o
.rodata:0000D83D 65 61 64 20 20 2D 20 25 64 20+                              ; .text:off_8A34↑o
.rodata:0000D86A 43 56 51 20 64 61 74 61 20 6E+aCvqDataNotRead DCB "CVQ data not ready!",0
.rodata:0000D86A 6F 74 20 72 65 61 64 79 21 00                               ; DATA XREF: sub_7F90:loc_8392↑o
.rodata:0000D86A                                                             ; sub_7F90+40A↑o
.rodata:0000D86A                                                             ; .text:off_8A38↑o
.rodata:0000D87E 65 6E 64 20 6F 66 20 75 61 72+aEndOfUartstrea DCB "end of uartstreaming",0
.rodata:0000D87E 74 73 74 72 65 61 6D 69 6E 67+                              ; DATA XREF: sub_7F90+610↑o
.rodata:0000D87E 00                                                          ; sub_7F90+616↑o
.rodata:0000D87E                                                             ; .text:off_89DC↑o
.rodata:0000D893 68 61 6C 20 72 65 61 64 20 73+aHalReadStrmEnd DCB "hal read strm end cvq %d",0
.rodata:0000D893 74 72 6D 20 65 6E 64 20 63 76+                              ; DATA XREF: sub_7F90+666↑o
.rodata:0000D893 71 20 25 64 00                                              ; sub_7F90+66E↑o
.rodata:0000D893                                                             ; .text:off_89E4↑o
.rodata:0000D8AC 68 61 6C 20 72 65 61 64 20 6D+aHalReadMemcpyC DCB "hal read memcpy cvq %d",0
.rodata:0000D8AC 65 6D 63 70 79 20 63 76 71 20+                              ; DATA XREF: sub_7F90+6AA↑o
.rodata:0000D8AC 25 64 00                                                    ; sub_7F90+6B2↑o
.rodata:0000D8AC                                                             ; .text:off_89EC↑o
.rodata:0000D8C3 62 65 66 6F 72 65 20 72 65 61+aBeforeReadOver DCB "before read overflow - (read offset, max size) = (%d, %d)",0
.rodata:0000D8C3 64 20 6F 76 65 72 66 6C 6F 77+                              ; DATA XREF: sub_7F90+6C6↑o
.rodata:0000D8C3 20 2D 20 28 72 65 61 64 20 6F+                              ; sub_7F90+6CE↑o
.rodata:0000D8C3 66 66 73 65 74 2C 20 6D 61 78+                              ; .text:off_89F4↑o
.rodata:0000D8FD 61 66 74 65 72 20 72 65 61 64+aAfterReadOverf DCB "after read overflow - (read offset, max size) = (%d, %d)",0
.rodata:0000D8FD 20 6F 76 65 72 66 6C 6F 77 20+                              ; DATA XREF: sub_7F90+70A↑o
.rodata:0000D8FD 2D 20 28 72 65 61 64 20 6F 66+                              ; sub_7F90+712↑o
.rodata:0000D8FD 66 73 65 74 2C 20 6D 61 78 20+                              ; .text:off_89FC↑o
.rodata:0000D936 68 61 6C 20 72 65 61 64 20 6D+aHalReadMemcpyE DCB "hal read memcpy end cvq %d",0
.rodata:0000D936 65 6D 63 70 79 20 65 6E 64 20+                              ; DATA XREF: sub_7F90+73C↑o
.rodata:0000D936 63 76 71 20 25 64 00                                        ; sub_7F90+742↑o
.rodata:0000D936                                                             ; .text:off_8A04↑o
.rodata:0000D951 72 65 61 64 2F 77 72 69 74 65+aReadWriteOffse DCB "read/write offset - %d/%d ",0
.rodata:0000D951 20 6F 66 66 73 65 74 20 2D 20+                              ; DATA XREF: sub_7F90+750↑o
.rodata:0000D951 25 64 2F 25 64 20 00                                        ; sub_7F90+756↑o
.rodata:0000D951                                                             ; .text:off_8A08↑o
.rodata:0000D96C 23 23 23 23 20 4E 6F 74 20 65+aNotEnoughDataF DCB "#### Not enough data for reading in circular buffer (filled, req) = (%d, %d) ####",0
.rodata:0000D96C 6E 6F 75 67 68 20 64 61 74 61+                              ; DATA XREF: sub_7F90+698↑o
.rodata:0000D96C 20 66 6F 72 20 72 65 61 64 69+                              ; sub_7F90+6A0↑o
.rodata:0000D96C 6E 67 20 69 6E 20 63 69 72 63+                              ; .text:off_8A10↑o
.rodata:0000D9BE 2F 73 64 63 61 72 64 2F 41 6E+aSdcardAndroidL_1 DCB "/sdcard/Android/log/audio_dump/audio_hw_in.pcm",0
.rodata:0000D9BE 64 72 6F 69 64 2F 6C 6F 67 2F+                              ; DATA XREF: sub_7F90:loc_8878↑o
.rodata:0000D9BE 61 75 64 69 6F 5F 64 75 6D 70+                              ; sub_7F90+8F0↑o
.rodata:0000D9BE 2F 61 75 64 69 6F 5F 68 77 5F+                              ; .text:off_8A14↑o
.rodata:0000D9ED 73 74 61 72 74 5F 69 6E 70 75+aStartInputStre DCB "start_input_stream",0
.rodata:0000D9ED 74 5F 73 74 72 65 61 6D 00                                  ; DATA XREF: sub_7F90+DE↑o
.rodata:0000D9ED                                                             ; sub_7F90+EA↑o
.rodata:0000D9ED                                                             ; sub_7F90+19C↑o
.rodata:0000D9ED                                                             ; sub_7F90+1A4↑o
.rodata:0000D9ED                                                             ; sub_7F90+1E0↑o
.rodata:0000D9ED                                                             ; sub_7F90+1E8↑o
.rodata:0000D9ED                                                             ; sub_7F90+24E↑o
.rodata:0000D9ED                                                             ; sub_7F90+258↑o
.rodata:0000D9ED                                                             ; sub_7F90+2EE↑o
.rodata:0000D9ED                                                             ; sub_7F90+2FC↑o
.rodata:0000D9ED                                                             ; .text:off_896C↑o
.rodata:0000D9ED                                                             ; .text:off_8990↑o
.rodata:0000D9ED                                                             ; .text:off_89A4↑o
.rodata:0000D9ED                                                             ; .text:off_89B0↑o
.rodata:0000D9ED                                                             ; .text:off_89D0↑o
.rodata:0000DA00 25 73 28 29 3A 20 73 79 6E 63+aSSyncWithInput DCB "%s(): sync with input stream, standby output",0
.rodata:0000DA00 20 77 69 74 68 20 69 6E 70 75+                              ; DATA XREF: sub_7F90+198↑o
.rodata:0000DA00 74 20 73 74 72 65 61 6D 2C 20+                              ; sub_7F90+1A2↑o
.rodata:0000DA00 73 74 61 6E 64 62 79 20 6F 75+                              ; .text:off_898C↑o
.rodata:0000DA2D 25 73 28 29 3A 20 70 63 6D 5F+aSPcmOpenCardDD DCB "%s(): pcm_open card=%d, device=%d, sample_rate=%d,channel=%d,format=%d",0
.rodata:0000DA2D 6F 70 65 6E 20 63 61 72 64 3D+                              ; DATA XREF: sub_7F90+1DC↑o
.rodata:0000DA2D 25 64 2C 20 64 65 76 69 63 65+                              ; sub_7F90+1E6↑o
.rodata:0000DA2D 3D 25 64 2C 20 73 61 6D 70 6C+                              ; .text:off_89A0↑o
.rodata:0000DA74 67 65 74 5F 6E 65 78 74 5F 62+aGetNextBufferP DCB "get_next_buffer() pcm_read error %d",0
.rodata:0000DA74 75 66 66 65 72 28 29 20 70 63+                              ; DATA XREF: sub_8BD4+42↑o
.rodata:0000DA74 6D 5F 72 65 61 64 20 65 72 72+                              ; sub_8BD4+46↑o
.rodata:0000DA74 6F 72 20 25 64 00                                           ; .text:off_8C84↑o
.rodata:0000DA98 25 73 28 29 3A 2E 2E 2E 25 64+aSD_0 DCB "%s():...%d",0      ; DATA XREF: sub_8A58+14↑o
.rodata:0000DA98 00                                                          ; sub_8A58+1E↑o
.rodata:0000DA98                                                             ; .text:off_8BAC↑o
.rodata:0000DAA3 70 63 6D 5F 72 65 61 64 5F 74+aPcmReadThread DCB "pcm_read_thread",0
.rodata:0000DAA3 68 72 65 61 64 00                                           ; DATA XREF: sub_8A58+C↑o
.rodata:0000DAA3                                                             ; sub_8A58+18↑o
.rodata:0000DAA3                                                             ; .text:off_8BB0↑o
.rodata:0000DAB3 25 73 3A 20 62 65 66 6F 72 65+aSBeforeSlimRea DCB "%s: before slim read",0
.rodata:0000DAB3 20 73 6C 69 6D 20 72 65 61 64+                              ; DATA XREF: sub_8A58+2A↑o
.rodata:0000DAB3 00                                                          ; sub_8A58+32↑o
.rodata:0000DAB3                                                             ; .text:off_8BB4↑o
.rodata:0000DAC8 25 73 3A 20 6D 61 6C 6C 6F 63+aSMallocFail DCB "%s: malloc fail!!!",0
.rodata:0000DAC8 20 66 61 69 6C 21 21 21 00                                  ; DATA XREF: sub_8A58+64↑o
.rodata:0000DAC8                                                             ; sub_8A58+6C↑o
.rodata:0000DAC8                                                             ; .text:off_8BC4↑o
.rodata:0000DADB 62 65 66 6F 72 65 20 77 72 69+aBeforeWriteOve_0 DCB "before write overflow %d, %d",0
.rodata:0000DADB 74 65 20 6F 76 65 72 66 6C 6F+                              ; DATA XREF: sub_8A58+80↑o
.rodata:0000DADB 77 20 25 64 2C 20 25 64 00                                  ; sub_8A58+8A↑o
.rodata:0000DADB                                                             ; .text:off_8BC8↑o
.rodata:0000DAF8 61 66 74 65 72 20 77 72 69 74+aAfterWriteOver_0 DCB "after write overflow %d : %d",0
.rodata:0000DAF8 65 20 6F 76 65 72 66 6C 6F 77+                              ; DATA XREF: sub_8A58+CE↑o
.rodata:0000DAF8 20 25 64 20 3A 20 25 64 00                                  ; sub_8A58+D6↑o
.rodata:0000DAF8                                                             ; .text:off_8BCC↑o
.rodata:0000DB15 25 73 3A 20 61 66 74 65 72 20+aSAfterSlimRead DCB "%s: after slim read",0
.rodata:0000DB15 73 6C 69 6D 20 72 65 61 64 00                               ; DATA XREF: sub_8A58+30↑o
.rodata:0000DB15                                                             ; sub_8A58+34↑o
.rodata:0000DB15                                                             ; sub_8A58+E8↑o
.rodata:0000DB15                                                             ; sub_8A58+EA↑o
.rodata:0000DB15                                                             ; .text:off_8BB8↑o
.rodata:0000DB15                                                             ; .text:off_8BD0↑o
.rodata:0000DB29 23 23 23 23 20 70 63 6D 20 72+aPcmReadThreadE DCB "#### pcm read thread exit ####",0
.rodata:0000DB29 65 61 64 20 74 68 72 65 61 64+                              ; DATA XREF: sub_8A58+13C↑o
.rodata:0000DB29 20 65 78 69 74 20 23 23 23 23+                              ; sub_8A58+140↑o
.rodata:0000DB29 00                                                          ; .text:off_8BC0↑o
.rodata:0000DB48 25 73 28 29 3A 20 69 73 5F 63+aSIsCvqD DCB "%s(): is_cvq=%d",0
.rodata:0000DB48 76 71 3D 25 64 00                                           ; DATA XREF: sub_5520+18↑o
.rodata:0000DB48                                                             ; sub_5520+20↑o
.rodata:0000DB48                                                             ; .text:off_5594↑o
.rodata:0000DB58 61 64 65 76 5F 63 6C 6F 73 65+aAdevCloseInput DCB "adev_close_input_stream",0
.rodata:0000DB58 5F 69 6E 70 75 74 5F 73 74 72+                              ; DATA XREF: sub_5520+1A↑o
.rodata:0000DB58 65 61 6D 00                                                 ; sub_5520+22↑o
.rodata:0000DB58                                                             ; .text:off_5598↑o
.rodata:0000DB70 45 51 31 20 42 31 20 56 6F 6C+aEq1B1Volume DCB "EQ1 B1 Volume",0
.rodata:0000DB70 75 6D 65 00                                                 ; DATA XREF: .data.rel.ro:off_10BDC↓o
.rodata:0000DB7E 45 51 31 20 42 32 20 56 6F 6C+aEq1B2Volume DCB "EQ1 B2 Volume",0
.rodata:0000DB7E 75 6D 65 00                                                 ; DATA XREF: .data.rel.ro:00010BE0↓o
.rodata:0000DB8C 45 51 31 20 42 33 20 56 6F 6C+aEq1B3Volume DCB "EQ1 B3 Volume",0
.rodata:0000DB8C 75 6D 65 00                                                 ; DATA XREF: .data.rel.ro:00010BE4↓o
.rodata:0000DB9A 45 51 31 20 42 34 20 56 6F 6C+aEq1B4Volume DCB "EQ1 B4 Volume",0
.rodata:0000DB9A 75 6D 65 00                                                 ; DATA XREF: .data.rel.ro:00010BE8↓o
.rodata:0000DBA8 45 51 31 20 42 35 20 56 6F 6C+aEq1B5Volume DCB "EQ1 B5 Volume",0
.rodata:0000DBA8 75 6D 65 00                                                 ; DATA XREF: .data.rel.ro:00010BEC↓o
.rodata:0000DBB6 45 51 32 20 42 31 20 56 6F 6C+aEq2B1Volume DCB "EQ2 B1 Volume",0
.rodata:0000DBB6 75 6D 65 00                                                 ; DATA XREF: .data.rel.ro:off_10BF0↓o
.rodata:0000DBC4 45 51 32 20 42 32 20 56 6F 6C+aEq2B2Volume DCB "EQ2 B2 Volume",0
.rodata:0000DBC4 75 6D 65 00                                                 ; DATA XREF: .data.rel.ro:00010BF4↓o
.rodata:0000DBD2 45 51 32 20 42 33 20 56 6F 6C+aEq2B3Volume DCB "EQ2 B3 Volume",0
.rodata:0000DBD2 75 6D 65 00                                                 ; DATA XREF: .data.rel.ro:00010BF8↓o
.rodata:0000DBE0 45 51 32 20 42 34 20 56 6F 6C+aEq2B4Volume DCB "EQ2 B4 Volume",0
.rodata:0000DBE0 75 6D 65 00                                                 ; DATA XREF: .data.rel.ro:00010BFC↓o
.rodata:0000DBEE 45 51 32 20 42 35 20 56 6F 6C+aEq2B5Volume DCB "EQ2 B5 Volume",0
.rodata:0000DBEE 75 6D 65 00                                                 ; DATA XREF: .data.rel.ro:00010C00↓o
.rodata:0000DBFC 61 75 64 69 6F 5F 72 6F 75 74+aAudioRoute DCB "audio_route",0
.rodata:0000DBFC 65 00                                                       ; DATA XREF: audio_route_apply_path:loc_8DA6↑o
.rodata:0000DBFC                                                             ; audio_route_apply_path+58↑o
.rodata:0000DBFC                                                             ; audio_route_apply_path:loc_8DBC↑o
.rodata:0000DBFC                                                             ; audio_route_apply_path+70↑o
.rodata:0000DBFC                                                             ; .text:off_8DD4↑o
.rodata:0000DBFC                                                             ; .text:off_8DDC↑o
.rodata:0000DBFC                                                             ; audio_route_reset_path:loc_8E54↑o
.rodata:0000DBFC                                                             ; audio_route_reset_path+4E↑o
.rodata:0000DBFC                                                             ; audio_route_reset_path:loc_8E68↑o
.rodata:0000DBFC                                                             ; audio_route_reset_path+64↑o
.rodata:0000DBFC                                                             ; .text:off_8E80↑o
.rodata:0000DBFC                                                             ; .text:off_8E88↑o
.rodata:0000DBFC                                                             ; audio_route_init:loc_9072↑o
.rodata:0000DBFC                                                             ; audio_route_init+1E8↑o
.rodata:0000DBFC                                                             ; audio_route_init:loc_9082↑o ...
.rodata:0000DC08 69 6E 76 61 6C 69 64 20 61 75+aInvalidAudioRo DCB "invalid audio_route",0
.rodata:0000DC08 64 69 6F 5F 72 6F 75 74 65 00                               ; DATA XREF: audio_route_apply_path+56↑o
.rodata:0000DC08                                                             ; audio_route_apply_path+5A↑o
.rodata:0000DC08                                                             ; .text:off_8DE0↑o
.rodata:0000DC08                                                             ; audio_route_reset_path+4C↑o
.rodata:0000DC08                                                             ; audio_route_reset_path+50↑o
.rodata:0000DC08                                                             ; .text:off_8E8C↑o
.rodata:0000DC1C 75 6E 61 62 6C 65 20 74 6F 20+aUnableToFindPa DCB "unable to find path '%s'",0
.rodata:0000DC1C 66 69 6E 64 20 70 61 74 68 20+                              ; DATA XREF: audio_route_apply_path+6C↑o
.rodata:0000DC1C 27 25 73 27 00                                              ; audio_route_apply_path+72↑o
.rodata:0000DC1C                                                             ; .text:off_8DD8↑o
.rodata:0000DC1C                                                             ; audio_route_reset_path+60↑o
.rodata:0000DC1C                                                             ; audio_route_reset_path+66↑o
.rodata:0000DC1C                                                             ; .text:off_8E84↑o
.rodata:0000DC35 55 6E 61 62 6C 65 20 74 6F 20+aUnableToOpenTh DCB "Unable to open the mixer, aborting.",0
.rodata:0000DC35 6F 70 65 6E 20 74 68 65 20 6D+                              ; DATA XREF: audio_route_init+1E6↑o
.rodata:0000DC35 69 78 65 72 2C 20 61 62 6F 72+                              ; audio_route_init+1EA↑o
.rodata:0000DC35 74 69 6E 67 2E 00                                           ; .text:off_9128↑o
.rodata:0000DC59 46 61 69 6C 65 64 20 74 6F 20+aFailedToOpenS DCB "Failed to open %s",0
.rodata:0000DC59 6F 70 65 6E 20 25 73 00                                     ; DATA XREF: audio_route_init+1F6↑o
.rodata:0000DC59                                                             ; audio_route_init+1FC↑o
.rodata:0000DC59                                                             ; .text:off_9120↑o
.rodata:0000DC6B 46 61 69 6C 65 64 20 74 6F 20+aFailedToCreate_0 DCB "Failed to create XML parser",0
.rodata:0000DC6B 63 72 65 61 74 65 20 58 4D 4C+                              ; DATA XREF: audio_route_init+208↑o
.rodata:0000DC6B 20 70 61 72 73 65 72 00                                     ; audio_route_init+20C↑o
.rodata:0000DC6B                                                             ; .text:off_9118↑o
.rodata:0000DC87 45 72 72 6F 72 20 69 6E 20 6D+aErrorInMixerXm DCB "Error in mixer xml (%s)",0
.rodata:0000DC87 69 78 65 72 20 78 6D 6C 20 28+                              ; DATA XREF: audio_route_init+218↑o
.rodata:0000DC87 25 73 29 00                                                 ; audio_route_init+21E↑o
.rodata:0000DC87                                                             ; .text:off_910C↑o
.rodata:0000DC9F 6E 61 6D 65 00                aName DCB "name",0            ; DATA XREF: sub_9130+14↑o
.rodata:0000DC9F                                                             ; sub_9130+26↑o
.rodata:0000DC9F                                                             ; .text:off_951C↑o
.rodata:0000DCA4 69 64 00                      aId DCB "id",0                ; DATA XREF: sub_9130+1C↑o
.rodata:0000DCA4                                                             ; sub_9130+28↑o
.rodata:0000DCA4                                                             ; .text:off_9520↑o
.rodata:0000DCA7 76 61 6C 75 65 00             aValue DCB "value",0          ; DATA XREF: sub_9130+22↑o
.rodata:0000DCA7                                                             ; sub_9130+2C↑o
.rodata:0000DCA7                                                             ; .text:off_9524↑o
.rodata:0000DCAD 70 61 74 68 00                aPath DCB "path",0            ; DATA XREF: sub_9130+80↑o
.rodata:0000DCAD                                                             ; sub_9130+84↑o
.rodata:0000DCAD                                                             ; .text:off_9528↑o
.rodata:0000DCB2 55 6E 6E 61 6D 65 64 20 70 61+aUnnamedPath DCB "Unnamed path!",0
.rodata:0000DCB2 74 68 21 00                                                 ; DATA XREF: sub_9130+F8↑o
.rodata:0000DCB2                                                             ; sub_9130+FC↑o
.rodata:0000DCB2                                                             ; .text:off_9564↑o
.rodata:0000DCC0 63 74 6C 00                   aCtl DCB "ctl",0              ; DATA XREF: sub_9130+8E↑o
.rodata:0000DCC0                                                             ; sub_9130+92↑o
.rodata:0000DCC0                                                             ; .text:off_952C↑o
.rodata:0000DCC4 43 6F 6E 74 72 6F 6C 20 27 25+aControlSDoesnT DCB "Control '%s' doesn't exist - skipping",0
.rodata:0000DCC4 73 27 20 64 6F 65 73 6E 27 74+                              ; DATA XREF: sub_9130+1A6↑o
.rodata:0000DCC4 20 65 78 69 73 74 20 2D 20 73+                              ; sub_9130+1AC↑o
.rodata:0000DCC4 6B 69 70 70 69 6E 67 00                                     ; .text:off_9544↑o
.rodata:0000DCEA 76 61 6C 75 65 20 69 64 20 6F+aValueIdOutOfRa DCB "value id out of range for mixer ctl '%s'",0
.rodata:0000DCEA 75 74 20 6F 66 20 72 61 6E 67+                              ; DATA XREF: sub_9130+324↑o
.rodata:0000DCEA 65 20 66 6F 72 20 6D 69 78 65+                              ; sub_9130+328↑o
.rodata:0000DCEA 72 20 63 74 6C 20 27 25 73 27+                              ; .text:off_953C↑o
.rodata:0000DD13 50 61 74 68 20 6E 61 6D 65 20+aPathNameSAlrea DCB "Path name '%s' already exists",0
.rodata:0000DD13 27 25 73 27 20 61 6C 72 65 61+                              ; DATA XREF: sub_9130+E4↑o
.rodata:0000DD13 64 79 20 65 78 69 73 74 73 00                               ; sub_9130+EA↑o
.rodata:0000DD13                                                             ; .text:off_9554↑o
.rodata:0000DD31 55 6E 61 62 6C 65 20 74 6F 20+aUnableToAlloca_0 DCB "Unable to allocate more paths",0
.rodata:0000DD31 61 6C 6C 6F 63 61 74 65 20 6D+                              ; DATA XREF: sub_9130+3CE↑o
.rodata:0000DD31 6F 72 65 20 70 61 74 68 73 00                               ; sub_9130+3D2↑o
.rodata:0000DD31                                                             ; .text:off_955C↑o
.rodata:0000DD4F 43 6F 6E 74 72 6F 6C 20 27 25+aControlSAlread DCB "Control '%s' already exists in path '%s'",0
.rodata:0000DD4F 73 27 20 61 6C 72 65 61 64 79+                              ; DATA XREF: sub_9130+39A↑o
.rodata:0000DD4F 20 65 78 69 73 74 73 20 69 6E+                              ; sub_9130+3A0↑o
.rodata:0000DD4F 20 70 61 74 68 20 27 25 73 27+                              ; .text:off_954C↑o
.rodata:0000DD78 55 6E 61 62 6C 65 20 74 6F 20+aUnableToAlloca_1 DCB "Unable to allocate more path settings",0
.rodata:0000DD78 61 6C 6C 6F 63 61 74 65 20 6D+                              ; DATA XREF: sub_95D4+34↑o
.rodata:0000DD78 6F 72 65 20 70 61 74 68 20 73+                              ; sub_95D4+38↑o
.rodata:0000DD78 65 74 74 69 6E 67 73 00                                     ; .text:off_961C↑o
.rodata:0000DD9E 6D 69 78 65 72 20 69 6E 64 65+aMixerIndexDIsO DCB "mixer index %d is out of range for '%s'",0
.rodata:0000DD9E 78 20 25 64 20 69 73 20 6F 75+                              ; DATA XREF: sub_9130+30A↑o
.rodata:0000DD9E 74 20 6F 66 20 72 61 6E 67 65+                              ; sub_9130+310↑o
.rodata:0000DD9E 20 66 6F 72 20 27 25 73 27 00                               ; .text:off_9534↑o
.rodata:0000DDC6 49 6E 76 61 6C 69 64 20 63 6F+aInvalidControl DCB "Invalid control name: %s",0xA,0
.rodata:0000DDC6 6E 74 72 6F 6C 20 6E 61 6D 65+                              ; DATA XREF: get_value+1C↑o
.rodata:0000DDC6 3A 20 25 73 0A 00                                           ; get_value+20↑o
.rodata:0000DDC6                                                             ; .text:off_9668↑o
.rodata:0000DDE0 49 6E 76 61 6C 69 64 20 63 6F+aInvalidControl_1 DCB "Invalid control name: %s",0
.rodata:0000DDE0 6E 74 72 6F 6C 20 6E 61 6D 65+                              ; DATA XREF: set_value:loc_96D2↑o
.rodata:0000DDE0 3A 20 25 73 00                                              ; set_value+62↑o
.rodata:0000DDE0                                                             ; .text:off_971C↑o
.rodata:0000DDF9 45 72 72 6F 72 3A 20 69 6E 76+aErrorInvalidVa DCB "Error: invalid value",0
.rodata:0000DDF9 61 6C 69 64 20 76 61 6C 75 65+                              ; DATA XREF: set_value+44↑o
.rodata:0000DDF9 00                                                          ; set_value+46↑o
.rodata:0000DDF9                                                             ; .text:off_9718↑o
.rodata:0000DE0E 45 72 72 6F 72 3A 20 69 6E 76+aErrorInvalidEn DCB "Error: invalid enum value",0
.rodata:0000DE0E 61 6C 69 64 20 65 6E 75 6D 20+                              ; DATA XREF: set_value+78↑o
.rodata:0000DE0E 76 61 6C 75 65 00                                           ; set_value+7A↑o
.rodata:0000DE0E                                                             ; .text:off_9714↑o
.rodata:0000DE28 45 72 72 6F 72 3A 20 6F 6E 6C+aErrorOnlyEnumT DCB "Error: only enum types can be set with strings",0
.rodata:0000DE28 79 20 65 6E 75 6D 20 74 79 70+                              ; DATA XREF: set_value:loc_96F2↑o
.rodata:0000DE28 65 73 20 63 61 6E 20 62 65 20+                              ; set_value+80↑o
.rodata:0000DE28 73 65 74 20 77 69 74 68 20 73+                              ; .text:off_9710↑o
.rodata:0000DE57 43 56 51 53 74 72 65 61 6D 00 aCvqstream DCB "CVQStream",0  ; DATA XREF: cvq_open+2C↑o
.rodata:0000DE57                                                             ; cvq_open+36↑o
.rodata:0000DE57                                                             ; cvq_open+64↑o
.rodata:0000DE57                                                             ; cvq_open+6A↑o
.rodata:0000DE57                                                             ; cvq_open:loc_9798↑o
.rodata:0000DE57                                                             ; cvq_open+76↑o
.rodata:0000DE57                                                             ; cvq_open+90↑o
.rodata:0000DE57                                                             ; cvq_open+96↑o
.rodata:0000DE57                                                             ; cvq_open+AE↑o
.rodata:0000DE57                                                             ; cvq_open+B8↑o
.rodata:0000DE57                                                             ; .text:off_9810↑o
.rodata:0000DE57                                                             ; .text:off_981C↑o
.rodata:0000DE57                                                             ; .text:off_9824↑o
.rodata:0000DE57                                                             ; .text:off_9834↑o
.rodata:0000DE57                                                             ; .text:off_983C↑o ...
.rodata:0000DE61 61 75 64 69 6F 20 63 76 71 20+aAudioCvqS DCB "audio cvq %s",0
.rodata:0000DE61 25 73 00                                                    ; DATA XREF: cvq_open+2E↑o
.rodata:0000DE61                                                             ; cvq_open+40↑o
.rodata:0000DE61                                                             ; .text:off_9814↑o
.rodata:0000DE61                                                             ; cvq_close+8↑o
.rodata:0000DE61                                                             ; cvq_close+10↑o
.rodata:0000DE61                                                             ; .text:off_98B4↑o
.rodata:0000DE61                                                             ; read_on_thread+18↑o
.rodata:0000DE61                                                             ; read_on_thread+20↑o
.rodata:0000DE61                                                             ; .text:off_9A54↑o
.rodata:0000DE6E 63 76 71 5F 6F 70 65 6E 00    aCvqOpen_0 DCB "cvq_open",0   ; DATA XREF: cvq_open+34↑o
.rodata:0000DE6E                                                             ; cvq_open+42↑o
.rodata:0000DE6E                                                             ; .text:off_9818↑o
.rodata:0000DE77 73 65 74 20 73 74 72 65 61 6D+aSetStreamingFa DCB "set streaming failed:%p",0
.rodata:0000DE77 69 6E 67 20 66 61 69 6C 65 64+                              ; DATA XREF: cvq_open+68↑o
.rodata:0000DE77 3A 25 70 00                                                 ; cvq_open+6C↑o
.rodata:0000DE77                                                             ; .text:off_9820↑o
.rodata:0000DE8F 73 65 74 20 73 74 72 65 61 6D+aSetStreamingSu DCB "set streaming success:%p",0
.rodata:0000DE8F 69 6E 67 20 73 75 63 63 65 73+                              ; DATA XREF: cvq_open+74↑o
.rodata:0000DE8F 73 3A 25 70 00                                              ; cvq_open+78↑o
.rodata:0000DE8F                                                             ; .text:off_9828↑o
.rodata:0000DEA8 2F 64 65 76 2F 61 64 6E 63 32+aDevAdnc2 DCB "/dev/adnc2",0  ; DATA XREF: cvq_open+7E↑o
.rodata:0000DEA8 00                                                          ; cvq_open+82↑o
.rodata:0000DEA8                                                             ; .text:off_982C↑o
.rodata:0000DEB3 75 61 72 74 5F 63 68 61 72 5F+aUartCharDevOpe_0 DCB "uart_char_dev open failed:%p %d %s",0
.rodata:0000DEB3 64 65 76 20 6F 70 65 6E 20 66+                              ; DATA XREF: cvq_open+B2↑o
.rodata:0000DEB3 61 69 6C 65 64 3A 25 70 20 25+                              ; cvq_open+BA↑o
.rodata:0000DEB3 64 20 25 73 00                                              ; .text:off_9840↑o
.rodata:0000DED6 75 61 72 74 5F 63 68 61 72 5F+aUartCharDevOpe DCB "uart_char_dev open success:%p",0
.rodata:0000DED6 64 65 76 20 6F 70 65 6E 20 73+                              ; DATA XREF: cvq_open+94↑o
.rodata:0000DED6 75 63 63 65 73 73 3A 25 70 00                               ; cvq_open+98↑o
.rodata:0000DED6                                                             ; .text:off_9838↑o
.rodata:0000DEF4 63 76 71 5F 63 6C 6F 73 65 00 aCvqClose_0 DCB "cvq_close",0 ; DATA XREF: cvq_close+C↑o
.rodata:0000DEF4                                                             ; cvq_close+12↑o
.rodata:0000DEF4                                                             ; .text:off_98B8↑o
.rodata:0000DEFE 23 23 23 23 20 75 61 72 74 20+aUartClosedRetD DCB "#### uart closed, ret = %d ####",0
.rodata:0000DEFE 63 6C 6F 73 65 64 2C 20 72 65+                              ; DATA XREF: cvq_close+50↑o
.rodata:0000DEFE 74 20 3D 20 25 64 20 23 23 23+                              ; cvq_close+58↑o
.rodata:0000DEFE 23 00                                                       ; .text:off_98C0↑o
.rodata:0000DF1E 23 23 23 23 20 43 56 51 20 72+aCvqReadTimeout DCB "#### CVQ read timeout, force end ####",0
.rodata:0000DF1E 65 61 64 20 74 69 6D 65 6F 75+                              ; DATA XREF: cvq_read+3C↑o
.rodata:0000DF1E 74 2C 20 66 6F 72 63 65 20 65+                              ; cvq_read+42↑o
.rodata:0000DF1E 6E 64 20 23 23 23 23 00                                     ; .text:off_9960↑o
.rodata:0000DF44 23 23 23 23 20 65 6E 64 20 6F+aEndOfUartData DCB "#### end of uart data ####",0
.rodata:0000DF44 66 20 75 61 72 74 20 64 61 74+                              ; DATA XREF: cvq_read+52↑o
.rodata:0000DF44 61 20 23 23 23 23 00                                        ; cvq_read+56↑o
.rodata:0000DF44                                                             ; .text:off_9968↑o
.rodata:0000DF5F 72 65 61 64 6F 6E 74 68 72 65+aReadonthreadCa DCB "readonthread called",0
.rodata:0000DF5F 61 64 20 63 61 6C 6C 65 64 00                               ; DATA XREF: read_on_thread+A↑o
.rodata:0000DF5F                                                             ; read_on_thread+10↑o
.rodata:0000DF5F                                                             ; .text:off_9A50↑o
.rodata:0000DF73 72 65 61 64 5F 6F 6E 5F 74 68+aReadOnThread_0 DCB "read_on_thread",0
.rodata:0000DF73 72 65 61 64 00                                              ; DATA XREF: read_on_thread+1C↑o
.rodata:0000DF73                                                             ; read_on_thread+22↑o
.rodata:0000DF73                                                             ; .text:off_9A58↑o
.rodata:0000DF82 23 23 23 23 20 72 65 61 64 5F+aReadOnThreadUa DCB "#### read_on_thread: UART data read thread lagging so wait till data is available ... ####",0
.rodata:0000DF82 6F 6E 5F 74 68 72 65 61 64 3A+                              ; DATA XREF: read_on_thread+92↑o
.rodata:0000DF82 20 55 41 52 54 20 64 61 74 61+                              ; read_on_thread+96↑o
.rodata:0000DF82 20 72 65 61 64 20 74 68 72 65+                              ; .text:off_9A60↑o
.rodata:0000DFDD 23 23 23 23 20 72 65 61 64 5F+aReadOnRawDataT_0 DCB "#### read_on_raw_data_thread called ####",0
.rodata:0000DFDD 6F 6E 5F 72 61 77 5F 64 61 74+                              ; DATA XREF: read_on_raw_data_thread+A↑o
.rodata:0000DFDD 61 5F 74 68 72 65 61 64 20 63+                              ; read_on_raw_data_thread+10↑o
.rodata:0000DFDD 61 6C 6C 65 64 20 23 23 23 23+                              ; .text:off_9B3C↑o
.rodata:0000E006 23 23 23 23 20 53 74 61 72 74+aStartReadOnThr DCB "#### Start read_on_thread for UART data parsing and decoding ####",0
.rodata:0000E006 20 72 65 61 64 5F 6F 6E 5F 74+                              ; DATA XREF: read_on_raw_data_thread+9A↑o
.rodata:0000E006 68 72 65 61 64 20 66 6F 72 20+                              ; read_on_raw_data_thread+9E↑o
.rodata:0000E006 55 41 52 54 20 64 61 74 61 20+                              ; .text:off_9B4C↑o
.rodata:0000E048 23 23 23 23 20 75 61 72 74 20+aUartClosed DCB "#### uart closed ####",0
.rodata:0000E048 63 6C 6F 73 65 64 20 23 23 23+                              ; DATA XREF: read_on_raw_data_thread+BE↑o
.rodata:0000E048 23 00                                                       ; read_on_raw_data_thread+C4↑o
.rodata:0000E048                                                             ; .text:off_9B44↑o
.rodata:0000E05E 23 23 23 23 20 53 74 61 72 74+aStartCvqUartPa DCB "#### Start CVQ UART packet and/or data parsing/decoding called ####",0
.rodata:0000E05E 20 43 56 51 20 55 41 52 54 20+                              ; DATA XREF: cvq_start_decode+6↑o
.rodata:0000E05E 70 61 63 6B 65 74 20 61 6E 64+                              ; cvq_start_decode+C↑o
.rodata:0000E05E 2F 6F 72 20 64 61 74 61 20 70+                              ; .text:off_9C14↑o
.rodata:0000E0A2 23 23 23 23 20 72 65 61 64 5F+aReadOnThreadTh DCB "#### read_on_thread() thread creation failed ####",0
.rodata:0000E0A2 6F 6E 5F 74 68 72 65 61 64 28+                              ; DATA XREF: cvq_start_decode+30↑o
.rodata:0000E0A2 29 20 74 68 72 65 61 64 20 63+                              ; cvq_start_decode+34↑o
.rodata:0000E0A2 72 65 61 74 69 6F 6E 20 66 61+                              ; .text:off_9C20↑o
.rodata:0000E0D4 23 23 23 23 20 73 74 61 72 74+aStartCvqReadTh DCB "#### start CVQ read thread called ####",0
.rodata:0000E0D4 20 43 56 51 20 72 65 61 64 20+                              ; DATA XREF: cvq_start+6↑o
.rodata:0000E0D4 74 68 72 65 61 64 20 63 61 6C+                              ; cvq_start+C↑o
.rodata:0000E0D4 6C 65 64 20 23 23 23 23 00                                  ; .text:off_9C64↑o
.rodata:0000E0FB 23 23 23 23 20 72 65 61 64 5F+aReadOnRawDataT_1 DCB "#### read_on_raw_data_thread() thread creation failed ####",0
.rodata:0000E0FB 6F 6E 5F 72 61 77 5F 64 61 74+                              ; DATA XREF: cvq_start+30↑o
.rodata:0000E0FB 61 5F 74 68 72 65 61 64 28 29+                              ; cvq_start+34↑o
.rodata:0000E0FB 20 74 68 72 65 61 64 20 63 72+                              ; .text:off_9C70↑o
.rodata:0000E136 23 23 23 23 20 42 65 66 6F 72+aBeforeUartRead DCB "#### Before UART read ####",0
.rodata:0000E136 65 20 55 41 52 54 20 72 65 61+                              ; DATA XREF: uart_dev_read_wrapper+30↑o
.rodata:0000E136 64 20 23 23 23 23 00                                        ; uart_dev_read_wrapper+38↑o
.rodata:0000E136                                                             ; .text:off_9BCC↑o
.rodata:0000E151 23 23 23 23 20 41 66 74 65 72+aAfterUartReadR DCB "#### After  UART read (req, actual) = (%d, %d) ####",0
.rodata:0000E151 20 20 55 41 52 54 20 72 65 61+                              ; DATA XREF: uart_dev_read_wrapper+56↑o
.rodata:0000E151 64 20 28 72 65 71 2C 20 61 63+                              ; uart_dev_read_wrapper+5A↑o
.rodata:0000E151 74 75 61 6C 29 20 3D 20 28 25+                              ; .text:off_9BD0↑o
.rodata:0000E185 23 23 23 23 20 63 76 71 53 74+aCvqstreamExitD DCB "#### cvqStream->exit = %d, skipping UART read ... ####",0
.rodata:0000E185 72 65 61 6D 2D 3E 65 78 69 74+                              ; DATA XREF: uart_dev_read_wrapper+1C↑o
.rodata:0000E185 20 3D 20 25 64 2C 20 73 6B 69+                              ; uart_dev_read_wrapper+20↑o
.rodata:0000E185 70 70 69 6E 67 20 55 41 52 54+                              ; .text:off_9BC4↑o
.rodata:0000E1BC 23 23 23 23 20 73 6B 69 70 70+aSkippingUartDa DCB "#### skipping UART data decoding as UART read thread is lagging ... ####",0
.rodata:0000E1BC 69 6E 67 20 55 41 52 54 20 64+                              ; DATA XREF: uart_read_wrapper+68↑o
.rodata:0000E1BC 61 74 61 20 64 65 63 6F 64 69+                              ; uart_read_wrapper+6C↑o
.rodata:0000E1BC 6E 67 20 61 73 20 55 41 52 54+                              ; .text:off_9CFC↑o
.rodata:0000E205 23 23 23 23 20 63 76 71 53 74+aCvqstreamExitD_0 DCB "#### cvqStream->exit = %d, skipping UART data decoding ... ####",0
.rodata:0000E205 72 65 61 6D 2D 3E 65 78 69 74+                              ; DATA XREF: uart_read_wrapper+1A↑o
.rodata:0000E205 20 3D 20 25 64 2C 20 73 6B 69+                              ; uart_read_wrapper+1E↑o
.rodata:0000E205 70 70 69 6E 67 20 55 41 52 54+                              ; .text:off_9CF4↑o
.rodata:0000E245 23 23 23 23 20 43 56 51 20 72+aCvqReadAborted DCB "#### CVQ read aborted because normal streaming data received ####",0
.rodata:0000E245 65 61 64 20 61 62 6F 72 74 65+                              ; DATA XREF: pcm_read_uart_char_dev+1F0↑o
.rodata:0000E245 64 20 62 65 63 61 75 73 65 20+                              ; pcm_read_uart_char_dev+1FA↑o
.rodata:0000E245 6E 6F 72 6D 61 6C 20 73 74 72+                              ; .text:off_9F10↑o
.rodata:0000E287 23 23 23 23 20 46 72 61 6D 65+aFrameFoundIdPk DCB "#### Frame found - < ID : PKT # : LEN : EOD : MU-Law : EOD_BYTE > = <%5d : %5d : %5d : %5d : %"
.rodata:0000E287 20 66 6F 75 6E 64 20 2D 20 3C+                              ; DATA XREF: pcm_read_uart_char_dev:loc_9E82↑o
.rodata:0000E287 20 49 44 20 3A 20 50 4B 54 20+                              ; pcm_read_uart_char_dev+192↑o
.rodata:0000E287 23 20 3A 20 4C 45 4E 20 3A 20+                              ; .text:off_9F20↑o
.rodata:0000E287 45 4F 44 20 3A 20 4D 55 2D 4C+DCB "5d : %5d> ####",0
.rodata:0000E2F4 76 6F 69 64 20 5F 55 6E 77 69+aVoidUnwindResu DCB "void _Unwind_Resume(_Unwind_Exception *)",0
.rodata:0000E2F4 6E 64 5F 52 65 73 75 6D 65 28+                              ; DATA XREF: sub_A760+1A↑o
.rodata:0000E2F4 5F 55 6E 77 69 6E 64 5F 45 78+                              ; sub_A760+22↑o
.rodata:0000E2F4 63 65 70 74 69 6F 6E 20 2A 29+                              ; .text:off_A78C↑o
.rodata:0000E31D 65 78 74 65 72 6E 61 6C 2F 6C+aExternalLibunw DCB "external/libunwind_llvm/src/Unwind-EHABI.cpp",0
.rodata:0000E31D 69 62 75 6E 77 69 6E 64 5F 6C+                              ; DATA XREF: sub_A794+8↑o
.rodata:0000E31D 6C 76 6D 2F 73 72 63 2F 55 6E+                              ; sub_A794+E↑o
.rodata:0000E31D 77 69 6E 64 2D 45 48 41 42 49+                              ; .text:off_A7C0↑o
.rodata:0000E34A 5F 55 6E 77 69 6E 64 5F 52 65+aUnwindResumeCa DCB "_Unwind_Resume() can't return",0
.rodata:0000E34A 73 75 6D 65 28 29 20 63 61 6E+                              ; DATA XREF: sub_A760+20↑o
.rodata:0000E34A 27 74 20 72 65 74 75 72 6E 00                               ; sub_A760+24↑o
.rodata:0000E34A                                                             ; .text:off_A790↑o
.rodata:0000E368 5F 55 6E 77 69 6E 64 5F 56 52+aUnwindVrsResul DCB "_Unwind_VRS_Result _Unwind_VRS_Set(_Unwind_Context *, _Unwind_VRS_RegClass, uint32_t, _Unwind_"
.rodata:0000E368 53 5F 52 65 73 75 6C 74 20 5F+                              ; DATA XREF: sub_A378:def_A384↑o
.rodata:0000E368 55 6E 77 69 6E 64 5F 56 52 53+                              ; sub_A378+8A↑o
.rodata:0000E368 5F 53 65 74 28 5F 55 6E 77 69+                              ; .text:off_A40C↑o
.rodata:0000E368 6E 64 5F 43 6F 6E 74 65 78 74+DCB "VRS_DataRepresentation, void *)",0
.rodata:0000E3E6 75 6E 73 75 70 70 6F 72 74 65+aUnsupportedReg DCB "unsupported register class",0
.rodata:0000E3E6 64 20 72 65 67 69 73 74 65 72+                              ; DATA XREF: .text:0000A364↑o
.rodata:0000E3E6 20 63 6C 61 73 73 00                                        ; .text:0000A368↑o
.rodata:0000E3E6                                                             ; .text:off_A374↑o
.rodata:0000E3E6                                                             ; sub_A378+88↑o
.rodata:0000E3E6                                                             ; sub_A378+8C↑o
.rodata:0000E3E6                                                             ; .text:off_A410↑o
.rodata:0000E3E6                                                             ; sub_A414+120↑o
.rodata:0000E3E6                                                             ; sub_A414+124↑o
.rodata:0000E3E6                                                             ; .text:off_A54C↑o
.rodata:0000E401 5F 55 6E 77 69 6E 64 5F 56 52+aUnwindVrsResul_0 DCB "_Unwind_VRS_Result _Unwind_VRS_Pop(_Unwind_Context *, _Unwind_VRS_RegClass, uint32_t, _Unwind_"
.rodata:0000E401 53 5F 52 65 73 75 6C 74 20 5F+                              ; DATA XREF: sub_A414:def_A432↑o
.rodata:0000E401 55 6E 77 69 6E 64 5F 56 52 53+                              ; sub_A414+122↑o
.rodata:0000E401 5F 50 6F 70 28 5F 55 6E 77 69+                              ; .text:off_A548↑o
.rodata:0000E401 6E 64 5F 43 6F 6E 74 65 78 74+DCB "VRS_DataRepresentation)",0
.rodata:0000E477 5F 55 6E 77 69 6E 64 5F 52 65+aUnwindReasonCo DCB "_Unwind_Reason_Code unwind_phase2(unw_context_t *, _Unwind_Exception *, bool)",0
.rodata:0000E477 61 73 6F 6E 5F 43 6F 64 65 20+                              ; DATA XREF: sub_A670+8E↑o
.rodata:0000E477 75 6E 77 69 6E 64 5F 70 68 61+                              ; sub_A670+96↑o
.rodata:0000E477 73 65 32 28 75 6E 77 5F 63 6F+                              ; .text:off_A750↑o
.rodata:0000E4C5 64 75 72 69 6E 67 20 70 68 61+aDuringPhase1Pe DCB "during phase1 personality function said it would stop here, but now in phase2 it did not stop "
.rodata:0000E4C5 73 65 31 20 70 65 72 73 6F 6E+                              ; DATA XREF: sub_A670+94↑o
.rodata:0000E4C5 61 6C 69 74 79 20 66 75 6E 63+                              ; sub_A670+98↑o
.rodata:0000E4C5 74 69 6F 6E 20 73 61 69 64 20+                              ; .text:off_A754↑o
.rodata:0000E4C5 69 74 20 77 6F 75 6C 64 20 73+DCB "here",0
.rodata:0000E528 6C 69 62 75 6E 77 69 6E 64 3A+aLibunwindSSDS DCB "libunwind: %s %s:%d - %s",0xA,0
.rodata:0000E528 20 25 73 20 25 73 3A 25 64 20+                              ; DATA XREF: sub_A794+18↑o
.rodata:0000E528 2D 20 25 73 0A 00                                           ; sub_A794+1A↑o
.rodata:0000E528                                                             ; .text:off_A7BC↑o
.rodata:0000E528                                                             ; sub_AE80+A↑o
.rodata:0000E528                                                             ; sub_AE80+10↑o
.rodata:0000E528                                                             ; .text:off_AEA8↑o
.rodata:0000E542 5F 55 6E 77 69 6E 64 5F 56 52+aUnwindVrsResul_1 DCB "_Unwind_VRS_Result _Unwind_VRS_Get_Internal(_Unwind_Context *, _Unwind_VRS_RegClass, uint32_t,"
.rodata:0000E542 53 5F 52 65 73 75 6C 74 20 5F+                              ; DATA XREF: .text:def_A2F0↑o
.rodata:0000E542 55 6E 77 69 6E 64 5F 56 52 53+                              ; .text:0000A366↑o
.rodata:0000E542 5F 47 65 74 5F 49 6E 74 65 72+                              ; .text:off_A370↑o
.rodata:0000E542 6E 61 6C 28 5F 55 6E 77 69 6E+DCB " _Unwind_VRS_DataRepresentation, void *)",0
.rodata:0000E5C9 65 78 74 65 72 6E 61 6C 2F 6C+aExternalLibunw_0 DCB "external/libunwind_llvm/src/UnwindCursor.hpp",0
.rodata:0000E5C9 69 62 75 6E 77 69 6E 64 5F 6C+                              ; DATA XREF: sub_AF58+156↑o
.rodata:0000E5C9 6C 76 6D 2F 73 72 63 2F 55 6E+                              ; sub_AF58+15C↑o
.rodata:0000E5C9 77 69 6E 64 43 75 72 73 6F 72+                              ; sub_AF58+16A↑o
.rodata:0000E5C9 2E 68 70 70 00                                              ; sub_AF58+170↑o
.rodata:0000E5C9                                                             ; .text:off_B0E0↑o
.rodata:0000E5C9                                                             ; .text:off_B0F0↑o
.rodata:0000E5F6 75 69 6E 74 33 32 5F 74 20 6C+aUint32TLibunwi DCB "uint32_t libunwind::Registers_arm::getRegister(int)",0
.rodata:0000E5F6 69 62 75 6E 77 69 6E 64 3A 3A+                              ; DATA XREF: sub_AA60:loc_AACA↑o
.rodata:0000E5F6 52 65 67 69 73 74 65 72 73 5F+                              ; sub_AA60+74↑o
.rodata:0000E5F6 61 72 6D 3A 3A 67 65 74 52 65+                              ; .text:off_AAE0↑o
.rodata:0000E62A 65 78 74 65 72 6E 61 6C 2F 6C+aExternalLibunw_1 DCB "external/libunwind_llvm/src/Registers.hpp",0
.rodata:0000E62A 69 62 75 6E 77 69 6E 64 5F 6C+                              ; DATA XREF: sub_AA60+70↑o
.rodata:0000E62A 6C 76 6D 2F 73 72 63 2F 52 65+                              ; sub_AA60+76↑o
.rodata:0000E62A 67 69 73 74 65 72 73 2E 68 70+                              ; .text:off_AAE4↑o
.rodata:0000E62A 70 00                                                       ; sub_AAEC+70↑o
.rodata:0000E62A                                                             ; sub_AAEC+76↑o
.rodata:0000E62A                                                             ; .text:off_AB70↑o
.rodata:0000E62A                                                             ; sub_AB9C+8A↑o
.rodata:0000E62A                                                             ; sub_AB9C+90↑o
.rodata:0000E62A                                                             ; .text:off_AC38↑o
.rodata:0000E62A                                                             ; sub_AC40+B2↑o
.rodata:0000E62A                                                             ; sub_AC40+B8↑o
.rodata:0000E62A                                                             ; .text:off_AD04↑o
.rodata:0000E654 75 6E 73 75 70 70 6F 72 74 65+aUnsupportedArm DCB "unsupported arm register",0
.rodata:0000E654 64 20 61 72 6D 20 72 65 67 69+                              ; DATA XREF: sub_AA60+72↑o
.rodata:0000E654 73 74 65 72 00                                              ; sub_AA60+78↑o
.rodata:0000E654                                                             ; .text:off_AAE8↑o
.rodata:0000E654                                                             ; sub_AAEC+72↑o
.rodata:0000E654                                                             ; sub_AAEC+78↑o
.rodata:0000E654                                                             ; .text:off_AB74↑o
.rodata:0000E66D 76 6F 69 64 20 6C 69 62 75 6E+aVoidLibunwindR DCB "void libunwind::Registers_arm::setRegister(int, uint32_t)",0
.rodata:0000E66D 77 69 6E 64 3A 3A 52 65 67 69+                              ; DATA XREF: sub_AAEC:loc_AB56↑o
.rodata:0000E66D 73 74 65 72 73 5F 61 72 6D 3A+                              ; sub_AAEC+74↑o
.rodata:0000E66D 3A 73 65 74 52 65 67 69 73 74+                              ; .text:off_AB6C↑o
.rodata:0000E6A7 75 6E 77 5F 66 70 72 65 67 5F+aUnwFpregTLibun DCB "unw_fpreg_t libunwind::Registers_arm::getFloatRegister(int)",0
.rodata:0000E6A7 74 20 6C 69 62 75 6E 77 69 6E+                              ; DATA XREF: sub_AB9C:loc_AC20↑o
.rodata:0000E6A7 64 3A 3A 52 65 67 69 73 74 65+                              ; sub_AB9C+8E↑o
.rodata:0000E6A7 72 73 5F 61 72 6D 3A 3A 67 65+                              ; .text:off_AC34↑o
.rodata:0000E6E3 55 6E 6B 6E 6F 77 6E 20 41 52+aUnknownArmFloa DCB "Unknown ARM float register",0
.rodata:0000E6E3 4D 20 66 6C 6F 61 74 20 72 65+                              ; DATA XREF: sub_AB9C+8C↑o
.rodata:0000E6E3 67 69 73 74 65 72 00                                        ; sub_AB9C+92↑o
.rodata:0000E6E3                                                             ; .text:off_AC3C↑o
.rodata:0000E6E3                                                             ; sub_AC40+B4↑o
.rodata:0000E6E3                                                             ; sub_AC40+BA↑o
.rodata:0000E6E3                                                             ; .text:off_AD08↑o
.rodata:0000E6FE 76 6F 69 64 20 6C 69 62 75 6E+aVoidLibunwindR_0 DCB "void libunwind::Registers_arm::setFloatRegister(int, unw_fpreg_t)",0
.rodata:0000E6FE 77 69 6E 64 3A 3A 52 65 67 69+                              ; DATA XREF: sub_AC40:loc_ACEC↑o
.rodata:0000E6FE 73 74 65 72 73 5F 61 72 6D 3A+                              ; sub_AC40+B6↑o
.rodata:0000E6FE 3A 73 65 74 46 6C 6F 61 74 52+                              ; .text:off_AD00↑o
.rodata:0000E740 25 73 00                      aS_1 DCB "%s",0               ; DATA XREF: sub_AD90+30↑o
.rodata:0000E740                                                             ; sub_AD90+38↑o
.rodata:0000E740                                                             ; .text:off_ADF8↑o
.rodata:0000E743 62 6F 6F 6C 20 6C 69 62 75 6E+aBoolLibunwindU DCB "bool libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoF"
.rodata:0000E743 77 69 6E 64 3A 3A 55 6E 77 69+                              ; DATA XREF: sub_AF58:loc_B0A8↑o
.rodata:0000E743 6E 64 43 75 72 73 6F 72 3C 6C+                              ; sub_AF58+15A↑o
.rodata:0000E743 69 62 75 6E 77 69 6E 64 3A 3A+                              ; sub_AF58:loc_B0BC↑o
.rodata:0000E743 4C 6F 63 61 6C 41 64 64 72 65+                              ; sub_AF58+16E↑o
.rodata:0000E743 73 73 53 70 61 63 65 2C 20 6C+                              ; .text:off_B0DC↑o
.rodata:0000E743 69 62 75 6E 77 69 6E 64 3A 3A+                              ; .text:off_B0EC↑o
.rodata:0000E743 52 65 67 69 73 74 65 72 73 5F+DCB "romEHABISection(pint_t, const libunwind::UnwindInfoSections &) [A = libunwind::LocalAddressSpa"
.rodata:0000E743 61 72 6D 3E 3A 3A 67 65 74 49+DCB "ce, R = libunwind::Registers_arm]",0
.rodata:0000E821 75 6E 6B 6E 6F 77 6E 20 70 65+aUnknownPersona DCB "unknown personality routine",0
.rodata:0000E821 72 73 6F 6E 61 6C 69 74 79 20+                              ; DATA XREF: sub_AF58+158↑o
.rodata:0000E821 72 6F 75 74 69 6E 65 00                                     ; sub_AF58+15E↑o
.rodata:0000E821                                                             ; .text:off_B0F4↑o
.rodata:0000E83D 69 6E 64 65 78 20 69 6E 6C 69+aIndexInlinedTa DCB "index inlined table detected but pr function requires extra words",0
.rodata:0000E83D 6E 65 64 20 74 61 62 6C 65 20+                              ; DATA XREF: sub_AF58+16C↑o
.rodata:0000E83D 64 65 74 65 63 74 65 64 20 62+                              ; sub_AF58+172↑o
.rodata:0000E83D 75 74 20 70 72 20 66 75 6E 63+                              ; .text:off_B0E4↑o
.rodata:0000E87F 70 63 00                      aPc DCB "pc",0                ; DATA XREF: .text:0000B14C↑o
.rodata:0000E87F                                                             ; .text:0000B150↑o
.rodata:0000E87F                                                             ; .text:off_B448↑o
.rodata:0000E882 6C 72 00                      aLr DCB "lr",0                ; DATA XREF: .text:loc_B2C8↑o
.rodata:0000E882                                                             ; .text:0000B2CA↑o
.rodata:0000E882                                                             ; .text:off_B584↑o
.rodata:0000E885 73 70 00                      aSp DCB "sp",0                ; DATA XREF: .text:loc_B21A↑o
.rodata:0000E885                                                             ; .text:0000B21E↑o
.rodata:0000E885                                                             ; .text:off_B580↑o
.rodata:0000E888 72 30 00                      aR0 DCB "r0",0                ; DATA XREF: .text:loc_B27A↑o
.rodata:0000E888                                                             ; .text:0000B27C↑o
.rodata:0000E888                                                             ; .text:off_B57C↑o
.rodata:0000E88B 72 31 00                      aR1 DCB "r1",0                ; DATA XREF: .text:loc_B280↑o
.rodata:0000E88B                                                             ; .text:0000B282↑o
.rodata:0000E88B                                                             ; .text:off_B578↑o
.rodata:0000E88E 72 32 00                      aR2 DCB "r2",0                ; DATA XREF: .text:loc_B286↑o
.rodata:0000E88E                                                             ; .text:0000B288↑o
.rodata:0000E88E                                                             ; .text:off_B574↑o
.rodata:0000E891 72 33 00                      aR3 DCB "r3",0                ; DATA XREF: .text:loc_B28C↑o
.rodata:0000E891                                                             ; .text:0000B28E↑o
.rodata:0000E891                                                             ; .text:off_B570↑o
.rodata:0000E894 72 34 00                      aR4 DCB "r4",0                ; DATA XREF: .text:loc_B292↑o
.rodata:0000E894                                                             ; .text:0000B294↑o
.rodata:0000E894                                                             ; .text:off_B56C↑o
.rodata:0000E897 72 35 00                      aR5 DCB "r5",0                ; DATA XREF: .text:loc_B298↑o
.rodata:0000E897                                                             ; .text:0000B29A↑o
.rodata:0000E897                                                             ; .text:off_B568↑o
.rodata:0000E89A 72 36 00                      aR6 DCB "r6",0                ; DATA XREF: .text:loc_B29E↑o
.rodata:0000E89A                                                             ; .text:0000B2A0↑o
.rodata:0000E89A                                                             ; .text:off_B564↑o
.rodata:0000E89D 72 37 00                      aR7 DCB "r7",0                ; DATA XREF: .text:loc_B2A4↑o
.rodata:0000E89D                                                             ; .text:0000B2A6↑o
.rodata:0000E89D                                                             ; .text:off_B560↑o
.rodata:0000E8A0 72 38 00                      aR8 DCB "r8",0                ; DATA XREF: .text:loc_B2AA↑o
.rodata:0000E8A0                                                             ; .text:0000B2AC↑o
.rodata:0000E8A0                                                             ; .text:off_B55C↑o
.rodata:0000E8A3 72 39 00                      aR9 DCB "r9",0                ; DATA XREF: .text:loc_B2B0↑o
.rodata:0000E8A3                                                             ; .text:0000B2B2↑o
.rodata:0000E8A3                                                             ; .text:off_B558↑o
.rodata:0000E8A6 72 31 30 00                   aR10 DCB "r10",0              ; DATA XREF: .text:loc_B2B6↑o
.rodata:0000E8A6                                                             ; .text:0000B2B8↑o
.rodata:0000E8A6                                                             ; .text:off_B554↑o
.rodata:0000E8AA 72 31 31 00                   aR11 DCB "r11",0              ; DATA XREF: .text:loc_B2BC↑o
.rodata:0000E8AA                                                             ; .text:0000B2BE↑o
.rodata:0000E8AA                                                             ; .text:off_B550↑o
.rodata:0000E8AE 72 31 32 00                   aR12 DCB "r12",0              ; DATA XREF: .text:loc_B2C2↑o
.rodata:0000E8AE                                                             ; .text:0000B2C4↑o
.rodata:0000E8AE                                                             ; .text:off_B54C↑o
.rodata:0000E8B2 73 30 00                      aS0 DCB "s0",0                ; DATA XREF: .text:loc_B2CE↑o
.rodata:0000E8B2                                                             ; .text:0000B2D0↑o
.rodata:0000E8B2                                                             ; .text:off_B548↑o
.rodata:0000E8B5 73 31 00                      aS1 DCB "s1",0                ; DATA XREF: .text:loc_B2D4↑o
.rodata:0000E8B5                                                             ; .text:0000B2D6↑o
.rodata:0000E8B5                                                             ; .text:off_B544↑o
.rodata:0000E8B8 73 32 00                      aS2 DCB "s2",0                ; DATA XREF: .text:loc_B2DA↑o
.rodata:0000E8B8                                                             ; .text:0000B2DC↑o
.rodata:0000E8B8                                                             ; .text:off_B540↑o
.rodata:0000E8BB 73 33 00                      aS3 DCB "s3",0                ; DATA XREF: .text:loc_B2E0↑o
.rodata:0000E8BB                                                             ; .text:0000B2E2↑o
.rodata:0000E8BB                                                             ; .text:off_B53C↑o
.rodata:0000E8BE 73 34 00                      aS4 DCB "s4",0                ; DATA XREF: .text:loc_B2E6↑o
.rodata:0000E8BE                                                             ; .text:0000B2E8↑o
.rodata:0000E8BE                                                             ; .text:off_B538↑o
.rodata:0000E8C1 73 35 00                      aS5 DCB "s5",0                ; DATA XREF: .text:loc_B2EC↑o
.rodata:0000E8C1                                                             ; .text:0000B2EE↑o
.rodata:0000E8C1                                                             ; .text:off_B534↑o
.rodata:0000E8C4 73 36 00                      aS6 DCB "s6",0                ; DATA XREF: .text:loc_B2F2↑o
.rodata:0000E8C4                                                             ; .text:0000B2F4↑o
.rodata:0000E8C4                                                             ; .text:off_B530↑o
.rodata:0000E8C7 73 37 00                      aS7 DCB "s7",0                ; DATA XREF: .text:loc_B2F8↑o
.rodata:0000E8C7                                                             ; .text:0000B2FA↑o
.rodata:0000E8C7                                                             ; .text:off_B52C↑o
.rodata:0000E8CA 73 38 00                      aS8 DCB "s8",0                ; DATA XREF: .text:loc_B2FE↑o
.rodata:0000E8CA                                                             ; .text:0000B300↑o
.rodata:0000E8CA                                                             ; .text:off_B528↑o
.rodata:0000E8CD 73 39 00                      aS9 DCB "s9",0                ; DATA XREF: .text:loc_B304↑o
.rodata:0000E8CD                                                             ; .text:0000B306↑o
.rodata:0000E8CD                                                             ; .text:off_B524↑o
.rodata:0000E8D0 73 31 30 00                   aS10 DCB "s10",0              ; DATA XREF: .text:loc_B30A↑o
.rodata:0000E8D0                                                             ; .text:0000B30C↑o
.rodata:0000E8D0                                                             ; .text:off_B520↑o
.rodata:0000E8D4 73 31 31 00                   aS11 DCB "s11",0              ; DATA XREF: .text:loc_B310↑o
.rodata:0000E8D4                                                             ; .text:0000B312↑o
.rodata:0000E8D4                                                             ; .text:off_B51C↑o
.rodata:0000E8D8 73 31 32 00                   aS12 DCB "s12",0              ; DATA XREF: .text:loc_B316↑o
.rodata:0000E8D8                                                             ; .text:0000B318↑o
.rodata:0000E8D8                                                             ; .text:off_B518↑o
.rodata:0000E8DC 73 31 33 00                   aS13 DCB "s13",0              ; DATA XREF: .text:loc_B31C↑o
.rodata:0000E8DC                                                             ; .text:0000B31E↑o
.rodata:0000E8DC                                                             ; .text:off_B514↑o
.rodata:0000E8E0 73 31 34 00                   aS14 DCB "s14",0              ; DATA XREF: .text:loc_B322↑o
.rodata:0000E8E0                                                             ; .text:0000B324↑o
.rodata:0000E8E0                                                             ; .text:off_B510↑o
.rodata:0000E8E4 73 31 35 00                   aS15 DCB "s15",0              ; DATA XREF: .text:loc_B328↑o
.rodata:0000E8E4                                                             ; .text:0000B32A↑o
.rodata:0000E8E4                                                             ; .text:off_B50C↑o
.rodata:0000E8E8 73 31 36 00                   aS16 DCB "s16",0              ; DATA XREF: .text:loc_B32E↑o
.rodata:0000E8E8                                                             ; .text:0000B330↑o
.rodata:0000E8E8                                                             ; .text:off_B508↑o
.rodata:0000E8EC 73 31 37 00                   aS17 DCB "s17",0              ; DATA XREF: .text:loc_B334↑o
.rodata:0000E8EC                                                             ; .text:0000B336↑o
.rodata:0000E8EC                                                             ; .text:off_B504↑o
.rodata:0000E8F0 73 31 38 00                   aS18 DCB "s18",0              ; DATA XREF: .text:loc_B33A↑o
.rodata:0000E8F0                                                             ; .text:0000B33C↑o
.rodata:0000E8F0                                                             ; .text:off_B500↑o
.rodata:0000E8F4 73 31 39 00                   aS19 DCB "s19",0              ; DATA XREF: .text:loc_B340↑o
.rodata:0000E8F4                                                             ; .text:0000B342↑o
.rodata:0000E8F4                                                             ; .text:off_B4FC↑o
.rodata:0000E8F8 73 32 30 00                   aS20 DCB "s20",0              ; DATA XREF: .text:loc_B346↑o
.rodata:0000E8F8                                                             ; .text:0000B348↑o
.rodata:0000E8F8                                                             ; .text:off_B4F8↑o
.rodata:0000E8FC 73 32 31 00                   aS21 DCB "s21",0              ; DATA XREF: .text:loc_B34C↑o
.rodata:0000E8FC                                                             ; .text:0000B34E↑o
.rodata:0000E8FC                                                             ; .text:off_B4F4↑o
.rodata:0000E900 73 32 32 00                   aS22 DCB "s22",0              ; DATA XREF: .text:loc_B352↑o
.rodata:0000E900                                                             ; .text:0000B354↑o
.rodata:0000E900                                                             ; .text:off_B4F0↑o
.rodata:0000E904 73 32 33 00                   aS23 DCB "s23",0              ; DATA XREF: .text:loc_B358↑o
.rodata:0000E904                                                             ; .text:0000B35A↑o
.rodata:0000E904                                                             ; .text:off_B4EC↑o
.rodata:0000E908 73 32 34 00                   aS24 DCB "s24",0              ; DATA XREF: .text:loc_B35E↑o
.rodata:0000E908                                                             ; .text:0000B360↑o
.rodata:0000E908                                                             ; .text:off_B4E8↑o
.rodata:0000E90C 73 32 35 00                   aS25 DCB "s25",0              ; DATA XREF: .text:loc_B364↑o
.rodata:0000E90C                                                             ; .text:0000B366↑o
.rodata:0000E90C                                                             ; .text:off_B4E4↑o
.rodata:0000E910 73 32 36 00                   aS26 DCB "s26",0              ; DATA XREF: .text:loc_B36A↑o
.rodata:0000E910                                                             ; .text:0000B36C↑o
.rodata:0000E910                                                             ; .text:off_B4E0↑o
.rodata:0000E914 73 32 37 00                   aS27 DCB "s27",0              ; DATA XREF: .text:loc_B370↑o
.rodata:0000E914                                                             ; .text:0000B372↑o
.rodata:0000E914                                                             ; .text:off_B4DC↑o
.rodata:0000E918 73 32 38 00                   aS28 DCB "s28",0              ; DATA XREF: .text:loc_B376↑o
.rodata:0000E918                                                             ; .text:0000B378↑o
.rodata:0000E918                                                             ; .text:off_B4D8↑o
.rodata:0000E91C 73 32 39 00                   aS29 DCB "s29",0              ; DATA XREF: .text:loc_B37C↑o
.rodata:0000E91C                                                             ; .text:0000B37E↑o
.rodata:0000E91C                                                             ; .text:off_B4D4↑o
.rodata:0000E920 73 33 30 00                   aS30 DCB "s30",0              ; DATA XREF: .text:loc_B382↑o
.rodata:0000E920                                                             ; .text:0000B384↑o
.rodata:0000E920                                                             ; .text:off_B4D0↑o
.rodata:0000E924 73 33 31 00                   aS31 DCB "s31",0              ; DATA XREF: .text:loc_B388↑o
.rodata:0000E924                                                             ; .text:0000B38A↑o
.rodata:0000E924                                                             ; .text:off_B4CC↑o
.rodata:0000E928 64 30 00                      aD0 DCB "d0",0                ; DATA XREF: .text:loc_B26E↑o
.rodata:0000E928                                                             ; .text:0000B270↑o
.rodata:0000E928                                                             ; .text:off_B4C8↑o
.rodata:0000E92B 64 31 00                      aD1 DCB "d1",0                ; DATA XREF: .text:loc_B38E↑o
.rodata:0000E92B                                                             ; .text:0000B390↑o
.rodata:0000E92B                                                             ; .text:off_B4C4↑o
.rodata:0000E92E 64 32 00                      aD2 DCB "d2",0                ; DATA XREF: .text:loc_B394↑o
.rodata:0000E92E                                                             ; .text:0000B396↑o
.rodata:0000E92E                                                             ; .text:off_B4C0↑o
.rodata:0000E931 64 33 00                      aD3 DCB "d3",0                ; DATA XREF: .text:loc_B39A↑o
.rodata:0000E931                                                             ; .text:0000B39C↑o
.rodata:0000E931                                                             ; .text:off_B4BC↑o
.rodata:0000E934 64 34 00                      aD4 DCB "d4",0                ; DATA XREF: .text:loc_B3A0↑o
.rodata:0000E934                                                             ; .text:0000B3A2↑o
.rodata:0000E934                                                             ; .text:off_B4B8↑o
.rodata:0000E937 64 35 00                      aD5 DCB "d5",0                ; DATA XREF: .text:loc_B3A6↑o
.rodata:0000E937                                                             ; .text:0000B3A8↑o
.rodata:0000E937                                                             ; .text:off_B4B4↑o
.rodata:0000E93A 64 36 00                      aD6 DCB "d6",0                ; DATA XREF: .text:loc_B3AC↑o
.rodata:0000E93A                                                             ; .text:0000B3AE↑o
.rodata:0000E93A                                                             ; .text:off_B4B0↑o
.rodata:0000E93D 64 37 00                      aD7 DCB "d7",0                ; DATA XREF: .text:loc_B3B2↑o
.rodata:0000E93D                                                             ; .text:0000B3B4↑o
.rodata:0000E93D                                                             ; .text:off_B4AC↑o
.rodata:0000E940 64 38 00                      aD8 DCB "d8",0                ; DATA XREF: .text:loc_B3B8↑o
.rodata:0000E940                                                             ; .text:0000B3BA↑o
.rodata:0000E940                                                             ; .text:off_B4A8↑o
.rodata:0000E943 64 39 00                      aD9 DCB "d9",0                ; DATA XREF: .text:loc_B3BE↑o
.rodata:0000E943                                                             ; .text:0000B3C0↑o
.rodata:0000E943                                                             ; .text:off_B4A4↑o
.rodata:0000E946 64 31 30 00                   aD10 DCB "d10",0              ; DATA XREF: .text:loc_B3C4↑o
.rodata:0000E946                                                             ; .text:0000B3C6↑o
.rodata:0000E946                                                             ; .text:off_B4A0↑o
.rodata:0000E94A 64 31 31 00                   aD11 DCB "d11",0              ; DATA XREF: .text:loc_B3CA↑o
.rodata:0000E94A                                                             ; .text:0000B3CC↑o
.rodata:0000E94A                                                             ; .text:off_B49C↑o
.rodata:0000E94E 64 31 32 00                   aD12 DCB "d12",0              ; DATA XREF: .text:loc_B3D0↑o
.rodata:0000E94E                                                             ; .text:0000B3D2↑o
.rodata:0000E94E                                                             ; .text:off_B498↑o
.rodata:0000E952 64 31 33 00                   aD13 DCB "d13",0              ; DATA XREF: .text:loc_B3D6↑o
.rodata:0000E952                                                             ; .text:0000B3D8↑o
.rodata:0000E952                                                             ; .text:off_B494↑o
.rodata:0000E956 64 31 34 00                   aD14 DCB "d14",0              ; DATA XREF: .text:loc_B3DC↑o
.rodata:0000E956                                                             ; .text:0000B3DE↑o
.rodata:0000E956                                                             ; .text:off_B490↑o
.rodata:0000E95A 64 31 35 00                   aD15 DCB "d15",0              ; DATA XREF: .text:loc_B3E2↑o
.rodata:0000E95A                                                             ; .text:0000B3E4↑o
.rodata:0000E95A                                                             ; .text:off_B48C↑o
.rodata:0000E95E 64 31 36 00                   aD16 DCB "d16",0              ; DATA XREF: .text:loc_B3E8↑o
.rodata:0000E95E                                                             ; .text:0000B3EA↑o
.rodata:0000E95E                                                             ; .text:off_B488↑o
.rodata:0000E962 64 31 37 00                   aD17 DCB "d17",0              ; DATA XREF: .text:loc_B3EE↑o
.rodata:0000E962                                                             ; .text:0000B3F0↑o
.rodata:0000E962                                                             ; .text:off_B484↑o
.rodata:0000E966 64 31 38 00                   aD18 DCB "d18",0              ; DATA XREF: .text:loc_B3F4↑o
.rodata:0000E966                                                             ; .text:0000B3F6↑o
.rodata:0000E966                                                             ; .text:off_B480↑o
.rodata:0000E96A 64 31 39 00                   aD19 DCB "d19",0              ; DATA XREF: .text:loc_B3FA↑o
.rodata:0000E96A                                                             ; .text:0000B3FC↑o
.rodata:0000E96A                                                             ; .text:off_B47C↑o
.rodata:0000E96E 64 32 30 00                   aD20 DCB "d20",0              ; DATA XREF: .text:loc_B400↑o
.rodata:0000E96E                                                             ; .text:0000B402↑o
.rodata:0000E96E                                                             ; .text:off_B478↑o
.rodata:0000E972 64 32 31 00                   aD21 DCB "d21",0              ; DATA XREF: .text:loc_B406↑o
.rodata:0000E972                                                             ; .text:0000B408↑o
.rodata:0000E972                                                             ; .text:off_B474↑o
.rodata:0000E976 64 32 32 00                   aD22 DCB "d22",0              ; DATA XREF: .text:loc_B40C↑o
.rodata:0000E976                                                             ; .text:0000B40E↑o
.rodata:0000E976                                                             ; .text:off_B470↑o
.rodata:0000E97A 64 32 33 00                   aD23 DCB "d23",0              ; DATA XREF: .text:loc_B412↑o
.rodata:0000E97A                                                             ; .text:0000B414↑o
.rodata:0000E97A                                                             ; .text:off_B46C↑o
.rodata:0000E97E 64 32 34 00                   aD24 DCB "d24",0              ; DATA XREF: .text:loc_B418↑o
.rodata:0000E97E                                                             ; .text:0000B41A↑o
.rodata:0000E97E                                                             ; .text:off_B468↑o
.rodata:0000E982 64 32 35 00                   aD25 DCB "d25",0              ; DATA XREF: .text:loc_B41E↑o
.rodata:0000E982                                                             ; .text:0000B420↑o
.rodata:0000E982                                                             ; .text:off_B464↑o
.rodata:0000E986 64 32 36 00                   aD26 DCB "d26",0              ; DATA XREF: .text:loc_B424↑o
.rodata:0000E986                                                             ; .text:0000B426↑o
.rodata:0000E986                                                             ; .text:off_B460↑o
.rodata:0000E98A 64 32 37 00                   aD27 DCB "d27",0              ; DATA XREF: .text:loc_B42A↑o
.rodata:0000E98A                                                             ; .text:0000B42C↑o
.rodata:0000E98A                                                             ; .text:off_B45C↑o
.rodata:0000E98E 64 32 38 00                   aD28 DCB "d28",0              ; DATA XREF: .text:loc_B430↑o
.rodata:0000E98E                                                             ; .text:0000B432↑o
.rodata:0000E98E                                                             ; .text:off_B458↑o
.rodata:0000E992 64 32 39 00                   aD29 DCB "d29",0              ; DATA XREF: .text:loc_B436↑o
.rodata:0000E992                                                             ; .text:0000B438↑o
.rodata:0000E992                                                             ; .text:off_B454↑o
.rodata:0000E996 64 33 30 00                   aD30 DCB "d30",0              ; DATA XREF: .text:loc_B43C↑o
.rodata:0000E996                                                             ; .text:0000B43E↑o
.rodata:0000E996                                                             ; .text:off_B450↑o
.rodata:0000E99A 64 33 31 00                   aD31 DCB "d31",0              ; DATA XREF: .text:loc_B442↑o
.rodata:0000E99A                                                             ; .text:0000B444↑o
.rodata:0000E99A                                                             ; .text:off_B44C↑o
.rodata:0000E99E 75 6E 6B 6E 6F 77 6E 20 72 65+aUnknownRegiste DCB "unknown register",0
.rodata:0000E99E 67 69 73 74 65 72 00                                        ; DATA XREF: .text:def_B22A↑o
.rodata:0000E99E                                                             ; .text:0000B276↑o
.rodata:0000E99E                                                             ; .text:off_B588↑o
.rodata:0000E9AF 00                            ALIGN 0x10
.rodata:0000E9B0 00                            unk_E9B0 DCB    0             ; DATA XREF: adev_set_headset_volume+50↑o
.rodata:0000E9B0                                                             ; adev_set_headset_volume+56↑o
.rodata:0000E9B0                                                             ; .text:off_4274↑o
.rodata:0000E9B1 00                            DCB    0
.rodata:0000E9B2 80                            DCB 0x80
.rodata:0000E9B3 3F                            DCB 0x3F ; ?
.rodata:0000E9B4 00                            DCB    0
.rodata:0000E9B5 00                            DCB    0
.rodata:0000E9B6 00                            DCB    0
.rodata:0000E9B7 00                            DCB    0
.rodata:0000E9B8 00                            DCB    0
.rodata:0000E9B9 00                            DCB    0
.rodata:0000E9BA 00                            DCB    0
.rodata:0000E9BB 43                            DCB 0x43 ; C
.rodata:0000E9BC 79                            DCB 0x79 ; y
.rodata:0000E9BD 22                            DCB 0x22 ; "
.rodata:0000E9BE 68                            DCB 0x68 ; h
.rodata:0000E9BF 3F                            DCB 0x3F ; ?
.rodata:0000E9C0 00                            DCB    0
.rodata:0000E9C1 00                            DCB    0
.rodata:0000E9C2 00                            DCB    0
.rodata:0000E9C3 40                            DCB 0x40 ; @
.rodata:0000E9C4 00                            DCB    0
.rodata:0000E9C5 00                            DCB    0
.rodata:0000E9C6 FC                            DCB 0xFC
.rodata:0000E9C7 42                            DCB 0x42 ; B
.rodata:0000E9C8 84                            DCB 0x84
.rodata:0000E9C9 7E                            DCB 0x7E ; ~
.rodata:0000E9CA 52                            DCB 0x52 ; R
.rodata:0000E9CB 3F                            DCB 0x3F ; ?
.rodata:0000E9CC 00                            DCB    0
.rodata:0000E9CD 00                            DCB    0
.rodata:0000E9CE 80                            DCB 0x80
.rodata:0000E9CF 40                            DCB 0x40 ; @
.rodata:0000E9D0 00                            DCB    0
.rodata:0000E9D1 00                            DCB    0
.rodata:0000E9D2 F8                            DCB 0xF8
.rodata:0000E9D3 42                            DCB 0x42 ; B
.rodata:0000E9D4 50                            DCB 0x50 ; P
.rodata:0000E9D5 71                            DCB 0x71 ; q
.rodata:0000E9D6 48                            DCB 0x48 ; H
.rodata:0000E9D7 3F                            DCB 0x3F ; ?
.rodata:0000E9D8 00                            DCB    0
.rodata:0000E9D9 00                            DCB    0
.rodata:0000E9DA C0                            DCB 0xC0
.rodata:0000E9DB 40                            DCB 0x40 ; @
.rodata:0000E9DC 00                            DCB    0
.rodata:0000E9DD 00                            DCB    0
.rodata:0000E9DE F4                            DCB 0xF4
.rodata:0000E9DF 42                            DCB 0x42 ; B
.rodata:0000E9E0 B5                            DCB 0xB5
.rodata:0000E9E1 C1                            DCB 0xC1
.rodata:0000E9E2 35                            DCB 0x35 ; 5
.rodata:0000E9E3 3F                            DCB 0x3F ; ?
.rodata:0000E9E4 00                            DCB    0
.rodata:0000E9E5 00                            DCB    0
.rodata:0000E9E6 00                            DCB    0
.rodata:0000E9E7 41                            DCB 0x41 ; A
.rodata:0000E9E8 00                            DCB    0
.rodata:0000E9E9 00                            DCB    0
.rodata:0000E9EA F0                            DCB 0xF0
.rodata:0000E9EB 42                            DCB 0x42 ; B
.rodata:0000E9EC 03                            DCB    3
.rodata:0000E9ED D0                            DCB 0xD0
.rodata:0000E9EE 24                            DCB 0x24 ; $
.rodata:0000E9EF 3F                            DCB 0x3F ; ?
.rodata:0000E9F0 00                            DCB    0
.rodata:0000E9F1 00                            DCB    0
.rodata:0000E9F2 20                            DCB 0x20
.rodata:0000E9F3 41                            DCB 0x41 ; A
.rodata:0000E9F4 00                            DCB    0
.rodata:0000E9F5 00                            DCB    0
.rodata:0000E9F6 EC                            DCB 0xEC
.rodata:0000E9F7 42                            DCB 0x42 ; B
.rodata:0000E9F8 3D                            DCB 0x3D ; =
.rodata:0000E9F9 F1                            DCB 0xF1
.rodata:0000E9FA 1C                            DCB 0x1C
.rodata:0000E9FB 3F                            DCB 0x3F ; ?
.rodata:0000E9FC 00                            DCB    0
.rodata:0000E9FD 00                            DCB    0
.rodata:0000E9FE 40                            DCB 0x40 ; @
.rodata:0000E9FF 41                            DCB 0x41 ; A
.rodata:0000EA00 00                            DCB    0
.rodata:0000EA01 00                            DCB    0
.rodata:0000EA02 E8                            DCB 0xE8
.rodata:0000EA03 42                            DCB 0x42 ; B
.rodata:0000EA04 CA                            DCB 0xCA
.rodata:0000EA05 4F                            DCB 0x4F ; O
.rodata:0000EA06 0E                            DCB  0xE
.rodata:0000EA07 3F                            DCB 0x3F ; ?
.rodata:0000EA08 00                            DCB    0
.rodata:0000EA09 00                            DCB    0
.rodata:0000EA0A 60                            DCB 0x60 ; `
.rodata:0000EA0B 41                            DCB 0x41 ; A
.rodata:0000EA0C 00                            DCB    0
.rodata:0000EA0D 00                            DCB    0
.rodata:0000EA0E E4                            DCB 0xE4
.rodata:0000EA0F 42                            DCB 0x42 ; B
.rodata:0000EA10 74                            DCB 0x74 ; t
.rodata:0000EA11 0B                            DCB  0xB
.rodata:0000EA12 01                            DCB    1
.rodata:0000EA13 3F                            DCB 0x3F ; ?
.rodata:0000EA14 00                            DCB    0
.rodata:0000EA15 00                            DCB    0
.rodata:0000EA16 80                            DCB 0x80
.rodata:0000EA17 41                            DCB 0x41 ; A
.rodata:0000EA18 00                            DCB    0
.rodata:0000EA19 00                            DCB    0
.rodata:0000EA1A E0                            DCB 0xE0
.rodata:0000EA1B 42                            DCB 0x42 ; B
.rodata:0000EA1C DF                            DCB 0xDF
.rodata:0000EA1D C3                            DCB 0xC3
.rodata:0000EA1E F5                            DCB 0xF5
.rodata:0000EA1F 3E                            DCB 0x3E ; >
.rodata:0000EA20 00                            DCB    0
.rodata:0000EA21 00                            DCB    0
.rodata:0000EA22 90                            DCB 0x90
.rodata:0000EA23 41                            DCB 0x41 ; A
.rodata:0000EA24 00                            DCB    0
.rodata:0000EA25 00                            DCB    0
.rodata:0000EA26 DC                            DCB 0xDC
.rodata:0000EA27 42                            DCB 0x42 ; B
.rodata:0000EA28 A9                            DCB 0xA9
.rodata:0000EA29 DA                            DCB 0xDA
.rodata:0000EA2A DE                            DCB 0xDE
.rodata:0000EA2B 3E                            DCB 0x3E ; >
.rodata:0000EA2C 00                            DCB    0
.rodata:0000EA2D 00                            DCB    0
.rodata:0000EA2E A0                            DCB 0xA0
.rodata:0000EA2F 41                            DCB 0x41 ; A
.rodata:0000EA30 00                            DCB    0
.rodata:0000EA31 00                            DCB    0
.rodata:0000EA32 D8                            DCB 0xD8
.rodata:0000EA33 42                            DCB 0x42 ; B
.rodata:0000EA34 27                            DCB 0x27 ; '
.rodata:0000EA35 14                            DCB 0x14
.rodata:0000EA36 CA                            DCB 0xCA
.rodata:0000EA37 3E                            DCB 0x3E ; >
.rodata:0000EA38 00                            DCB    0
.rodata:0000EA39 00                            DCB    0
.rodata:0000EA3A B0                            DCB 0xB0
.rodata:0000EA3B 41                            DCB 0x41 ; A
.rodata:0000EA3C 00                            DCB    0
.rodata:0000EA3D 00                            DCB    0
.rodata:0000EA3E D4                            DCB 0xD4
.rodata:0000EA3F 42                            DCB 0x42 ; B
.rodata:0000EA40 D7                            DCB 0xD7
.rodata:0000EA41 6D                            DCB 0x6D ; m
.rodata:0000EA42 C0                            DCB 0xC0
.rodata:0000EA43 3E                            DCB 0x3E ; >
.rodata:0000EA44 00                            DCB    0
.rodata:0000EA45 00                            DCB    0
.rodata:0000EA46 C0                            DCB 0xC0
.rodata:0000EA47 41                            DCB 0x41 ; A
.rodata:0000EA48 00                            DCB    0
.rodata:0000EA49 00                            DCB    0
.rodata:0000EA4A D0                            DCB 0xD0
.rodata:0000EA4B 42                            DCB 0x42 ; B
.rodata:0000EA4C 78                            DCB 0x78 ; x
.rodata:0000EA4D 7D                            DCB 0x7D ; }
.rodata:0000EA4E AE                            DCB 0xAE
.rodata:0000EA4F 3E                            DCB 0x3E ; >
.rodata:0000EA50 00                            DCB    0
.rodata:0000EA51 00                            DCB    0
.rodata:0000EA52 D0                            DCB 0xD0
.rodata:0000EA53 41                            DCB 0x41 ; A
.rodata:0000EA54 00                            DCB    0
.rodata:0000EA55 00                            DCB    0
.rodata:0000EA56 CC                            DCB 0xCC
.rodata:0000EA57 42                            DCB 0x42 ; B
.rodata:0000EA58 2E                            DCB 0x2E ; .
.rodata:0000EA59 39                            DCB 0x39 ; 9
.rodata:0000EA5A 9E                            DCB 0x9E
.rodata:0000EA5B 3E                            DCB 0x3E ; >
.rodata:0000EA5C 00                            DCB    0
.rodata:0000EA5D 00                            DCB    0
.rodata:0000EA5E E0                            DCB 0xE0
.rodata:0000EA5F 41                            DCB 0x41 ; A
.rodata:0000EA60 00                            DCB    0
.rodata:0000EA61 00                            DCB    0
.rodata:0000EA62 C8                            DCB 0xC8
.rodata:0000EA63 42                            DCB 0x42 ; B
.rodata:0000EA64 15                            DCB 0x15
.rodata:0000EA65 AB                            DCB 0xAB
.rodata:0000EA66 96                            DCB 0x96
.rodata:0000EA67 3E                            DCB 0x3E ; >
.rodata:0000EA68 00                            DCB    0
.rodata:0000EA69 00                            DCB    0
.rodata:0000EA6A F0                            DCB 0xF0
.rodata:0000EA6B 41                            DCB 0x41 ; A
.rodata:0000EA6C 00                            DCB    0
.rodata:0000EA6D 00                            DCB    0
.rodata:0000EA6E C4                            DCB 0xC4
.rodata:0000EA6F 42                            DCB 0x42 ; B
.rodata:0000EA70 41                            DCB 0x41 ; A
.rodata:0000EA71 9F                            DCB 0x9F
.rodata:0000EA72 88                            DCB 0x88
.rodata:0000EA73 3E                            DCB 0x3E ; >
.rodata:0000EA74 00                            DCB    0
.rodata:0000EA75 00                            DCB    0
.rodata:0000EA76 00                            DCB    0
.rodata:0000EA77 42                            DCB 0x42 ; B
.rodata:0000EA78 00                            DCB    0
.rodata:0000EA79 00                            DCB    0
.rodata:0000EA7A C0                            DCB 0xC0
.rodata:0000EA7B 42                            DCB 0x42 ; B
.rodata:0000EA7C 69                            DCB 0x69 ; i
.rodata:0000EA7D C5                            DCB 0xC5
.rodata:0000EA7E 77                            DCB 0x77 ; w
.rodata:0000EA7F 3E                            DCB 0x3E ; >
.rodata:0000EA80 00                            DCB    0
.rodata:0000EA81 00                            DCB    0
.rodata:0000EA82 08                            DCB    8
.rodata:0000EA83 42                            DCB 0x42 ; B
.rodata:0000EA84 00                            DCB    0
.rodata:0000EA85 00                            DCB    0
.rodata:0000EA86 BC                            DCB 0xBC
.rodata:0000EA87 42                            DCB 0x42 ; B
.rodata:0000EA88 99                            DCB 0x99
.rodata:0000EA89 F0                            DCB 0xF0
.rodata:0000EA8A 6B                            DCB 0x6B ; k
.rodata:0000EA8B 3E                            DCB 0x3E ; >
.rodata:0000EA8C 00                            DCB    0
.rodata:0000EA8D 00                            DCB    0
.rodata:0000EA8E 10                            DCB 0x10
.rodata:0000EA8F 42                            DCB 0x42 ; B
.rodata:0000EA90 00                            DCB    0
.rodata:0000EA91 00                            DCB    0
.rodata:0000EA92 B8                            DCB 0xB8
.rodata:0000EA93 42                            DCB 0x42 ; B
.rodata:0000EA94 BF                            DCB 0xBF
.rodata:0000EA95 F1                            DCB 0xF1
.rodata:0000EA96 55                            DCB 0x55 ; U
.rodata:0000EA97 3E                            DCB 0x3E ; >
.rodata:0000EA98 00                            DCB    0
.rodata:0000EA99 00                            DCB    0
.rodata:0000EA9A 18                            DCB 0x18
.rodata:0000EA9B 42                            DCB 0x42 ; B
.rodata:0000EA9C 00                            DCB    0
.rodata:0000EA9D 00                            DCB    0
.rodata:0000EA9E B4                            DCB 0xB4
.rodata:0000EA9F 42                            DCB 0x42 ; B
.rodata:0000EAA0 F8                            DCB 0xF8
.rodata:0000EAA1 FF                            DCB 0xFF
.rodata:0000EAA2 41                            DCB 0x41 ; A
.rodata:0000EAA3 3E                            DCB 0x3E ; >
.rodata:0000EAA4 00                            DCB    0
.rodata:0000EAA5 00                            DCB    0
.rodata:0000EAA6 20                            DCB 0x20
.rodata:0000EAA7 42                            DCB 0x42 ; B
.rodata:0000EAA8 00                            DCB    0
.rodata:0000EAA9 00                            DCB    0
.rodata:0000EAAA B0                            DCB 0xB0
.rodata:0000EAAB 42                            DCB 0x42 ; B
.rodata:0000EAAC 5A                            DCB 0x5A ; Z
.rodata:0000EAAD BC                            DCB 0xBC
.rodata:0000EAAE 38                            DCB 0x38 ; 8
.rodata:0000EAAF 3E                            DCB 0x3E ; >
.rodata:0000EAB0 00                            DCB    0
.rodata:0000EAB1 00                            DCB    0
.rodata:0000EAB2 28                            DCB 0x28 ; (
.rodata:0000EAB3 42                            DCB 0x42 ; B
.rodata:0000EAB4 00                            DCB    0
.rodata:0000EAB5 00                            DCB    0
.rodata:0000EAB6 AC                            DCB 0xAC
.rodata:0000EAB7 42                            DCB 0x42 ; B
.rodata:0000EAB8 9D                            DCB 0x9D
.rodata:0000EAB9 83                            DCB 0x83
.rodata:0000EABA 27                            DCB 0x27 ; '
.rodata:0000EABB 3E                            DCB 0x3E ; >
.rodata:0000EABC 00                            DCB    0
.rodata:0000EABD 00                            DCB    0
.rodata:0000EABE 30                            DCB 0x30 ; 0
.rodata:0000EABF 42                            DCB 0x42 ; B
.rodata:0000EAC0 00                            DCB    0
.rodata:0000EAC1 00                            DCB    0
.rodata:0000EAC2 A8                            DCB 0xA8
.rodata:0000EAC3 42                            DCB 0x42 ; B
.rodata:0000EAC4 EB                            DCB 0xEB
.rodata:0000EAC5 E5                            DCB 0xE5
.rodata:0000EAC6 17                            DCB 0x17
.rodata:0000EAC7 3E                            DCB 0x3E ; >
.rodata:0000EAC8 00                            DCB    0
.rodata:0000EAC9 00                            DCB    0
.rodata:0000EACA 38                            DCB 0x38 ; 8
.rodata:0000EACB 42                            DCB 0x42 ; B
.rodata:0000EACC 00                            DCB    0
.rodata:0000EACD 00                            DCB    0
.rodata:0000EACE A4                            DCB 0xA4
.rodata:0000EACF 42                            DCB 0x42 ; B
.rodata:0000EAD0 E3                            DCB 0xE3
.rodata:0000EAD1 A4                            DCB 0xA4
.rodata:0000EAD2 10                            DCB 0x10
.rodata:0000EAD3 3E                            DCB 0x3E ; >
.rodata:0000EAD4 00                            DCB    0
.rodata:0000EAD5 00                            DCB    0
.rodata:0000EAD6 40                            DCB 0x40 ; @
.rodata:0000EAD7 42                            DCB 0x42 ; B
.rodata:0000EAD8 00                            DCB    0
.rodata:0000EAD9 00                            DCB    0
.rodata:0000EADA A0                            DCB 0xA0
.rodata:0000EADB 42                            DCB 0x42 ; B
.rodata:0000EADC 59                            DCB 0x59 ; Y
.rodata:0000EADD 6A                            DCB 0x6A ; j
.rodata:0000EADE FD                            DCB 0xFD
.rodata:0000EADF 3D                            DCB 0x3D ; =
.rodata:0000EAE0 00                            DCB    0
.rodata:0000EAE1 00                            DCB    0
.rodata:0000EAE2 48                            DCB 0x48 ; H
.rodata:0000EAE3 42                            DCB 0x42 ; B
.rodata:0000EAE4 00                            DCB    0
.rodata:0000EAE5 00                            DCB    0
.rodata:0000EAE6 9C                            DCB 0x9C
.rodata:0000EAE7 42                            DCB 0x42 ; B
.rodata:0000EAE8 26                            DCB 0x26 ; &
.rodata:0000EAE9 FD                            DCB 0xFD
.rodata:0000EAEA DD                            DCB 0xDD
.rodata:0000EAEB 3D                            DCB 0x3D ; =
.rodata:0000EAEC 00                            DCB    0
.rodata:0000EAED 00                            DCB    0
.rodata:0000EAEE 50                            DCB 0x50 ; P
.rodata:0000EAEF 42                            DCB 0x42 ; B
.rodata:0000EAF0 00                            DCB    0
.rodata:0000EAF1 00                            DCB    0
.rodata:0000EAF2 98                            DCB 0x98
.rodata:0000EAF3 42                            DCB 0x42 ; B
.rodata:0000EAF4 05                            DCB    5
.rodata:0000EAF5 C5                            DCB 0xC5
.rodata:0000EAF6 CF                            DCB 0xCF
.rodata:0000EAF7 3D                            DCB 0x3D ; =
.rodata:0000EAF8 00                            DCB    0
.rodata:0000EAF9 00                            DCB    0
.rodata:0000EAFA 58                            DCB 0x58 ; X
.rodata:0000EAFB 42                            DCB 0x42 ; B
.rodata:0000EAFC 00                            DCB    0
.rodata:0000EAFD 00                            DCB    0
.rodata:0000EAFE 94                            DCB 0x94
.rodata:0000EAFF 42                            DCB 0x42 ; B
.rodata:0000EB00 F3                            DCB 0xF3
.rodata:0000EB01 00                            DCB    0
.rodata:0000EB02 B6                            DCB 0xB6
.rodata:0000EB03 3D                            DCB 0x3D ; =
.rodata:0000EB04 00                            DCB    0
.rodata:0000EB05 00                            DCB    0
.rodata:0000EB06 60                            DCB 0x60 ; `
.rodata:0000EB07 42                            DCB 0x42 ; B
.rodata:0000EB08 00                            DCB    0
.rodata:0000EB09 00                            DCB    0
.rodata:0000EB0A 90                            DCB 0x90
.rodata:0000EB0B 42                            DCB 0x42 ; B
.rodata:0000EB0C 4C                            DCB 0x4C ; L
.rodata:0000EB0D 6F                            DCB 0x6F ; o
.rodata:0000EB0E 9F                            DCB 0x9F
.rodata:0000EB0F 3D                            DCB 0x3D ; =
.rodata:0000EB10 00                            DCB    0
.rodata:0000EB11 00                            DCB    0
.rodata:0000EB12 68                            DCB 0x68 ; h
.rodata:0000EB13 42                            DCB 0x42 ; B
.rodata:0000EB14 00                            DCB    0
.rodata:0000EB15 00                            DCB    0
.rodata:0000EB16 8C                            DCB 0x8C
.rodata:0000EB17 42                            DCB 0x42 ; B
.rodata:0000EB18 AC                            DCB 0xAC
.rodata:0000EB19 38                            DCB 0x38 ; 8
.rodata:0000EB1A 95                            DCB 0x95
.rodata:0000EB1B 3D                            DCB 0x3D ; =
.rodata:0000EB1C 00                            DCB    0
.rodata:0000EB1D 00                            DCB    0
.rodata:0000EB1E 70                            DCB 0x70 ; p
.rodata:0000EB1F 42                            DCB 0x42 ; B
.rodata:0000EB20 00                            DCB    0
.rodata:0000EB21 00                            DCB    0
.rodata:0000EB22 88                            DCB 0x88
.rodata:0000EB23 42                            DCB 0x42 ; B
.rodata:0000EB24 BB                            DCB 0xBB
.rodata:0000EB25 B7                            DCB 0xB7
.rodata:0000EB26 82                            DCB 0x82
.rodata:0000EB27 3D                            DCB 0x3D ; =
.rodata:0000EB28 00                            DCB    0
.rodata:0000EB29 00                            DCB    0
.rodata:0000EB2A 78                            DCB 0x78 ; x
.rodata:0000EB2B 42                            DCB 0x42 ; B
.rodata:0000EB2C 00                            DCB    0
.rodata:0000EB2D 00                            DCB    0
.rodata:0000EB2E 84                            DCB 0x84
.rodata:0000EB2F 42                            DCB 0x42 ; B
.rodata:0000EB30 FB                            DCB 0xFB
.rodata:0000EB31 03                            DCB    3
.rodata:0000EB32 65                            DCB 0x65 ; e
.rodata:0000EB33 3D                            DCB 0x3D ; =
.rodata:0000EB34 00                            DCB    0
.rodata:0000EB35 00                            DCB    0
.rodata:0000EB36 80                            DCB 0x80
.rodata:0000EB37 42                            DCB 0x42 ; B
.rodata:0000EB38 00                            DCB    0
.rodata:0000EB39 00                            DCB    0
.rodata:0000EB3A 80                            DCB 0x80
.rodata:0000EB3B 42                            DCB 0x42 ; B
.rodata:0000EB3C FB                            DCB 0xFB
.rodata:0000EB3D 57                            DCB 0x57 ; W
.rodata:0000EB3E 56                            DCB 0x56 ; V
.rodata:0000EB3F 3D                            DCB 0x3D ; =
.rodata:0000EB40 00                            DCB    0
.rodata:0000EB41 00                            DCB    0
.rodata:0000EB42 84                            DCB 0x84
.rodata:0000EB43 42                            DCB 0x42 ; B
.rodata:0000EB44 00                            DCB    0
.rodata:0000EB45 00                            DCB    0
.rodata:0000EB46 78                            DCB 0x78 ; x
.rodata:0000EB47 42                            DCB 0x42 ; B
.rodata:0000EB48 C6                            DCB 0xC6
.rodata:0000EB49 C3                            DCB 0xC3
.rodata:0000EB4A 3B                            DCB 0x3B ; ;
.rodata:0000EB4B 3D                            DCB 0x3D ; =
.rodata:0000EB4C 00                            DCB    0
.rodata:0000EB4D 00                            DCB    0
.rodata:0000EB4E 88                            DCB 0x88
.rodata:0000EB4F 42                            DCB 0x42 ; B
.rodata:0000EB50 00                            DCB    0
.rodata:0000EB51 00                            DCB    0
.rodata:0000EB52 70                            DCB 0x70 ; p
.rodata:0000EB53 42                            DCB 0x42 ; B
.rodata:0000EB54 9E                            DCB 0x9E
.rodata:0000EB55 7A                            DCB 0x7A ; z
.rodata:0000EB56 24                            DCB 0x24 ; $
.rodata:0000EB57 3D                            DCB 0x3D ; =
.rodata:0000EB58 00                            DCB    0
.rodata:0000EB59 00                            DCB    0
.rodata:0000EB5A 8C                            DCB 0x8C
.rodata:0000EB5B 42                            DCB 0x42 ; B
.rodata:0000EB5C 00                            DCB    0
.rodata:0000EB5D 00                            DCB    0
.rodata:0000EB5E 68                            DCB 0x68 ; h
.rodata:0000EB5F 42                            DCB 0x42 ; B
.rodata:0000EB60 AE                            DCB 0xAE
.rodata:0000EB61 F1                            DCB 0xF1
.rodata:0000EB62 19                            DCB 0x19
.rodata:0000EB63 3D                            DCB 0x3D ; =
.rodata:0000EB64 00                            DCB    0
.rodata:0000EB65 00                            DCB    0
.rodata:0000EB66 90                            DCB 0x90
.rodata:0000EB67 42                            DCB 0x42 ; B
.rodata:0000EB68 00                            DCB    0
.rodata:0000EB69 00                            DCB    0
.rodata:0000EB6A 60                            DCB 0x60 ; `
.rodata:0000EB6B 42                            DCB 0x42 ; B
.rodata:0000EB6C 45                            DCB 0x45 ; E
.rodata:0000EB6D DA                            DCB 0xDA
.rodata:0000EB6E 06                            DCB    6
.rodata:0000EB6F 3D                            DCB 0x3D ; =
.rodata:0000EB70 00                            DCB    0
.rodata:0000EB71 00                            DCB    0
.rodata:0000EB72 94                            DCB 0x94
.rodata:0000EB73 42                            DCB 0x42 ; B
.rodata:0000EB74 00                            DCB    0
.rodata:0000EB75 00                            DCB    0
.rodata:0000EB76 58                            DCB 0x58 ; X
.rodata:0000EB77 42                            DCB 0x42 ; B
.rodata:0000EB78 F6                            DCB 0xF6
.rodata:0000EB79 43                            DCB 0x43 ; C
.rodata:0000EB7A EC                            DCB 0xEC
.rodata:0000EB7B 3C                            DCB 0x3C ; <
.rodata:0000EB7C 00                            DCB    0
.rodata:0000EB7D 00                            DCB    0
.rodata:0000EB7E 98                            DCB 0x98
.rodata:0000EB7F 42                            DCB 0x42 ; B
.rodata:0000EB80 00                            DCB    0
.rodata:0000EB81 00                            DCB    0
.rodata:0000EB82 50                            DCB 0x50 ; P
.rodata:0000EB83 42                            DCB 0x42 ; B
.rodata:0000EB84 6D                            DCB 0x6D ; m
.rodata:0000EB85 20                            DCB 0x20
.rodata:0000EB86 DD                            DCB 0xDD
.rodata:0000EB87 3C                            DCB 0x3C ; <
.rodata:0000EB88 00                            DCB    0
.rodata:0000EB89 00                            DCB    0
.rodata:0000EB8A 9C                            DCB 0x9C
.rodata:0000EB8B 42                            DCB 0x42 ; B
.rodata:0000EB8C 00                            DCB    0
.rodata:0000EB8D 00                            DCB    0
.rodata:0000EB8E 48                            DCB 0x48 ; H
.rodata:0000EB8F 42                            DCB 0x42 ; B
.rodata:0000EB90 42                            DCB 0x42 ; B
.rodata:0000EB91 B5                            DCB 0xB5
.rodata:0000EB92 C1                            DCB 0xC1
.rodata:0000EB93 3C                            DCB 0x3C ; <
.rodata:0000EB94 00                            DCB    0
.rodata:0000EB95 00                            DCB    0
.rodata:0000EB96 A0                            DCB 0xA0
.rodata:0000EB97 42                            DCB 0x42 ; B
.rodata:0000EB98 00                            DCB    0
.rodata:0000EB99 00                            DCB    0
.rodata:0000EB9A 40                            DCB 0x40 ; @
.rodata:0000EB9B 42                            DCB 0x42 ; B
.rodata:0000EB9C 68                            DCB 0x68 ; h
.rodata:0000EB9D B0                            DCB 0xB0
.rodata:0000EB9E A9                            DCB 0xA9
.rodata:0000EB9F 3C                            DCB 0x3C ; <
.rodata:0000EBA0 00                            DCB    0
.rodata:0000EBA1 00                            DCB    0
.rodata:0000EBA2 A4                            DCB 0xA4
.rodata:0000EBA3 42                            DCB 0x42 ; B
.rodata:0000EBA4 00                            DCB    0
.rodata:0000EBA5 00                            DCB    0
.rodata:0000EBA6 38                            DCB 0x38 ; 8
.rodata:0000EBA7 42                            DCB 0x42 ; B
.rodata:0000EBA8 7C                            DCB 0x7C ; |
.rodata:0000EBA9 D1                            DCB 0xD1
.rodata:0000EBAA 9E                            DCB 0x9E
.rodata:0000EBAB 3C                            DCB 0x3C ; <
.rodata:0000EBAC 00                            DCB    0
.rodata:0000EBAD 00                            DCB    0
.rodata:0000EBAE A8                            DCB 0xA8
.rodata:0000EBAF 42                            DCB 0x42 ; B
.rodata:0000EBB0 00                            DCB    0
.rodata:0000EBB1 00                            DCB    0
.rodata:0000EBB2 30                            DCB 0x30 ; 0
.rodata:0000EBB3 42                            DCB 0x42 ; B
.rodata:0000EBB4 EF                            DCB 0xEF
.rodata:0000EBB5 1F                            DCB 0x1F
.rodata:0000EBB6 8B                            DCB 0x8B
.rodata:0000EBB7 3C                            DCB 0x3C ; <
.rodata:0000EBB8 00                            DCB    0
.rodata:0000EBB9 00                            DCB    0
.rodata:0000EBBA AC                            DCB 0xAC
.rodata:0000EBBB 42                            DCB 0x42 ; B
.rodata:0000EBBC 00                            DCB    0
.rodata:0000EBBD 00                            DCB    0
.rodata:0000EBBE 28                            DCB 0x28 ; (
.rodata:0000EBBF 42                            DCB 0x42 ; B
.rodata:0000EBC0 A9                            DCB 0xA9
.rodata:0000EBC1 BE                            DCB 0xBE
.rodata:0000EBC2 73                            DCB 0x73 ; s
.rodata:0000EBC3 3C                            DCB 0x3C ; <
.rodata:0000EBC4 00                            DCB    0
.rodata:0000EBC5 00                            DCB    0
.rodata:0000EBC6 B0                            DCB 0xB0
.rodata:0000EBC7 42                            DCB 0x42 ; B
.rodata:0000EBC8 00                            DCB    0
.rodata:0000EBC9 00                            DCB    0
.rodata:0000EBCA 20                            DCB 0x20
.rodata:0000EBCB 42                            DCB 0x42 ; B
.rodata:0000EBCC 7D                            DCB 0x7D ; }
.rodata:0000EBCD 21                            DCB 0x21 ; !
.rodata:0000EBCE 64                            DCB 0x64 ; d
.rodata:0000EBCF 3C                            DCB 0x3C ; <
.rodata:0000EBD0 00                            DCB    0
.rodata:0000EBD1 00                            DCB    0
.rodata:0000EBD2 B4                            DCB 0xB4
.rodata:0000EBD3 42                            DCB 0x42 ; B
.rodata:0000EBD4 00                            DCB    0
.rodata:0000EBD5 00                            DCB    0
.rodata:0000EBD6 18                            DCB 0x18
.rodata:0000EBD7 42                            DCB 0x42 ; B
.rodata:0000EBD8 ED                            DCB 0xED
.rodata:0000EBD9 D5                            DCB 0xD5
.rodata:0000EBDA 47                            DCB 0x47 ; G
.rodata:0000EBDB 3C                            DCB 0x3C ; <
.rodata:0000EBDC 00                            DCB    0
.rodata:0000EBDD 00                            DCB    0
.rodata:0000EBDE B8                            DCB 0xB8
.rodata:0000EBDF 42                            DCB 0x42 ; B
.rodata:0000EBE0 00                            DCB    0
.rodata:0000EBE1 00                            DCB    0
.rodata:0000EBE2 10                            DCB 0x10
.rodata:0000EBE3 42                            DCB 0x42 ; B
.rodata:0000EBE4 23                            DCB 0x23 ; #
.rodata:0000EBE5 10                            DCB 0x10
.rodata:0000EBE6 2F                            DCB 0x2F ; /
.rodata:0000EBE7 3C                            DCB 0x3C ; <
.rodata:0000EBE8 00                            DCB    0
.rodata:0000EBE9 00                            DCB    0
.rodata:0000EBEA BC                            DCB 0xBC
.rodata:0000EBEB 42                            DCB 0x42 ; B
.rodata:0000EBEC 00                            DCB    0
.rodata:0000EBED 00                            DCB    0
.rodata:0000EBEE 08                            DCB    8
.rodata:0000EBEF 42                            DCB 0x42 ; B
.rodata:0000EBF0 0A                            DCB  0xA
.rodata:0000EBF1 D7                            DCB 0xD7
.rodata:0000EBF2 23                            DCB 0x23 ; #
.rodata:0000EBF3 3C                            DCB 0x3C ; <
.rodata:0000EBF4 00                            DCB    0
.rodata:0000EBF5 00                            DCB    0
.rodata:0000EBF6 C0                            DCB 0xC0
.rodata:0000EBF7 42                            DCB 0x42 ; B
.rodata:0000EBF8 00                            DCB    0
.rodata:0000EBF9 00                            DCB    0
.rodata:0000EBFA 00                            DCB    0
.rodata:0000EBFB 42                            DCB 0x42 ; B
.rodata:0000EBFC 34                            DCB 0x34 ; 4
.rodata:0000EBFD BA                            DCB 0xBA
.rodata:0000EBFE 03                            DCB    3
.rodata:0000EBFF 3C                            DCB 0x3C ; <
.rodata:0000EC00 00                            DCB    0
.rodata:0000EC01 00                            DCB    0
.rodata:0000EC02 C4                            DCB 0xC4
.rodata:0000EC03 42                            DCB 0x42 ; B
.rodata:0000EC04 00                            DCB    0
.rodata:0000EC05 00                            DCB    0
.rodata:0000EC06 F0                            DCB 0xF0
.rodata:0000EC07 41                            DCB 0x41 ; A
.rodata:0000EC08 F6                            DCB 0xF6
.rodata:0000EC09 CF                            DCB 0xCF
.rodata:0000EC0A D3                            DCB 0xD3
.rodata:0000EC0B 3B                            DCB 0x3B ; ;
.rodata:0000EC0C 00                            DCB    0
.rodata:0000EC0D 00                            DCB    0
.rodata:0000EC0E C8                            DCB 0xC8
.rodata:0000EC0F 42                            DCB 0x42 ; B
.rodata:0000EC10 00                            DCB    0
.rodata:0000EC11 00                            DCB    0
.rodata:0000EC12 E0                            DCB 0xE0
.rodata:0000EC13 41                            DCB 0x41 ; A
.rodata:0000EC14 5F                            DCB 0x5F ; _
.rodata:0000EC15 EC                            DCB 0xEC
.rodata:0000EC16 BD                            DCB 0xBD
.rodata:0000EC17 3B                            DCB 0x3B ; ;
.rodata:0000EC18 00                            DCB    0
.rodata:0000EC19 00                            DCB    0
.rodata:0000EC1A CC                            DCB 0xCC
.rodata:0000EC1B 42                            DCB 0x42 ; B
.rodata:0000EC1C 00                            DCB    0
.rodata:0000EC1D 00                            DCB    0
.rodata:0000EC1E D0                            DCB 0xD0
.rodata:0000EC1F 41                            DCB 0x41 ; A
.rodata:0000EC20 EA                            DCB 0xEA
.rodata:0000EC21 B2                            DCB 0xB2
.rodata:0000EC22 98                            DCB 0x98
.rodata:0000EC23 3B                            DCB 0x3B ; ;
.rodata:0000EC24 00                            DCB    0
.rodata:0000EC25 00                            DCB    0
.rodata:0000EC26 D0                            DCB 0xD0
.rodata:0000EC27 42                            DCB 0x42 ; B
.rodata:0000EC28 00                            DCB    0
.rodata:0000EC29 00                            DCB    0
.rodata:0000EC2A C0                            DCB 0xC0
.rodata:0000EC2B 41                            DCB 0x41 ; A
.rodata:0000EC2C 3A                            DCB 0x3A ; :
.rodata:0000EC2D 90                            DCB 0x90
.rodata:0000EC2E 75                            DCB 0x75 ; u
.rodata:0000EC2F 3B                            DCB 0x3B ; ;
.rodata:0000EC30 00                            DCB    0
.rodata:0000EC31 00                            DCB    0
.rodata:0000EC32 D4                            DCB 0xD4
.rodata:0000EC33 42                            DCB 0x42 ; B
.rodata:0000EC34 00                            DCB    0
.rodata:0000EC35 00                            DCB    0
.rodata:0000EC36 B0                            DCB 0xB0
.rodata:0000EC37 41                            DCB 0x41 ; A
.rodata:0000EC38 72                            DCB 0x72 ; r
.rodata:0000EC39 33                            DCB 0x33 ; 3
.rodata:0000EC3A 5C                            DCB 0x5C ; \
.rodata:0000EC3B 3B                            DCB 0x3B ; ;
.rodata:0000EC3C 00                            DCB    0
.rodata:0000EC3D 00                            DCB    0
.rodata:0000EC3E D8                            DCB 0xD8
.rodata:0000EC3F 42                            DCB 0x42 ; B
.rodata:0000EC40 00                            DCB    0
.rodata:0000EC41 00                            DCB    0
.rodata:0000EC42 A0                            DCB 0xA0
.rodata:0000EC43 41                            DCB 0x41 ; A
.rodata:0000EC44 43                            DCB 0x43 ; C
.rodata:0000EC45 03                            DCB    3
.rodata:0000EC46 31                            DCB 0x31 ; 1
.rodata:0000EC47 3B                            DCB 0x3B ; ;
.rodata:0000EC48 00                            DCB    0
.rodata:0000EC49 00                            DCB    0
.rodata:0000EC4A DC                            DCB 0xDC
.rodata:0000EC4B 42                            DCB 0x42 ; B
.rodata:0000EC4C 00                            DCB    0
.rodata:0000EC4D 00                            DCB    0
.rodata:0000EC4E 90                            DCB 0x90
.rodata:0000EC4F 41                            DCB 0x41 ; A
.rodata:0000EC50 1D                            DCB 0x1D
.rodata:0000EC51 58                            DCB 0x58 ; X
.rodata:0000EC52 0E                            DCB  0xE
.rodata:0000EC53 3B                            DCB 0x3B ; ;
.rodata:0000EC54 00                            DCB    0
.rodata:0000EC55 00                            DCB    0
.rodata:0000EC56 E0                            DCB 0xE0
.rodata:0000EC57 42                            DCB 0x42 ; B
.rodata:0000EC58 00                            DCB    0
.rodata:0000EC59 00                            DCB    0
.rodata:0000EC5A 80                            DCB 0x80
.rodata:0000EC5B 41                            DCB 0x41 ; A
.rodata:0000EC5C 09                            DCB    9
.rodata:0000EC5D 54                            DCB 0x54 ; T
.rodata:0000EC5E FF                            DCB 0xFF
.rodata:0000EC5F 3A                            DCB 0x3A ; :
.rodata:0000EC60 00                            DCB    0
.rodata:0000EC61 00                            DCB    0
.rodata:0000EC62 E4                            DCB 0xE4
.rodata:0000EC63 42                            DCB 0x42 ; B
.rodata:0000EC64 00                            DCB    0
.rodata:0000EC65 00                            DCB    0
.rodata:0000EC66 60                            DCB 0x60 ; `
.rodata:0000EC67 41                            DCB 0x41 ; A
.rodata:0000EC68 3E                            DCB 0x3E ; >
.rodata:0000EC69 42                            DCB 0x42 ; B
.rodata:0000EC6A CD                            DCB 0xCD
.rodata:0000EC6B 3A                            DCB 0x3A ; :
.rodata:0000EC6C 00                            DCB    0
.rodata:0000EC6D 00                            DCB    0
.rodata:0000EC6E E8                            DCB 0xE8
.rodata:0000EC6F 42                            DCB 0x42 ; B
.rodata:0000EC70 00                            DCB    0
.rodata:0000EC71 00                            DCB    0
.rodata:0000EC72 40                            DCB 0x40 ; @
.rodata:0000EC73 41                            DCB 0x41 ; A
.rodata:0000EC74 08                            DCB    8
.rodata:0000EC75 05                            DCB    5
.rodata:0000EC76 A5                            DCB 0xA5
.rodata:0000EC77 3A                            DCB 0x3A ; :
.rodata:0000EC78 00                            DCB    0
.rodata:0000EC79 00                            DCB    0
.rodata:0000EC7A EC                            DCB 0xEC
.rodata:0000EC7B 42                            DCB 0x42 ; B
.rodata:0000EC7C 00                            DCB    0
.rodata:0000EC7D 00                            DCB    0
.rodata:0000EC7E 20                            DCB 0x20
.rodata:0000EC7F 41                            DCB 0x41 ; A
.rodata:0000EC80 00                            DCB    0
.rodata:0000EC81 00                            DCB    0
.rodata:0000EC82 00                            DCB    0
.rodata:0000EC83 00                            DCB    0
.rodata:0000EC84 00                            DCB    0
.rodata:0000EC85 00                            DCB    0
.rodata:0000EC86 7F                            DCB 0x7F ; 
.rodata:0000EC87 43                            DCB 0x43 ; C
.rodata:0000EC88 00                            DCB    0
.rodata:0000EC89 00                            DCB    0
.rodata:0000EC8A 00                            DCB    0
.rodata:0000EC8B 00                            DCB    0
.rodata:0000EC8C 00                            unk_EC8C DCB    0             ; DATA XREF: sub_4710+44↑o
.rodata:0000EC8C                                                             ; sub_4710+52↑o
.rodata:0000EC8C                                                             ; .text:off_4810↑o
.rodata:0000EC8D 00                            DCB    0
.rodata:0000EC8E 80                            DCB 0x80
.rodata:0000EC8F 3F                            DCB 0x3F ; ?
.rodata:0000EC90 00                            unk_EC90 DCB    0
.rodata:0000EC91 00                            DCB    0
.rodata:0000EC92 70                            DCB 0x70 ; p
.rodata:0000EC93 41                            DCB 0x41 ; A
.rodata:0000EC94 00                            DCB    0
.rodata:0000EC95 00                            DCB    0
.rodata:0000EC96 70                            DCB 0x70 ; p
.rodata:0000EC97 41                            DCB 0x41 ; A
.rodata:0000EC98 E9                            DCB 0xE9
.rodata:0000EC99 EE                            DCB 0xEE
.rodata:0000EC9A 6E                            DCB 0x6E ; n
.rodata:0000EC9B 3F                            DCB 0x3F ; ?
.rodata:0000EC9C 00                            DCB    0
.rodata:0000EC9D 00                            DCB    0
.rodata:0000EC9E 60                            DCB 0x60 ; `
.rodata:0000EC9F 41                            DCB 0x41 ; A
.rodata:0000ECA0 00                            DCB    0
.rodata:0000ECA1 00                            DCB    0
.rodata:0000ECA2 60                            DCB 0x60 ; `
.rodata:0000ECA3 41                            DCB 0x41 ; A
.rodata:0000ECA4 E3                            DCB 0xE3
.rodata:0000ECA5 DD                            DCB 0xDD
.rodata:0000ECA6 5D                            DCB 0x5D ; ]
.rodata:0000ECA7 3F                            DCB 0x3F ; ?
.rodata:0000ECA8 00                            DCB    0
.rodata:0000ECA9 00                            DCB    0
.rodata:0000ECAA 50                            DCB 0x50 ; P
.rodata:0000ECAB 41                            DCB 0x41 ; A
.rodata:0000ECAC 00                            DCB    0
.rodata:0000ECAD 00                            DCB    0
.rodata:0000ECAE 50                            DCB 0x50 ; P
.rodata:0000ECAF 41                            DCB 0x41 ; A
.rodata:0000ECB0 CD                            DCB 0xCD
.rodata:0000ECB1 CC                            DCB 0xCC
.rodata:0000ECB2 4C                            DCB 0x4C ; L
.rodata:0000ECB3 3F                            DCB 0x3F ; ?
.rodata:0000ECB4 00                            DCB    0
.rodata:0000ECB5 00                            DCB    0
.rodata:0000ECB6 40                            DCB 0x40 ; @
.rodata:0000ECB7 41                            DCB 0x41 ; A
.rodata:0000ECB8 00                            DCB    0
.rodata:0000ECB9 00                            DCB    0
.rodata:0000ECBA 40                            DCB 0x40 ; @
.rodata:0000ECBB 41                            DCB 0x41 ; A
.rodata:0000ECBC B6                            DCB 0xB6
.rodata:0000ECBD BB                            DCB 0xBB
.rodata:0000ECBE 3B                            DCB 0x3B ; ;
.rodata:0000ECBF 3F                            DCB 0x3F ; ?
.rodata:0000ECC0 00                            DCB    0
.rodata:0000ECC1 00                            DCB    0
.rodata:0000ECC2 30                            DCB 0x30 ; 0
.rodata:0000ECC3 41                            DCB 0x41 ; A
.rodata:0000ECC4 00                            DCB    0
.rodata:0000ECC5 00                            DCB    0
.rodata:0000ECC6 30                            DCB 0x30 ; 0
.rodata:0000ECC7 41                            DCB 0x41 ; A
.rodata:0000ECC8 B0                            DCB 0xB0
.rodata:0000ECC9 AA                            DCB 0xAA
.rodata:0000ECCA 2A                            DCB 0x2A ; *
.rodata:0000ECCB 3F                            DCB 0x3F ; ?
.rodata:0000ECCC 00                            DCB    0
.rodata:0000ECCD 00                            DCB    0
.rodata:0000ECCE 20                            DCB 0x20
.rodata:0000ECCF 41                            DCB 0x41 ; A
.rodata:0000ECD0 00                            DCB    0
.rodata:0000ECD1 00                            DCB    0
.rodata:0000ECD2 20                            DCB 0x20
.rodata:0000ECD3 41                            DCB 0x41 ; A
.rodata:0000ECD4 9A                            DCB 0x9A
.rodata:0000ECD5 99                            DCB 0x99
.rodata:0000ECD6 19                            DCB 0x19
.rodata:0000ECD7 3F                            DCB 0x3F ; ?
.rodata:0000ECD8 00                            DCB    0
.rodata:0000ECD9 00                            DCB    0
.rodata:0000ECDA 10                            DCB 0x10
.rodata:0000ECDB 41                            DCB 0x41 ; A
.rodata:0000ECDC 00                            DCB    0
.rodata:0000ECDD 00                            DCB    0
.rodata:0000ECDE 10                            DCB 0x10
.rodata:0000ECDF 41                            DCB 0x41 ; A
.rodata:0000ECE0 2C                            DCB 0x2C ; ,
.rodata:0000ECE1 49                            DCB 0x49 ; I
.rodata:0000ECE2 12                            DCB 0x12
.rodata:0000ECE3 3F                            DCB 0x3F ; ?
.rodata:0000ECE4 00                            DCB    0
.rodata:0000ECE5 00                            DCB    0
.rodata:0000ECE6 00                            DCB    0
.rodata:0000ECE7 41                            DCB 0x41 ; A
.rodata:0000ECE8 00                            DCB    0
.rodata:0000ECE9 00                            DCB    0
.rodata:0000ECEA 00                            DCB    0
.rodata:0000ECEB 41                            DCB 0x41 ; A
.rodata:0000ECEC FA                            DCB 0xFA
.rodata:0000ECED EE                            DCB 0xEE
.rodata:0000ECEE EE                            DCB 0xEE
.rodata:0000ECEF 3E                            DCB 0x3E ; >
.rodata:0000ECF0 00                            DCB    0
.rodata:0000ECF1 00                            DCB    0
.rodata:0000ECF2 E0                            DCB 0xE0
.rodata:0000ECF3 40                            DCB 0x40 ; @
.rodata:0000ECF4 00                            DCB    0
.rodata:0000ECF5 00                            DCB    0
.rodata:0000ECF6 E0                            DCB 0xE0
.rodata:0000ECF7 40                            DCB 0x40 ; @
.rodata:0000ECF8 CD                            DCB 0xCD
.rodata:0000ECF9 CC                            DCB 0xCC
.rodata:0000ECFA CC                            DCB 0xCC
.rodata:0000ECFB 3E                            DCB 0x3E ; >
.rodata:0000ECFC 00                            DCB    0
.rodata:0000ECFD 00                            DCB    0
.rodata:0000ECFE C0                            DCB 0xC0
.rodata:0000ECFF 40                            DCB 0x40 ; @
.rodata:0000ED00 00                            DCB    0
.rodata:0000ED01 00                            DCB    0
.rodata:0000ED02 C0                            DCB 0xC0
.rodata:0000ED03 40                            DCB 0x40 ; @
.rodata:0000ED04 9F                            DCB 0x9F
.rodata:0000ED05 AA                            DCB 0xAA
.rodata:0000ED06 AA                            DCB 0xAA
.rodata:0000ED07 3E                            DCB 0x3E ; >
.rodata:0000ED08 00                            DCB    0
.rodata:0000ED09 00                            DCB    0
.rodata:0000ED0A A0                            DCB 0xA0
.rodata:0000ED0B 40                            DCB 0x40 ; @
.rodata:0000ED0C 00                            DCB    0
.rodata:0000ED0D 00                            DCB    0
.rodata:0000ED0E A0                            DCB 0xA0
.rodata:0000ED0F 40                            DCB 0x40 ; @
.rodata:0000ED10 94                            DCB 0x94
.rodata:0000ED11 88                            DCB 0x88
.rodata:0000ED12 88                            DCB 0x88
.rodata:0000ED13 3E                            DCB 0x3E ; >
.rodata:0000ED14 00                            DCB    0
.rodata:0000ED15 00                            DCB    0
.rodata:0000ED16 80                            DCB 0x80
.rodata:0000ED17 40                            DCB 0x40 ; @
.rodata:0000ED18 00                            DCB    0
.rodata:0000ED19 00                            DCB    0
.rodata:0000ED1A 80                            DCB 0x80
.rodata:0000ED1B 40                            DCB 0x40 ; @
.rodata:0000ED1C CD                            DCB 0xCD
.rodata:0000ED1D CC                            DCB 0xCC
.rodata:0000ED1E 4C                            DCB 0x4C ; L
.rodata:0000ED1F 3E                            DCB 0x3E ; >
.rodata:0000ED20 00                            DCB    0
.rodata:0000ED21 00                            DCB    0
.rodata:0000ED22 40                            DCB 0x40 ; @
.rodata:0000ED23 40                            DCB 0x40 ; @
.rodata:0000ED24 00                            DCB    0
.rodata:0000ED25 00                            DCB    0
.rodata:0000ED26 40                            DCB 0x40 ; @
.rodata:0000ED27 40                            DCB 0x40 ; @
.rodata:0000ED28 DA                            DCB 0xDA
.rodata:0000ED29 92                            DCB 0x92
.rodata:0000ED2A 35                            DCB 0x35 ; 5
.rodata:0000ED2B 3E                            DCB 0x3E ; >
.rodata:0000ED2C 00                            DCB    0
.rodata:0000ED2D 00                            DCB    0
.rodata:0000ED2E 00                            DCB    0
.rodata:0000ED2F 40                            DCB 0x40 ; @
.rodata:0000ED30 00                            DCB    0
.rodata:0000ED31 00                            DCB    0
.rodata:0000ED32 00                            DCB    0
.rodata:0000ED33 40                            DCB 0x40 ; @
.rodata:0000ED34 1B                            DCB 0x1B
.rodata:0000ED35 49                            DCB 0x49 ; I
.rodata:0000ED36 12                            DCB 0x12
.rodata:0000ED37 3E                            DCB 0x3E ; >
.rodata:0000ED38 00                            DCB    0
.rodata:0000ED39 00                            DCB    0
.rodata:0000ED3A 80                            DCB 0x80
.rodata:0000ED3B 3F                            DCB 0x3F ; ?
.rodata:0000ED3C 00                            DCB    0
.rodata:0000ED3D 00                            DCB    0
.rodata:0000ED3E 80                            DCB 0x80
.rodata:0000ED3F 3F                            DCB 0x3F ; ?
.rodata:0000ED40 40 1F 00 00                   off_ED40 DCD word_1F40        ; DATA XREF: sub_7D2C+4↑o
.rodata:0000ED40                                                             ; sub_7D2C+C↑o
.rodata:0000ED40                                                             ; sub_7D2C:loc_7D60↑o
.rodata:0000ED40                                                             ; sub_7D2C+38↑o
.rodata:0000ED40                                                             ; .text:off_7D8C↑o
.rodata:0000ED40                                                             ; .text:off_7D9C↑o
.rodata:0000ED44 10                            DCB 0x10
.rodata:0000ED45 00                            DCB    0
.rodata:0000ED46 00                            DCB    0
.rodata:0000ED47 00                            DCB    0
.rodata:0000ED48 11                            DCB 0x11
.rodata:0000ED49 2B                            DCB 0x2B ; +
.rodata:0000ED4A 00                            DCB    0
.rodata:0000ED4B 00                            DCB    0
.rodata:0000ED4C 10                            DCB 0x10
.rodata:0000ED4D 00                            DCB    0
.rodata:0000ED4E 00                            DCB    0
.rodata:0000ED4F 00                            DCB    0
.rodata:0000ED50 E0                            DCB 0xE0
.rodata:0000ED51 2E                            DCB 0x2E ; .
.rodata:0000ED52 00                            DCB    0
.rodata:0000ED53 00                            DCB    0
.rodata:0000ED54 10                            DCB 0x10
.rodata:0000ED55 00                            DCB    0
.rodata:0000ED56 00                            DCB    0
.rodata:0000ED57 00                            DCB    0
.rodata:0000ED58 80                            DCB 0x80
.rodata:0000ED59 3E                            DCB 0x3E ; >
.rodata:0000ED5A 00                            DCB    0
.rodata:0000ED5B 00                            DCB    0
.rodata:0000ED5C 08                            DCB    8
.rodata:0000ED5D 00                            DCB    0
.rodata:0000ED5E 00                            DCB    0
.rodata:0000ED5F 00                            DCB    0
.rodata:0000ED60 22                            DCB 0x22 ; "
.rodata:0000ED61 56                            DCB 0x56 ; V
.rodata:0000ED62 00                            DCB    0
.rodata:0000ED63 00                            DCB    0
.rodata:0000ED64 08                            DCB    8
.rodata:0000ED65 00                            DCB    0
.rodata:0000ED66 00                            DCB    0
.rodata:0000ED67 00                            DCB    0
.rodata:0000ED68 C0                            DCB 0xC0
.rodata:0000ED69 5D                            DCB 0x5D ; ]
.rodata:0000ED6A 00                            DCB    0
.rodata:0000ED6B 00                            DCB    0
.rodata:0000ED6C 08                            DCB    8
.rodata:0000ED6D 00                            DCB    0
.rodata:0000ED6E 00                            DCB    0
.rodata:0000ED6F 00                            DCB    0
.rodata:0000ED70 00                            DCB    0
.rodata:0000ED71 7D                            DCB 0x7D ; }
.rodata:0000ED72 00                            DCB    0
.rodata:0000ED73 00                            DCB    0
.rodata:0000ED74 04                            DCB    4
.rodata:0000ED75 00                            DCB    0
.rodata:0000ED76 00                            DCB    0
.rodata:0000ED77 00                            DCB    0
.rodata:0000ED78 44                            DCB 0x44 ; D
.rodata:0000ED79 AC                            DCB 0xAC
.rodata:0000ED7A 00                            DCB    0
.rodata:0000ED7B 00                            DCB    0
.rodata:0000ED7C 04                            DCB    4
.rodata:0000ED7D 00                            DCB    0
.rodata:0000ED7E 00                            DCB    0
.rodata:0000ED7F 00                            DCB    0
.rodata:0000ED80 80                            DCB 0x80
.rodata:0000ED81 BB                            DCB 0xBB
.rodata:0000ED82 00                            DCB    0
.rodata:0000ED83 00                            DCB    0
.rodata:0000ED84 04                            DCB    4
.rodata:0000ED85 00                            DCB    0
.rodata:0000ED86 00                            DCB    0
.rodata:0000ED87 00                            DCB    0
.rodata:0000ED88 00                            DCB    0
.rodata:0000ED89 FA                            DCB 0xFA
.rodata:0000ED8A 00                            DCB    0
.rodata:0000ED8B 00                            DCB    0
.rodata:0000ED8C 02                            DCB    2
.rodata:0000ED8D 00                            DCB    0
.rodata:0000ED8E 00                            DCB    0
.rodata:0000ED8F 00                            DCB    0
.rodata:0000ED90 88                            DCB 0x88
.rodata:0000ED91 58                            DCB 0x58 ; X
.rodata:0000ED92 01                            DCB    1
.rodata:0000ED93 00                            DCB    0
.rodata:0000ED94 02                            DCB    2
.rodata:0000ED95 00                            DCB    0
.rodata:0000ED96 00                            DCB    0
.rodata:0000ED97 00                            DCB    0
.rodata:0000ED98 00                            DCB    0
.rodata:0000ED99 77                            DCB 0x77 ; w
.rodata:0000ED9A 01                            DCB    1
.rodata:0000ED9B 00                            DCB    0
.rodata:0000ED9C 02                            DCB    2
.rodata:0000ED9D 00                            DCB    0
.rodata:0000ED9E 00                            DCB    0
.rodata:0000ED9F 00                            DCB    0
.rodata:0000EDA0 00                            DCB    0
.rodata:0000EDA1 F4                            DCB 0xF4
.rodata:0000EDA2 01                            DCB    1
.rodata:0000EDA3 00                            DCB    0
.rodata:0000EDA4 01                            DCB    1
.rodata:0000EDA5 00                            DCB    0
.rodata:0000EDA6 00                            DCB    0
.rodata:0000EDA7 00                            DCB    0
.rodata:0000EDA8 10                            DCB 0x10
.rodata:0000EDA9 B1                            DCB 0xB1
.rodata:0000EDAA 02                            DCB    2
.rodata:0000EDAB 00                            DCB    0
.rodata:0000EDAC 01                            DCB    1
.rodata:0000EDAD 00                            DCB    0
.rodata:0000EDAE 00                            DCB    0
.rodata:0000EDAF 00                            DCB    0
.rodata:0000EDB0 00                            DCB    0
.rodata:0000EDB1 EE                            DCB 0xEE
.rodata:0000EDB2 02                            DCB    2
.rodata:0000EDB3 00                            DCB    0
.rodata:0000EDB4 01                            DCB    1
.rodata:0000EDB5 00                            DCB    0
.rodata:0000EDB6 00                            DCB    0
.rodata:0000EDB7 00                            DCB    0
.rodata:0000EDB8 00                            DCB    0
.rodata:0000EDB9 00                            DCB    0
.rodata:0000EDBA 00                            DCB    0
.rodata:0000EDBB 00                            DCB    0
.rodata:0000EDBC 00                            DCB    0
.rodata:0000EDBD 00                            DCB    0
.rodata:0000EDBE 00                            DCB    0
.rodata:0000EDBF 00                            DCB    0
.rodata:0000EDC0 46 61 69 6C 65 64 20 74 6F 20+aFailedToOpenMi DCB "Failed to open mixer",0
.rodata:0000EDC0 6F 70 65 6E 20 6D 69 78 65 72+                              ; DATA XREF: get_value:loc_9658↑o
.rodata:0000EDC0 00                                                          ; get_value+3A↑o
.rodata:0000EDC0                                                             ; .text:off_966C↑o
.rodata:0000EDC0                                                             ; set_value:loc_96C4↑o
.rodata:0000EDC0                                                             ; set_value+52↑o
.rodata:0000EDC0                                                             ; .text:off_9720↑o
.rodata:0000EDD5 00 00 00 00 00 00 00 00 00 00+ALIGN 0x10
.rodata:0000EDE0 49 6E 76 61 6C 69 64 20 63 6F+aInvalidControl_0 DCB "Invalid control name/value: NULL",0
.rodata:0000EDE0 6E 74 72 6F 6C 20 6E 61 6D 65+                              ; DATA XREF: get_value:loc_964E↑o
.rodata:0000EDE0 2F 76 61 6C 75 65 3A 20 4E 55+                              ; get_value+30↑o
.rodata:0000EDE0 4C 4C 00                                                    ; .text:off_9670↑o
.rodata:0000EDE0                                                             ; set_value:loc_96BE↑o
.rodata:0000EDE0                                                             ; set_value+4C↑o
.rodata:0000EDE0                                                             ; .text:off_9724↑o
.rodata:0000EE01 00 00 00 00 00 00 00          ALIGN 8
.rodata:0000EE08 45 6E 61 62 6C 65 2F 44 69 73+aEnableDisableS DCB "Enable/Disable Streaming PATH/Endpoint",0
.rodata:0000EE08 61 62 6C 65 20 53 74 72 65 61+                              ; DATA XREF: cvq_open+8↑o
.rodata:0000EE08 6D 69 6E 67 20 50 41 54 48 2F+                              ; cvq_open+12↑o
.rodata:0000EE08 45 6E 64 70 6F 69 6E 74 00                                  ; .text:off_980C↑o
.rodata:0000EE2F 00                            DCB    0
.rodata:0000EE30 00                            DCB    0
.rodata:0000EE31 00                            DCB    0
.rodata:0000EE32 00                            DCB    0
.rodata:0000EE33 00                            DCB    0
.rodata:0000EE34 00                            DCB    0
.rodata:0000EE35 00                            DCB    0
.rodata:0000EE36 00                            DCB    0
.rodata:0000EE37 00                            DCB    0
.rodata:0000EE38 00                            DCB    0
.rodata:0000EE39 00                            DCB    0
.rodata:0000EE3A 00                            DCB    0
.rodata:0000EE3B 00                            DCB    0
.rodata:0000EE3C 00                            DCB    0
.rodata:0000EE3D 00                            DCB    0
.rodata:0000EE3E 00                            DCB    0
.rodata:0000EE3F 00                            DCB    0
.rodata:0000EE40 00                            DCB    0
.rodata:0000EE41 00                            DCB    0
.rodata:0000EE42 00                            DCB    0
.rodata:0000EE43 00                            DCB    0
.rodata:0000EE44 00                            DCB    0
.rodata:0000EE45 00                            DCB    0
.rodata:0000EE46 00                            DCB    0
.rodata:0000EE47 00                            DCB    0
.rodata:0000EE48 00                            DCB    0
.rodata:0000EE49 00                            DCB    0
.rodata:0000EE4A 00                            DCB    0
.rodata:0000EE4B 00                            DCB    0
.rodata:0000EE4C 00                            DCB    0
.rodata:0000EE4D 00                            DCB    0
.rodata:0000EE4E 00                            DCB    0
.rodata:0000EE4F 00                            DCB    0
.rodata:0000EE50 00                            DCB    0
.rodata:0000EE51 00                            DCB    0
.rodata:0000EE52 00                            DCB    0
.rodata:0000EE53 00                            DCB    0
.rodata:0000EE54 00                            DCB    0
.rodata:0000EE55 00                            DCB    0
.rodata:0000EE56 00                            DCB    0
.rodata:0000EE57 00                            DCB    0
.rodata:0000EE58 00                            DCB    0
.rodata:0000EE59 00                            DCB    0
.rodata:0000EE5A 00                            DCB    0
.rodata:0000EE5B 00                            DCB    0
.rodata:0000EE5C 00                            DCB    0
.rodata:0000EE5D 00                            DCB    0
.rodata:0000EE5E 00                            DCB    0
.rodata:0000EE5F 00                            DCB    0
.rodata:0000EE60 00                            DCB    0
.rodata:0000EE61 00                            DCB    0
.rodata:0000EE62 00                            DCB    0
.rodata:0000EE63 00                            DCB    0
.rodata:0000EE64 00                            DCB    0
.rodata:0000EE65 00                            DCB    0
.rodata:0000EE66 00                            DCB    0
.rodata:0000EE67 00                            DCB    0
.rodata:0000EE68 00                            DCB    0
.rodata:0000EE69 00                            DCB    0
.rodata:0000EE6A 00                            DCB    0
.rodata:0000EE6B 00                            DCB    0
.rodata:0000EE6C 00                            DCB    0
.rodata:0000EE6D 00                            DCB    0
.rodata:0000EE6E 00                            DCB    0
.rodata:0000EE6F 00                            DCB    0
.rodata:0000EE70 00                            DCB    0
.rodata:0000EE71 00                            DCB    0
.rodata:0000EE72 00                            DCB    0
.rodata:0000EE73 00                            DCB    0
.rodata:0000EE74 00                            DCB    0
.rodata:0000EE75 00                            DCB    0
.rodata:0000EE76 00                            DCB    0
.rodata:0000EE77 00                            DCB    0
.rodata:0000EE78 00                            DCB    0
.rodata:0000EE79 00                            DCB    0
.rodata:0000EE7A 00                            DCB    0
.rodata:0000EE7B 00                            DCB    0
.rodata:0000EE7C 00                            DCB    0
.rodata:0000EE7D 00                            DCB    0
.rodata:0000EE7E 00                            DCB    0
.rodata:0000EE7F 00                            DCB    0
.rodata:0000EE80 00                            DCB    0
.rodata:0000EE81 00                            DCB    0
.rodata:0000EE82 00                            DCB    0
.rodata:0000EE83 00                            DCB    0
.rodata:0000EE84 00                            DCB    0
.rodata:0000EE85 00                            DCB    0
.rodata:0000EE86 00                            DCB    0
.rodata:0000EE87 00                            DCB    0
.rodata:0000EE88                               ; _WORD word_EE88[256]
.rodata:0000EE88 84 82 84 86 84 8A 84 8E 84 92+word_EE88 DCW 0x8284, 0x8684, 0x8A84, 0x8E84, 0x9284, 0x9684, 0x9A84, 0x9E84, 0xA284, 0xA684, 0xAA84, 0xAE84, 0xB284
.rodata:0000EE88 84 96 84 9A 84 9E 84 A2 84 A6+                              ; DATA XREF: pcm_read_uart_char_dev+1B6↑o
.rodata:0000EE88 84 AA 84 AE 84 B2 84 B6 84 BA+                              ; pcm_read_uart_char_dev+1BE↑o
.rodata:0000EE88 84 BE 84 C1 84 C3 84 C5 84 C7+                              ; .text:off_9F14↑o
.rodata:0000EE88 84 C9 84 CB 84 CD 84 CF 84 D1+DCW 0xB684, 0xBA84, 0xBE84, 0xC184, 0xC384, 0xC584, 0xC784, 0xC984, 0xCB84, 0xCD84, 0xCF84, 0xD184, 0xD384
.rodata:0000EE88 84 D3 84 D5 84 D7 84 D9 84 DB+DCW 0xD584, 0xD784, 0xD984, 0xDB84, 0xDD84, 0xDF84, 0xE104, 0xE204, 0xE304, 0xE404, 0xE504, 0xE604, 0xE704
.rodata:0000EE88 84 DD 84 DF 04 E1 04 E2 04 E3+DCW 0xE804, 0xE904, 0xEA04, 0xEB04, 0xEC04, 0xED04, 0xEE04, 0xEF04, 0xF004, 0xF0C4, 0xF144, 0xF1C4, 0xF244
.rodata:0000EE88 04 E4 04 E5 04 E6 04 E7 04 E8+DCW 0xF2C4, 0xF344, 0xF3C4, 0xF444, 0xF4C4, 0xF544, 0xF5C4, 0xF644, 0xF6C4, 0xF744, 0xF7C4, 0xF844, 0xF8A4
.rodata:0000EE88 04 E9 04 EA 04 EB 04 EC 04 ED+DCW 0xF8E4, 0xF924, 0xF964, 0xF9A4, 0xF9E4, 0xFA24, 0xFA64, 0xFAA4, 0xFAE4, 0xFB24, 0xFB64, 0xFBA4, 0xFBE4
.rodata:0000EE88 04 EE 04 EF 04 F0 C4 F0 44 F1+DCW 0xFC24, 0xFC64, 0xFC94, 0xFCB4, 0xFCD4, 0xFCF4, 0xFD14, 0xFD34, 0xFD54, 0xFD74, 0xFD94, 0xFDB4, 0xFDD4
.rodata:0000EE88 C4 F1 44 F2 C4 F2 44 F3 C4 F3+DCW 0xFDF4, 0xFE14, 0xFE34, 0xFE54, 0xFE74, 0xFE8C, 0xFE9C, 0xFEAC, 0xFEBC, 0xFECC, 0xFEDC, 0xFEEC, 0xFEFC
.rodata:0000EE88 44 F4 C4 F4 44 F5 C4 F5 44 F6+DCW 0xFF0C, 0xFF1C, 0xFF2C, 0xFF3C, 0xFF4C, 0xFF5C, 0xFF6C, 0xFF7C, 0xFF88, 0xFF90, 0xFF98, 0xFFA0, 0xFFA8
.rodata:0000EE88 C4 F6 44 F7 C4 F7 44 F8 A4 F8+DCW 0xFFB0, 0xFFB8, 0xFFC0, 0xFFC8, 0xFFD0, 0xFFD8, 0xFFE0, 0xFFE8, 0xFFF0, 0xFFF8, 0xFFFF, 0x7D7C, 0x797C
.rodata:0000EE88 E4 F8 24 F9 64 F9 A4 F9 E4 F9+DCW 0x757C, 0x717C, 0x6D7C, 0x697C, 0x657C, 0x617C, 0x5D7C, 0x597C, 0x557C, 0x517C, 0x4D7C, 0x497C, 0x457C
.rodata:0000EE88 24 FA 64 FA A4 FA E4 FA 24 FB+DCW 0x417C, 0x3E7C, 0x3C7C, 0x3A7C, 0x387C, 0x367C, 0x347C, 0x327C, 0x307C, 0x2E7C, 0x2C7C, 0x2A7C, 0x287C
.rodata:0000EE88 64 FB A4 FB E4 FB 24 FC 64 FC+DCW 0x267C, 0x247C, 0x227C, 0x207C, 0x1EFC, 0x1DFC, 0x1CFC, 0x1BFC, 0x1AFC, 0x19FC, 0x18FC, 0x17FC, 0x16FC
.rodata:0000EE88 94 FC B4 FC D4 FC F4 FC 14 FD+DCW 0x15FC, 0x14FC, 0x13FC, 0x12FC, 0x11FC, 0x10FC, 0xFFC, 0xF3C, 0xEBC, 0xE3C, 0xDBC, 0xD3C, 0xCBC
.rodata:0000EE88 34 FD 54 FD 74 FD 94 FD B4 FD+DCW 0xC3C, 0xBBC, 0xB3C, 0xABC, 0xA3C, 0x9BC, 0x93C, 0x8BC, 0x83C, 0x7BC, 0x75C, 0x71C, 0x6DC, 0x69C
.rodata:0000EE88 D4 FD F4 FD 14 FE 34 FE 54 FE+DCW 0x65C, 0x61C, 0x5DC, 0x59C, 0x55C, 0x51C, 0x4DC, 0x49C, 0x45C, 0x41C, 0x3DC, 0x39C, 0x36C, 0x34C
.rodata:0000EE88 74 FE 8C FE 9C FE AC FE BC FE+DCW 0x32C, 0x30C, 0x2EC, 0x2CC, 0x2AC, 0x28C, 0x26C, 0x24C, 0x22C, 0x20C, 0x1EC, 0x1CC, 0x1AC, 0x18C
.rodata:0000EE88 CC FE DC FE EC FE FC FE 0C FF+DCW 0x174, 0x164, 0x154, 0x144, 0x134, 0x124, 0x114, 0x104, 0xF4, 0xE4, 0xD4, 0xC4, 0xB4, 0xA4, 0x94
.rodata:0000EE88 1C FF 2C FF 3C FF 4C FF 5C FF+DCW 0x84, 0x78, 0x70, 0x68, 0x60, 0x58, 0x50, 0x48, 0x40, 0x38, 0x30, 0x28, 0x20, 0x18, 0x10, 8, 0
.rodata:0000EE88 6C FF 7C FF 88 FF 90 FF 98 FF+; .rodata ends
.rodata:0000EE88 A0 FF A8 FF B0 FF B8 FF C0 FF+
.fini_array:00010968                               ; ELF Termination Function Table
.fini_array:00010968                               ; ===========================================================================
.fini_array:00010968
.fini_array:00010968                               ; Segment type: Pure data
.fini_array:00010968                               AREA .fini_array, DATA
.fini_array:00010968 00 35 00 00                   off_10968 DCD sub_3500        ; DATA XREF: LOAD:0000009C↑o
.fini_array:00010968                                                             ; LOAD:0000013C↑o
.fini_array:00010968                               ; .fini_array ends
.fini_array:00010968
.data.rel.ro:0001096C                               ; ===========================================================================
.data.rel.ro:0001096C
.data.rel.ro:0001096C                               ; Segment type: Pure data
.data.rel.ro:0001096C                               AREA .data.rel.ro, DATA
.data.rel.ro:0001096C                               EXPORT out_channels_name_to_enum_table
.data.rel.ro:0001096C 50 BA 00 00                   out_channels_name_to_enum_table DCD aAudioChannelOu
.data.rel.ro:0001096C                                                             ; DATA XREF: LOAD:00000860↑o
.data.rel.ro:0001096C                                                             ; sub_723C+4E↑o
.data.rel.ro:0001096C                                                             ; .got:out_channels_name_to_enum_table_ptr↓o
.data.rel.ro:0001096C                                                             ; "AUDIO_CHANNEL_OUT_STEREO"
.data.rel.ro:00010970 03                            DCB    3
.data.rel.ro:00010971 00                            DCB    0
.data.rel.ro:00010972 00                            DCB    0
.data.rel.ro:00010973 00                            DCB    0
.data.rel.ro:00010974 69 BA 00 00                   DCD aAudioChannelOu_0         ; "AUDIO_CHANNEL_OUT_5POINT1"
.data.rel.ro:00010978 3F                            DCB 0x3F ; ?
.data.rel.ro:00010979 00                            DCB    0
.data.rel.ro:0001097A 00                            DCB    0
.data.rel.ro:0001097B 00                            DCB    0
.data.rel.ro:0001097C 83 BA 00 00                   DCD aAudioChannelOu_1         ; "AUDIO_CHANNEL_OUT_7POINT1"
.data.rel.ro:00010980 3F                            DCB 0x3F ; ?
.data.rel.ro:00010981 06                            DCB    6
.data.rel.ro:00010982 00                            DCB    0
.data.rel.ro:00010983 00                            DCB    0
.data.rel.ro:00010984                               EXPORT media_speaker
.data.rel.ro:00010984 C1 BB 00 00                   media_speaker DCD aMediaSpeaker_0
.data.rel.ro:00010984                                                             ; DATA XREF: LOAD:00000D10↑o
.data.rel.ro:00010984                                                             ; .data.rel.ro:off_10AC4↓o
.data.rel.ro:00010984                                                             ; "media-speaker"
.data.rel.ro:00010988 CF BB 00 00                   DCD aMediaMainMic             ; "media-main-mic"
.data.rel.ro:0001098C                               EXPORT media_headphones
.data.rel.ro:0001098C DE BB 00 00                   media_headphones DCD aMediaHeadphone_2
.data.rel.ro:0001098C                                                             ; DATA XREF: LOAD:00000CB0↑o
.data.rel.ro:0001098C                                                             ; .data.rel.ro:00010ACC↓o
.data.rel.ro:0001098C                                                             ; "media-headphones"
.data.rel.ro:00010990 CF BB 00 00                   DCD aMediaMainMic             ; "media-main-mic"
.data.rel.ro:00010994                               EXPORT media_headset
.data.rel.ro:00010994 DE BB 00 00                   media_headset DCD aMediaHeadphone_2
.data.rel.ro:00010994                                                             ; DATA XREF: LOAD:00000D20↑o
.data.rel.ro:00010994                                                             ; .data.rel.ro:00010AC8↓o
.data.rel.ro:00010994                                                             ; "media-headphones"
.data.rel.ro:00010998 EF BB 00 00                   DCD aMediaHeadsetMi_0         ; "media-headset-mic"
.data.rel.ro:0001099C                               EXPORT media_earpiece
.data.rel.ro:0001099C 01 BC 00 00                   media_earpiece DCD aMediaEarphones
.data.rel.ro:0001099C                                                             ; DATA XREF: LOAD:000008D0↑o
.data.rel.ro:0001099C                                                             ; .data.rel.ro:00010AD8↓o
.data.rel.ro:0001099C                                                             ; "media-earphones"
.data.rel.ro:000109A0 CF BB 00 00                   DCD aMediaMainMic             ; "media-main-mic"
.data.rel.ro:000109A4                               EXPORT media_speaker_mic_nr_off
.data.rel.ro:000109A4 C1 BB 00 00                   media_speaker_mic_nr_off DCD aMediaSpeaker_0
.data.rel.ro:000109A4                                                             ; DATA XREF: LOAD:000008E0↑o
.data.rel.ro:000109A4                                                             ; .data.rel.ro:00010AE0↓o
.data.rel.ro:000109A4                                                             ; "media-speaker"
.data.rel.ro:000109A8 11 BC 00 00                   DCD aMediaMainMicNr           ; "media-main-mic-nr-off"
.data.rel.ro:000109AC                               EXPORT media_headphones_mic_nr_off
.data.rel.ro:000109AC DE BB 00 00                   media_headphones_mic_nr_off DCD aMediaHeadphone_2
.data.rel.ro:000109AC                                                             ; DATA XREF: LOAD:00000B20↑o
.data.rel.ro:000109AC                                                             ; .data.rel.ro:00010AE8↓o
.data.rel.ro:000109AC                                                             ; "media-headphones"
.data.rel.ro:000109B0 11 BC 00 00                   DCD aMediaMainMicNr           ; "media-main-mic-nr-off"
.data.rel.ro:000109B4                               EXPORT media_headset_mic_nr_off
.data.rel.ro:000109B4 DE BB 00 00                   media_headset_mic_nr_off DCD aMediaHeadphone_2
.data.rel.ro:000109B4                                                             ; DATA XREF: LOAD:00000AF0↑o
.data.rel.ro:000109B4                                                             ; .data.rel.ro:00010AE4↓o
.data.rel.ro:000109B4                                                             ; "media-headphones"
.data.rel.ro:000109B8 27 BC 00 00                   DCD aMediaHeadsetMi_1         ; "media-headset-mic-nr-off"
.data.rel.ro:000109BC                               EXPORT media_earpiece_mic_nr_off
.data.rel.ro:000109BC 01 BC 00 00                   media_earpiece_mic_nr_off DCD aMediaEarphones
.data.rel.ro:000109BC                                                             ; DATA XREF: LOAD:00000A60↑o
.data.rel.ro:000109BC                                                             ; .data.rel.ro:00010AF4↓o
.data.rel.ro:000109BC                                                             ; "media-earphones"
.data.rel.ro:000109C0 11 BC 00 00                   DCD aMediaMainMicNr           ; "media-main-mic-nr-off"
.data.rel.ro:000109C4                               EXPORT media_speaker_xunfei
.data.rel.ro:000109C4 40 BC 00 00                   media_speaker_xunfei DCD aMediaSpeakerXu_0
.data.rel.ro:000109C4                                                             ; DATA XREF: LOAD:000009A0↑o
.data.rel.ro:000109C4                                                             ; .data.rel.ro:00010AFC↓o
.data.rel.ro:000109C4                                                             ; "media-speaker-xunfei"
.data.rel.ro:000109C8 CF BB 00 00                   DCD aMediaMainMic             ; "media-main-mic"
.data.rel.ro:000109CC                               EXPORT media_headphones_xunfei
.data.rel.ro:000109CC 55 BC 00 00                   media_headphones_xunfei DCD aMediaHeadphone_3
.data.rel.ro:000109CC                                                             ; DATA XREF: LOAD:000009D0↑o
.data.rel.ro:000109CC                                                             ; .data.rel.ro:00010B04↓o
.data.rel.ro:000109CC                                                             ; "media-headphones-xunfei"
.data.rel.ro:000109D0 CF BB 00 00                   DCD aMediaMainMic             ; "media-main-mic"
.data.rel.ro:000109D4                               EXPORT media_headset_xunfei
.data.rel.ro:000109D4 55 BC 00 00                   media_headset_xunfei DCD aMediaHeadphone_3
.data.rel.ro:000109D4                                                             ; DATA XREF: LOAD:00000A50↑o
.data.rel.ro:000109D4                                                             ; .data.rel.ro:00010B00↓o
.data.rel.ro:000109D4                                                             ; "media-headphones-xunfei"
.data.rel.ro:000109D8 EF BB 00 00                   DCD aMediaHeadsetMi_0         ; "media-headset-mic"
.data.rel.ro:000109DC                               EXPORT bluetooth_sco_xunfei
.data.rel.ro:000109DC 6D BC 00 00                   bluetooth_sco_xunfei DCD aMediaBtScoHead
.data.rel.ro:000109DC                                                             ; DATA XREF: LOAD:00000B50↑o
.data.rel.ro:000109DC                                                             ; .data.rel.ro:00010B08↓o
.data.rel.ro:000109DC                                                             ; "media-bt-sco-headset-xunfei"
.data.rel.ro:000109E0 89 BC 00 00                   DCD aMediaBtScoMic            ; "media-bt-sco-mic"
.data.rel.ro:000109E4                               EXPORT media_earpiece_xunfei
.data.rel.ro:000109E4 9A BC 00 00                   media_earpiece_xunfei DCD aMediaEarphones_0
.data.rel.ro:000109E4                                                             ; DATA XREF: LOAD:00000A00↑o
.data.rel.ro:000109E4                                                             ; .data.rel.ro:00010B10↓o
.data.rel.ro:000109E4                                                             ; "media-earphones-xunfei"
.data.rel.ro:000109E8 CF BB 00 00                   DCD aMediaMainMic             ; "media-main-mic"
.data.rel.ro:000109EC                               EXPORT voice_call_speaker
.data.rel.ro:000109EC B1 BC 00 00                   voice_call_speaker DCD aVoiceCallSpeak_0
.data.rel.ro:000109EC                                                             ; DATA XREF: LOAD:00000DA0↑o
.data.rel.ro:000109EC                                                             ; .data.rel.ro:00010B18↓o
.data.rel.ro:000109EC                                                             ; .data.rel.ro:00010B34↓o
.data.rel.ro:000109EC                                                             ; "voice-call-speaker"
.data.rel.ro:000109F0 C4 BC 00 00                   DCD aVoiceCallMainM           ; "voice-call-main-mic"
.data.rel.ro:000109F4                               EXPORT voice_call_headphones
.data.rel.ro:000109F4 D8 BC 00 00                   voice_call_headphones DCD aVoiceCallHeadp_0
.data.rel.ro:000109F4                                                             ; DATA XREF: LOAD:00000950↑o
.data.rel.ro:000109F4                                                             ; .data.rel.ro:00010B20↓o
.data.rel.ro:000109F4                                                             ; .data.rel.ro:00010B3C↓o
.data.rel.ro:000109F4                                                             ; "voice-call-headphones"
.data.rel.ro:000109F8 C4 BC 00 00                   DCD aVoiceCallMainM           ; "voice-call-main-mic"
.data.rel.ro:000109FC                               EXPORT voice_call_headset
.data.rel.ro:000109FC EE BC 00 00                   voice_call_headset DCD aVoiceCallHeads_0
.data.rel.ro:000109FC                                                             ; DATA XREF: LOAD:00000B40↑o
.data.rel.ro:000109FC                                                             ; .data.rel.ro:00010B1C↓o
.data.rel.ro:000109FC                                                             ; .data.rel.ro:00010B38↓o
.data.rel.ro:000109FC                                                             ; "voice-call-headset"
.data.rel.ro:00010A00 01 BD 00 00                   DCD aVoiceCallHeads_1         ; "voice-call-headset-mic"
.data.rel.ro:00010A04                               EXPORT voice_call_earpiece
.data.rel.ro:00010A04 18 BD 00 00                   voice_call_earpiece DCD aVoiceCallEarph
.data.rel.ro:00010A04                                                             ; DATA XREF: LOAD:00000D90↑o
.data.rel.ro:00010A04                                                             ; .data.rel.ro:00010B2C↓o
.data.rel.ro:00010A04                                                             ; .data.rel.ro:00010B48↓o
.data.rel.ro:00010A04                                                             ; "voice-call-earphones"
.data.rel.ro:00010A08 C4 BC 00 00                   DCD aVoiceCallMainM           ; "voice-call-main-mic"
.data.rel.ro:00010A0C                               EXPORT voice_call_bluetooth_sco
.data.rel.ro:00010A0C 2D BD 00 00                   voice_call_bluetooth_sco DCD aVoiceBtScoHead
.data.rel.ro:00010A0C                                                             ; DATA XREF: LOAD:000008B0↑o
.data.rel.ro:00010A0C                                                             ; .data.rel.ro:00010B24↓o
.data.rel.ro:00010A0C                                                             ; "voice-bt-sco-headset"
.data.rel.ro:00010A10 42 BD 00 00                   DCD aVoiceBtScoMic            ; "voice-bt-sco-mic"
.data.rel.ro:00010A14                               EXPORT voice_call_bluetooth_sco_nrec_off
.data.rel.ro:00010A14 53 BD 00 00                   voice_call_bluetooth_sco_nrec_off DCD aVoiceBtScoNrec
.data.rel.ro:00010A14                                                             ; DATA XREF: LOAD:00000B30↑o
.data.rel.ro:00010A14                                                             ; .data.rel.ro:00010B40↓o
.data.rel.ro:00010A14                                                             ; "voice-bt-sco-nrec-off-headset"
.data.rel.ro:00010A18 42 BD 00 00                   DCD aVoiceBtScoMic            ; "voice-bt-sco-mic"
.data.rel.ro:00010A1C                               EXPORT voice_call_wb_speaker
.data.rel.ro:00010A1C 71 BD 00 00                   voice_call_wb_speaker DCD aVoiceCallWbSpe_0
.data.rel.ro:00010A1C                                                             ; DATA XREF: LOAD:00000B70↑o
.data.rel.ro:00010A1C                                                             ; .data.rel.ro:00010B50↓o
.data.rel.ro:00010A1C                                                             ; .data.rel.ro:00010B6C↓o
.data.rel.ro:00010A1C                                                             ; "voice-call-wb-speaker"
.data.rel.ro:00010A20 87 BD 00 00                   DCD aVoiceCallWbMai           ; "voice-call-wb-main-mic"
.data.rel.ro:00010A24                               EXPORT voice_call_wb_headphones
.data.rel.ro:00010A24 9E BD 00 00                   voice_call_wb_headphones DCD aVoiceCallWbHea_1
.data.rel.ro:00010A24                                                             ; DATA XREF: LOAD:00000990↑o
.data.rel.ro:00010A24                                                             ; .data.rel.ro:00010B58↓o
.data.rel.ro:00010A24                                                             ; .data.rel.ro:00010B74↓o
.data.rel.ro:00010A24                                                             ; "voice-call-wb-headphones"
.data.rel.ro:00010A28 87 BD 00 00                   DCD aVoiceCallWbMai           ; "voice-call-wb-main-mic"
.data.rel.ro:00010A2C                               EXPORT voice_call_wb_headset
.data.rel.ro:00010A2C B7 BD 00 00                   voice_call_wb_headset DCD aVoiceCallWbHea_2
.data.rel.ro:00010A2C                                                             ; DATA XREF: LOAD:00000870↑o
.data.rel.ro:00010A2C                                                             ; .data.rel.ro:00010B54↓o
.data.rel.ro:00010A2C                                                             ; .data.rel.ro:00010B70↓o
.data.rel.ro:00010A2C                                                             ; "voice-call-wb-headset"
.data.rel.ro:00010A30 CD BD 00 00                   DCD aVoiceCallWbHea_3         ; "voice-call-wb-headset-mic"
.data.rel.ro:00010A34                               EXPORT voice_call_wb_earpiece
.data.rel.ro:00010A34 E7 BD 00 00                   voice_call_wb_earpiece DCD aVoiceCallWbEar_0
.data.rel.ro:00010A34                                                             ; DATA XREF: LOAD:000009C0↑o
.data.rel.ro:00010A34                                                             ; .data.rel.ro:00010B64↓o
.data.rel.ro:00010A34                                                             ; .data.rel.ro:00010B80↓o
.data.rel.ro:00010A34                                                             ; "voice-call-wb-earphones"
.data.rel.ro:00010A38 87 BD 00 00                   DCD aVoiceCallWbMai           ; "voice-call-wb-main-mic"
.data.rel.ro:00010A3C                               EXPORT voice_call_wb_bluetooth_sco
.data.rel.ro:00010A3C FF BD 00 00                   voice_call_wb_bluetooth_sco DCD aVoiceWbBtScoHe
.data.rel.ro:00010A3C                                                             ; DATA XREF: LOAD:00000CC0↑o
.data.rel.ro:00010A3C                                                             ; .data.rel.ro:00010B5C↓o
.data.rel.ro:00010A3C                                                             ; "voice-wb-bt-sco-headset"
.data.rel.ro:00010A40 17 BE 00 00                   DCD aVoiceWbBtScoMi           ; "voice-wb-bt-sco-mic"
.data.rel.ro:00010A44                               EXPORT voice_call_wb_bluetooth_sco_nrec_off
.data.rel.ro:00010A44 2B BE 00 00                   voice_call_wb_bluetooth_sco_nrec_off DCD aVoiceWbBtScoNr
.data.rel.ro:00010A44                                                             ; DATA XREF: LOAD:00000B00↑o
.data.rel.ro:00010A44                                                             ; .data.rel.ro:00010B78↓o
.data.rel.ro:00010A44                                                             ; "voice-wb-bt-sco-nrec-off-headset"
.data.rel.ro:00010A48 17 BE 00 00                   DCD aVoiceWbBtScoMi           ; "voice-wb-bt-sco-mic"
.data.rel.ro:00010A4C                               EXPORT camcorder_speaker
.data.rel.ro:00010A4C C1 BB 00 00                   camcorder_speaker DCD aMediaSpeaker_0
.data.rel.ro:00010A4C                                                             ; DATA XREF: LOAD:00000AB0↑o
.data.rel.ro:00010A4C                                                             ; .data.rel.ro:00010B88↓o
.data.rel.ro:00010A4C                                                             ; "media-speaker"
.data.rel.ro:00010A50 4C BE 00 00                   DCD aMediaSecondMic           ; "media-second-mic"
.data.rel.ro:00010A54                               EXPORT camcorder_headphones
.data.rel.ro:00010A54 DE BB 00 00                   camcorder_headphones DCD aMediaHeadphone_2
.data.rel.ro:00010A54                                                             ; DATA XREF: LOAD:00000AA0↑o
.data.rel.ro:00010A54                                                             ; .data.rel.ro:00010B8C↓o
.data.rel.ro:00010A54                                                             ; .data.rel.ro:00010B90↓o
.data.rel.ro:00010A54                                                             ; "media-headphones"
.data.rel.ro:00010A58 4C BE 00 00                   DCD aMediaSecondMic           ; "media-second-mic"
.data.rel.ro:00010A5C                               EXPORT camcorder_earpiece
.data.rel.ro:00010A5C 01 BC 00 00                   camcorder_earpiece DCD aMediaEarphones
.data.rel.ro:00010A5C                                                             ; DATA XREF: LOAD:00000A30↑o
.data.rel.ro:00010A5C                                                             ; .data.rel.ro:00010B9C↓o
.data.rel.ro:00010A5C                                                             ; "media-earphones"
.data.rel.ro:00010A60 4C BE 00 00                   DCD aMediaSecondMic           ; "media-second-mic"
.data.rel.ro:00010A64                               EXPORT voice_rec_speaker
.data.rel.ro:00010A64 5D BE 00 00                   voice_rec_speaker DCD aVoiceRecSpeake_0
.data.rel.ro:00010A64                                                             ; DATA XREF: LOAD:00000BC0↑o
.data.rel.ro:00010A64                                                             ; .data.rel.ro:00010BA4↓o
.data.rel.ro:00010A64                                                             ; "voice-rec-speaker"
.data.rel.ro:00010A68 6F BE 00 00                   DCD aVoiceRecMainMi           ; "voice-rec-main-mic"
.data.rel.ro:00010A6C                               EXPORT voice_rec_headphones
.data.rel.ro:00010A6C 82 BE 00 00                   voice_rec_headphones DCD aVoiceRecHeadph_0
.data.rel.ro:00010A6C                                                             ; DATA XREF: LOAD:00000CD0↑o
.data.rel.ro:00010A6C                                                             ; .data.rel.ro:00010BAC↓o
.data.rel.ro:00010A6C                                                             ; "voice-rec-headphones"
.data.rel.ro:00010A70 6F BE 00 00                   DCD aVoiceRecMainMi           ; "voice-rec-main-mic"
.data.rel.ro:00010A74                               EXPORT voice_rec_headset
.data.rel.ro:00010A74 82 BE 00 00                   voice_rec_headset DCD aVoiceRecHeadph_0
.data.rel.ro:00010A74                                                             ; DATA XREF: LOAD:00000960↑o
.data.rel.ro:00010A74                                                             ; .data.rel.ro:00010BA8↓o
.data.rel.ro:00010A74                                                             ; "voice-rec-headphones"
.data.rel.ro:00010A78 97 BE 00 00                   DCD aVoiceRecHeadse_0         ; "voice-rec-headset-mic"
.data.rel.ro:00010A7C                               EXPORT voice_rec_earpiece
.data.rel.ro:00010A7C AD BE 00 00                   voice_rec_earpiece DCD aVoiceRecEarpho
.data.rel.ro:00010A7C                                                             ; DATA XREF: LOAD:00000B90↑o
.data.rel.ro:00010A7C                                                             ; .data.rel.ro:00010BB8↓o
.data.rel.ro:00010A7C                                                             ; "voice-rec-earphones"
.data.rel.ro:00010A80 6F BE 00 00                   DCD aVoiceRecMainMi           ; "voice-rec-main-mic"
.data.rel.ro:00010A84                               EXPORT communication_speaker
.data.rel.ro:00010A84 C1 BE 00 00                   communication_speaker DCD aCommunicationS_0
.data.rel.ro:00010A84                                                             ; DATA XREF: LOAD:00000AD0↑o
.data.rel.ro:00010A84                                                             ; .data.rel.ro:00010BC0↓o
.data.rel.ro:00010A84                                                             ; "communication-speaker"
.data.rel.ro:00010A88 D7 BE 00 00                   DCD aCommunicationM           ; "communication-main-mic"
.data.rel.ro:00010A8C                               EXPORT communication_headphones
.data.rel.ro:00010A8C EE BE 00 00                   communication_headphones DCD aCommunicationH_1
.data.rel.ro:00010A8C                                                             ; DATA XREF: LOAD:00000920↑o
.data.rel.ro:00010A8C                                                             ; .data.rel.ro:00010BC8↓o
.data.rel.ro:00010A8C                                                             ; "communication-headphones"
.data.rel.ro:00010A90 D7 BE 00 00                   DCD aCommunicationM           ; "communication-main-mic"
.data.rel.ro:00010A94                               EXPORT communication_headset
.data.rel.ro:00010A94 07 BF 00 00                   communication_headset DCD aCommunicationH_2
.data.rel.ro:00010A94                                                             ; DATA XREF: LOAD:00000D00↑o
.data.rel.ro:00010A94                                                             ; .data.rel.ro:00010BC4↓o
.data.rel.ro:00010A94                                                             ; "communication-headset"
.data.rel.ro:00010A98 1D BF 00 00                   DCD aCommunicationH_3         ; "communication-headset-mic"
.data.rel.ro:00010A9C                               EXPORT communication_earpiece
.data.rel.ro:00010A9C 37 BF 00 00                   communication_earpiece DCD aCommunicationE_0
.data.rel.ro:00010A9C                                                             ; DATA XREF: LOAD:00000C20↑o
.data.rel.ro:00010A9C                                                             ; .data.rel.ro:00010BD4↓o
.data.rel.ro:00010A9C                                                             ; "communication-earphones"
.data.rel.ro:00010AA0 D7 BE 00 00                   DCD aCommunicationM           ; "communication-main-mic"
.data.rel.ro:00010AA4                               EXPORT communication_bluetooth_sco
.data.rel.ro:00010AA4 4F BF 00 00                   communication_bluetooth_sco DCD aCommunicationB_0
.data.rel.ro:00010AA4                                                             ; DATA XREF: LOAD:000009F0↑o
.data.rel.ro:00010AA4                                                             ; .data.rel.ro:00010BCC↓o
.data.rel.ro:00010AA4                                                             ; "communication-bt-sco-headset"
.data.rel.ro:00010AA8 6C BF 00 00                   DCD aCommunicationB_1         ; "communication-bt-sco-mic"
.data.rel.ro:00010AAC                               EXPORT speaker_and_headphones
.data.rel.ro:00010AAC 85 BF 00 00                   speaker_and_headphones DCD aSpeakerAndHead_0
.data.rel.ro:00010AAC                                                             ; DATA XREF: LOAD:000009B0↑o
.data.rel.ro:00010AAC                                                             ; .data.rel.ro:00010AD4↓o
.data.rel.ro:00010AAC                                                             ; .data.rel.ro:00010AF0↓o
.data.rel.ro:00010AAC                                                             ; .data.rel.ro:00010B0C↓o
.data.rel.ro:00010AAC                                                             ; .data.rel.ro:00010B28↓o
.data.rel.ro:00010AAC                                                             ; .data.rel.ro:00010B44↓o
.data.rel.ro:00010AAC                                                             ; .data.rel.ro:00010B60↓o
.data.rel.ro:00010AAC                                                             ; .data.rel.ro:00010B7C↓o
.data.rel.ro:00010AAC                                                             ; .data.rel.ro:00010B98↓o
.data.rel.ro:00010AAC                                                             ; .data.rel.ro:00010BB4↓o
.data.rel.ro:00010AAC                                                             ; .data.rel.ro:00010BD0↓o
.data.rel.ro:00010AAC                                                             ; "speaker-and-headphones"
.data.rel.ro:00010AB0 9C BF 00 00                   DCD aMainMic                  ; "main-mic"
.data.rel.ro:00010AB4                               EXPORT speaker_and_bt_sco
.data.rel.ro:00010AB4 A5 BF 00 00                   speaker_and_bt_sco DCD aSpeakerAndBtSc_0
.data.rel.ro:00010AB4                                                             ; DATA XREF: LOAD:00000B10↑o
.data.rel.ro:00010AB4                                                             ; .data.rel.ro:00010ADC↓o
.data.rel.ro:00010AB4                                                             ; .data.rel.ro:00010AF8↓o
.data.rel.ro:00010AB4                                                             ; .data.rel.ro:00010B14↓o
.data.rel.ro:00010AB4                                                             ; .data.rel.ro:00010B30↓o
.data.rel.ro:00010AB4                                                             ; .data.rel.ro:00010B4C↓o
.data.rel.ro:00010AB4                                                             ; .data.rel.ro:00010B68↓o
.data.rel.ro:00010AB4                                                             ; .data.rel.ro:00010B84↓o
.data.rel.ro:00010AB4                                                             ; .data.rel.ro:00010BA0↓o
.data.rel.ro:00010AB4                                                             ; .data.rel.ro:00010BBC↓o
.data.rel.ro:00010AB4                                                             ; .data.rel.ro:00010BD8↓o
.data.rel.ro:00010AB4                                                             ; "speaker-and-bt-sco"
.data.rel.ro:00010AB8 9C BF 00 00                   DCD aMainMic                  ; "main-mic"
.data.rel.ro:00010ABC                               EXPORT bluetooth_sco
.data.rel.ro:00010ABC B8 BF 00 00                   bluetooth_sco DCD aMediaBtScoHead_0
.data.rel.ro:00010ABC                                                             ; DATA XREF: LOAD:00000C10↑o
.data.rel.ro:00010ABC                                                             ; .data.rel.ro:00010AD0↓o
.data.rel.ro:00010ABC                                                             ; .data.rel.ro:00010AEC↓o
.data.rel.ro:00010ABC                                                             ; .data.rel.ro:00010B94↓o
.data.rel.ro:00010ABC                                                             ; .data.rel.ro:00010BB0↓o
.data.rel.ro:00010ABC                                                             ; "media-bt-sco-headset"
.data.rel.ro:00010AC0 89 BC 00 00                   DCD aMediaBtScoMic            ; "media-bt-sco-mic"
.data.rel.ro:00010AC4 84 09 01 00                   off_10AC4 DCD media_speaker   ; DATA XREF: sub_5730+5BE↑o
.data.rel.ro:00010AC4                                                             ; sub_5730+5C4↑o
.data.rel.ro:00010AC4                                                             ; sub_5730+602↑o
.data.rel.ro:00010AC4                                                             ; sub_5730+60C↑o
.data.rel.ro:00010AC4                                                             ; sub_5730:loc_5D5C↑o
.data.rel.ro:00010AC4                                                             ; sub_5730+634↑o
.data.rel.ro:00010AC4                                                             ; .text:off_6010↑o
.data.rel.ro:00010AC4                                                             ; .text:off_6014↑o
.data.rel.ro:00010AC4                                                             ; .text:off_6018↑o
.data.rel.ro:00010AC8 94 09 01 00                   DCD media_headset
.data.rel.ro:00010ACC 8C 09 01 00                   DCD media_headphones
.data.rel.ro:00010AD0 BC 0A 01 00                   DCD bluetooth_sco
.data.rel.ro:00010AD4 AC 0A 01 00                   DCD speaker_and_headphones
.data.rel.ro:00010AD8 9C 09 01 00                   DCD media_earpiece
.data.rel.ro:00010ADC B4 0A 01 00                   DCD speaker_and_bt_sco
.data.rel.ro:00010AE0 A4 09 01 00                   DCD media_speaker_mic_nr_off
.data.rel.ro:00010AE4 B4 09 01 00                   DCD media_headset_mic_nr_off
.data.rel.ro:00010AE8 AC 09 01 00                   DCD media_headphones_mic_nr_off
.data.rel.ro:00010AEC BC 0A 01 00                   DCD bluetooth_sco
.data.rel.ro:00010AF0 AC 0A 01 00                   DCD speaker_and_headphones
.data.rel.ro:00010AF4 BC 09 01 00                   DCD media_earpiece_mic_nr_off
.data.rel.ro:00010AF8 B4 0A 01 00                   DCD speaker_and_bt_sco
.data.rel.ro:00010AFC C4 09 01 00                   DCD media_speaker_xunfei
.data.rel.ro:00010B00 D4 09 01 00                   DCD media_headset_xunfei
.data.rel.ro:00010B04 CC 09 01 00                   DCD media_headphones_xunfei
.data.rel.ro:00010B08 DC 09 01 00                   DCD bluetooth_sco_xunfei
.data.rel.ro:00010B0C AC 0A 01 00                   DCD speaker_and_headphones
.data.rel.ro:00010B10 E4 09 01 00                   DCD media_earpiece_xunfei
.data.rel.ro:00010B14 B4 0A 01 00                   DCD speaker_and_bt_sco
.data.rel.ro:00010B18 EC 09 01 00                   DCD voice_call_speaker
.data.rel.ro:00010B1C FC 09 01 00                   DCD voice_call_headset
.data.rel.ro:00010B20 F4 09 01 00                   DCD voice_call_headphones
.data.rel.ro:00010B24 0C 0A 01 00                   DCD voice_call_bluetooth_sco
.data.rel.ro:00010B28 AC 0A 01 00                   DCD speaker_and_headphones
.data.rel.ro:00010B2C 04 0A 01 00                   DCD voice_call_earpiece
.data.rel.ro:00010B30 B4 0A 01 00                   DCD speaker_and_bt_sco
.data.rel.ro:00010B34 EC 09 01 00                   DCD voice_call_speaker
.data.rel.ro:00010B38 FC 09 01 00                   DCD voice_call_headset
.data.rel.ro:00010B3C F4 09 01 00                   DCD voice_call_headphones
.data.rel.ro:00010B40 14 0A 01 00                   DCD voice_call_bluetooth_sco_nrec_off
.data.rel.ro:00010B44 AC 0A 01 00                   DCD speaker_and_headphones
.data.rel.ro:00010B48 04 0A 01 00                   DCD voice_call_earpiece
.data.rel.ro:00010B4C B4 0A 01 00                   DCD speaker_and_bt_sco
.data.rel.ro:00010B50 1C 0A 01 00                   DCD voice_call_wb_speaker
.data.rel.ro:00010B54 2C 0A 01 00                   DCD voice_call_wb_headset
.data.rel.ro:00010B58 24 0A 01 00                   DCD voice_call_wb_headphones
.data.rel.ro:00010B5C 3C 0A 01 00                   DCD voice_call_wb_bluetooth_sco
.data.rel.ro:00010B60 AC 0A 01 00                   DCD speaker_and_headphones
.data.rel.ro:00010B64 34 0A 01 00                   DCD voice_call_wb_earpiece
.data.rel.ro:00010B68 B4 0A 01 00                   DCD speaker_and_bt_sco
.data.rel.ro:00010B6C 1C 0A 01 00                   DCD voice_call_wb_speaker
.data.rel.ro:00010B70 2C 0A 01 00                   DCD voice_call_wb_headset
.data.rel.ro:00010B74 24 0A 01 00                   DCD voice_call_wb_headphones
.data.rel.ro:00010B78 44 0A 01 00                   DCD voice_call_wb_bluetooth_sco_nrec_off
.data.rel.ro:00010B7C AC 0A 01 00                   DCD speaker_and_headphones
.data.rel.ro:00010B80 34 0A 01 00                   DCD voice_call_wb_earpiece
.data.rel.ro:00010B84 B4 0A 01 00                   DCD speaker_and_bt_sco
.data.rel.ro:00010B88 4C 0A 01 00                   DCD camcorder_speaker
.data.rel.ro:00010B8C 54 0A 01 00                   DCD camcorder_headphones
.data.rel.ro:00010B90 54 0A 01 00                   DCD camcorder_headphones
.data.rel.ro:00010B94 BC 0A 01 00                   DCD bluetooth_sco
.data.rel.ro:00010B98 AC 0A 01 00                   DCD speaker_and_headphones
.data.rel.ro:00010B9C 5C 0A 01 00                   DCD camcorder_earpiece
.data.rel.ro:00010BA0 B4 0A 01 00                   DCD speaker_and_bt_sco
.data.rel.ro:00010BA4 64 0A 01 00                   DCD voice_rec_speaker
.data.rel.ro:00010BA8 74 0A 01 00                   DCD voice_rec_headset
.data.rel.ro:00010BAC 6C 0A 01 00                   DCD voice_rec_headphones
.data.rel.ro:00010BB0 BC 0A 01 00                   DCD bluetooth_sco
.data.rel.ro:00010BB4 AC 0A 01 00                   DCD speaker_and_headphones
.data.rel.ro:00010BB8 7C 0A 01 00                   DCD voice_rec_earpiece
.data.rel.ro:00010BBC B4 0A 01 00                   DCD speaker_and_bt_sco
.data.rel.ro:00010BC0 84 0A 01 00                   DCD communication_speaker
.data.rel.ro:00010BC4 94 0A 01 00                   DCD communication_headset
.data.rel.ro:00010BC8 8C 0A 01 00                   DCD communication_headphones
.data.rel.ro:00010BCC A4 0A 01 00                   DCD communication_bluetooth_sco
.data.rel.ro:00010BD0 AC 0A 01 00                   DCD speaker_and_headphones
.data.rel.ro:00010BD4 9C 0A 01 00                   DCD communication_earpiece
.data.rel.ro:00010BD8 B4 0A 01 00                   DCD speaker_and_bt_sco
.data.rel.ro:00010BDC 70 DB 00 00                   off_10BDC DCD aEq1B1Volume    ; DATA XREF: sub_55A4+10↑o
.data.rel.ro:00010BDC                                                             ; sub_55A4+1A↑o
.data.rel.ro:00010BDC                                                             ; .text:off_55E0↑o
.data.rel.ro:00010BDC                                                             ; "EQ1 B1 Volume"
.data.rel.ro:00010BE0 7E DB 00 00                   DCD aEq1B2Volume              ; "EQ1 B2 Volume"
.data.rel.ro:00010BE4 8C DB 00 00                   DCD aEq1B3Volume              ; "EQ1 B3 Volume"
.data.rel.ro:00010BE8 9A DB 00 00                   DCD aEq1B4Volume              ; "EQ1 B4 Volume"
.data.rel.ro:00010BEC A8 DB 00 00                   DCD aEq1B5Volume              ; "EQ1 B5 Volume"
.data.rel.ro:00010BF0 B6 DB 00 00                   off_10BF0 DCD aEq2B1Volume    ; DATA XREF: sub_55A4+24↑o
.data.rel.ro:00010BF0                                                             ; sub_55A4+28↑o
.data.rel.ro:00010BF0                                                             ; .text:off_55E4↑o
.data.rel.ro:00010BF0                                                             ; "EQ2 B1 Volume"
.data.rel.ro:00010BF4 C4 DB 00 00                   DCD aEq2B2Volume              ; "EQ2 B2 Volume"
.data.rel.ro:00010BF8 D2 DB 00 00                   DCD aEq2B3Volume              ; "EQ2 B3 Volume"
.data.rel.ro:00010BFC E0 DB 00 00                   DCD aEq2B4Volume              ; "EQ2 B4 Volume"
.data.rel.ro:00010C00 EE DB 00 00                   DCD aEq2B5Volume              ; "EQ2 B5 Volume"
.data.rel.ro:00010C04 00                            unk_10C04 DCB    0            ; DATA XREF: sub_A8E4+4↑o
.data.rel.ro:00010C04                                                             ; sub_A8E4+8↑o
.data.rel.ro:00010C04                                                             ; .text:off_A920↑o
.data.rel.ro:00010C05 00                            DCB    0
.data.rel.ro:00010C06 00                            DCB    0
.data.rel.ro:00010C07 00                            DCB    0
.data.rel.ro:00010C08 00                            DCB    0
.data.rel.ro:00010C09 00                            DCB    0
.data.rel.ro:00010C0A 00                            DCB    0
.data.rel.ro:00010C0B 00                            DCB    0
.data.rel.ro:00010C0C 5D A7 00 00                   off_10C0C DCD nullsub_1+1
.data.rel.ro:00010C10 5D A7 00 00                   DCD nullsub_1+1
.data.rel.ro:00010C14 3F AA 00 00                   DCD sub_AA3E+1
.data.rel.ro:00010C18 61 AA 00 00                   DCD sub_AA60+1
.data.rel.ro:00010C1C ED AA 00 00                   DCD sub_AAEC+1
.data.rel.ro:00010C20 79 AB 00 00                   DCD sub_AB78+1
.data.rel.ro:00010C24 9D AB 00 00                   DCD sub_AB9C+1
.data.rel.ro:00010C28 41 AC 00 00                   DCD sub_AC40+1
.data.rel.ro:00010C2C 0D AD 00 00                   DCD sub_AD0C+1
.data.rel.ro:00010C30 5D AD 00 00                   DCD sub_AD5C+1
.data.rel.ro:00010C34 75 AD 00 00                   DCD sub_AD74+1
.data.rel.ro:00010C38 8B AD 00 00                   DCD sub_AD8A+1
.data.rel.ro:00010C3C 91 AD 00 00                   DCD sub_AD90+1
.data.rel.ro:00010C40 01 AE 00 00                   DCD sub_AE00+1
.data.rel.ro:00010C44 71 AE 00 00                   DCD loc_AE70+1
.data.rel.ro:00010C48 77 AE 00 00                   DCD sub_AE76+1
.data.rel.ro:00010C48                               ; .data.rel.ro ends
.data.rel.ro:00010C48
LOAD:00010C4C                               ; ELF Dynamic Information
LOAD:00010C4C                               ; ===========================================================================
LOAD:00010C4C
LOAD:00010C4C                               ; Segment type: Pure data
LOAD:00010C4C                               AREA LOAD, DATA, ALIGN=12
LOAD:00010C4C 03 00 00 00 10 0E 01 00       stru_10C4C Elf32_Dyn <3, <0x10E10>>
LOAD:00010C4C                                                             ; DATA XREF: LOAD:000000BC↑o
LOAD:00010C4C                                                             ; DT_PLTGOT
LOAD:00010C54 02 00 00 00 C8 03 00 00       Elf32_Dyn <2, <0x3C8>>        ; DT_PLTRELSZ
LOAD:00010C5C 17 00 00 00 6C 2B 00 00       Elf32_Dyn <0x17, <0x2B6C>>    ; DT_JMPREL
LOAD:00010C64 14 00 00 00 11 00 00 00       Elf32_Dyn <0x14, <0x11>>      ; DT_PLTREL
LOAD:00010C6C 11 00 00 00 4C 20 00 00       Elf32_Dyn <0x11, <0x204C>>    ; DT_REL
LOAD:00010C74 12 00 00 00 20 0B 00 00       Elf32_Dyn <0x12, <0xB20>>     ; DT_RELSZ
LOAD:00010C7C 13 00 00 00 08 00 00 00       Elf32_Dyn <0x13, <8>>         ; DT_RELENT
LOAD:00010C84 FA FF FF 6F 02 01 00 00       Elf32_Dyn <0x6FFFFFFA, <0x102>> ; DT_RELCOUNT
LOAD:00010C8C 06 00 00 00 A0 01 00 00       Elf32_Dyn <6, <0x1A0>>        ; DT_SYMTAB
LOAD:00010C94 0B 00 00 00 10 00 00 00       Elf32_Dyn <0xB, <0x10>>       ; DT_SYMENT
LOAD:00010C9C 05 00 00 00 00 0E 00 00       Elf32_Dyn <5, <0xE00>>        ; DT_STRTAB
LOAD:00010CA4 0A 00 00 00 69 0D 00 00       Elf32_Dyn <0xA, <0xD69>>      ; DT_STRSZ
LOAD:00010CAC F5 FE FF 6F 6C 1B 00 00       Elf32_Dyn <0x6FFFFEF5, <0x1B6C>> ; DT_GNU_HASH
LOAD:00010CB4 01 00 00 00 E5 0C 00 00       Elf32_Dyn <1, <0xCE5>>        ; DT_NEEDED liblog.so
LOAD:00010CBC 01 00 00 00 EF 0C 00 00       Elf32_Dyn <1, <0xCEF>>        ; DT_NEEDED libcutils.so
LOAD:00010CC4 01 00 00 00 FC 0C 00 00       Elf32_Dyn <1, <0xCFC>>        ; DT_NEEDED libtinyalsa.so
LOAD:00010CCC 01 00 00 00 0B 0D 00 00       Elf32_Dyn <1, <0xD0B>>        ; DT_NEEDED libaudioutils.so
LOAD:00010CD4 01 00 00 00 1C 0D 00 00       Elf32_Dyn <1, <0xD1C>>        ; DT_NEEDED libexpat.so
LOAD:00010CDC 01 00 00 00 28 0D 00 00       Elf32_Dyn <1, <0xD28>>        ; DT_NEEDED libhardware_legacy.so
LOAD:00010CE4 01 00 00 00 5C 00 00 00       Elf32_Dyn <1, <0x5C>>         ; DT_NEEDED libdl.so
LOAD:00010CEC 01 00 00 00 3E 0D 00 00       Elf32_Dyn <1, <0xD3E>>        ; DT_NEEDED libtfa9890.so
LOAD:00010CF4 01 00 00 00 4C 0D 00 00       Elf32_Dyn <1, <0xD4C>>        ; DT_NEEDED libsitril-audio.so
LOAD:00010CFC 01 00 00 00 5F 0D 00 00       Elf32_Dyn <1, <0xD5F>>        ; DT_NEEDED libc++.so
LOAD:00010D04 01 00 00 00 15 00 00 00       Elf32_Dyn <1, <0x15>>         ; DT_NEEDED libc.so
LOAD:00010D0C 01 00 00 00 05 04 00 00       Elf32_Dyn <1, <0x405>>        ; DT_NEEDED libm.so
LOAD:00010D14 0E 00 00 00 1D 00 00 00       Elf32_Dyn <0xE, <0x1D>>       ; DT_SONAME audio.primary.m86.so
LOAD:00010D1C 1A 00 00 00 68 09 01 00       Elf32_Dyn <0x1A, <0x10968>>   ; DT_FINI_ARRAY
LOAD:00010D24 1C 00 00 00 04 00 00 00       Elf32_Dyn <0x1C, <4>>         ; DT_FINI_ARRAYSZ
LOAD:00010D2C 1E 00 00 00 08 00 00 00       Elf32_Dyn <0x1E, <8>>         ; DT_FLAGS
LOAD:00010D34 FB FF FF 6F 01 00 00 00       Elf32_Dyn <0x6FFFFFFB, <1>>   ; DT_FLAGS_1
LOAD:00010D3C F0 FF FF 6F 34 1E 00 00       Elf32_Dyn <0x6FFFFFF0, <0x1E34>> ; DT_VERSYM
LOAD:00010D44 FC FF FF 6F C0 1F 00 00       Elf32_Dyn <0x6FFFFFFC, <0x1FC0>> ; DT_VERDEF
LOAD:00010D4C FD FF FF 6F 01 00 00 00       Elf32_Dyn <0x6FFFFFFD, <1>>   ; DT_VERDEFNUM
LOAD:00010D54 FE FF FF 6F DC 1F 00 00       Elf32_Dyn <0x6FFFFFFE, <0x1FDC>> ; DT_VERNEED
LOAD:00010D5C FF FF FF 6F 03 00 00 00       Elf32_Dyn <0x6FFFFFFF, <3>>   ; DT_VERNEEDNUM
LOAD:00010D64 00 00 00 00 00 00 00 00       Elf32_Dyn <0>                 ; DT_NULL
LOAD:00010D6C 00 00 00 00                   ALIGN 0x10
LOAD:00010D70 00                            DCB    0
LOAD:00010D71 00                            DCB    0
LOAD:00010D72 00                            DCB    0
LOAD:00010D73 00                            DCB    0
LOAD:00010D74 00                            DCB    0
LOAD:00010D75 00                            DCB    0
LOAD:00010D76 00                            DCB    0
LOAD:00010D77 00                            DCB    0
LOAD:00010D78 00                            DCB    0
LOAD:00010D79 00                            DCB    0
LOAD:00010D7A 00                            DCB    0
LOAD:00010D7B 00                            DCB    0
LOAD:00010D7C 00                            DCB    0
LOAD:00010D7D 00                            DCB    0
LOAD:00010D7E 00                            DCB    0
LOAD:00010D7F 00                            DCB    0
LOAD:00010D80 00                            DCB    0
LOAD:00010D81 00                            DCB    0
LOAD:00010D82 00                            DCB    0
LOAD:00010D83 00                            DCB    0
LOAD:00010D84 00                            DCB    0
LOAD:00010D85 00                            DCB    0
LOAD:00010D86 00                            DCB    0
LOAD:00010D87 00                            DCB    0
LOAD:00010D88 00                            DCB    0
LOAD:00010D89 00                            DCB    0
LOAD:00010D8A 00                            DCB    0
LOAD:00010D8B 00                            DCB    0
LOAD:00010D8C 00                            DCB    0
LOAD:00010D8D 00                            DCB    0
LOAD:00010D8E 00                            DCB    0
LOAD:00010D8F 00                            DCB    0
LOAD:00010D90 00                            DCB    0
LOAD:00010D91 00                            DCB    0
LOAD:00010D92 00                            DCB    0
LOAD:00010D93 00                            DCB    0
LOAD:00010D93                               ; LOAD ends
LOAD:00010D93
.got:00010D94                               ; ===========================================================================
.got:00010D94
.got:00010D94                               ; Segment type: Pure data
.got:00010D94                               AREA .got, DATA
.got:00010D94 50 17 01 00                   __stack_chk_guard_ptr DCD __stack_chk_guard
.got:00010D94                                                             ; DATA XREF: pcm_data_dump+C↑o
.got:00010D94                                                             ; pcm_data_dump+12↑o
.got:00010D94                                                             ; pcm_data_dump+18↑r
.got:00010D94                                                             ; pcm_data_dump:loc_36B8↑o
.got:00010D94                                                             ; pcm_data_dump+DE↑o
.got:00010D94                                                             ; pcm_data_dump+E0↑r
.got:00010D94                                                             ; .text:off_36D8↑o
.got:00010D94                                                             ; .text:off_36F8↑o
.got:00010D94                                                             ; wav_player_start+8↑o
.got:00010D94                                                             ; wav_player_start+10↑o
.got:00010D94                                                             ; wav_player_start+16↑r
.got:00010D94                                                             ; wav_player_start:loc_3FA8↑o
.got:00010D94                                                             ; wav_player_start+430↑o
.got:00010D94                                                             ; wav_player_start+432↑r
.got:00010D94                                                             ; .text:off_3FC0↑o ...
.got:00010D98 30 10 01 00                   pcm_config_in_ptr DCD pcm_config_in
.got:00010D98                                                             ; DATA XREF: get_input_source_id:loc_3884↑o
.got:00010D98                                                             ; get_input_source_id+8A↑o
.got:00010D98                                                             ; get_input_source_id+8C↑r
.got:00010D98                                                             ; get_input_source_id+AC↑o
.got:00010D98                                                             ; get_input_source_id+AE↑o
.got:00010D98                                                             ; get_input_source_id+B0↑r
.got:00010D98                                                             ; .text:off_38DC↑o
.got:00010D98                                                             ; .text:off_38EC↑o
.got:00010D98                                                             ; sub_4FD0+E↑o
.got:00010D98                                                             ; sub_4FD0+14↑o
.got:00010D98                                                             ; sub_4FD0+18↑r
.got:00010D98                                                             ; .text:off_5064↑o
.got:00010D98                                                             ; sub_52F4:loc_53EA↑o
.got:00010D98                                                             ; sub_52F4+FA↑o
.got:00010D98                                                             ; sub_52F4+FC↑r ...
.got:00010D9C D0 10 01 00                   pcm_config_amplifier_ptr DCD pcm_config_amplifier
.got:00010D9C                                                             ; DATA XREF: thread_refresh_audio_route+AA↑o
.got:00010D9C                                                             ; thread_refresh_audio_route+B0↑o
.got:00010D9C                                                             ; thread_refresh_audio_route+B2↑r
.got:00010D9C                                                             ; thread_refresh_audio_route+CE↑o
.got:00010D9C                                                             ; thread_refresh_audio_route+D6↑o
.got:00010D9C                                                             ; thread_refresh_audio_route+D8↑r
.got:00010D9C                                                             ; thread_refresh_audio_route+11C↑o
.got:00010D9C                                                             ; thread_refresh_audio_route+11E↑o
.got:00010D9C                                                             ; thread_refresh_audio_route+120↑r
.got:00010D9C                                                             ; .text:off_3AF8↑o
.got:00010D9C                                                             ; .text:off_3B08↑o
.got:00010D9C                                                             ; .text:off_3B1C↑o
.got:00010D9C                                                             ; sub_5730+3BE↑o
.got:00010D9C                                                             ; sub_5730+3C8↑o
.got:00010D9C                                                             ; sub_5730+3CA↑r ...
.got:00010DA0 B1 41 00 00                   adev_set_headset_volume_ptr DCD adev_set_headset_volume+1
.got:00010DA0                                                             ; DATA XREF: sub_4424+4C↑o
.got:00010DA0                                                             ; sub_4424+52↑o
.got:00010DA0                                                             ; sub_4424+56↑r
.got:00010DA0                                                             ; .text:off_4644↑o
.got:00010DA4 58 10 01 00                   pcm_config_voice_call_ptr DCD pcm_config_voice_call
.got:00010DA4                                                             ; DATA XREF: sub_482C+158↑o
.got:00010DA4                                                             ; sub_482C+160↑o
.got:00010DA4                                                             ; sub_482C+162↑r
.got:00010DA4                                                             ; sub_482C+186↑o
.got:00010DA4                                                             ; sub_482C+190↑o
.got:00010DA4                                                             ; sub_482C+192↑r
.got:00010DA4                                                             ; .text:off_4B04↑o
.got:00010DA4                                                             ; .text:off_4B14↑o
.got:00010DA4                                                             ; sub_5730+176↑o
.got:00010DA4                                                             ; sub_5730+17A↑o
.got:00010DA4                                                             ; sub_5730+17C↑r
.got:00010DA4                                                             ; .text:off_5F5C↑o
.got:00010DA4                                                             ; sub_7344+142↑o
.got:00010DA4                                                             ; sub_7344+14E↑o
.got:00010DA4                                                             ; sub_7344+150↑r ...
.got:00010DA8 08 10 01 00                   pcm_config_ptr DCD pcm_config ; DATA XREF: sub_5068+4C↑o
.got:00010DA8                                                             ; sub_5068+52↑o
.got:00010DA8                                                             ; sub_5068+54↑r
.got:00010DA8                                                             ; .text:off_5260↑o
.got:00010DA8                                                             ; sub_5730:loc_58B4↑o
.got:00010DA8                                                             ; sub_5730+190↑o
.got:00010DA8                                                             ; sub_5730+192↑r
.got:00010DA8                                                             ; sub_5730:loc_5958↑o
.got:00010DA8                                                             ; sub_5730+230↑o
.got:00010DA8                                                             ; sub_5730+232↑r
.got:00010DA8                                                             ; .text:off_5F58↑o
.got:00010DA8                                                             ; .text:off_5F74↑o
.got:00010DA8                                                             ; sub_7344:loc_73F0↑o
.got:00010DA8                                                             ; sub_7344+B6↑o
.got:00010DA8                                                             ; sub_7344+B8↑r ...
.got:00010DAC 80 10 01 00                   pcm_config_backend_ptr DCD pcm_config_backend
.got:00010DAC                                                             ; DATA XREF: sub_5730:loc_5882↑o
.got:00010DAC                                                             ; sub_5730+15C↑o
.got:00010DAC                                                             ; sub_5730+15E↑r
.got:00010DAC                                                             ; .text:off_5F54↑o
.got:00010DB0 A8 10 01 00                   pcm_config_sco_ptr DCD pcm_config_sco
.got:00010DB0                                                             ; DATA XREF: sub_5730+49A↑o
.got:00010DB0                                                             ; sub_5730+4A4↑o
.got:00010DB0                                                             ; sub_5730+4A6↑r
.got:00010DB0                                                             ; sub_5730+4CE↑o
.got:00010DB0                                                             ; sub_5730+4DA↑o
.got:00010DB0                                                             ; sub_5730+4DC↑r
.got:00010DB0                                                             ; .text:off_5FEC↑o
.got:00010DB0                                                             ; .text:off_5FFC↑o
.got:00010DB4 64 11 01 00                   test_earphones_ptr DCD test_earphones
.got:00010DB4                                                             ; DATA XREF: sub_66B0:loc_67C2↑o
.got:00010DB4                                                             ; sub_66B0+11A↑o
.got:00010DB4                                                             ; sub_66B0:loc_6812↑r
.got:00010DB4                                                             ; .text:off_6BDC↑o
.got:00010DB8 0C 12 01 00                   test_headphone_ptr DCD test_headphone
.got:00010DB8                                                             ; DATA XREF: sub_66B0:loc_67CE↑o
.got:00010DB8                                                             ; sub_66B0+126↑o
.got:00010DB8                                                             ; sub_66B0:loc_6812↑r
.got:00010DB8                                                             ; .text:off_6BE4↑o
.got:00010DBC 90 12 01 00                   test_speaker_ptr DCD test_speaker
.got:00010DBC                                                             ; DATA XREF: sub_66B0:loc_67DA↑o
.got:00010DBC                                                             ; sub_66B0+138↑o
.got:00010DBC                                                             ; sub_66B0+13A↑r
.got:00010DBC                                                             ; .text:off_6BEC↑o
.got:00010DC0 50 13 01 00                   test_pri_mic_ptr DCD test_pri_mic
.got:00010DC0                                                             ; DATA XREF: sub_66B0:loc_67F0↑o
.got:00010DC0                                                             ; sub_66B0+148↑o
.got:00010DC0                                                             ; sub_66B0:loc_6812↑r
.got:00010DC0                                                             ; .text:off_6BF4↑o
.got:00010DC4 B0 13 01 00                   test_sec_mic_ptr DCD test_sec_mic
.got:00010DC4                                                             ; DATA XREF: sub_66B0:loc_67FC↑o
.got:00010DC4                                                             ; sub_66B0+154↑o
.got:00010DC4                                                             ; sub_66B0:loc_6812↑r
.got:00010DC4                                                             ; .text:off_6BFC↑o
.got:00010DC8 40 14 01 00                   test_ter_mic_ptr DCD test_ter_mic
.got:00010DC8                                                             ; DATA XREF: sub_66B0:loc_6808↑o
.got:00010DC8                                                             ; sub_66B0+160↑o
.got:00010DC8                                                             ; sub_66B0:loc_6812↑r
.got:00010DC8                                                             ; .text:off_6C04↑o
.got:00010DCC F8 10 01 00                   default_settings_ptr DCD default_settings
.got:00010DCC                                                             ; DATA XREF: sub_66B0+180↑o
.got:00010DCC                                                             ; sub_66B0+188↑o
.got:00010DCC                                                             ; sub_66B0+18A↑r
.got:00010DCC                                                             ; sub_66B0+4C0↑o
.got:00010DCC                                                             ; sub_66B0+4C6↑o
.got:00010DCC                                                             ; sub_66B0+4C8↑r
.got:00010DCC                                                             ; .text:off_6C34↑o
.got:00010DCC                                                             ; .text:off_6C54↑o
.got:00010DD0 24 15 01 00                   test_modem_loopback_earphone_ptr DCD test_modem_loopback_earphone
.got:00010DD0                                                             ; DATA XREF: sub_66B0:loc_6812↑r
.got:00010DD0                                                             ; sub_66B0+4F8↑o
.got:00010DD0                                                             ; sub_66B0+4FE↑o
.got:00010DD0                                                             ; .text:off_6C44↑o
.got:00010DD4 A8 15 01 00                   test_modem_loopback_headphone_ptr DCD test_modem_loopback_headphone
.got:00010DD4                                                             ; DATA XREF: sub_66B0:loc_6812↑r
.got:00010DD4                                                             ; sub_66B0+490↑o
.got:00010DD4                                                             ; sub_66B0+496↑o
.got:00010DD4                                                             ; .text:off_6C50↑o
.got:00010DD8 99 41 00 00                   thread_test_hifi_ptr DCD thread_test_hifi+1
.got:00010DD8                                                             ; DATA XREF: sub_66B0+1B0↑o
.got:00010DD8                                                             ; sub_66B0+1B4↑o
.got:00010DD8                                                             ; sub_66B0+1B6↑r
.got:00010DD8                                                             ; .text:off_6CB4↑o
.got:00010DDC 6C 09 01 00                   out_channels_name_to_enum_table_ptr DCD out_channels_name_to_enum_table
.got:00010DDC                                                             ; DATA XREF: sub_723C+44↑o
.got:00010DDC                                                             ; sub_723C+4C↑o
.got:00010DDC                                                             ; sub_723C+4E↑r
.got:00010DDC                                                             ; .text:off_7314↑o
.got:00010DE0 6D 99 00 00                   read_on_thread_ptr DCD read_on_thread+1
.got:00010DE0                                                             ; DATA XREF: cvq_start_decode+12↑o
.got:00010DE0                                                             ; cvq_start_decode+18↑o
.got:00010DE0                                                             ; cvq_start_decode+1A↑r
.got:00010DE0                                                             ; .text:off_9C18↑o
.got:00010DE4 65 9A 00 00                   read_on_raw_data_thread_ptr DCD read_on_raw_data_thread+1
.got:00010DE4                                                             ; DATA XREF: cvq_start+12↑o
.got:00010DE4                                                             ; cvq_start+18↑o
.got:00010DE4                                                             ; cvq_start+1A↑r
.got:00010DE4                                                             ; .text:off_9C68↑o
.got:00010DE8 D9 98 00 00                   cvq_read_ptr DCD cvq_read+1   ; DATA XREF: cvq_init+2↑o
.got:00010DE8                                                             ; cvq_init+E↑o
.got:00010DE8                                                             ; cvq_init+14↑r
.got:00010DE8                                                             ; .text:off_9FC8↑o
.got:00010DEC 01 9D 00 00                   pcm_read_uart_char_dev_ptr DCD pcm_read_uart_char_dev+1
.got:00010DEC                                                             ; DATA XREF: cvq_init+30↑o
.got:00010DEC                                                             ; cvq_init+42↑o
.got:00010DEC                                                             ; cvq_init+50↑r
.got:00010DEC                                                             ; .text:off_9FCC↑o
.got:00010DF0 C5 98 00 00                   readdirect_ptr DCD readdirect+1
.got:00010DF0                                                             ; DATA XREF: cvq_init+22↑o
.got:00010DF0                                                             ; cvq_init+2E↑o
.got:00010DF0                                                             ; cvq_init+40↑r
.got:00010DF0                                                             ; .text:off_9FD0↑o
.got:00010DF4 25 9C 00 00                   cvq_start_ptr DCD cvq_start+1 ; DATA XREF: cvq_init+18↑o
.got:00010DF4                                                             ; cvq_init+24↑o
.got:00010DF4                                                             ; cvq_init+26↑r
.got:00010DF4                                                             ; .text:off_9FD4↑o
.got:00010DF8 49 98 00 00                   cvq_close_ptr DCD cvq_close+1 ; DATA XREF: cvq_init+10↑o
.got:00010DF8                                                             ; cvq_init+1A↑o
.got:00010DF8                                                             ; cvq_init+2C↑r
.got:00010DF8                                                             ; .text:off_9FD8↑o
.got:00010DFC 29 97 00 00                   cvq_open_ptr DCD cvq_open+1   ; DATA XREF: cvq_init+8↑o
.got:00010DFC                                                             ; cvq_init+12↑o
.got:00010DFC                                                             ; cvq_init+1C↑r
.got:00010DFC                                                             ; .text:off_9FDC↑o
.got:00010E00 88 18 01 00                   stderr_ptr DCD stderr         ; DATA XREF: sub_A794+6↑o
.got:00010E00                                                             ; sub_A794+A↑o
.got:00010E00                                                             ; sub_A794+C↑r
.got:00010E00                                                             ; .text:off_A7B8↑o
.got:00010E00                                                             ; sub_AE80+6↑o
.got:00010E00                                                             ; sub_AE80+C↑o
.got:00010E00                                                             ; sub_AE80+E↑r
.got:00010E00                                                             ; .text:off_AEA4↑o
.got:00010E04 BD A5 00 00                   off_10E04 DCD sub_A5BC+1      ; DATA XREF: sub_AF58:loc_B022↑o
.got:00010E04                                                             ; sub_AF58+CC↑o
.got:00010E04                                                             ; sub_AF58+CE↑r
.got:00010E04                                                             ; .text:off_B0D4↑o
.got:00010E08 B5 A5 00 00                   off_10E08 DCD sub_A5B4+1      ; DATA XREF: sub_AF58:loc_B02E↑o
.got:00010E08                                                             ; sub_AF58+D8↑o
.got:00010E08                                                             ; sub_AF58+DA↑r
.got:00010E08                                                             ; .text:off_B0D8↑o
.got:00010E0C 51 A5 00 00                   off_10E0C DCD sub_A550+1      ; DATA XREF: sub_AF58+B0↑o
.got:00010E0C                                                             ; sub_AF58+C0↑o
.got:00010E0C                                                             ; sub_AF58+C2↑r
.got:00010E0C                                                             ; .text:off_B0E8↑o
.got:00010E10 00 00 00 00                   _GLOBAL_OFFSET_TABLE_ DCD 0   ; DATA XREF: sub_2F34+4↑o
.got:00010E10                                                             ; sub_2F34+8↑o
.got:00010E10                                                             ; .plt:off_2F44↑o
.got:00010E14 00 00 00 00                   DCD 0
.got:00010E18 00 00 00 00                   off_10E18 DCD dword_0         ; DATA XREF: sub_2F34+C↑r
.got:00010E1C E4 16 01 00                   __cxa_finalize_ptr DCD __imp___cxa_finalize
.got:00010E1C                                                             ; DATA XREF: __cxa_finalize+8↑r
.got:00010E20 E8 16 01 00                   __cxa_atexit_ptr DCD __imp___cxa_atexit
.got:00010E20                                                             ; DATA XREF: __cxa_atexit+8↑r
.got:00010E24 EC 16 01 00                   __register_atfork_ptr DCD __imp___register_atfork
.got:00010E24                                                             ; DATA XREF: __register_atfork+8↑r
.got:00010E28 E0 17 01 00                   property_get_ptr DCD __imp_property_get
.got:00010E28                                                             ; DATA XREF: property_get+8↑r
.got:00010E2C 5C 17 01 00                   atoi_ptr DCD __imp_atoi       ; DATA XREF: atoi+8↑r
.got:00010E30 58 17 01 00                   access_ptr DCD __imp_access   ; DATA XREF: access+8↑r
.got:00010E34 9C 17 01 00                   mkdir_ptr DCD __imp_mkdir     ; DATA XREF: mkdir+8↑r
.got:00010E38 70 17 01 00                   fopen_ptr DCD __imp_fopen     ; DATA XREF: fopen+8↑r
.got:00010E3C 3C 17 01 00                   __fwrite_chk_ptr DCD __imp___fwrite_chk
.got:00010E3C                                                             ; DATA XREF: __fwrite_chk+8↑r
.got:00010E40 6C 17 01 00                   fclose_ptr DCD __imp_fclose   ; DATA XREF: fclose+8↑r
.got:00010E44 34 17 01 00                   __errno_ptr DCD __imp___errno ; DATA XREF: __errno+8↑r
.got:00010E48 20 18 01 00                   strerror_ptr DCD __imp_strerror
.got:00010E48                                                             ; DATA XREF: strerror+8↑r
.got:00010E4C 30 17 01 00                   __android_log_print_ptr DCD __imp___android_log_print
.got:00010E4C                                                             ; DATA XREF: __android_log_print+8↑r
.got:00010E50 4C 17 01 00                   __stack_chk_fail_ptr DCD __imp___stack_chk_fail
.got:00010E50                                                             ; DATA XREF: __stack_chk_fail+8↑r
.got:00010E54 98 17 01 00                   mixer_open_ptr DCD __imp_mixer_open
.got:00010E54                                                             ; DATA XREF: mixer_open+8↑r
.got:00010E58 94 17 01 00                   mixer_get_ctl_by_name_ptr DCD __imp_mixer_get_ctl_by_name
.got:00010E58                                                             ; DATA XREF: mixer_get_ctl_by_name+8↑r
.got:00010E5C 84 17 01 00                   mixer_close_ptr DCD __imp_mixer_close
.got:00010E5C                                                             ; DATA XREF: mixer_close+8↑r
.got:00010E60 2C 18 01 00                   usleep_ptr DCD __imp_usleep   ; DATA XREF: usleep+8↑r
.got:00010E64 F0 17 01 00                   pthread_mutex_lock_ptr DCD __imp_pthread_mutex_lock
.got:00010E64                                                             ; DATA XREF: pthread_mutex_lock+8↑r
.got:00010E68 BB 95 00 00                   audio_route_free_ptr DCD audio_route_free+1
.got:00010E68                                                             ; DATA XREF: j_audio_route_free+8↑r
.got:00010E6C 91 8E 00 00                   audio_route_init_ptr DCD audio_route_init+1
.got:00010E6C                                                             ; DATA XREF: j_audio_route_init+8↑r
.got:00010E70 F4 17 01 00                   pthread_mutex_unlock_ptr DCD __imp_pthread_mutex_unlock
.got:00010E70                                                             ; DATA XREF: pthread_mutex_unlock+8↑r
.got:00010E74 BC 17 01 00                   pcm_open_ptr DCD __imp_pcm_open
.got:00010E74                                                             ; DATA XREF: pcm_open+8↑r
.got:00010E78 B8 17 01 00                   pcm_is_ready_ptr DCD __imp_pcm_is_ready
.got:00010E78                                                             ; DATA XREF: pcm_is_ready+8↑r
.got:00010E7C D0 17 01 00                   pcm_prepare_ptr DCD __imp_pcm_prepare
.got:00010E7C                                                             ; DATA XREF: pcm_prepare+8↑r
.got:00010E80 25 8D 00 00                   audio_route_reset_ptr DCD audio_route_reset+1
.got:00010E80                                                             ; DATA XREF: j_audio_route_reset+8↑r
.got:00010E84 55 8D 00 00                   audio_route_apply_path_ptr DCD audio_route_apply_path+1
.got:00010E84                                                             ; DATA XREF: j_audio_route_apply_path+8↑r
.got:00010E88 9F 8C 00 00                   audio_route_update_mixer_ptr DCD audio_route_update_mixer+1
.got:00010E88                                                             ; DATA XREF: j_audio_route_update_mixer+8↑r
.got:00010E8C 0C 17 01 00                   NxpTfa98xx_StartUp_ptr DCD __imp_NxpTfa98xx_StartUp
.got:00010E8C                                                             ; DATA XREF: NxpTfa98xx_StartUp+8↑r
.got:00010E90 B0 17 01 00                   pcm_get_error_ptr DCD __imp_pcm_get_error
.got:00010E90                                                             ; DATA XREF: pcm_get_error+8↑r
.got:00010E94 A4 17 01 00                   pcm_close_ptr DCD __imp_pcm_close
.got:00010E94                                                             ; DATA XREF: pcm_close+8↑r
.got:00010E98 E4 17 01 00                   property_set_ptr DCD __imp_property_set
.got:00010E98                                                             ; DATA XREF: property_set+8↑r
.got:00010E9C 38 17 01 00                   __fread_chk_ptr DCD __imp___fread_chk
.got:00010E9C                                                             ; DATA XREF: __fread_chk+8↑r
.got:00010EA0 78 17 01 00                   fseek_ptr DCD __imp_fseek     ; DATA XREF: fseek+8↑r
.got:00010EA4 C4 17 01 00                   pcm_params_get_ptr DCD __imp_pcm_params_get
.got:00010EA4                                                             ; DATA XREF: pcm_params_get+8↑r
.got:00010EA8 C0 17 01 00                   pcm_params_free_ptr DCD __imp_pcm_params_free
.got:00010EA8                                                             ; DATA XREF: pcm_params_free+8↑r
.got:00010EAC AC 17 01 00                   pcm_get_buffer_size_ptr DCD __imp_pcm_get_buffer_size
.got:00010EAC                                                             ; DATA XREF: pcm_get_buffer_size+8↑r
.got:00010EB0 A8 17 01 00                   pcm_frames_to_bytes_ptr DCD __imp_pcm_frames_to_bytes
.got:00010EB0                                                             ; DATA XREF: pcm_frames_to_bytes+8↑r
.got:00010EB4 80 17 01 00                   malloc_ptr DCD __imp_malloc   ; DATA XREF: malloc+8↑r
.got:00010EB8 FC 17 01 00                   signal_ptr DCD __imp_signal   ; DATA XREF: signal+8↑r
.got:00010EBC 74 17 01 00                   free_ptr DCD __imp_free       ; DATA XREF: free+8↑r
.got:00010EC0 DC 17 01 00                   pcm_write_ptr DCD __imp_pcm_write
.got:00010EC0                                                             ; DATA XREF: pcm_write+8↑r
.got:00010EC4 00 17 01 00                   NxpTfa98xx_ReCalibrate_ptr DCD __imp_NxpTfa98xx_ReCalibrate
.got:00010EC4                                                             ; DATA XREF: NxpTfa98xx_ReCalibrate+8↑r
.got:00010EC8 7D 3B 00 00                   wav_player_start_ptr DCD wav_player_start+1
.got:00010EC8                                                             ; DATA XREF: j_wav_player_start+8↑r
.got:00010ECC 44 17 01 00                   __snprintf_chk_ptr DCD __imp___snprintf_chk
.got:00010ECC                                                             ; DATA XREF: __snprintf_chk+8↑r
.got:00010ED0 28 18 01 00                   strncmp_ptr DCD __imp_strncmp ; DATA XREF: strncmp+8↑r
.got:00010ED4 88 17 01 00                   mixer_ctl_get_num_values_ptr DCD __imp_mixer_ctl_get_num_values
.got:00010ED4                                                             ; DATA XREF: mixer_ctl_get_num_values+8↑r
.got:00010ED8 90 17 01 00                   mixer_ctl_set_value_ptr DCD __imp_mixer_ctl_set_value
.got:00010ED8                                                             ; DATA XREF: mixer_ctl_set_value+8↑r
.got:00010EDC CC 17 01 00                   pcm_params_get_min_ptr DCD __imp_pcm_params_get_min
.got:00010EDC                                                             ; DATA XREF: pcm_params_get_min+8↑r
.got:00010EE0 C8 17 01 00                   pcm_params_get_max_ptr DCD __imp_pcm_params_get_max
.got:00010EE0                                                             ; DATA XREF: pcm_params_get_max+8↑r
.got:00010EE4 18 18 01 00                   strcmp_ptr DCD __imp_strcmp   ; DATA XREF: strcmp+8↑r
.got:00010EE8 60 17 01 00                   calloc_ptr DCD __imp_calloc   ; DATA XREF: calloc+8↑r
.got:00010EEC 14 17 01 00                   Open_ptr DCD __imp_Open       ; DATA XREF: Open+8↑r
.got:00010EF0 09 39 00 00                   thread_refresh_audio_route_ptr DCD thread_refresh_audio_route+1
.got:00010EF0                                                             ; DATA XREF: j_thread_refresh_audio_route+8↑r
.got:00010EF4 10 17 01 00                   NxpTfa98xx_Stop_ptr DCD __imp_NxpTfa98xx_Stop
.got:00010EF4                                                             ; DATA XREF: NxpTfa98xx_Stop+8↑r
.got:00010EF8 D8 17 01 00                   pcm_stop_ptr DCD __imp_pcm_stop
.got:00010EF8                                                             ; DATA XREF: pcm_stop+8↑r
.got:00010EFC 18 17 01 00                   SetAudioClock_ptr DCD __imp_SetAudioClock
.got:00010EFC                                                             ; DATA XREF: SetAudioClock+8↑r
.got:00010F00 08 18 01 00                   str_parms_create_str_ptr DCD __imp_str_parms_create_str
.got:00010F00                                                             ; DATA XREF: str_parms_create_str+8↑r
.got:00010F04 10 18 01 00                   str_parms_get_str_ptr DCD __imp_str_parms_get_str
.got:00010F04                                                             ; DATA XREF: str_parms_get_str+8↑r
.got:00010F08 0C 18 01 00                   str_parms_destroy_ptr DCD __imp_str_parms_destroy
.got:00010F08                                                             ; DATA XREF: str_parms_destroy+8↑r
.got:00010F0C 14 18 01 00                   str_parms_to_str_ptr DCD __imp_str_parms_to_str
.got:00010F0C                                                             ; DATA XREF: str_parms_to_str+8↑r
.got:00010F10 1C 18 01 00                   strdup_ptr DCD __imp_strdup   ; DATA XREF: strdup+8↑r
.got:00010F14 F4 16 01 00                   NxpTfa98xx_GetSpeakerImpedance_ptr DCD __imp_NxpTfa98xx_GetSpeakerImpedance
.got:00010F14                                                             ; DATA XREF: NxpTfa98xx_GetSpeakerImpedance+8↑r
.got:00010F18 48 17 01 00                   __sprintf_chk_ptr DCD __imp___sprintf_chk
.got:00010F18                                                             ; DATA XREF: __sprintf_chk+8↑r
.got:00010F1C 25 9F 00 00                   cvq_init_ptr DCD cvq_init+1   ; DATA XREF: j_cvq_init+8↑r
.got:00010F20 20 17 01 00                   SetAudioVolume_ptr DCD __imp_SetAudioVolume
.got:00010F20                                                             ; DATA XREF: SetAudioVolume+8↑r
.got:00010F24 FD 36 00 00                   get_output_device_id_ptr DCD get_output_device_id+1
.got:00010F24                                                             ; DATA XREF: j_get_output_device_id+8↑r
.got:00010F28 01 38 00 00                   get_input_source_id_ptr DCD get_input_source_id+1
.got:00010F28                                                             ; DATA XREF: j_get_input_source_id+8↑r
.got:00010F2C 28 17 01 00                   __aeabi_memclr8_ptr DCD __imp___aeabi_memclr8
.got:00010F2C                                                             ; DATA XREF: __aeabi_memclr8+8↑r
.got:00010F30 08 17 01 00                   NxpTfa98xx_SetMute_ptr DCD __imp_NxpTfa98xx_SetMute
.got:00010F30                                                             ; DATA XREF: NxpTfa98xx_SetMute+8↑r
.got:00010F34 FC 16 01 00                   NxpTfa98xx_PowerOn_ptr DCD __imp_NxpTfa98xx_PowerOn
.got:00010F34                                                             ; DATA XREF: NxpTfa98xx_PowerOn+8↑r
.got:00010F38 EC 17 01 00                   pthread_join_ptr DCD __imp_pthread_join
.got:00010F38                                                             ; DATA XREF: pthread_join+8↑r
.got:00010F3C F8 17 01 00                   release_resampler_ptr DCD __imp_release_resampler
.got:00010F3C                                                             ; DATA XREF: release_resampler+8↑r
.got:00010F40 F8 16 01 00                   NxpTfa98xx_PowerOff_ptr DCD __imp_NxpTfa98xx_PowerOff
.got:00010F40                                                             ; DATA XREF: NxpTfa98xx_PowerOff+8↑r
.got:00010F44 A0 17 01 00                   open_ptr DCD __imp_open       ; DATA XREF: open+8↑r
.got:00010F48 40 17 01 00                   __read_chk_ptr DCD __imp___read_chk
.got:00010F48                                                             ; DATA XREF: __read_chk+8↑r
.got:00010F4C 64 17 01 00                   close_ptr DCD __imp_close     ; DATA XREF: close+8↑r
.got:00010F50 7C 17 01 00                   log10_ptr DCD __imp_log10     ; DATA XREF: log10+8↑r
.got:00010F54 89 40 00 00                   is_headphone_on_ptr DCD is_headphone_on+1
.got:00010F54                                                             ; DATA XREF: j_is_headphone_on+8↑r
.got:00010F58 E8 17 01 00                   pthread_create_ptr DCD __imp_pthread_create
.got:00010F58                                                             ; DATA XREF: pthread_create+8↑r
.got:00010F5C F9 40 00 00                   amplifier_calibrate_ptr DCD amplifier_calibrate+1
.got:00010F5C                                                             ; DATA XREF: j_amplifier_calibrate+8↑r
.got:00010F60 1C 17 01 00                   SetAudioLoopback_ptr DCD __imp_SetAudioLoopback
.got:00010F60                                                             ; DATA XREF: SetAudioLoopback+8↑r
.got:00010F64 8C 17 01 00                   mixer_ctl_set_enum_by_string_ptr DCD __imp_mixer_ctl_set_enum_by_string
.got:00010F64                                                             ; DATA XREF: mixer_ctl_set_enum_by_string+8↑r
.got:00010F68 04 18 01 00                   str_parms_create_ptr DCD __imp_str_parms_create
.got:00010F68                                                             ; DATA XREF: str_parms_create+8↑r
.got:00010F6C 24 18 01 00                   strlen_ptr DCD __imp_strlen   ; DATA XREF: strlen+8↑r
.got:00010F70 54 17 01 00                   __strcat_chk_ptr DCD __imp___strcat_chk
.got:00010F70                                                             ; DATA XREF: __strcat_chk+8↑r
.got:00010F74 00 18 01 00                   str_parms_add_str_ptr DCD __imp_str_parms_add_str
.got:00010F74                                                             ; DATA XREF: str_parms_add_str+8↑r
.got:00010F78 24 17 01 00                   __aeabi_memclr_ptr DCD __imp___aeabi_memclr
.got:00010F78                                                             ; DATA XREF: __aeabi_memclr+8↑r
.got:00010F7C 68 17 01 00                   create_resampler_ptr DCD __imp_create_resampler
.got:00010F7C                                                             ; DATA XREF: create_resampler+8↑r
.got:00010F80 E1 35 00 00                   pcm_data_dump_ptr DCD pcm_data_dump+1
.got:00010F80                                                             ; DATA XREF: j_pcm_data_dump+8↑r
.got:00010F84 B4 17 01 00                   pcm_get_htimestamp_ptr DCD __imp_pcm_get_htimestamp
.got:00010F84                                                             ; DATA XREF: pcm_get_htimestamp+8↑r
.got:00010F88 D4 17 01 00                   pcm_read_ptr DCD __imp_pcm_read
.got:00010F88                                                             ; DATA XREF: pcm_read+8↑r
.got:00010F8C 2C 17 01 00                   __aeabi_memcpy_ptr DCD __imp___aeabi_memcpy
.got:00010F8C                                                             ; DATA XREF: __aeabi_memcpy+8↑r
.got:00010F90 64 18 01 00                   mixer_ctl_set_array_ptr DCD __imp_mixer_ctl_set_array
.got:00010F90                                                             ; DATA XREF: mixer_ctl_set_array+8↑r
.got:00010F94 48 18 01 00                   __aeabi_memcpy4_ptr DCD __imp___aeabi_memcpy4
.got:00010F94                                                             ; DATA XREF: __aeabi_memcpy4+8↑r
.got:00010F98 6C 18 01 00                   mixer_get_num_ctls_ptr DCD __imp_mixer_get_num_ctls
.got:00010F98                                                             ; DATA XREF: mixer_get_num_ctls+8↑r
.got:00010F9C 68 18 01 00                   mixer_get_ctl_ptr DCD __imp_mixer_get_ctl
.got:00010F9C                                                             ; DATA XREF: mixer_get_ctl+8↑r
.got:00010FA0 5C 18 01 00                   mixer_ctl_get_type_ptr DCD __imp_mixer_ctl_get_type
.got:00010FA0                                                             ; DATA XREF: mixer_ctl_get_type+8↑r
.got:00010FA4 60 18 01 00                   mixer_ctl_get_value_ptr DCD __imp_mixer_ctl_get_value
.got:00010FA4                                                             ; DATA XREF: mixer_ctl_get_value+8↑r
.got:00010FA8 4C 18 01 00                   mixer_ctl_get_array_ptr DCD __imp_mixer_ctl_get_array
.got:00010FA8                                                             ; DATA XREF: mixer_ctl_get_array+8↑r
.got:00010FAC 38 18 01 00                   XML_ParserCreate_ptr DCD __imp_XML_ParserCreate
.got:00010FAC                                                             ; DATA XREF: XML_ParserCreate+8↑r
.got:00010FB0 44 18 01 00                   XML_SetUserData_ptr DCD __imp_XML_SetUserData
.got:00010FB0                                                             ; DATA XREF: XML_SetUserData+8↑r
.got:00010FB4 40 18 01 00                   XML_SetElementHandler_ptr DCD __imp_XML_SetElementHandler
.got:00010FB4                                                             ; DATA XREF: XML_SetElementHandler+8↑r
.got:00010FB8 30 18 01 00                   XML_GetBuffer_ptr DCD __imp_XML_GetBuffer
.got:00010FB8                                                             ; DATA XREF: XML_GetBuffer+8↑r
.got:00010FBC 34 18 01 00                   XML_ParseBuffer_ptr DCD __imp_XML_ParseBuffer
.got:00010FBC                                                             ; DATA XREF: XML_ParseBuffer+8↑r
.got:00010FC0 3C 18 01 00                   XML_ParserFree_ptr DCD __imp_XML_ParserFree
.got:00010FC0                                                             ; DATA XREF: XML_ParserFree+8↑r
.got:00010FC4 58 18 01 00                   mixer_ctl_get_num_enums_ptr DCD __imp_mixer_ctl_get_num_enums
.got:00010FC4                                                             ; DATA XREF: mixer_ctl_get_num_enums+8↑r
.got:00010FC8 50 18 01 00                   mixer_ctl_get_enum_string_ptr DCD __imp_mixer_ctl_get_enum_string
.got:00010FC8                                                             ; DATA XREF: mixer_ctl_get_enum_string+8↑r
.got:00010FCC 70 18 01 00                   realloc_ptr DCD __imp_realloc ; DATA XREF: realloc+8↑r
.got:00010FD0 54 18 01 00                   mixer_ctl_get_name_ptr DCD __imp_mixer_ctl_get_name
.got:00010FD0                                                             ; DATA XREF: mixer_ctl_get_name+8↑r
.got:00010FD4 74 18 01 00                   printf_ptr DCD __imp_printf   ; DATA XREF: printf+8↑r
.got:00010FD8 78 18 01 00                   puts_ptr DCD __imp_puts       ; DATA XREF: puts+8↑r
.got:00010FDC 7C 18 01 00                   __aeabi_memcpy8_ptr DCD __imp___aeabi_memcpy8
.got:00010FDC                                                             ; DATA XREF: __aeabi_memcpy8+8↑r
.got:00010FE0 75 96 00 00                   set_value_ptr DCD set_value+1 ; DATA XREF: j_set_value+8↑r
.got:00010FE4 51 9B 00 00                   uart_dev_read_wrapper_ptr DCD uart_dev_read_wrapper+1
.got:00010FE4                                                             ; DATA XREF: j_uart_dev_read_wrapper+8↑r
.got:00010FE8 D5 9B 00 00                   cvq_start_decode_ptr DCD cvq_start_decode+1
.got:00010FE8                                                             ; DATA XREF: j_cvq_start_decode+8↑r
.got:00010FEC 75 9C 00 00                   uart_read_wrapper_ptr DCD uart_read_wrapper+1
.got:00010FEC                                                             ; DATA XREF: j_uart_read_wrapper+8↑r
.got:00010FF0 80 18 01 00                   abort_ptr DCD __imp_abort     ; DATA XREF: abort+8↑r
.got:00010FF4 84 18 01 00                   fprintf_ptr DCD __imp_fprintf ; DATA XREF: fprintf+8↑r
.got:00010FF8 F0 16 01 00                   dladdr_ptr DCD __imp_dladdr   ; DATA XREF: dladdr+8↑r
.got:00010FFC 04 17 01 00                   __gnu_Unwind_Find_exidx_ptr DCD __imp___gnu_Unwind_Find_exidx
.got:00010FFC                                                             ; DATA XREF: __gnu_Unwind_Find_exidx+8↑r
.got:00010FFC                               ; .got ends
.got:00010FFC
.data:00011000                               ; ===========================================================================
.data:00011000
.data:00011000                               ; Segment type: Pure data
.data:00011000                               AREA .data, DATA, ALIGN=3
.data:00011000 00 10 01 00                   off_11000 DCD off_11000       ; DATA XREF: sub_3500+8↑o
.data:00011000                                                             ; sub_3500+C↑o
.data:00011000                                                             ; .text:off_351C↑o
.data:00011000                                                             ; sub_354C+20↑o
.data:00011000                                                             ; sub_354C+24↑o
.data:00011000                                                             ; .text:off_3594↑o
.data:00011000                                                             ; sub_3598+24↑o
.data:00011000                                                             ; sub_3598+28↑o
.data:00011000                                                             ; .text:off_35DC↑o
.data:00011000                                                             ; .data:off_11000↓o
.data:00011004 00 00 00 00                   ALIGN 8
.data:00011008                               EXPORT pcm_config
.data:00011008 02                            pcm_config DCB    2           ; DATA XREF: LOAD:00000D40↑o
.data:00011008                                                             ; sub_5068+54↑o
.data:00011008                                                             ; sub_5068+56↑o
.data:00011008                                                             ; sub_5730+192↑o
.data:00011008                                                             ; sub_5730+232↑o
.data:00011008                                                             ; sub_7344+B8↑o
.data:00011008                                                             ; sub_7344+386↑o
.data:00011008                                                             ; sub_7344+3A4↑o
.data:00011008                                                             ; sub_7344+4B2↑o
.data:00011008                                                             ; sub_7344+4CE↑o
.data:00011008                                                             ; sub_7344+620↑o
.data:00011008                                                             ; sub_7344+6BA↑o
.data:00011008                                                             ; .got:pcm_config_ptr↑o
.data:00011009 00                            DCB    0
.data:0001100A 00                            DCB    0
.data:0001100B 00                            DCB    0
.data:0001100C 80 BB 00 00                   off_1100C DCD aSVoiceCallWbDB+0x18
.data:0001100C                                                             ; DATA XREF: sub_5730+198↑r
.data:0001100C                                                             ; "bluetooth_nrec=%d"
.data:00011010 00 10 00 00                   off_11010 DCD aStrcatChk+8    ; "_chk"
.data:00011014 02                            unk_11014 DCB    2
.data:00011015 00                            DCB    0
.data:00011016 00                            DCB    0
.data:00011017 00                            DCB    0
.data:00011018 00                            unk_11018 DCB    0
.data:00011019 00                            DCB    0
.data:0001101A 00                            DCB    0
.data:0001101B 00                            DCB    0
.data:0001101C 00                            unk_1101C DCB    0            ; DATA XREF: sub_5068+5A↑o
.data:0001101D 00                            DCB    0
.data:0001101E 00                            DCB    0
.data:0001101F 00                            DCB    0
.data:00011020 00                            unk_11020 DCB    0
.data:00011021 00                            DCB    0
.data:00011022 00                            DCB    0
.data:00011023 00                            DCB    0
.data:00011024 00                            unk_11024 DCB    0
.data:00011025 00                            DCB    0
.data:00011026 00                            DCB    0
.data:00011027 00                            DCB    0
.data:00011028 00                            unk_11028 DCB    0
.data:00011029 00                            DCB    0
.data:0001102A 00                            DCB    0
.data:0001102B 00                            DCB    0
.data:0001102C 00                            unk_1102C DCB    0
.data:0001102D 00                            DCB    0
.data:0001102E 00                            DCB    0
.data:0001102F 00                            DCB    0
.data:00011030                               EXPORT pcm_config_in
.data:00011030 02 00 00 00                   pcm_config_in DCD 2           ; DATA XREF: LOAD:00000A20↑o
.data:00011030                                                             ; get_input_source_id+8C↑o
.data:00011030                                                             ; get_input_source_id+B0↑o
.data:00011030                                                             ; sub_4FD0+18↑o
.data:00011030                                                             ; sub_52F4+FC↑o
.data:00011030                                                             ; sub_52F4+FE↑w
.data:00011030                                                             ; sub_5520+3A↑o
.data:00011030                                                             ; sub_5730+1C0↑o
.data:00011030                                                             ; sub_7344+20C↑o
.data:00011030                                                             ; sub_7DB8+8↑o
.data:00011030                                                             ; sub_7F90+10E↑o
.data:00011030                                                             ; sub_7F90+128↑o
.data:00011030                                                             ; sub_7F90+152↑o
.data:00011030                                                             ; sub_7F90+15E↑o
.data:00011030                                                             ; sub_7F90+17A↑o ...
.data:00011034 80 BB 00 00                   off_11034 DCD aSVoiceCallWbDB+0x18
.data:00011034                                                             ; DATA XREF: get_input_source_id+92↑r
.data:00011034                                                             ; get_input_source_id+B2↑r
.data:00011034                                                             ; sub_5520+3C↑r
.data:00011034                                                             ; sub_5730+1C2↑r
.data:00011034                                                             ; sub_7344+20E↑r
.data:00011034                                                             ; sub_7F90+154↑w
.data:00011034                                                             ; sub_7F90:loc_80F4↑w
.data:00011034                                                             ; sub_7F90+1BE↑r
.data:00011034                                                             ; sub_7F90+2DC↑r
.data:00011034                                                             ; sub_7F90+308↑r
.data:00011034                                                             ; sub_7F90+31C↑r
.data:00011034                                                             ; "bluetooth_nrec=%d"
.data:00011038 00 04 00 00                   off_11038 DCD stru_400        ; DATA XREF: sub_52F4+100↑w
.data:00011038                                                             ; sub_7F90+212↑r
.data:00011038                                                             ; sub_8BD4+26↑r
.data:00011038                                                             ; sub_8BD4+68↑r
.data:00011038                                                             ; sub_8BD4+98↑r
.data:0001103C 04                            DCB    4
.data:0001103D 00                            DCB    0
.data:0001103E 00                            DCB    0
.data:0001103F 00                            DCB    0
.data:00011040 00 00 00 00                   dword_11040 DCD 0             ; DATA XREF: sub_7344+214↑r
.data:00011040                                                             ; sub_7F90+17C↑r
.data:00011040                                                             ; sub_7F90+1CC↑r
.data:00011044 00 00 00 00                   ALIGN 8
.data:00011048 00                            DCB    0
.data:00011049 00                            DCB    0
.data:0001104A 00                            DCB    0
.data:0001104B 00                            DCB    0
.data:0001104C 00                            DCB    0
.data:0001104D 00                            DCB    0
.data:0001104E 00                            DCB    0
.data:0001104F 00                            DCB    0
.data:00011050 00                            DCB    0
.data:00011051 00                            DCB    0
.data:00011052 00                            DCB    0
.data:00011053 00                            DCB    0
.data:00011054 00                            DCB    0
.data:00011055 00                            DCB    0
.data:00011056 00                            DCB    0
.data:00011057 00                            DCB    0
.data:00011058                               EXPORT pcm_config_voice_call
.data:00011058 01                            pcm_config_voice_call DCB    1
.data:00011058                                                             ; DATA XREF: LOAD:000008F0↑o
.data:00011058                                                             ; sub_482C+162↑o
.data:00011058                                                             ; sub_482C+192↑o
.data:00011058                                                             ; sub_5730+17C↑o
.data:00011058                                                             ; sub_7344+150↑o
.data:00011058                                                             ; sub_7344+1EC↑o
.data:00011058                                                             ; sub_7F90+10A↑o
.data:00011058                                                             ; .got:pcm_config_voice_call_ptr↑o
.data:00011059 00                            DCB    0
.data:0001105A 00                            DCB    0
.data:0001105B 00                            DCB    0
.data:0001105C 80 3E 00 00                   dword_1105C DCD 0x3E80        ; DATA XREF: sub_5730+17E↑r
.data:0001105C                                                             ; sub_7344+152↑r
.data:0001105C                                                             ; sub_7344+1F0↑r
.data:0001105C                                                             ; sub_7F90+110↑r
.data:00011060 00 02 00 00                   DCD stru_200
.data:00011064 02                            DCB    2
.data:00011065 00                            DCB    0
.data:00011066 00                            DCB    0
.data:00011067 00                            DCB    0
.data:00011068 00                            DCB    0
.data:00011069 00                            DCB    0
.data:0001106A 00                            DCB    0
.data:0001106B 00                            DCB    0
.data:0001106C 00                            DCB    0
.data:0001106D 00                            DCB    0
.data:0001106E 00                            DCB    0
.data:0001106F 00                            DCB    0
.data:00011070 00                            DCB    0
.data:00011071 00                            DCB    0
.data:00011072 00                            DCB    0
.data:00011073 00                            DCB    0
.data:00011074 00                            DCB    0
.data:00011075 00                            DCB    0
.data:00011076 00                            DCB    0
.data:00011077 00                            DCB    0
.data:00011078 00                            DCB    0
.data:00011079 00                            DCB    0
.data:0001107A 00                            DCB    0
.data:0001107B 00                            DCB    0
.data:0001107C 00                            DCB    0
.data:0001107D 00                            DCB    0
.data:0001107E 00                            DCB    0
.data:0001107F 00                            DCB    0
.data:00011080                               EXPORT pcm_config_backend
.data:00011080 02                            pcm_config_backend DCB    2   ; DATA XREF: LOAD:00000A70↑o
.data:00011080                                                             ; sub_5730+15E↑o
.data:00011080                                                             ; sub_5730+160↑o
.data:00011080                                                             ; .got:pcm_config_backend_ptr↑o
.data:00011081 00                            DCB    0
.data:00011082 00                            DCB    0
.data:00011083 00                            DCB    0
.data:00011084 80                            unk_11084 DCB 0x80
.data:00011085 BB                            DCB 0xBB
.data:00011086 00                            DCB    0
.data:00011087 00                            DCB    0
.data:00011088 00                            unk_11088 DCB    0
.data:00011089 10                            DCB 0x10
.data:0001108A 00                            DCB    0
.data:0001108B 00                            DCB    0
.data:0001108C 02                            unk_1108C DCB    2
.data:0001108D 00                            DCB    0
.data:0001108E 00                            DCB    0
.data:0001108F 00                            DCB    0
.data:00011090 00                            unk_11090 DCB    0
.data:00011091 00                            DCB    0
.data:00011092 00                            DCB    0
.data:00011093 00                            DCB    0
.data:00011094 00                            unk_11094 DCB    0            ; DATA XREF: sub_5730+164↑o
.data:00011095 00                            DCB    0
.data:00011096 00                            DCB    0
.data:00011097 00                            DCB    0
.data:00011098 00                            unk_11098 DCB    0
.data:00011099 00                            DCB    0
.data:0001109A 00                            DCB    0
.data:0001109B 00                            DCB    0
.data:0001109C 00                            unk_1109C DCB    0
.data:0001109D 00                            DCB    0
.data:0001109E 00                            DCB    0
.data:0001109F 00                            DCB    0
.data:000110A0 00                            unk_110A0 DCB    0
.data:000110A1 00                            DCB    0
.data:000110A2 00                            DCB    0
.data:000110A3 00                            DCB    0
.data:000110A4 00                            unk_110A4 DCB    0
.data:000110A5 00                            DCB    0
.data:000110A6 00                            DCB    0
.data:000110A7 00                            DCB    0
.data:000110A8                               EXPORT pcm_config_sco
.data:000110A8 02                            pcm_config_sco DCB    2       ; DATA XREF: LOAD:00000D30↑o
.data:000110A8                                                             ; sub_5730+4A6↑o
.data:000110A8                                                             ; sub_5730+4DC↑o
.data:000110A8                                                             ; .got:pcm_config_sco_ptr↑o
.data:000110A9 00                            DCB    0
.data:000110AA 00                            DCB    0
.data:000110AB 00                            DCB    0
.data:000110AC 40                            DCB 0x40 ; @
.data:000110AD 1F                            DCB 0x1F
.data:000110AE 00                            DCB    0
.data:000110AF 00                            DCB    0
.data:000110B0 00                            DCB    0
.data:000110B1 04                            DCB    4
.data:000110B2 00                            DCB    0
.data:000110B3 00                            DCB    0
.data:000110B4 02                            DCB    2
.data:000110B5 00                            DCB    0
.data:000110B6 00                            DCB    0
.data:000110B7 00                            DCB    0
.data:000110B8 00                            DCB    0
.data:000110B9 00                            DCB    0
.data:000110BA 00                            DCB    0
.data:000110BB 00                            DCB    0
.data:000110BC 00                            DCB    0
.data:000110BD 00                            DCB    0
.data:000110BE 00                            DCB    0
.data:000110BF 00                            DCB    0
.data:000110C0 00                            DCB    0
.data:000110C1 00                            DCB    0
.data:000110C2 00                            DCB    0
.data:000110C3 00                            DCB    0
.data:000110C4 00                            DCB    0
.data:000110C5 00                            DCB    0
.data:000110C6 00                            DCB    0
.data:000110C7 00                            DCB    0
.data:000110C8 00                            DCB    0
.data:000110C9 00                            DCB    0
.data:000110CA 00                            DCB    0
.data:000110CB 00                            DCB    0
.data:000110CC 00                            DCB    0
.data:000110CD 00                            DCB    0
.data:000110CE 00                            DCB    0
.data:000110CF 00                            DCB    0
.data:000110D0                               EXPORT pcm_config_amplifier
.data:000110D0 02                            pcm_config_amplifier DCB    2 ; DATA XREF: LOAD:00000D50↑o
.data:000110D0                                                             ; thread_refresh_audio_route+B2↑o
.data:000110D0                                                             ; thread_refresh_audio_route+D8↑o
.data:000110D0                                                             ; thread_refresh_audio_route+120↑o
.data:000110D0                                                             ; sub_5730+3CA↑o
.data:000110D0                                                             ; sub_5730+3CC↑o
.data:000110D0                                                             ; .got:pcm_config_amplifier_ptr↑o
.data:000110D1 00                            DCB    0
.data:000110D2 00                            DCB    0
.data:000110D3 00                            DCB    0
.data:000110D4 80 BB 00 00                   off_110D4 DCD aSVoiceCallWbDB+0x18
.data:000110D4                                                             ; DATA XREF: thread_refresh_audio_route+122↑r
.data:000110D4                                                             ; "bluetooth_nrec=%d"
.data:000110D8 00 04 00 00                   off_110D8 DCD stru_400
.data:000110DC 04                            unk_110DC DCB    4
.data:000110DD 00                            DCB    0
.data:000110DE 00                            DCB    0
.data:000110DF 00                            DCB    0
.data:000110E0 00                            unk_110E0 DCB    0
.data:000110E1 00                            DCB    0
.data:000110E2 00                            DCB    0
.data:000110E3 00                            DCB    0
.data:000110E4 00                            unk_110E4 DCB    0            ; DATA XREF: sub_5730+3D0↑o
.data:000110E5 00                            DCB    0
.data:000110E6 00                            DCB    0
.data:000110E7 00                            DCB    0
.data:000110E8 00                            unk_110E8 DCB    0
.data:000110E9 00                            DCB    0
.data:000110EA 00                            DCB    0
.data:000110EB 00                            DCB    0
.data:000110EC 00                            unk_110EC DCB    0
.data:000110ED 00                            DCB    0
.data:000110EE 00                            DCB    0
.data:000110EF 00                            DCB    0
.data:000110F0 00                            unk_110F0 DCB    0
.data:000110F1 00                            DCB    0
.data:000110F2 00                            DCB    0
.data:000110F3 00                            DCB    0
.data:000110F4 00                            unk_110F4 DCB    0
.data:000110F5 00                            DCB    0
.data:000110F6 00                            DCB    0
.data:000110F7 00                            DCB    0
.data:000110F8                               EXPORT default_settings
.data:000110F8 2F C1 00 00                   default_settings DCD aEs705Rx1Enable
.data:000110F8                                                             ; DATA XREF: LOAD:00000930↑o
.data:000110F8                                                             ; sub_66B0+18A↑o
.data:000110F8                                                             ; sub_66B0+4C8↑o
.data:000110F8                                                             ; .got:default_settings_ptr↑o
.data:000110F8                                                             ; "ES705 RX1 Enable"
.data:000110FC 00 00 00 00                   ALIGN 0x10
.data:00011100 00                            DCB    0
.data:00011101 00                            DCB    0
.data:00011102 00                            DCB    0
.data:00011103 00                            DCB    0
.data:00011104 3C C0 00 00                   DCD aInternalRoute            ; "Internal Route"
.data:00011108 01                            DCB    1
.data:00011109 00                            DCB    0
.data:0001110A 00                            DCB    0
.data:0001110B 00                            DCB    0
.data:0001110C 00                            DCB    0
.data:0001110D 00                            DCB    0
.data:0001110E 00                            DCB    0
.data:0001110F 00                            DCB    0
.data:00011110 40 C1 00 00                   DCD aHeadsetMicSwit           ; "Headset Mic Switch"
.data:00011114 00 00 00 00                   ALIGN 8
.data:00011118 00                            DCB    0
.data:00011119 00                            DCB    0
.data:0001111A 00                            DCB    0
.data:0001111B 00                            DCB    0
.data:0001111C 53 C1 00 00                   DCD aEpoutDigitalSw           ; "EPOUT Digital Switch"
.data:00011120 00                            DCB    0
.data:00011121 00                            DCB    0
.data:00011122 00                            DCB    0
.data:00011123 00                            DCB    0
.data:00011124 00                            DCB    0
.data:00011125 00                            DCB    0
.data:00011126 00                            DCB    0
.data:00011127 00                            DCB    0
.data:00011128 68 C1 00 00                   DCD aEarpieceSwitch           ; "Earpiece Switch"
.data:0001112C 00 00 00 00                   ALIGN 0x10
.data:00011130 00                            DCB    0
.data:00011131 00                            DCB    0
.data:00011132 00                            DCB    0
.data:00011133 00                            DCB    0
.data:00011134 78 C1 00 00                   DCD aHpoutDigitalSw           ; "HPOUT Digital Switch"
.data:00011138 00 00 00 00 00 00 00 00       ALIGN 0x10
.data:00011140 8D C1 00 00                   DCD aHeadphoneSwitc           ; "Headphone Switch"
.data:00011144 00 00 00 00                   ALIGN 8
.data:00011148 00                            DCB    0
.data:00011149 00                            DCB    0
.data:0001114A 00                            DCB    0
.data:0001114B 00                            DCB    0
.data:0001114C 9E C1 00 00                   DCD aSecMicSwitch             ; "Sec Mic Switch"
.data:00011150 00                            DCB    0
.data:00011151 00                            DCB    0
.data:00011152 00                            DCB    0
.data:00011153 00                            DCB    0
.data:00011154 00                            DCB    0
.data:00011155 00                            DCB    0
.data:00011156 00                            DCB    0
.data:00011157 00                            DCB    0
.data:00011158 00                            DCB    0
.data:00011159 00                            DCB    0
.data:0001115A 00                            DCB    0
.data:0001115B 00                            DCB    0
.data:0001115C 00                            DCB    0
.data:0001115D 00                            DCB    0
.data:0001115E 00                            DCB    0
.data:0001115F 00                            DCB    0
.data:00011160 00                            DCB    0
.data:00011161 00                            DCB    0
.data:00011162 00                            DCB    0
.data:00011163 00                            DCB    0
.data:00011164                               EXPORT test_earphones
.data:00011164 AD C1 00 00                   test_earphones DCD aIn2muxInput
.data:00011164                                                             ; DATA XREF: LOAD:00000C90↑o
.data:00011164                                                             ; sub_66B0:loc_6812↑o
.data:00011164                                                             ; .got:test_earphones_ptr↑o
.data:00011164                                                             ; "IN2MUX Input"
.data:00011168 00                            DCB    0
.data:00011169 00                            DCB    0
.data:0001116A 00                            DCB    0
.data:0001116B 00                            DCB    0
.data:0001116C BA C1 00 00                   DCD aIn2b                     ; "IN2B"
.data:00011170 BF C1 00 00                   DCD aIn2Volume                ; "IN2 Volume"
.data:00011174 12                            DCB 0x12
.data:00011175 00                            DCB    0
.data:00011176 00                            DCB    0
.data:00011177 00                            DCB    0
.data:00011178 00                            DCB    0
.data:00011179 00                            DCB    0
.data:0001117A 00                            DCB    0
.data:0001117B 00                            DCB    0
.data:0001117C 40 C1 00 00                   DCD aHeadsetMicSwit           ; "Headset Mic Switch"
.data:00011180 01                            DCB    1
.data:00011181 00                            DCB    0
.data:00011182 00                            DCB    0
.data:00011183 00                            DCB    0
.data:00011184 00                            DCB    0
.data:00011185 00                            DCB    0
.data:00011186 00                            DCB    0
.data:00011187 00                            DCB    0
.data:00011188 CA C1 00 00                   DCD aEpoutInput1              ; "EPOUT Input 1"
.data:0001118C 00 00 00 00                   ALIGN 0x10
.data:00011190 D8 C1 00 00                   DCD aIn2l                     ; "IN2L"
.data:00011194 DD C1 00 00                   DCD aEpoutDigitalVo           ; "EPOUT Digital Volume"
.data:00011198 90 00 00 00                   DCD dword_90
.data:0001119C 00 00 00 00                   ALIGN 0x10
.data:000111A0 53 C1 00 00                   DCD aEpoutDigitalSw           ; "EPOUT Digital Switch"
.data:000111A4 01                            DCB    1
.data:000111A5 00                            DCB    0
.data:000111A6 00                            DCB    0
.data:000111A7 00                            DCB    0
.data:000111A8 00                            DCB    0
.data:000111A9 00                            DCB    0
.data:000111AA 00                            DCB    0
.data:000111AB 00                            DCB    0
.data:000111AC 68 C1 00 00                   DCD aEarpieceSwitch           ; "Earpiece Switch"
.data:000111B0 01                            DCB    1
.data:000111B1 00                            DCB    0
.data:000111B2 00                            DCB    0
.data:000111B3 00                            DCB    0
.data:000111B4 00                            DCB    0
.data:000111B5 00                            DCB    0
.data:000111B6 00                            DCB    0
.data:000111B7 00                            DCB    0
.data:000111B8 2F C1 00 00                   DCD aEs705Rx1Enable           ; "ES705 RX1 Enable"
.data:000111BC 01                            DCB    1
.data:000111BD 00                            DCB    0
.data:000111BE 00                            DCB    0
.data:000111BF 00                            DCB    0
.data:000111C0 00                            DCB    0
.data:000111C1 00                            DCB    0
.data:000111C2 00                            DCB    0
.data:000111C3 00                            DCB    0
.data:000111C4 3C C0 00 00                   DCD aInternalRoute            ; "Internal Route"
.data:000111C8 5B                            DCB 0x5B ; [
.data:000111C9 00                            DCB    0
.data:000111CA 00                            DCB    0
.data:000111CB 00                            DCB    0
.data:000111CC 00                            DCB    0
.data:000111CD 00                            DCB    0
.data:000111CE 00                            DCB    0
.data:000111CF 00                            DCB    0
.data:000111D0 F2 C1 00 00                   DCD aHpoutlInput1             ; "HPOUTL Input 1"
.data:000111D4 00 00 00 00                   ALIGN 8
.data:000111D8 01 C2 00 00                   DCD aAif1rx1                  ; "AIF1RX1"
.data:000111DC 09 C2 00 00                   DCD aHpoutDigitalVo           ; "HPOUT Digital Volume"
.data:000111E0 80 00 00 00                   DCD dword_80
.data:000111E4 00 00 00 00                   ALIGN 8
.data:000111E8 78 C1 00 00                   DCD aHpoutDigitalSw           ; "HPOUT Digital Switch"
.data:000111EC 01                            DCB    1
.data:000111ED 00                            DCB    0
.data:000111EE 00                            DCB    0
.data:000111EF 00                            DCB    0
.data:000111F0 00                            DCB    0
.data:000111F1 00                            DCB    0
.data:000111F2 00                            DCB    0
.data:000111F3 00                            DCB    0
.data:000111F4 8D C1 00 00                   DCD aHeadphoneSwitc           ; "Headphone Switch"
.data:000111F8 01                            DCB    1
.data:000111F9 00                            DCB    0
.data:000111FA 00                            DCB    0
.data:000111FB 00                            DCB    0
.data:000111FC 00                            DCB    0
.data:000111FD 00                            DCB    0
.data:000111FE 00                            DCB    0
.data:000111FF 00                            DCB    0
.data:00011200 00                            DCB    0
.data:00011201 00                            DCB    0
.data:00011202 00                            DCB    0
.data:00011203 00                            DCB    0
.data:00011204 00                            DCB    0
.data:00011205 00                            DCB    0
.data:00011206 00                            DCB    0
.data:00011207 00                            DCB    0
.data:00011208 00                            DCB    0
.data:00011209 00                            DCB    0
.data:0001120A 00                            DCB    0
.data:0001120B 00                            DCB    0
.data:0001120C                               EXPORT test_headphone
.data:0001120C 2F C1 00 00                   test_headphone DCD aEs705Rx1Enable
.data:0001120C                                                             ; DATA XREF: LOAD:00000C00↑o
.data:0001120C                                                             ; sub_66B0:loc_6812↑o
.data:0001120C                                                             ; .got:test_headphone_ptr↑o
.data:0001120C                                                             ; "ES705 RX1 Enable"
.data:00011210 00                            DCB    0
.data:00011211 00                            DCB    0
.data:00011212 00                            DCB    0
.data:00011213 00                            DCB    0
.data:00011214 00                            DCB    0
.data:00011215 00                            DCB    0
.data:00011216 00                            DCB    0
.data:00011217 00                            DCB    0
.data:00011218 3C C0 00 00                   DCD aInternalRoute            ; "Internal Route"
.data:0001121C 01                            DCB    1
.data:0001121D 00                            DCB    0
.data:0001121E 00                            DCB    0
.data:0001121F 00                            DCB    0
.data:00011220 00                            DCB    0
.data:00011221 00                            DCB    0
.data:00011222 00                            DCB    0
.data:00011223 00                            DCB    0
.data:00011224 AD C1 00 00                   DCD aIn2muxInput              ; "IN2MUX Input"
.data:00011228 00                            DCB    0
.data:00011229 00                            DCB    0
.data:0001122A 00                            DCB    0
.data:0001122B 00                            DCB    0
.data:0001122C BA C1 00 00                   DCD aIn2b                     ; "IN2B"
.data:00011230 BF C1 00 00                   DCD aIn2Volume                ; "IN2 Volume"
.data:00011234 12                            DCB 0x12
.data:00011235 00                            DCB    0
.data:00011236 00                            DCB    0
.data:00011237 00                            DCB    0
.data:00011238 00                            DCB    0
.data:00011239 00                            DCB    0
.data:0001123A 00                            DCB    0
.data:0001123B 00                            DCB    0
.data:0001123C 40 C1 00 00                   DCD aHeadsetMicSwit           ; "Headset Mic Switch"
.data:00011240 01                            DCB    1
.data:00011241 00                            DCB    0
.data:00011242 00                            DCB    0
.data:00011243 00                            DCB    0
.data:00011244 00                            DCB    0
.data:00011245 00                            DCB    0
.data:00011246 00                            DCB    0
.data:00011247 00                            DCB    0
.data:00011248 F2 C1 00 00                   DCD aHpoutlInput1             ; "HPOUTL Input 1"
.data:0001124C 00 00 00 00                   ALIGN 0x10
.data:00011250 D8 C1 00 00                   DCD aIn2l                     ; "IN2L"
.data:00011254 1E C2 00 00                   DCD aHpoutrInput1             ; "HPOUTR Input 1"
.data:00011258 00                            DCB    0
.data:00011259 00                            DCB    0
.data:0001125A 00                            DCB    0
.data:0001125B 00                            DCB    0
.data:0001125C D8 C1 00 00                   DCD aIn2l                     ; "IN2L"
.data:00011260 09 C2 00 00                   DCD aHpoutDigitalVo           ; "HPOUT Digital Volume"
.data:00011264 70 00 00 00                   DCD dword_70
.data:00011268 00                            DCB    0
.data:00011269 00                            DCB    0
.data:0001126A 00                            DCB    0
.data:0001126B 00                            DCB    0
.data:0001126C 78 C1 00 00                   DCD aHpoutDigitalSw           ; "HPOUT Digital Switch"
.data:00011270 01                            DCB    1
.data:00011271 00                            DCB    0
.data:00011272 00                            DCB    0
.data:00011273 00                            DCB    0
.data:00011274 00                            DCB    0
.data:00011275 00                            DCB    0
.data:00011276 00                            DCB    0
.data:00011277 00                            DCB    0
.data:00011278 8D C1 00 00                   DCD aHeadphoneSwitc           ; "Headphone Switch"
.data:0001127C 01                            DCB    1
.data:0001127D 00                            DCB    0
.data:0001127E 00                            DCB    0
.data:0001127F 00                            DCB    0
.data:00011280 00                            DCB    0
.data:00011281 00                            DCB    0
.data:00011282 00                            DCB    0
.data:00011283 00                            DCB    0
.data:00011284 00                            DCB    0
.data:00011285 00                            DCB    0
.data:00011286 00                            DCB    0
.data:00011287 00                            DCB    0
.data:00011288 00                            DCB    0
.data:00011289 00                            DCB    0
.data:0001128A 00                            DCB    0
.data:0001128B 00                            DCB    0
.data:0001128C 00                            DCB    0
.data:0001128D 00                            DCB    0
.data:0001128E 00                            DCB    0
.data:0001128F 00                            DCB    0
.data:00011290                               EXPORT test_speaker
.data:00011290 AD C1 00 00                   test_speaker DCD aIn2muxInput ; DATA XREF: LOAD:00000980↑o
.data:00011290                                                             ; sub_66B0+13A↑o
.data:00011290                                                             ; .got:test_speaker_ptr↑o
.data:00011290                                                             ; "IN2MUX Input"
.data:00011294 00 00 00 00                   ALIGN 8
.data:00011298 BA C1 00 00                   DCD aIn2b                     ; "IN2B"
.data:0001129C BF C1 00 00                   DCD aIn2Volume                ; "IN2 Volume"
.data:000112A0 1A                            DCB 0x1A
.data:000112A1 00                            DCB    0
.data:000112A2 00                            DCB    0
.data:000112A3 00                            DCB    0
.data:000112A4 00                            DCB    0
.data:000112A5 00                            DCB    0
.data:000112A6 00                            DCB    0
.data:000112A7 00                            DCB    0
.data:000112A8 40 C1 00 00                   DCD aHeadsetMicSwit           ; "Headset Mic Switch"
.data:000112AC 01                            DCB    1
.data:000112AD 00                            DCB    0
.data:000112AE 00                            DCB    0
.data:000112AF 00                            DCB    0
.data:000112B0 00                            DCB    0
.data:000112B1 00                            DCB    0
.data:000112B2 00                            DCB    0
.data:000112B3 00                            DCB    0
.data:000112B4 2D C2 00 00                   DCD aIsrc2int1Input           ; "ISRC2INT1 Input"
.data:000112B8 00                            DCB    0
.data:000112B9 00                            DCB    0
.data:000112BA 00                            DCB    0
.data:000112BB 00                            DCB    0
.data:000112BC D8 C1 00 00                   DCD aIn2l                     ; "IN2L"
.data:000112C0 3D C2 00 00                   DCD aIsrc2int2Input           ; "ISRC2INT2 Input"
.data:000112C4 00 00 00 00                   ALIGN 8
.data:000112C8 D8 C1 00 00                   DCD aIn2l                     ; "IN2L"
.data:000112CC 4D C2 00 00                   DCD aAif3tx1Input1            ; "AIF3TX1 Input 1"
.data:000112D0 00                            DCB    0
.data:000112D1 00                            DCB    0
.data:000112D2 00                            DCB    0
.data:000112D3 00                            DCB    0
.data:000112D4 5D C2 00 00                   DCD aIsrc2int1                ; "ISRC2INT1"
.data:000112D8 67 C2 00 00                   DCD aAif3tx2Input1            ; "AIF3TX2 Input 1"
.data:000112DC 00 00 00 00                   ALIGN 0x10
.data:000112E0 77 C2 00 00                   DCD aIsrc2int2                ; "ISRC2INT2"
.data:000112E4 81 C2 00 00                   DCD aAif3tx1Input1V           ; "AIF3TX1 Input 1 Volume"
.data:000112E8 1A                            DCB 0x1A
.data:000112E9 00                            DCB    0
.data:000112EA 00                            DCB    0
.data:000112EB 00                            DCB    0
.data:000112EC 00                            DCB    0
.data:000112ED 00                            DCB    0
.data:000112EE 00                            DCB    0
.data:000112EF 00                            DCB    0
.data:000112F0 98 C2 00 00                   DCD aAif3tx2Input1V           ; "AIF3TX2 Input 1 Volume"
.data:000112F4 1A                            DCB 0x1A
.data:000112F5 00                            DCB    0
.data:000112F6 00                            DCB    0
.data:000112F7 00                            DCB    0
.data:000112F8 00                            DCB    0
.data:000112F9 00                            DCB    0
.data:000112FA 00                            DCB    0
.data:000112FB 00                            DCB    0
.data:000112FC 2F C1 00 00                   DCD aEs705Rx1Enable           ; "ES705 RX1 Enable"
.data:00011300 01                            DCB    1
.data:00011301 00                            DCB    0
.data:00011302 00                            DCB    0
.data:00011303 00                            DCB    0
.data:00011304 00                            DCB    0
.data:00011305 00                            DCB    0
.data:00011306 00                            DCB    0
.data:00011307 00                            DCB    0
.data:00011308 3C C0 00 00                   DCD aInternalRoute            ; "Internal Route"
.data:0001130C 5B                            DCB 0x5B ; [
.data:0001130D 00                            DCB    0
.data:0001130E 00                            DCB    0
.data:0001130F 00                            DCB    0
.data:00011310 00                            DCB    0
.data:00011311 00                            DCB    0
.data:00011312 00                            DCB    0
.data:00011313 00                            DCB    0
.data:00011314 F2 C1 00 00                   DCD aHpoutlInput1             ; "HPOUTL Input 1"
.data:00011318 00                            DCB    0
.data:00011319 00                            DCB    0
.data:0001131A 00                            DCB    0
.data:0001131B 00                            DCB    0
.data:0001131C 01 C2 00 00                   DCD aAif1rx1                  ; "AIF1RX1"
.data:00011320 09 C2 00 00                   DCD aHpoutDigitalVo           ; "HPOUT Digital Volume"
.data:00011324 80 00 00 00                   DCD dword_80
.data:00011328 00                            DCB    0
.data:00011329 00                            DCB    0
.data:0001132A 00                            DCB    0
.data:0001132B 00                            DCB    0
.data:0001132C 78 C1 00 00                   DCD aHpoutDigitalSw           ; "HPOUT Digital Switch"
.data:00011330 01                            DCB    1
.data:00011331 00                            DCB    0
.data:00011332 00                            DCB    0
.data:00011333 00                            DCB    0
.data:00011334 00                            DCB    0
.data:00011335 00                            DCB    0
.data:00011336 00                            DCB    0
.data:00011337 00                            DCB    0
.data:00011338 8D C1 00 00                   DCD aHeadphoneSwitc           ; "Headphone Switch"
.data:0001133C 01                            DCB    1
.data:0001133D 00                            DCB    0
.data:0001133E 00                            DCB    0
.data:0001133F 00                            DCB    0
.data:00011340 00                            DCB    0
.data:00011341 00                            DCB    0
.data:00011342 00                            DCB    0
.data:00011343 00                            DCB    0
.data:00011344 00                            DCB    0
.data:00011345 00                            DCB    0
.data:00011346 00                            DCB    0
.data:00011347 00                            DCB    0
.data:00011348 00                            DCB    0
.data:00011349 00                            DCB    0
.data:0001134A 00                            DCB    0
.data:0001134B 00                            DCB    0
.data:0001134C 00                            DCB    0
.data:0001134D 00                            DCB    0
.data:0001134E 00                            DCB    0
.data:0001134F 00                            DCB    0
.data:00011350                               EXPORT test_pri_mic
.data:00011350 2F C1 00 00                   test_pri_mic DCD aEs705Rx1Enable
.data:00011350                                                             ; DATA XREF: LOAD:00000900↑o
.data:00011350                                                             ; sub_66B0:loc_6812↑o
.data:00011350                                                             ; .got:test_pri_mic_ptr↑o
.data:00011350                                                             ; "ES705 RX1 Enable"
.data:00011354 01                            DCB    1
.data:00011355 00                            DCB    0
.data:00011356 00                            DCB    0
.data:00011357 00                            DCB    0
.data:00011358 00                            DCB    0
.data:00011359 00                            DCB    0
.data:0001135A 00                            DCB    0
.data:0001135B 00                            DCB    0
.data:0001135C 3C C0 00 00                   DCD aInternalRoute            ; "Internal Route"
.data:00011360 5B                            DCB 0x5B ; [
.data:00011361 00                            DCB    0
.data:00011362 00                            DCB    0
.data:00011363 00                            DCB    0
.data:00011364 00                            DCB    0
.data:00011365 00                            DCB    0
.data:00011366 00                            DCB    0
.data:00011367 00                            DCB    0
.data:00011368 F2 C1 00 00                   DCD aHpoutlInput1             ; "HPOUTL Input 1"
.data:0001136C 00 00 00 00                   ALIGN 0x10
.data:00011370 01 C2 00 00                   DCD aAif1rx1                  ; "AIF1RX1"
.data:00011374 1E C2 00 00                   DCD aHpoutrInput1             ; "HPOUTR Input 1"
.data:00011378 00                            DCB    0
.data:00011379 00                            DCB    0
.data:0001137A 00                            DCB    0
.data:0001137B 00                            DCB    0
.data:0001137C 01 C2 00 00                   DCD aAif1rx1                  ; "AIF1RX1"
.data:00011380 09 C2 00 00                   DCD aHpoutDigitalVo           ; "HPOUT Digital Volume"
.data:00011384 80 00 00 00                   DCD dword_80
.data:00011388 00                            DCB    0
.data:00011389 00                            DCB    0
.data:0001138A 00                            DCB    0
.data:0001138B 00                            DCB    0
.data:0001138C 78 C1 00 00                   DCD aHpoutDigitalSw           ; "HPOUT Digital Switch"
.data:00011390 01                            DCB    1
.data:00011391 00                            DCB    0
.data:00011392 00                            DCB    0
.data:00011393 00                            DCB    0
.data:00011394 00                            DCB    0
.data:00011395 00                            DCB    0
.data:00011396 00                            DCB    0
.data:00011397 00                            DCB    0
.data:00011398 8D C1 00 00                   DCD aHeadphoneSwitc           ; "Headphone Switch"
.data:0001139C 01                            DCB    1
.data:0001139D 00                            DCB    0
.data:0001139E 00                            DCB    0
.data:0001139F 00                            DCB    0
.data:000113A0 00                            DCB    0
.data:000113A1 00                            DCB    0
.data:000113A2 00                            DCB    0
.data:000113A3 00                            DCB    0
.data:000113A4 00                            DCB    0
.data:000113A5 00                            DCB    0
.data:000113A6 00                            DCB    0
.data:000113A7 00                            DCB    0
.data:000113A8 00                            DCB    0
.data:000113A9 00                            DCB    0
.data:000113AA 00                            DCB    0
.data:000113AB 00                            DCB    0
.data:000113AC 00                            DCB    0
.data:000113AD 00                            DCB    0
.data:000113AE 00                            DCB    0
.data:000113AF 00                            DCB    0
.data:000113B0                               EXPORT test_sec_mic
.data:000113B0 2F C1 00 00                   test_sec_mic DCD aEs705Rx1Enable
.data:000113B0                                                             ; DATA XREF: LOAD:00000C50↑o
.data:000113B0                                                             ; sub_66B0:loc_6812↑o
.data:000113B0                                                             ; .got:test_sec_mic_ptr↑o
.data:000113B0                                                             ; "ES705 RX1 Enable"
.data:000113B4 01                            DCB    1
.data:000113B5 00                            DCB    0
.data:000113B6 00                            DCB    0
.data:000113B7 00                            DCB    0
.data:000113B8 00                            DCB    0
.data:000113B9 00                            DCB    0
.data:000113BA 00                            DCB    0
.data:000113BB 00                            DCB    0
.data:000113BC 3C C0 00 00                   DCD aInternalRoute            ; "Internal Route"
.data:000113C0 5A                            DCB 0x5A ; Z
.data:000113C1 00                            DCB    0
.data:000113C2 00                            DCB    0
.data:000113C3 00                            DCB    0
.data:000113C4 00                            DCB    0
.data:000113C5 00                            DCB    0
.data:000113C6 00                            DCB    0
.data:000113C7 00                            DCB    0
.data:000113C8 F2 C1 00 00                   DCD aHpoutlInput1             ; "HPOUTL Input 1"
.data:000113CC 00 00 00 00                   ALIGN 0x10
.data:000113D0 01 C2 00 00                   DCD aAif1rx1                  ; "AIF1RX1"
.data:000113D4 1E C2 00 00                   DCD aHpoutrInput1             ; "HPOUTR Input 1"
.data:000113D8 00                            DCB    0
.data:000113D9 00                            DCB    0
.data:000113DA 00                            DCB    0
.data:000113DB 00                            DCB    0
.data:000113DC 01 C2 00 00                   DCD aAif1rx1                  ; "AIF1RX1"
.data:000113E0 09 C2 00 00                   DCD aHpoutDigitalVo           ; "HPOUT Digital Volume"
.data:000113E4 80 00 00 00                   DCD dword_80
.data:000113E8 00                            DCB    0
.data:000113E9 00                            DCB    0
.data:000113EA 00                            DCB    0
.data:000113EB 00                            DCB    0
.data:000113EC 78 C1 00 00                   DCD aHpoutDigitalSw           ; "HPOUT Digital Switch"
.data:000113F0 01                            DCB    1
.data:000113F1 00                            DCB    0
.data:000113F2 00                            DCB    0
.data:000113F3 00                            DCB    0
.data:000113F4 00                            DCB    0
.data:000113F5 00                            DCB    0
.data:000113F6 00                            DCB    0
.data:000113F7 00                            DCB    0
.data:000113F8 8D C1 00 00                   DCD aHeadphoneSwitc           ; "Headphone Switch"
.data:000113FC 01                            DCB    1
.data:000113FD 00                            DCB    0
.data:000113FE 00                            DCB    0
.data:000113FF 00                            DCB    0
.data:00011400 00                            DCB    0
.data:00011401 00                            DCB    0
.data:00011402 00                            DCB    0
.data:00011403 00                            DCB    0
.data:00011404 AF C2 00 00                   DCD aAif1tx1Input1            ; "AIF1TX1 Input 1"
.data:00011408 00                            DCB    0
.data:00011409 00                            DCB    0
.data:0001140A 00                            DCB    0
.data:0001140B 00                            DCB    0
.data:0001140C D8 C1 00 00                   DCD aIn2l                     ; "IN2L"
.data:00011410 BF C2 00 00                   DCD aAif1tx2Input1            ; "AIF1TX2 Input 1"
.data:00011414 00 00 00 00                   ALIGN 8
.data:00011418 D8 C1 00 00                   DCD aIn2l                     ; "IN2L"
.data:0001141C AD C1 00 00                   DCD aIn2muxInput              ; "IN2MUX Input"
.data:00011420 00                            DCB    0
.data:00011421 00                            DCB    0
.data:00011422 00                            DCB    0
.data:00011423 00                            DCB    0
.data:00011424 CF C2 00 00                   DCD aIn2a                     ; "IN2A"
.data:00011428 9E C1 00 00                   DCD aSecMicSwitch             ; "Sec Mic Switch"
.data:0001142C 01                            DCB    1
.data:0001142D 00                            DCB    0
.data:0001142E 00                            DCB    0
.data:0001142F 00                            DCB    0
.data:00011430 00                            DCB    0
.data:00011431 00                            DCB    0
.data:00011432 00                            DCB    0
.data:00011433 00                            DCB    0
.data:00011434 00                            DCB    0
.data:00011435 00                            DCB    0
.data:00011436 00                            DCB    0
.data:00011437 00                            DCB    0
.data:00011438 00                            DCB    0
.data:00011439 00                            DCB    0
.data:0001143A 00                            DCB    0
.data:0001143B 00                            DCB    0
.data:0001143C 00                            DCB    0
.data:0001143D 00                            DCB    0
.data:0001143E 00                            DCB    0
.data:0001143F 00                            DCB    0
.data:00011440                               EXPORT test_ter_mic
.data:00011440 2F C1 00 00                   test_ter_mic DCD aEs705Rx1Enable
.data:00011440                                                             ; DATA XREF: LOAD:00000A40↑o
.data:00011440                                                             ; sub_66B0:loc_6812↑o
.data:00011440                                                             ; .got:test_ter_mic_ptr↑o
.data:00011440                                                             ; "ES705 RX1 Enable"
.data:00011444 01                            DCB    1
.data:00011445 00                            DCB    0
.data:00011446 00                            DCB    0
.data:00011447 00                            DCB    0
.data:00011448 00                            DCB    0
.data:00011449 00                            DCB    0
.data:0001144A 00                            DCB    0
.data:0001144B 00                            DCB    0
.data:0001144C 3C C0 00 00                   DCD aInternalRoute            ; "Internal Route"
.data:00011450 5C 00 00 00                   DCD off_5C                    ; "/system/bin/linker"
.data:00011454 00 00 00 00                   ALIGN 8
.data:00011458 AD C1 00 00                   DCD aIn2muxInput              ; "IN2MUX Input"
.data:0001145C 00 00 00 00                   ALIGN 0x10
.data:00011460 BA C1 00 00                   DCD aIn2b                     ; "IN2B"
.data:00011464 BF C1 00 00                   DCD aIn2Volume                ; "IN2 Volume"
.data:00011468 12                            DCB 0x12
.data:00011469 00                            DCB    0
.data:0001146A 00                            DCB    0
.data:0001146B 00                            DCB    0
.data:0001146C 00                            DCB    0
.data:0001146D 00                            DCB    0
.data:0001146E 00                            DCB    0
.data:0001146F 00                            DCB    0
.data:00011470 40 C1 00 00                   DCD aHeadsetMicSwit           ; "Headset Mic Switch"
.data:00011474 01                            DCB    1
.data:00011475 00                            DCB    0
.data:00011476 00                            DCB    0
.data:00011477 00                            DCB    0
.data:00011478 00                            DCB    0
.data:00011479 00                            DCB    0
.data:0001147A 00                            DCB    0
.data:0001147B 00                            DCB    0
.data:0001147C CA C1 00 00                   DCD aEpoutInput1              ; "EPOUT Input 1"
.data:00011480 00                            DCB    0
.data:00011481 00                            DCB    0
.data:00011482 00                            DCB    0
.data:00011483 00                            DCB    0
.data:00011484 D8 C1 00 00                   DCD aIn2l                     ; "IN2L"
.data:00011488 DD C1 00 00                   DCD aEpoutDigitalVo           ; "EPOUT Digital Volume"
.data:0001148C 90 00 00 00                   DCD dword_90
.data:00011490 00                            DCB    0
.data:00011491 00                            DCB    0
.data:00011492 00                            DCB    0
.data:00011493 00                            DCB    0
.data:00011494 53 C1 00 00                   DCD aEpoutDigitalSw           ; "EPOUT Digital Switch"
.data:00011498 01                            DCB    1
.data:00011499 00                            DCB    0
.data:0001149A 00                            DCB    0
.data:0001149B 00                            DCB    0
.data:0001149C 00                            DCB    0
.data:0001149D 00                            DCB    0
.data:0001149E 00                            DCB    0
.data:0001149F 00                            DCB    0
.data:000114A0 68 C1 00 00                   DCD aEarpieceSwitch           ; "Earpiece Switch"
.data:000114A4 01                            DCB    1
.data:000114A5 00                            DCB    0
.data:000114A6 00                            DCB    0
.data:000114A7 00                            DCB    0
.data:000114A8 00                            DCB    0
.data:000114A9 00                            DCB    0
.data:000114AA 00                            DCB    0
.data:000114AB 00                            DCB    0
.data:000114AC F2 C1 00 00                   DCD aHpoutlInput1             ; "HPOUTL Input 1"
.data:000114B0 00                            DCB    0
.data:000114B1 00                            DCB    0
.data:000114B2 00                            DCB    0
.data:000114B3 00                            DCB    0
.data:000114B4 01 C2 00 00                   DCD aAif1rx1                  ; "AIF1RX1"
.data:000114B8 1E C2 00 00                   DCD aHpoutrInput1             ; "HPOUTR Input 1"
.data:000114BC 00 00 00 00                   ALIGN 0x10
.data:000114C0 01 C2 00 00                   DCD aAif1rx1                  ; "AIF1RX1"
.data:000114C4 09 C2 00 00                   DCD aHpoutDigitalVo           ; "HPOUT Digital Volume"
.data:000114C8 80 00 00 00                   DCD dword_80
.data:000114CC 00 00 00 00                   ALIGN 0x10
.data:000114D0 78 C1 00 00                   DCD aHpoutDigitalSw           ; "HPOUT Digital Switch"
.data:000114D4 01                            DCB    1
.data:000114D5 00                            DCB    0
.data:000114D6 00                            DCB    0
.data:000114D7 00                            DCB    0
.data:000114D8 00                            DCB    0
.data:000114D9 00                            DCB    0
.data:000114DA 00                            DCB    0
.data:000114DB 00                            DCB    0
.data:000114DC 8D C1 00 00                   DCD aHeadphoneSwitc           ; "Headphone Switch"
.data:000114E0 01                            DCB    1
.data:000114E1 00                            DCB    0
.data:000114E2 00                            DCB    0
.data:000114E3 00                            DCB    0
.data:000114E4 00                            DCB    0
.data:000114E5 00                            DCB    0
.data:000114E6 00                            DCB    0
.data:000114E7 00                            DCB    0
.data:000114E8 AF C2 00 00                   DCD aAif1tx1Input1            ; "AIF1TX1 Input 1"
.data:000114EC 00 00 00 00                   ALIGN 0x10
.data:000114F0 D4 C2 00 00                   DCD aIn1l                     ; "IN1L"
.data:000114F4 BF C2 00 00                   DCD aAif1tx2Input1            ; "AIF1TX2 Input 1"
.data:000114F8 00                            DCB    0
.data:000114F9 00                            DCB    0
.data:000114FA 00                            DCB    0
.data:000114FB 00                            DCB    0
.data:000114FC D4 C2 00 00                   DCD aIn1l                     ; "IN1L"
.data:00011500 D9 C2 00 00                   DCD aIn1muxlInput             ; "IN1MUXL Input"
.data:00011504 00 00 00 00                   ALIGN 8
.data:00011508 E7 C2 00 00                   DCD aIn1a                     ; "IN1A"
.data:0001150C EC C2 00 00                   DCD aTerMicSwitch             ; "Ter Mic Switch"
.data:00011510 01                            DCB    1
.data:00011511 00                            DCB    0
.data:00011512 00                            DCB    0
.data:00011513 00                            DCB    0
.data:00011514 00                            DCB    0
.data:00011515 00                            DCB    0
.data:00011516 00                            DCB    0
.data:00011517 00                            DCB    0
.data:00011518 00                            DCB    0
.data:00011519 00                            DCB    0
.data:0001151A 00                            DCB    0
.data:0001151B 00                            DCB    0
.data:0001151C 00                            DCB    0
.data:0001151D 00                            DCB    0
.data:0001151E 00                            DCB    0
.data:0001151F 00                            DCB    0
.data:00011520 00                            DCB    0
.data:00011521 00                            DCB    0
.data:00011522 00                            DCB    0
.data:00011523 00                            DCB    0
.data:00011524                               EXPORT test_modem_loopback_earphone
.data:00011524 2F C1 00 00                   test_modem_loopback_earphone DCD aEs705Rx1Enable
.data:00011524                                                             ; DATA XREF: LOAD:00000A80↑o
.data:00011524                                                             ; sub_66B0:loc_6812↑o
.data:00011524                                                             ; .got:test_modem_loopback_earphone_ptr↑o
.data:00011524                                                             ; "ES705 RX1 Enable"
.data:00011528 01                            DCB    1
.data:00011529 00                            DCB    0
.data:0001152A 00                            DCB    0
.data:0001152B 00                            DCB    0
.data:0001152C 00                            DCB    0
.data:0001152D 00                            DCB    0
.data:0001152E 00                            DCB    0
.data:0001152F 00                            DCB    0
.data:00011530 3C C0 00 00                   DCD aInternalRoute            ; "Internal Route"
.data:00011534 5D 00 00 00                   DCD off_5C+1
.data:00011538 00                            DCB    0
.data:00011539 00                            DCB    0
.data:0001153A 00                            DCB    0
.data:0001153B 00                            DCB    0
.data:0001153C CA C1 00 00                   DCD aEpoutInput1              ; "EPOUT Input 1"
.data:00011540 00                            DCB    0
.data:00011541 00                            DCB    0
.data:00011542 00                            DCB    0
.data:00011543 00                            DCB    0
.data:00011544 01 C2 00 00                   DCD aAif1rx1                  ; "AIF1RX1"
.data:00011548 DD C1 00 00                   DCD aEpoutDigitalVo           ; "EPOUT Digital Volume"
.data:0001154C 80 00 00 00                   DCD dword_80
.data:00011550 00                            DCB    0
.data:00011551 00                            DCB    0
.data:00011552 00                            DCB    0
.data:00011553 00                            DCB    0
.data:00011554 53 C1 00 00                   DCD aEpoutDigitalSw           ; "EPOUT Digital Switch"
.data:00011558 01                            DCB    1
.data:00011559 00                            DCB    0
.data:0001155A 00                            DCB    0
.data:0001155B 00                            DCB    0
.data:0001155C 00                            DCB    0
.data:0001155D 00                            DCB    0
.data:0001155E 00                            DCB    0
.data:0001155F 00                            DCB    0
.data:00011560 68 C1 00 00                   DCD aEarpieceSwitch           ; "Earpiece Switch"
.data:00011564 01                            DCB    1
.data:00011565 00                            DCB    0
.data:00011566 00                            DCB    0
.data:00011567 00                            DCB    0
.data:00011568 00                            DCB    0
.data:00011569 00                            DCB    0
.data:0001156A 00                            DCB    0
.data:0001156B 00                            DCB    0
.data:0001156C AF C2 00 00                   DCD aAif1tx1Input1            ; "AIF1TX1 Input 1"
.data:00011570 00                            DCB    0
.data:00011571 00                            DCB    0
.data:00011572 00                            DCB    0
.data:00011573 00                            DCB    0
.data:00011574 D8 C1 00 00                   DCD aIn2l                     ; "IN2L"
.data:00011578 BF C2 00 00                   DCD aAif1tx2Input1            ; "AIF1TX2 Input 1"
.data:0001157C 00 00 00 00                   ALIGN 0x10
.data:00011580 D8 C1 00 00                   DCD aIn2l                     ; "IN2L"
.data:00011584 AD C1 00 00                   DCD aIn2muxInput              ; "IN2MUX Input"
.data:00011588 00                            DCB    0
.data:00011589 00                            DCB    0
.data:0001158A 00                            DCB    0
.data:0001158B 00                            DCB    0
.data:0001158C CF C2 00 00                   DCD aIn2a                     ; "IN2A"
.data:00011590 9E C1 00 00                   DCD aSecMicSwitch             ; "Sec Mic Switch"
.data:00011594 01                            DCB    1
.data:00011595 00                            DCB    0
.data:00011596 00                            DCB    0
.data:00011597 00                            DCB    0
.data:00011598 00                            DCB    0
.data:00011599 00                            DCB    0
.data:0001159A 00                            DCB    0
.data:0001159B 00                            DCB    0
.data:0001159C 00                            DCB    0
.data:0001159D 00                            DCB    0
.data:0001159E 00                            DCB    0
.data:0001159F 00                            DCB    0
.data:000115A0 00                            DCB    0
.data:000115A1 00                            DCB    0
.data:000115A2 00                            DCB    0
.data:000115A3 00                            DCB    0
.data:000115A4 00                            DCB    0
.data:000115A5 00                            DCB    0
.data:000115A6 00                            DCB    0
.data:000115A7 00                            DCB    0
.data:000115A8                               EXPORT test_modem_loopback_headphone
.data:000115A8 2F C1 00 00                   test_modem_loopback_headphone DCD aEs705Rx1Enable
.data:000115A8                                                             ; DATA XREF: LOAD:00000970↑o
.data:000115A8                                                             ; sub_66B0:loc_6812↑o
.data:000115A8                                                             ; .got:test_modem_loopback_headphone_ptr↑o
.data:000115A8                                                             ; "ES705 RX1 Enable"
.data:000115AC 01                            DCB    1
.data:000115AD 00                            DCB    0
.data:000115AE 00                            DCB    0
.data:000115AF 00                            DCB    0
.data:000115B0 00                            DCB    0
.data:000115B1 00                            DCB    0
.data:000115B2 00                            DCB    0
.data:000115B3 00                            DCB    0
.data:000115B4 3C C0 00 00                   DCD aInternalRoute            ; "Internal Route"
.data:000115B8 5E                            DCB 0x5E ; ^
.data:000115B9 00                            DCB    0
.data:000115BA 00                            DCB    0
.data:000115BB 00                            DCB    0
.data:000115BC 00                            DCB    0
.data:000115BD 00                            DCB    0
.data:000115BE 00                            DCB    0
.data:000115BF 00                            DCB    0
.data:000115C0 AD C1 00 00                   DCD aIn2muxInput              ; "IN2MUX Input"
.data:000115C4 00 00 00 00                   ALIGN 8
.data:000115C8 BA C1 00 00                   DCD aIn2b                     ; "IN2B"
.data:000115CC BF C1 00 00                   DCD aIn2Volume                ; "IN2 Volume"
.data:000115D0 12                            DCB 0x12
.data:000115D1 00                            DCB    0
.data:000115D2 00                            DCB    0
.data:000115D3 00                            DCB    0
.data:000115D4 00                            DCB    0
.data:000115D5 00                            DCB    0
.data:000115D6 00                            DCB    0
.data:000115D7 00                            DCB    0
.data:000115D8 40 C1 00 00                   DCD aHeadsetMicSwit           ; "Headset Mic Switch"
.data:000115DC 01                            DCB    1
.data:000115DD 00                            DCB    0
.data:000115DE 00                            DCB    0
.data:000115DF 00                            DCB    0
.data:000115E0 00                            DCB    0
.data:000115E1 00                            DCB    0
.data:000115E2 00                            DCB    0
.data:000115E3 00                            DCB    0
.data:000115E4 AF C2 00 00                   DCD aAif1tx1Input1            ; "AIF1TX1 Input 1"
.data:000115E8 00                            DCB    0
.data:000115E9 00                            DCB    0
.data:000115EA 00                            DCB    0
.data:000115EB 00                            DCB    0
.data:000115EC D8 C1 00 00                   DCD aIn2l                     ; "IN2L"
.data:000115F0 BF C2 00 00                   DCD aAif1tx2Input1            ; "AIF1TX2 Input 1"
.data:000115F4 00 00 00 00                   ALIGN 8
.data:000115F8 D8 C1 00 00                   DCD aIn2l                     ; "IN2L"
.data:000115FC F2 C1 00 00                   DCD aHpoutlInput1             ; "HPOUTL Input 1"
.data:00011600 00                            DCB    0
.data:00011601 00                            DCB    0
.data:00011602 00                            DCB    0
.data:00011603 00                            DCB    0
.data:00011604 01 C2 00 00                   DCD aAif1rx1                  ; "AIF1RX1"
.data:00011608 1E C2 00 00                   DCD aHpoutrInput1             ; "HPOUTR Input 1"
.data:0001160C 00 00 00 00                   ALIGN 0x10
.data:00011610 01 C2 00 00                   DCD aAif1rx1                  ; "AIF1RX1"
.data:00011614 09 C2 00 00                   DCD aHpoutDigitalVo           ; "HPOUT Digital Volume"
.data:00011618 80 00 00 00                   DCD dword_80
.data:0001161C 00 00 00 00                   ALIGN 0x10
.data:00011620 78 C1 00 00                   DCD aHpoutDigitalSw           ; "HPOUT Digital Switch"
.data:00011624 01                            DCB    1
.data:00011625 00                            DCB    0
.data:00011626 00                            DCB    0
.data:00011627 00                            DCB    0
.data:00011628 00                            DCB    0
.data:00011629 00                            DCB    0
.data:0001162A 00                            DCB    0
.data:0001162B 00                            DCB    0
.data:0001162C 8D C1 00 00                   DCD aHeadphoneSwitc           ; "Headphone Switch"
.data:00011630 01                            DCB    1
.data:00011631 00                            DCB    0
.data:00011632 00                            DCB    0
.data:00011633 00                            DCB    0
.data:00011634 00                            DCB    0
.data:00011635 00                            DCB    0
.data:00011636 00                            DCB    0
.data:00011637 00                            DCB    0
.data:00011638 00                            DCB    0
.data:00011639 00                            DCB    0
.data:0001163A 00                            DCB    0
.data:0001163B 00                            DCB    0
.data:0001163C 00                            DCB    0
.data:0001163D 00                            DCB    0
.data:0001163E 00                            DCB    0
.data:0001163F 00                            DCB    0
.data:00011640 00                            DCB    0
.data:00011641 00                            DCB    0
.data:00011642 00                            DCB    0
.data:00011643 00                            DCB    0
.data:00011644 25 44 00 00                   off_11644 DCD sub_4424+1      ; DATA XREF: .data:0001165C↓o
.data:00011648                               EXPORT HMI
.data:00011648 54                            HMI DCB 0x54 ; T              ; DATA XREF: LOAD:00000940↑o
.data:00011649 4D                            DCB 0x4D ; M
.data:0001164A 57                            DCB 0x57 ; W
.data:0001164B 48                            DCB 0x48 ; H
.data:0001164C 01                            DCB    1
.data:0001164D 00                            DCB    0
.data:0001164E 00                            DCB    0
.data:0001164F 01                            DCB    1
.data:00011650 7F C3 00 00                   DCD aAudio                    ; "audio"
.data:00011654 85 C3 00 00                   DCD aMeizuAudioHwHa           ; "MEIZU audio HW HAL"
.data:00011658 98 C3 00 00                   DCD aTheAndroidOpen           ; "The Android Open Source Project"
.data:0001165C 44 16 01 00                   DCD off_11644
.data:00011660 00                            DCB    0
.data:00011661 00                            DCB    0
.data:00011662 00                            DCB    0
.data:00011663 00                            DCB    0
.data:00011664 00                            DCB    0
.data:00011665 00                            DCB    0
.data:00011666 00                            DCB    0
.data:00011667 00                            DCB    0
.data:00011668 00                            DCB    0
.data:00011669 00                            DCB    0
.data:0001166A 00                            DCB    0
.data:0001166B 00                            DCB    0
.data:0001166C 00                            DCB    0
.data:0001166D 00                            DCB    0
.data:0001166E 00                            DCB    0
.data:0001166F 00                            DCB    0
.data:00011670 00                            DCB    0
.data:00011671 00                            DCB    0
.data:00011672 00                            DCB    0
.data:00011673 00                            DCB    0
.data:00011674 00                            DCB    0
.data:00011675 00                            DCB    0
.data:00011676 00                            DCB    0
.data:00011677 00                            DCB    0
.data:00011678 00                            DCB    0
.data:00011679 00                            DCB    0
.data:0001167A 00                            DCB    0
.data:0001167B 00                            DCB    0
.data:0001167C 00                            DCB    0
.data:0001167D 00                            DCB    0
.data:0001167E 00                            DCB    0
.data:0001167F 00                            DCB    0
.data:00011680 00                            DCB    0
.data:00011681 00                            DCB    0
.data:00011682 00                            DCB    0
.data:00011683 00                            DCB    0
.data:00011684 00                            DCB    0
.data:00011685 00                            DCB    0
.data:00011686 00                            DCB    0
.data:00011687 00                            DCB    0
.data:00011688 00                            DCB    0
.data:00011689 00                            DCB    0
.data:0001168A 00                            DCB    0
.data:0001168B 00                            DCB    0
.data:0001168C 00                            DCB    0
.data:0001168D 00                            DCB    0
.data:0001168E 00                            DCB    0
.data:0001168F 00                            DCB    0
.data:00011690 00                            DCB    0
.data:00011691 00                            DCB    0
.data:00011692 00                            DCB    0
.data:00011693 00                            DCB    0
.data:00011694 00                            DCB    0
.data:00011695 00                            DCB    0
.data:00011696 00                            DCB    0
.data:00011697 00                            DCB    0
.data:00011698 00                            DCB    0
.data:00011699 00                            DCB    0
.data:0001169A 00                            DCB    0
.data:0001169B 00                            DCB    0
.data:0001169C 00                            DCB    0
.data:0001169D 00                            DCB    0
.data:0001169E 00                            DCB    0
.data:0001169F 00                            DCB    0
.data:000116A0 00                            DCB    0
.data:000116A1 00                            DCB    0
.data:000116A2 00                            DCB    0
.data:000116A3 00                            DCB    0
.data:000116A4 00                            DCB    0
.data:000116A5 00                            DCB    0
.data:000116A6 00                            DCB    0
.data:000116A7 00                            DCB    0
.data:000116A8 00                            DCB    0
.data:000116A9 00                            DCB    0
.data:000116AA 00                            DCB    0
.data:000116AB 00                            DCB    0
.data:000116AC 00                            DCB    0
.data:000116AD 00                            DCB    0
.data:000116AE 00                            DCB    0
.data:000116AF 00                            DCB    0
.data:000116B0 00                            DCB    0
.data:000116B1 00                            DCB    0
.data:000116B2 00                            DCB    0
.data:000116B3 00                            DCB    0
.data:000116B4 00                            DCB    0
.data:000116B5 00                            DCB    0
.data:000116B6 00                            DCB    0
.data:000116B7 00                            DCB    0
.data:000116B8 00                            DCB    0
.data:000116B9 00                            DCB    0
.data:000116BA 00                            DCB    0
.data:000116BB 00                            DCB    0
.data:000116BC 00                            DCB    0
.data:000116BD 00                            DCB    0
.data:000116BE 00                            DCB    0
.data:000116BF 00                            DCB    0
.data:000116C0 00                            DCB    0
.data:000116C1 00                            DCB    0
.data:000116C2 00                            DCB    0
.data:000116C3 00                            DCB    0
.data:000116C4 00                            DCB    0
.data:000116C5 00                            DCB    0
.data:000116C6 00                            DCB    0
.data:000116C7 00                            DCB    0
.data:000116C7                               ; .data ends
.data:000116C7
.bss:000116C8                               ; ===========================================================================
.bss:000116C8
.bss:000116C8                               ; Segment type: Uninitialized
.bss:000116C8                               AREA .bss, DATA
.bss:000116C8 ?? ?? ?? ??                   dword_116C8 % 4               ; DATA XREF: LOAD:00000C70↑o
.bss:000116C8                                                             ; LOAD:00000DE0↑o
.bss:000116C8                                                             ; test_set_hifi_gain↑o
.bss:000116C8                                                             ; test_set_hifi_gain+2↑o
.bss:000116C8                                                             ; test_set_hifi_gain+4↑w
.bss:000116C8                                                             ; .text:off_3B6C↑o
.bss:000116C8                                                             ; wav_player_start+22C↑o
.bss:000116C8                                                             ; wav_player_start+232↑o
.bss:000116C8                                                             ; wav_player_start+236↑r
.bss:000116C8                                                             ; wav_player_start+24E↑r
.bss:000116C8                                                             ; .text:off_4004↑o
.bss:000116C8                                                             ; sub_66B0+1A2↑o
.bss:000116C8                                                             ; sub_66B0+1AC↑o
.bss:000116C8                                                             ; sub_66B0+1AE↑w
.bss:000116C8                                                             ; .text:off_6CB0↑o
.bss:000116CC ?? ?? ?? ??                   dword_116CC % 4               ; DATA XREF: wav_player_stop↑o
.bss:000116CC                                                             ; wav_player_stop+2↑o
.bss:000116CC                                                             ; wav_player_stop+4↑w
.bss:000116CC                                                             ; .text:off_3B78↑o
.bss:000116CC                                                             ; wav_player_start+26↑o
.bss:000116CC                                                             ; wav_player_start+2A↑o
.bss:000116CC                                                             ; wav_player_start+2C↑w
.bss:000116CC                                                             ; wav_player_start+2F8↑o
.bss:000116CC                                                             ; wav_player_start+306↑o
.bss:000116CC                                                             ; wav_player_start+37E↑o
.bss:000116CC                                                             ; wav_player_start+390↑o
.bss:000116CC                                                             ; wav_player_start+3BA↑r
.bss:000116CC                                                             ; .text:off_3FC4↑o
.bss:000116CC                                                             ; .text:off_404C↑o
.bss:000116CC                                                             ; .text:off_4084↑o ...
.bss:000116D0 ?? ?? ?? ??                   dword_116D0 % 4               ; DATA XREF: wav_player_start+20C↑o
.bss:000116D0                                                             ; wav_player_start+210↑o
.bss:000116D0                                                             ; wav_player_start+212↑w
.bss:000116D0                                                             ; wav_player_start:loc_3E20↑o
.bss:000116D0                                                             ; wav_player_start+2A6↑o
.bss:000116D0                                                             ; wav_player_start+2A8↑r
.bss:000116D0                                                             ; wav_player_start+2F2↑o
.bss:000116D0                                                             ; wav_player_start+300↑o
.bss:000116D0                                                             ; wav_player_start+378↑o
.bss:000116D0                                                             ; wav_player_start+38E↑o
.bss:000116D0                                                             ; wav_player_start+3B0↑r
.bss:000116D0                                                             ; wav_player_start:loc_3F48↑o
.bss:000116D0                                                             ; wav_player_start+3CE↑o
.bss:000116D0                                                             ; wav_player_start+3D0↑r
.bss:000116D0                                                             ; wav_player_start+3FC↑o ...
.bss:000116D4 ??                            byte_116D4 % 1                ; DATA XREF: sub_5730+276↑o
.bss:000116D4                                                             ; sub_5730+27A↑o
.bss:000116D4                                                             ; sub_5730+27C↑r
.bss:000116D4                                                             ; sub_5730+32A↑o
.bss:000116D4                                                             ; sub_5730+330↑o
.bss:000116D4                                                             ; sub_5730+332↑w
.bss:000116D4                                                             ; .text:off_5F78↑o
.bss:000116D4                                                             ; .text:off_5FAC↑o
.bss:000116D5 ?? ?? ??                      ALIGN 4
.bss:000116D8 ?? ?? ?? ??                   dword_116D8 % 4               ; DATA XREF: sub_5730+282↑o
.bss:000116D8                                                             ; sub_5730+286↑o
.bss:000116D8                                                             ; sub_5730+288↑r
.bss:000116D8                                                             ; sub_5730+334↑o
.bss:000116D8                                                             ; sub_5730+33A↑o
.bss:000116D8                                                             ; sub_5730+33C↑w
.bss:000116D8                                                             ; .text:off_5F7C↑o
.bss:000116D8                                                             ; .text:off_5FB0↑o
.bss:000116DC ?? ?? ?? ??                   dword_116DC % 4               ; DATA XREF: sub_5730+28E↑o
.bss:000116DC                                                             ; sub_5730+294↑o
.bss:000116DC                                                             ; sub_5730+296↑r
.bss:000116DC                                                             ; sub_5730+33E↑o
.bss:000116DC                                                             ; sub_5730+344↑o
.bss:000116DC                                                             ; sub_5730+346↑w
.bss:000116DC                                                             ; .text:off_5F80↑o
.bss:000116DC                                                             ; .text:off_5FB4↑o
.bss:000116E0 ??                            unk_116E0 % 1                 ; DATA XREF: sub_A8E4+E↑o
.bss:000116E0                                                             ; sub_A8E4+10↑o
.bss:000116E0                                                             ; .text:off_A924↑o
.bss:000116E0                               ; .bss ends
.bss:000116E0
extern:000116E4                               ; ===========================================================================
extern:000116E4
extern:000116E4                               ; Segment type: Externs
extern:000116E4                               ; int __fastcall __cxa_finalize(void *)
extern:000116E4 00 00 00 00                   IMPORT __imp___cxa_finalize   ; CODE XREF: __cxa_finalize+8↑j
extern:000116E4                                                             ; DATA XREF: .got:__cxa_finalize_ptr↑o
extern:000116E8                               ; int __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)
extern:000116E8 00 00 00 00                   IMPORT __imp___cxa_atexit     ; CODE XREF: __cxa_atexit+8↑j
extern:000116E8                                                             ; DATA XREF: .got:__cxa_atexit_ptr↑o
extern:000116EC 00 00 00 00                   IMPORT __imp___register_atfork
extern:000116EC                                                             ; CODE XREF: __register_atfork+8↑j
extern:000116EC                                                             ; DATA XREF: .got:__register_atfork_ptr↑o
extern:000116F0 00 00 00 00                   IMPORT __imp_dladdr           ; CODE XREF: dladdr+8↑j
extern:000116F0                                                             ; DATA XREF: .got:dladdr_ptr↑o
extern:000116F4 00 00 00 00                   IMPORT __imp_NxpTfa98xx_GetSpeakerImpedance
extern:000116F4                                                             ; CODE XREF: NxpTfa98xx_GetSpeakerImpedance+8↑j
extern:000116F4                                                             ; DATA XREF: .got:NxpTfa98xx_GetSpeakerImpedance_ptr↑o
extern:000116F8 00 00 00 00                   IMPORT __imp_NxpTfa98xx_PowerOff
extern:000116F8                                                             ; CODE XREF: NxpTfa98xx_PowerOff+8↑j
extern:000116F8                                                             ; DATA XREF: .got:NxpTfa98xx_PowerOff_ptr↑o
extern:000116FC 00 00 00 00                   IMPORT __imp_NxpTfa98xx_PowerOn
extern:000116FC                                                             ; CODE XREF: NxpTfa98xx_PowerOn+8↑j
extern:000116FC                                                             ; DATA XREF: .got:NxpTfa98xx_PowerOn_ptr↑o
extern:00011700 00 00 00 00                   IMPORT __imp_NxpTfa98xx_ReCalibrate
extern:00011700                                                             ; CODE XREF: NxpTfa98xx_ReCalibrate+8↑j
extern:00011700                                                             ; DATA XREF: .got:NxpTfa98xx_ReCalibrate_ptr↑o
extern:00011704 00 00 00 00                   IMPORT __imp___gnu_Unwind_Find_exidx
extern:00011704                                                             ; CODE XREF: __gnu_Unwind_Find_exidx+8↑j
extern:00011704                                                             ; DATA XREF: .got:__gnu_Unwind_Find_exidx_ptr↑o
extern:00011708 00 00 00 00                   IMPORT __imp_NxpTfa98xx_SetMute
extern:00011708                                                             ; CODE XREF: NxpTfa98xx_SetMute+8↑j
extern:00011708                                                             ; DATA XREF: .got:NxpTfa98xx_SetMute_ptr↑o
extern:0001170C 00 00 00 00                   IMPORT __imp_NxpTfa98xx_StartUp
extern:0001170C                                                             ; CODE XREF: NxpTfa98xx_StartUp+8↑j
extern:0001170C                                                             ; DATA XREF: .got:NxpTfa98xx_StartUp_ptr↑o
extern:00011710 00 00 00 00                   IMPORT __imp_NxpTfa98xx_Stop  ; CODE XREF: NxpTfa98xx_Stop+8↑j
extern:00011710                                                             ; DATA XREF: .got:NxpTfa98xx_Stop_ptr↑o
extern:00011714 00 00 00 00                   IMPORT __imp_Open             ; CODE XREF: Open+8↑j
extern:00011714                                                             ; DATA XREF: .got:Open_ptr↑o
extern:00011718 00 00 00 00                   IMPORT __imp_SetAudioClock    ; CODE XREF: SetAudioClock+8↑j
extern:00011718                                                             ; DATA XREF: .got:SetAudioClock_ptr↑o
extern:0001171C 00 00 00 00                   IMPORT __imp_SetAudioLoopback ; CODE XREF: SetAudioLoopback+8↑j
extern:0001171C                                                             ; DATA XREF: .got:SetAudioLoopback_ptr↑o
extern:00011720 00 00 00 00                   IMPORT __imp_SetAudioVolume   ; CODE XREF: SetAudioVolume+8↑j
extern:00011720                                                             ; DATA XREF: .got:SetAudioVolume_ptr↑o
extern:00011724 00 00 00 00                   IMPORT __imp___aeabi_memclr   ; CODE XREF: __aeabi_memclr+8↑j
extern:00011724                                                             ; DATA XREF: .got:__aeabi_memclr_ptr↑o
extern:00011728 00 00 00 00                   IMPORT __imp___aeabi_memclr8  ; CODE XREF: __aeabi_memclr8+8↑j
extern:00011728                                                             ; DATA XREF: .got:__aeabi_memclr8_ptr↑o
extern:0001172C 00 00 00 00                   IMPORT __imp___aeabi_memcpy   ; CODE XREF: __aeabi_memcpy+8↑j
extern:0001172C                                                             ; DATA XREF: .got:__aeabi_memcpy_ptr↑o
extern:00011730 00 00 00 00                   IMPORT __imp___android_log_print
extern:00011730                                                             ; CODE XREF: __android_log_print+8↑j
extern:00011730                                                             ; DATA XREF: .got:__android_log_print_ptr↑o
extern:00011734 00 00 00 00                   IMPORT __imp___errno          ; CODE XREF: __errno+8↑j
extern:00011734                                                             ; DATA XREF: .got:__errno_ptr↑o
extern:00011738 00 00 00 00                   IMPORT __imp___fread_chk      ; CODE XREF: __fread_chk+8↑j
extern:00011738                                                             ; DATA XREF: .got:__fread_chk_ptr↑o
extern:0001173C 00 00 00 00                   IMPORT __imp___fwrite_chk     ; CODE XREF: __fwrite_chk+8↑j
extern:0001173C                                                             ; DATA XREF: .got:__fwrite_chk_ptr↑o
extern:00011740 00 00 00 00                   IMPORT __imp___read_chk       ; CODE XREF: __read_chk+8↑j
extern:00011740                                                             ; DATA XREF: .got:__read_chk_ptr↑o
extern:00011744 00 00 00 00                   IMPORT __imp___snprintf_chk   ; CODE XREF: __snprintf_chk+8↑j
extern:00011744                                                             ; DATA XREF: .got:__snprintf_chk_ptr↑o
extern:00011748 00 00 00 00                   IMPORT __imp___sprintf_chk    ; CODE XREF: __sprintf_chk+8↑j
extern:00011748                                                             ; DATA XREF: .got:__sprintf_chk_ptr↑o
extern:0001174C 00 00 00 00                   IMPORT __imp___stack_chk_fail ; CODE XREF: __stack_chk_fail+8↑j
extern:0001174C                                                             ; DATA XREF: .got:__stack_chk_fail_ptr↑o
extern:00011750 00 00 00 00                   IMPORT __stack_chk_guard      ; DATA XREF: pcm_data_dump+18↑o
extern:00011750                                                             ; pcm_data_dump+22↑r
extern:00011750                                                             ; pcm_data_dump+E0↑o
extern:00011750                                                             ; pcm_data_dump+E2↑r
extern:00011750                                                             ; wav_player_start+16↑o
extern:00011750                                                             ; wav_player_start+20↑r
extern:00011750                                                             ; wav_player_start+432↑o
extern:00011750                                                             ; wav_player_start+434↑r
extern:00011750                                                             ; is_headphone_on+A↑o
extern:00011750                                                             ; is_headphone_on+E↑r
extern:00011750                                                             ; is_headphone_on+50↑o
extern:00011750                                                             ; is_headphone_on+52↑r
extern:00011750                                                             ; adev_set_headset_volume+C↑o
extern:00011750                                                             ; adev_set_headset_volume+E↑r
extern:00011750                                                             ; adev_set_headset_volume+AA↑o ...
extern:00011754 00 00 00 00                   IMPORT __imp___strcat_chk     ; CODE XREF: __strcat_chk+8↑j
extern:00011754                                                             ; DATA XREF: .got:__strcat_chk_ptr↑o
extern:00011758                               ; int access(const char *name, int type)
extern:00011758 00 00 00 00                   IMPORT __imp_access           ; CODE XREF: access+8↑j
extern:00011758                                                             ; DATA XREF: .got:access_ptr↑o
extern:0001175C                               ; int atoi(const char *nptr)
extern:0001175C 00 00 00 00                   IMPORT __imp_atoi             ; CODE XREF: atoi+8↑j
extern:0001175C                                                             ; DATA XREF: .got:atoi_ptr↑o
extern:00011760                               ; void *calloc(size_t nmemb, size_t size)
extern:00011760 00 00 00 00                   IMPORT __imp_calloc           ; CODE XREF: calloc+8↑j
extern:00011760                                                             ; DATA XREF: .got:calloc_ptr↑o
extern:00011764                               ; int close(int fd)
extern:00011764 00 00 00 00                   IMPORT __imp_close            ; CODE XREF: close+8↑j
extern:00011764                                                             ; DATA XREF: .got:close_ptr↑o
extern:00011768 00 00 00 00                   IMPORT __imp_create_resampler ; CODE XREF: create_resampler+8↑j
extern:00011768                                                             ; DATA XREF: .got:create_resampler_ptr↑o
extern:0001176C                               ; int fclose(FILE *stream)
extern:0001176C 00 00 00 00                   IMPORT __imp_fclose           ; CODE XREF: fclose+8↑j
extern:0001176C                                                             ; DATA XREF: .got:fclose_ptr↑o
extern:00011770                               ; FILE *fopen(const char *filename, const char *modes)
extern:00011770 00 00 00 00                   IMPORT __imp_fopen            ; CODE XREF: fopen+8↑j
extern:00011770                                                             ; DATA XREF: .got:fopen_ptr↑o
extern:00011774                               ; void free(void *ptr)
extern:00011774 00 00 00 00                   IMPORT __imp_free             ; CODE XREF: free+8↑j
extern:00011774                                                             ; DATA XREF: .got:free_ptr↑o
extern:00011778                               ; int fseek(FILE *stream, int off, int whence)
extern:00011778 00 00 00 00                   IMPORT __imp_fseek            ; CODE XREF: fseek+8↑j
extern:00011778                                                             ; DATA XREF: .got:fseek_ptr↑o
extern:0001177C                               ; double log10(double x)
extern:0001177C 00 00 00 00                   IMPORT __imp_log10            ; CODE XREF: log10+8↑j
extern:0001177C                                                             ; DATA XREF: .got:log10_ptr↑o
extern:00011780                               ; void *malloc(size_t size)
extern:00011780 00 00 00 00                   IMPORT __imp_malloc           ; CODE XREF: malloc+8↑j
extern:00011780                                                             ; DATA XREF: .got:malloc_ptr↑o
extern:00011784 00 00 00 00                   IMPORT __imp_mixer_close      ; CODE XREF: mixer_close+8↑j
extern:00011784                                                             ; DATA XREF: .got:mixer_close_ptr↑o
extern:00011788 00 00 00 00                   IMPORT __imp_mixer_ctl_get_num_values
extern:00011788                                                             ; CODE XREF: mixer_ctl_get_num_values+8↑j
extern:00011788                                                             ; DATA XREF: .got:mixer_ctl_get_num_values_ptr↑o
extern:0001178C 00 00 00 00                   IMPORT __imp_mixer_ctl_set_enum_by_string
extern:0001178C                                                             ; CODE XREF: mixer_ctl_set_enum_by_string+8↑j
extern:0001178C                                                             ; DATA XREF: .got:mixer_ctl_set_enum_by_string_ptr↑o
extern:00011790 00 00 00 00                   IMPORT __imp_mixer_ctl_set_value
extern:00011790                                                             ; CODE XREF: mixer_ctl_set_value+8↑j
extern:00011790                                                             ; DATA XREF: .got:mixer_ctl_set_value_ptr↑o
extern:00011794 00 00 00 00                   IMPORT __imp_mixer_get_ctl_by_name
extern:00011794                                                             ; CODE XREF: mixer_get_ctl_by_name+8↑j
extern:00011794                                                             ; DATA XREF: .got:mixer_get_ctl_by_name_ptr↑o
extern:00011798 00 00 00 00                   IMPORT __imp_mixer_open       ; CODE XREF: mixer_open+8↑j
extern:00011798                                                             ; DATA XREF: .got:mixer_open_ptr↑o
extern:0001179C                               ; int mkdir(const char *path, __mode_t mode)
extern:0001179C 00 00 00 00                   IMPORT __imp_mkdir            ; CODE XREF: mkdir+8↑j
extern:0001179C                                                             ; DATA XREF: .got:mkdir_ptr↑o
extern:000117A0                               ; int open(const char *file, int oflag, ...)
extern:000117A0 00 00 00 00                   IMPORT __imp_open             ; CODE XREF: open+8↑j
extern:000117A0                                                             ; DATA XREF: .got:open_ptr↑o
extern:000117A4 00 00 00 00                   IMPORT __imp_pcm_close        ; CODE XREF: pcm_close+8↑j
extern:000117A4                                                             ; DATA XREF: .got:pcm_close_ptr↑o
extern:000117A8 00 00 00 00                   IMPORT __imp_pcm_frames_to_bytes
extern:000117A8                                                             ; CODE XREF: pcm_frames_to_bytes+8↑j
extern:000117A8                                                             ; DATA XREF: .got:pcm_frames_to_bytes_ptr↑o
extern:000117AC 00 00 00 00                   IMPORT __imp_pcm_get_buffer_size
extern:000117AC                                                             ; CODE XREF: pcm_get_buffer_size+8↑j
extern:000117AC                                                             ; DATA XREF: .got:pcm_get_buffer_size_ptr↑o
extern:000117B0 00 00 00 00                   IMPORT __imp_pcm_get_error    ; CODE XREF: pcm_get_error+8↑j
extern:000117B0                                                             ; DATA XREF: .got:pcm_get_error_ptr↑o
extern:000117B4 00 00 00 00                   IMPORT __imp_pcm_get_htimestamp
extern:000117B4                                                             ; CODE XREF: pcm_get_htimestamp+8↑j
extern:000117B4                                                             ; DATA XREF: .got:pcm_get_htimestamp_ptr↑o
extern:000117B8 00 00 00 00                   IMPORT __imp_pcm_is_ready     ; CODE XREF: pcm_is_ready+8↑j
extern:000117B8                                                             ; DATA XREF: .got:pcm_is_ready_ptr↑o
extern:000117BC 00 00 00 00                   IMPORT __imp_pcm_open         ; CODE XREF: pcm_open+8↑j
extern:000117BC                                                             ; DATA XREF: .got:pcm_open_ptr↑o
extern:000117C0 00 00 00 00                   IMPORT __imp_pcm_params_free  ; CODE XREF: pcm_params_free+8↑j
extern:000117C0                                                             ; DATA XREF: .got:pcm_params_free_ptr↑o
extern:000117C4 00 00 00 00                   IMPORT __imp_pcm_params_get   ; CODE XREF: pcm_params_get+8↑j
extern:000117C4                                                             ; DATA XREF: .got:pcm_params_get_ptr↑o
extern:000117C8 00 00 00 00                   IMPORT __imp_pcm_params_get_max
extern:000117C8                                                             ; CODE XREF: pcm_params_get_max+8↑j
extern:000117C8                                                             ; DATA XREF: .got:pcm_params_get_max_ptr↑o
extern:000117CC 00 00 00 00                   IMPORT __imp_pcm_params_get_min
extern:000117CC                                                             ; CODE XREF: pcm_params_get_min+8↑j
extern:000117CC                                                             ; DATA XREF: .got:pcm_params_get_min_ptr↑o
extern:000117D0 00 00 00 00                   IMPORT __imp_pcm_prepare      ; CODE XREF: pcm_prepare+8↑j
extern:000117D0                                                             ; DATA XREF: .got:pcm_prepare_ptr↑o
extern:000117D4 00 00 00 00                   IMPORT __imp_pcm_read         ; CODE XREF: pcm_read+8↑j
extern:000117D4                                                             ; DATA XREF: .got:pcm_read_ptr↑o
extern:000117D8 00 00 00 00                   IMPORT __imp_pcm_stop         ; CODE XREF: pcm_stop+8↑j
extern:000117D8                                                             ; DATA XREF: .got:pcm_stop_ptr↑o
extern:000117DC 00 00 00 00                   IMPORT __imp_pcm_write        ; CODE XREF: pcm_write+8↑j
extern:000117DC                                                             ; DATA XREF: .got:pcm_write_ptr↑o
extern:000117E0 00 00 00 00                   IMPORT __imp_property_get     ; CODE XREF: property_get+8↑j
extern:000117E0                                                             ; DATA XREF: .got:property_get_ptr↑o
extern:000117E4 00 00 00 00                   IMPORT __imp_property_set     ; CODE XREF: property_set+8↑j
extern:000117E4                                                             ; DATA XREF: .got:property_set_ptr↑o
extern:000117E8                               ; int pthread_create(pthread_t *newthread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg)
extern:000117E8 00 00 00 00                   IMPORT __imp_pthread_create   ; CODE XREF: pthread_create+8↑j
extern:000117E8                                                             ; DATA XREF: .got:pthread_create_ptr↑o
extern:000117EC                               ; int pthread_join(pthread_t th, void **thread_return)
extern:000117EC 00 00 00 00                   IMPORT __imp_pthread_join     ; CODE XREF: pthread_join+8↑j
extern:000117EC                                                             ; DATA XREF: .got:pthread_join_ptr↑o
extern:000117F0                               ; int pthread_mutex_lock(pthread_mutex_t *mutex)
extern:000117F0 00 00 00 00                   IMPORT __imp_pthread_mutex_lock
extern:000117F0                                                             ; CODE XREF: pthread_mutex_lock+8↑j
extern:000117F0                                                             ; DATA XREF: .got:pthread_mutex_lock_ptr↑o
extern:000117F4                               ; int pthread_mutex_unlock(pthread_mutex_t *mutex)
extern:000117F4 00 00 00 00                   IMPORT __imp_pthread_mutex_unlock
extern:000117F4                                                             ; CODE XREF: pthread_mutex_unlock+8↑j
extern:000117F4                                                             ; DATA XREF: .got:pthread_mutex_unlock_ptr↑o
extern:000117F8 00 00 00 00                   IMPORT __imp_release_resampler
extern:000117F8                                                             ; CODE XREF: release_resampler+8↑j
extern:000117F8                                                             ; DATA XREF: .got:release_resampler_ptr↑o
extern:000117FC                               ; __sighandler_t signal(int sig, __sighandler_t handler)
extern:000117FC 00 00 00 00                   IMPORT __imp_signal           ; CODE XREF: signal+8↑j
extern:000117FC                                                             ; DATA XREF: .got:signal_ptr↑o
extern:00011800 00 00 00 00                   IMPORT __imp_str_parms_add_str
extern:00011800                                                             ; CODE XREF: str_parms_add_str+8↑j
extern:00011800                                                             ; DATA XREF: .got:str_parms_add_str_ptr↑o
extern:00011804 00 00 00 00                   IMPORT __imp_str_parms_create ; CODE XREF: str_parms_create+8↑j
extern:00011804                                                             ; DATA XREF: .got:str_parms_create_ptr↑o
extern:00011808 00 00 00 00                   IMPORT __imp_str_parms_create_str
extern:00011808                                                             ; CODE XREF: str_parms_create_str+8↑j
extern:00011808                                                             ; DATA XREF: .got:str_parms_create_str_ptr↑o
extern:0001180C 00 00 00 00                   IMPORT __imp_str_parms_destroy
extern:0001180C                                                             ; CODE XREF: str_parms_destroy+8↑j
extern:0001180C                                                             ; DATA XREF: .got:str_parms_destroy_ptr↑o
extern:00011810 00 00 00 00                   IMPORT __imp_str_parms_get_str
extern:00011810                                                             ; CODE XREF: str_parms_get_str+8↑j
extern:00011810                                                             ; DATA XREF: .got:str_parms_get_str_ptr↑o
extern:00011814 00 00 00 00                   IMPORT __imp_str_parms_to_str ; CODE XREF: str_parms_to_str+8↑j
extern:00011814                                                             ; DATA XREF: .got:str_parms_to_str_ptr↑o
extern:00011818                               ; int strcmp(const char *s1, const char *s2)
extern:00011818 00 00 00 00                   IMPORT __imp_strcmp           ; CODE XREF: strcmp+8↑j
extern:00011818                                                             ; DATA XREF: .got:strcmp_ptr↑o
extern:0001181C                               ; char *strdup(const char *s)
extern:0001181C 00 00 00 00                   IMPORT __imp_strdup           ; CODE XREF: strdup+8↑j
extern:0001181C                                                             ; DATA XREF: .got:strdup_ptr↑o
extern:00011820                               ; char *strerror(int errnum)
extern:00011820 00 00 00 00                   IMPORT __imp_strerror         ; CODE XREF: strerror+8↑j
extern:00011820                                                             ; DATA XREF: .got:strerror_ptr↑o
extern:00011824                               ; size_t strlen(const char *s)
extern:00011824 00 00 00 00                   IMPORT __imp_strlen           ; CODE XREF: strlen+8↑j
extern:00011824                                                             ; DATA XREF: .got:strlen_ptr↑o
extern:00011828                               ; int strncmp(const char *s1, const char *s2, size_t n)
extern:00011828 00 00 00 00                   IMPORT __imp_strncmp          ; CODE XREF: strncmp+8↑j
extern:00011828                                                             ; DATA XREF: .got:strncmp_ptr↑o
extern:0001182C                               ; int usleep(__useconds_t useconds)
extern:0001182C 00 00 00 00                   IMPORT __imp_usleep           ; CODE XREF: usleep+8↑j
extern:0001182C                                                             ; DATA XREF: .got:usleep_ptr↑o
extern:00011830                               ; void *XML_GetBuffer(XML_Parser parser, int len)
extern:00011830 00 00 00 00                   IMPORT __imp_XML_GetBuffer    ; CODE XREF: XML_GetBuffer+8↑j
extern:00011830                                                             ; DATA XREF: .got:XML_GetBuffer_ptr↑o
extern:00011834                               ; enum XML_Status XML_ParseBuffer(XML_Parser parser, int len, int isFinal)
extern:00011834 00 00 00 00                   IMPORT __imp_XML_ParseBuffer  ; CODE XREF: XML_ParseBuffer+8↑j
extern:00011834                                                             ; DATA XREF: .got:XML_ParseBuffer_ptr↑o
extern:00011838                               ; XML_Parser XML_ParserCreate(const XML_Char *encoding)
extern:00011838 00 00 00 00                   IMPORT __imp_XML_ParserCreate ; CODE XREF: XML_ParserCreate+8↑j
extern:00011838                                                             ; DATA XREF: .got:XML_ParserCreate_ptr↑o
extern:0001183C                               ; void XML_ParserFree(XML_Parser parser)
extern:0001183C 00 00 00 00                   IMPORT __imp_XML_ParserFree   ; CODE XREF: XML_ParserFree+8↑j
extern:0001183C                                                             ; DATA XREF: .got:XML_ParserFree_ptr↑o
extern:00011840                               ; void XML_SetElementHandler(XML_Parser parser, XML_StartElementHandler start, XML_EndElementHandler end)
extern:00011840 00 00 00 00                   IMPORT __imp_XML_SetElementHandler
extern:00011840                                                             ; CODE XREF: XML_SetElementHandler+8↑j
extern:00011840                                                             ; DATA XREF: .got:XML_SetElementHandler_ptr↑o
extern:00011844                               ; void XML_SetUserData(XML_Parser parser, void *userData)
extern:00011844 00 00 00 00                   IMPORT __imp_XML_SetUserData  ; CODE XREF: XML_SetUserData+8↑j
extern:00011844                                                             ; DATA XREF: .got:XML_SetUserData_ptr↑o
extern:00011848 00 00 00 00                   IMPORT __imp___aeabi_memcpy4  ; CODE XREF: __aeabi_memcpy4+8↑j
extern:00011848                                                             ; DATA XREF: .got:__aeabi_memcpy4_ptr↑o
extern:0001184C 00 00 00 00                   IMPORT __imp_mixer_ctl_get_array
extern:0001184C                                                             ; CODE XREF: mixer_ctl_get_array+8↑j
extern:0001184C                                                             ; DATA XREF: .got:mixer_ctl_get_array_ptr↑o
extern:00011850 00 00 00 00                   IMPORT __imp_mixer_ctl_get_enum_string
extern:00011850                                                             ; CODE XREF: mixer_ctl_get_enum_string+8↑j
extern:00011850                                                             ; DATA XREF: .got:mixer_ctl_get_enum_string_ptr↑o
extern:00011854 00 00 00 00                   IMPORT __imp_mixer_ctl_get_name
extern:00011854                                                             ; CODE XREF: mixer_ctl_get_name+8↑j
extern:00011854                                                             ; DATA XREF: .got:mixer_ctl_get_name_ptr↑o
extern:00011858 00 00 00 00                   IMPORT __imp_mixer_ctl_get_num_enums
extern:00011858                                                             ; CODE XREF: mixer_ctl_get_num_enums+8↑j
extern:00011858                                                             ; DATA XREF: .got:mixer_ctl_get_num_enums_ptr↑o
extern:0001185C 00 00 00 00                   IMPORT __imp_mixer_ctl_get_type
extern:0001185C                                                             ; CODE XREF: mixer_ctl_get_type+8↑j
extern:0001185C                                                             ; DATA XREF: .got:mixer_ctl_get_type_ptr↑o
extern:00011860 00 00 00 00                   IMPORT __imp_mixer_ctl_get_value
extern:00011860                                                             ; CODE XREF: mixer_ctl_get_value+8↑j
extern:00011860                                                             ; DATA XREF: .got:mixer_ctl_get_value_ptr↑o
extern:00011864 00 00 00 00                   IMPORT __imp_mixer_ctl_set_array
extern:00011864                                                             ; CODE XREF: mixer_ctl_set_array+8↑j
extern:00011864                                                             ; DATA XREF: .got:mixer_ctl_set_array_ptr↑o
extern:00011868 00 00 00 00                   IMPORT __imp_mixer_get_ctl    ; CODE XREF: mixer_get_ctl+8↑j
extern:00011868                                                             ; DATA XREF: .got:mixer_get_ctl_ptr↑o
extern:0001186C 00 00 00 00                   IMPORT __imp_mixer_get_num_ctls
extern:0001186C                                                             ; CODE XREF: mixer_get_num_ctls+8↑j
extern:0001186C                                                             ; DATA XREF: .got:mixer_get_num_ctls_ptr↑o
extern:00011870                               ; void *realloc(void *ptr, size_t size)
extern:00011870 00 00 00 00                   IMPORT __imp_realloc          ; CODE XREF: realloc+8↑j
extern:00011870                                                             ; DATA XREF: .got:realloc_ptr↑o
extern:00011874                               ; int printf(const char *format, ...)
extern:00011874 00 00 00 00                   IMPORT __imp_printf           ; CODE XREF: printf+8↑j
extern:00011874                                                             ; DATA XREF: .got:printf_ptr↑o
extern:00011878                               ; int puts(const char *s)
extern:00011878 00 00 00 00                   IMPORT __imp_puts             ; CODE XREF: puts+8↑j
extern:00011878                                                             ; DATA XREF: .got:puts_ptr↑o
extern:0001187C 00 00 00 00                   IMPORT __imp___aeabi_memcpy8  ; CODE XREF: __aeabi_memcpy8+8↑j
extern:0001187C                                                             ; DATA XREF: .got:__aeabi_memcpy8_ptr↑o
extern:00011880                               ; void abort(void)
extern:00011880 00 00 00 00                   IMPORT __imp_abort            ; CODE XREF: abort+8↑j
extern:00011880                                                             ; DATA XREF: .got:abort_ptr↑o
extern:00011884                               ; int fprintf(FILE *stream, const char *format, ...)
extern:00011884 00 00 00 00                   IMPORT __imp_fprintf          ; CODE XREF: fprintf+8↑j
extern:00011884                                                             ; DATA XREF: .got:fprintf_ptr↑o
extern:00011888                               ; struct _IO_FILE *stderr
extern:00011888 00 00 00 00                   IMPORT stderr                 ; DATA XREF: sub_A794+C↑o
extern:00011888                                                             ; sub_A794+10↑r
extern:00011888                                                             ; sub_AE80+E↑o
extern:00011888                                                             ; sub_AE80+12↑r
extern:00011888                                                             ; .got:stderr_ptr↑o
extern:00011888
abs:0001188C                               ; ===========================================================================
abs:0001188C
abs:0001188C                               ; Segment type: Absolute symbols
abs:0001188C                               _edata = 0x116C8
abs:00011890                               _end = 0x116E1
abs:00011894                               __bss_start = 0x116C8
abs:00011894
abs:00011894                               END

LOAD:00000000                               ;
LOAD:00000000                               ; +-------------------------------------------------------------------------+
LOAD:00000000                               ; |      This file was generated by The Interactive Disassembler (IDA)      |
LOAD:00000000                               ; |           Copyright (c) 2022 Hex-Rays, <support@hex-rays.com>           |
LOAD:00000000                               ; +-------------------------------------------------------------------------+
LOAD:00000000                               ;
LOAD:00000000                               ; Input SHA256 : 95C5C2B7FC5EE21FFBB99A4889E693BBBE93C538F38CC6155A9CF807E7F96E68
LOAD:00000000                               ; Input MD5    : 02BF908C6B86910A48865F82A73F1ABF
LOAD:00000000                               ; Input CRC32  : A5633F18
LOAD:00000000
LOAD:00000000                               ; File Name   : Z:\work\LineageOS\vendor\meizu\m86\proprietary\lib\hw\dis_effect.m86.so
LOAD:00000000                               ; Format      : ELF for ARM (Shared object)
LOAD:00000000                               ; Interpreter '/system/bin/linker'
LOAD:00000000                               ; Needed Library 'liblog.so'
LOAD:00000000                               ; Needed Library 'libdis_core.so'
LOAD:00000000                               ; Needed Library 'libc++.so'
LOAD:00000000                               ; Needed Library 'libdl.so'
LOAD:00000000                               ; Needed Library 'libc.so'
LOAD:00000000                               ; Needed Library 'libm.so'
LOAD:00000000                               ; Shared Name 'dis_effect.m86.so'
LOAD:00000000                               ;
LOAD:00000000                               ; Options     : EF_ARM_SOFT_FLOAT
LOAD:00000000                               ; EABI version: 5
LOAD:00000000                               ;
LOAD:00000000
LOAD:00000000                               ; Processor       : ARM
LOAD:00000000                               ; ARM architecture: ARMv7
LOAD:00000000                               ; Target assembler: Generic assembler for ARM
LOAD:00000000                               ; Byte sex        : Little endian
LOAD:00000000
LOAD:00000000                               ; ===========================================================================
LOAD:00000000
LOAD:00000000                               ; Segment type: Pure code
LOAD:00000000                               AREA LOAD, CODE, ALIGN=12
LOAD:00000000                               CODE32
LOAD:00000000 7F 45 4C 46                   dword_0 DCD 0x464C457F        ; CODE XREF: sub_758+C↓j
LOAD:00000000                                                             ; DATA XREF: LOAD:000001B0↓o
LOAD:00000000                                                             ; LOAD:000001C0↓o
LOAD:00000000                                                             ; LOAD:000001D0↓o
LOAD:00000000                                                             ; LOAD:000001E0↓o
LOAD:00000000                                                             ; LOAD:000001F0↓o
LOAD:00000000                                                             ; LOAD:00000200↓o
LOAD:00000000                                                             ; LOAD:00000210↓o
LOAD:00000000                                                             ; LOAD:00000220↓o
LOAD:00000000                                                             ; LOAD:00000230↓o
LOAD:00000000                                                             ; LOAD:00000240↓o
LOAD:00000000                                                             ; LOAD:00000250↓o
LOAD:00000000                                                             ; LOAD:00000260↓o
LOAD:00000000                                                             ; LOAD:00000270↓o
LOAD:00000000                                                             ; LOAD:00000280↓o ...
LOAD:00000000                                                             ; File format: \x7FELF
LOAD:00000004 01                            byte_4 DCB 1                  ; File class: 32-bit
LOAD:00000005 01                            DCB 1                         ; Data encoding: little-endian
LOAD:00000006 01                            DCB 1                         ; File version
LOAD:00000007 00                            DCB 0                         ; OS/ABI: UNIX System V ABI
LOAD:00000008 00                            DCB 0                         ; ABI Version
LOAD:00000009 00 00 00 00 00 00 00          DCB 0, 0, 0, 0, 0, 0, 0       ; Padding
LOAD:00000010 03 00                         DCW 3                         ; File type: Shared object
LOAD:00000012 28 00                         DCW 0x28                      ; Machine: ARM
LOAD:00000014 01 00 00 00                   DCD 1                         ; File version
LOAD:00000018 00 00 00 00                   DCD 0                         ; Entry point
LOAD:0000001C 34 00 00 00                   DCD 0x34                      ; PHT file offset
LOAD:00000020 60 32 00 00                   DCD 0x3260                    ; SHT file offset
LOAD:00000024 00 02 00 05                   DCD 0x5000200                 ; Processor-specific flags
LOAD:00000028 34 00                         DCW 0x34                      ; ELF header size
LOAD:0000002A 20 00                         DCW 0x20                      ; PHT entry size
LOAD:0000002C 09 00                         DCW 9                         ; Number of entries in PHT
LOAD:0000002E 28 00                         DCW 0x28                      ; SHT entry size
LOAD:00000030 1B 00                         DCW 0x1B                      ; Number of entries in SHT
LOAD:00000032 1A 00                         DCW 0x1A                      ; SHT entry index for string table
LOAD:00000034                               ; ELF32 Program Header
LOAD:00000034                               ; PHT Entry 0
LOAD:00000034 06 00 00 00                   dword_34 DCD 6                ; DATA XREF: LOAD:0000003C↓o
LOAD:00000034                                                             ; Type: PHDR
LOAD:00000038 34 00 00 00                   DCD 0x34                      ; File offset
LOAD:0000003C 34 00 00 00                   DCD dword_34                  ; Virtual address
LOAD:00000040 34 00 00 00                   DCD 0x34                      ; Physical address
LOAD:00000044 20 01 00 00                   DCD 0x120                     ; Size in file image
LOAD:00000048 20 01 00 00                   DCD 0x120                     ; Size in memory image
LOAD:0000004C 04 00 00 00                   DCD 4                         ; Flags
LOAD:00000050 04 00 00 00                   DCD 4                         ; Alignment
LOAD:00000054                               ; PHT Entry 1
LOAD:00000054 03 00 00 00                   DCD 3                         ; Type: INTERP
LOAD:00000058 54 01 00 00                   DCD 0x154                     ; File offset
LOAD:0000005C 54 01 00 00                   DCD aSystemBinLinke           ; Virtual address
LOAD:00000060 54 01 00 00                   DCD 0x154                     ; Physical address
LOAD:00000064 13 00 00 00                   DCD 0x13                      ; Size in file image
LOAD:00000068 13 00 00 00                   DCD 0x13                      ; Size in memory image
LOAD:0000006C 04 00 00 00                   DCD 4                         ; Flags
LOAD:00000070 01 00 00 00                   DCD 1                         ; Alignment
LOAD:00000074                               ; PHT Entry 2
LOAD:00000074 01 00 00 00                   DCD 1                         ; Type: LOAD
LOAD:00000078 00 00 00 00                   DCD 0                         ; File offset
LOAD:0000007C 00 00 00 00                   DCD 0                         ; Virtual address
LOAD:00000080 00 00 00 00                   DCD 0                         ; Physical address
LOAD:00000084 30 29 00 00                   DCD 0x2930                    ; Size in file image
LOAD:00000088 30 29 00 00                   DCD 0x2930                    ; Size in memory image
LOAD:0000008C 05 00 00 00                   DCD 5                         ; Flags
LOAD:00000090 00 10 00 00                   DCD 0x1000                    ; Alignment
LOAD:00000094                               ; PHT Entry 3
LOAD:00000094 01 00 00 00                   DCD 1                         ; Type: LOAD
LOAD:00000098 2C 2E 00 00                   DCD 0x2E2C                    ; File offset
LOAD:0000009C 2C 3E 00 00                   DCD off_3E2C                  ; Virtual address
LOAD:000000A0 2C 3E 00 00                   DCD 0x3E2C                    ; Physical address
LOAD:000000A4 5C 02 00 00                   DCD 0x25C                     ; Size in file image
LOAD:000000A8 5D 02 00 00                   DCD 0x25D                     ; Size in memory image
LOAD:000000AC 06 00 00 00                   DCD 6                         ; Flags
LOAD:000000B0 00 10 00 00                   DCD 0x1000                    ; Alignment
LOAD:000000B4                               ; PHT Entry 4
LOAD:000000B4 02 00 00 00                   DCD 2                         ; Type: DYNAMIC
LOAD:000000B8 78 2E 00 00                   DCD 0x2E78                    ; File offset
LOAD:000000BC 78 3E 00 00                   DCD stru_3E78                 ; Virtual address
LOAD:000000C0 78 3E 00 00                   DCD 0x3E78                    ; Physical address
LOAD:000000C4 18 01 00 00                   DCD 0x118                     ; Size in file image
LOAD:000000C8 18 01 00 00                   DCD 0x118                     ; Size in memory image
LOAD:000000CC 06 00 00 00                   DCD 6                         ; Flags
LOAD:000000D0 04 00 00 00                   DCD 4                         ; Alignment
LOAD:000000D4                               ; PHT Entry 5
LOAD:000000D4 04 00 00 00                   DCD 4                         ; Type: NOTE
LOAD:000000D8 68 01 00 00                   DCD 0x168                     ; File offset
LOAD:000000DC 68 01 00 00                   DCD dword_168                 ; Virtual address
LOAD:000000E0 68 01 00 00                   DCD 0x168                     ; Physical address
LOAD:000000E4 38 00 00 00                   DCD 0x38                      ; Size in file image
LOAD:000000E8 38 00 00 00                   DCD 0x38                      ; Size in memory image
LOAD:000000EC 04 00 00 00                   DCD 4                         ; Flags
LOAD:000000F0 04 00 00 00                   DCD 4                         ; Alignment
LOAD:000000F4                               ; PHT Entry 6
LOAD:000000F4 51 E5 74 64                   DCD 0x6474E551                ; Type: STACK
LOAD:000000F8 00 00 00 00                   DCD 0                         ; File offset
LOAD:000000FC 00 00 00 00                   DCD 0                         ; Virtual address
LOAD:00000100 00 00 00 00                   DCD 0                         ; Physical address
LOAD:00000104 00 00 00 00                   DCD 0                         ; Size in file image
LOAD:00000108 00 00 00 00                   DCD 0                         ; Size in memory image
LOAD:0000010C 06 00 00 00                   DCD 6                         ; Flags
LOAD:00000110 00 00 00 00                   DCD 0                         ; Alignment
LOAD:00000114                               ; PHT Entry 7
LOAD:00000114 01 00 00 70                   DCD 0x70000001                ; Type: EXIDX
LOAD:00000118 98 20 00 00                   DCD 0x2098                    ; File offset
LOAD:0000011C 98 20 00 00                   DCD unk_2098                  ; Virtual address
LOAD:00000120 98 20 00 00                   DCD 0x2098                    ; Physical address
LOAD:00000124 60 01 00 00                   DCD 0x160                     ; Size in file image
LOAD:00000128 60 01 00 00                   DCD 0x160                     ; Size in memory image
LOAD:0000012C 04 00 00 00                   DCD 4                         ; Flags
LOAD:00000130 04 00 00 00                   DCD 4                         ; Alignment
LOAD:00000134                               ; PHT Entry 8
LOAD:00000134 52 E5 74 64                   DCD 0x6474E552                ; Type: RO-AFTER
LOAD:00000138 2C 2E 00 00                   DCD 0x2E2C                    ; File offset
LOAD:0000013C 2C 3E 00 00                   DCD off_3E2C                  ; Virtual address
LOAD:00000140 2C 3E 00 00                   DCD 0x3E2C                    ; Physical address
LOAD:00000144 D4 01 00 00                   DCD 0x1D4                     ; Size in file image
LOAD:00000148 D4 01 00 00                   DCD 0x1D4                     ; Size in memory image
LOAD:0000014C 06 00 00 00                   DCD 6                         ; Flags
LOAD:00000150 04 00 00 00                   DCD 4                         ; Alignment
LOAD:00000154 2F 73 79 73 74 65 6D 2F 62 69+aSystemBinLinke DCB "/system/bin/linker",0
LOAD:00000154 6E 2F 6C 69 6E 6B 65 72 00                                  ; DATA XREF: LOAD:0000005C↑o
LOAD:00000167 00                            DCB 0
LOAD:00000168                               ; ELF Note Entry
LOAD:00000168 08 00 00 00                   dword_168 DCD 8               ; DATA XREF: LOAD:000000DC↑o
LOAD:00000168                                                             ; Name Size
LOAD:0000016C 04 00 00 00                   DCD 4                         ; Desc Size
LOAD:00000170 01 00 00 00                   DCD 1                         ; Type
LOAD:00000174 41 6E 64 72 6F 69 64 00       aAndroid DCB "Android",0      ; Name
LOAD:0000017C 18 00 00 00                   DCB 0x18, 0, 0, 0             ; Desc
LOAD:00000180                               ; ELF Note Entry
LOAD:00000180 04 00 00 00                   DCD 4                         ; Name Size
LOAD:00000184 10 00 00 00                   DCD 0x10                      ; Desc Size
LOAD:00000188 03 00 00 00                   DCD 3                         ; Type: NT_GNU_BUILD_ID
LOAD:0000018C 47 4E 55 00                   aGnu DCB "GNU",0              ; Name
LOAD:00000190 E7 8F 7B 6E F5 40 B7 EE 2D D9+DCB 0xE7, 0x8F, 0x7B, 0x6E, 0xF5, 0x40, 0xB7, 0xEE, 0x2D, 0xD9, 0xCF, 0xD4, 0x23, 0x9B, 0x79, 0xB1 ; Desc
LOAD:000001A0                               ; ELF Symbol Table
LOAD:000001A0 00 00 00 00 00 00 00 00 00 00+Elf32_Sym <0>
LOAD:000001B0 01 00 00 00 00 00 00 00 00 00+Elf32_Sym <aCxaFinalize - byte_350, dword_0, 0, 0x12, 0, 0> ; "__cxa_finalize"
LOAD:000001C0 2F 00 00 00 00 00 00 00 00 00+Elf32_Sym <aCxaAtexit - byte_350, dword_0, 0, 0x12, 0, 0> ; "__cxa_atexit"
LOAD:000001D0 3C 00 00 00 00 00 00 00 00 00+Elf32_Sym <aRegisterAtfork - byte_350, dword_0, 0, 0x12, 0, 0> ; "__register_atfork"
LOAD:000001E0 52 00 00 00 00 00 00 00 00 00+Elf32_Sym <aDladdr - byte_350, dword_0, 0, 0x12, 0, 0> ; "dladdr"
LOAD:000001F0 62 00 00 00 00 00 00 00 00 00+Elf32_Sym <aAeabiMemclr4 - byte_350, dword_0, 0, 0x12, 0, 0> ; "__aeabi_memclr4"
LOAD:00000200 79 00 00 00 00 00 00 00 00 00+Elf32_Sym <aSnprintfChk - byte_350, dword_0, 0, 0x12, 0, 0> ; "__snprintf_chk"
LOAD:00000210 88 00 00 00 00 00 00 00 00 00+Elf32_Sym <aAndroidLogPrin - byte_350, dword_0, 0, 0x12, 0, 0> ; "__android_log_print"
LOAD:00000220 9C 00 00 00 00 00 00 00 00 00+Elf32_Sym <aDeinitEffect - byte_350, dword_0, 0, 0x12, 0, 0> ; "deinit_effect"
LOAD:00000230 AA 00 00 00 00 00 00 00 00 00+Elf32_Sym <aFree - byte_350, dword_0, 0, 0x12, 0, 0> ; "free"
LOAD:00000240 AF 00 00 00 00 00 00 00 00 00+Elf32_Sym <aGetEffectCurre - byte_350, dword_0, 0, 0x12, 0, 0> ; "get_effect_current_level"
LOAD:00000250 C8 00 00 00 00 00 00 00 00 00+Elf32_Sym <aInitEffect - byte_350, dword_0, 0, 0x12, 0, 0> ; "init_effect"
LOAD:00000260 D4 00 00 00 00 00 00 00 00 00+Elf32_Sym <aMalloc - byte_350, dword_0, 0, 0x12, 0, 0> ; "malloc"
LOAD:00000270 DB 00 00 00 00 00 00 00 00 00+Elf32_Sym <aSetEffect - byte_350, dword_0, 0, 0x12, 0, 0> ; "set_effect"
LOAD:00000280 E6 00 00 00 00 00 00 00 00 00+Elf32_Sym <aSetEffectCurre - byte_350, dword_0, 0, 0x12, 0, 0> ; "set_effect_current_level"
LOAD:00000290 FF 00 00 00 00 00 00 00 00 00+Elf32_Sym <aStackChkFail - byte_350, dword_0, 0, 0x12, 0, 0> ; "__stack_chk_fail"
LOAD:000002A0 10 01 00 00 00 00 00 00 00 00+Elf32_Sym <aStackChkGuard - byte_350, dword_0, 0, 0x11, 0, 0> ; "__stack_chk_guard"
LOAD:000002B0 22 01 00 00 00 00 00 00 00 00+Elf32_Sym <aAbort - byte_350, dword_0, 0, 0x12, 0, 0> ; "abort"
LOAD:000002C0 28 01 00 00 00 00 00 00 00 00+Elf32_Sym <aFprintf - byte_350, dword_0, 0, 0x12, 0, 0> ; "fprintf"
LOAD:000002D0 30 01 00 00 00 00 00 00 00 00+Elf32_Sym <aStderr - byte_350, dword_0, 0, 0x11, 0, 0> ; "stderr"
LOAD:000002E0 37 01 00 00 00 00 00 00 00 00+Elf32_Sym <aAeabiMemcpy - byte_350, dword_0, 0, 0x12, 0, 0> ; "__aeabi_memcpy"
LOAD:000002F0 46 01 00 00 00 00 00 00 00 00+Elf32_Sym <aGnuUnwindFindE - byte_350, dword_0, 0, 0x12, 0, 0> ; "__gnu_Unwind_Find_exidx"
LOAD:00000300 5E 01 00 00 00 00 00 00 00 00+Elf32_Sym <aAeabiMemclr8 - byte_350, dword_0, 0, 0x12, 0, 0> ; "__aeabi_memclr8"
LOAD:00000310 7A 01 00 00 89 40 00 00 00 00+Elf32_Sym <aEnd - byte_350, 0x4089, 0, 0x10, 0, 0xFFF1> ; "_end"
LOAD:00000320 7F 01 00 00 88 40 00 00 00 00+Elf32_Sym <aEdata - byte_350, unk_4088, 0, 0x10, 0, 0xFFF1> ; "_edata"
LOAD:00000330 4E 00 00 00 08 40 00 00 80 00+Elf32_Sym <aHmi - byte_350, HMI, 0x80, 0x11, 0, 0x15> ; "HMI"
LOAD:00000340 6E 01 00 00 88 40 00 00 00 00+Elf32_Sym <aBssStart - byte_350, unk_4088, 0, 0x10, 0, 0xFFF1> ; "__bss_start"
LOAD:00000350                               ; ELF String Table
LOAD:00000350 00                            byte_350 DCB 0                ; DATA XREF: LOAD:000001B0↑o
LOAD:00000350                                                             ; LOAD:000001C0↑o
LOAD:00000350                                                             ; LOAD:000001D0↑o
LOAD:00000350                                                             ; LOAD:000001E0↑o
LOAD:00000350                                                             ; LOAD:000001F0↑o
LOAD:00000350                                                             ; LOAD:00000200↑o
LOAD:00000350                                                             ; LOAD:00000210↑o
LOAD:00000350                                                             ; LOAD:00000220↑o
LOAD:00000350                                                             ; LOAD:00000230↑o
LOAD:00000350                                                             ; LOAD:00000240↑o
LOAD:00000350                                                             ; LOAD:00000250↑o
LOAD:00000350                                                             ; LOAD:00000260↑o
LOAD:00000350                                                             ; LOAD:00000270↑o
LOAD:00000350                                                             ; LOAD:00000280↑o
LOAD:00000350                                                             ; LOAD:00000290↑o ...
LOAD:00000351 5F 5F 63 78 61 5F 66 69 6E 61+aCxaFinalize DCB "__cxa_finalize",0
LOAD:00000351 6C 69 7A 65 00                                              ; DATA XREF: LOAD:000001B0↑o
LOAD:00000360 4C 49 42 43 00                aLibc DCB "LIBC",0            ; DATA XREF: LOAD:00000598↓o
LOAD:00000360                                                             ; LOAD:000005C8↓o
LOAD:00000365 6C 69 62 63 2E 73 6F 00       aLibcSo DCB "libc.so",0       ; DATA XREF: LOAD:00000588↓o
LOAD:0000036D 64 69 73 5F 65 66 66 65 63 74+aDisEffectM86So DCB "dis_effect.m86.so",0
LOAD:0000036D 2E 6D 38 36 2E 73 6F 00                                     ; DATA XREF: LOAD:00000580↓o
LOAD:0000037F 5F 5F 63 78 61 5F 61 74 65 78+aCxaAtexit DCB "__cxa_atexit",0
LOAD:0000037F 69 74 00                                                    ; DATA XREF: LOAD:000001C0↑o
LOAD:0000038C 5F 5F 72 65 67 69 73 74 65 72+aRegisterAtfork DCB "__register_atfork",0
LOAD:0000038C 5F 61 74 66 6F 72 6B 00                                     ; DATA XREF: LOAD:000001D0↑o
LOAD:0000039E 48 4D 49 00                   aHmi DCB "HMI",0              ; DATA XREF: LOAD:00000330↑o
LOAD:000003A2 64 6C 61 64 64 72 00          aDladdr DCB "dladdr",0        ; DATA XREF: LOAD:000001E0↑o
LOAD:000003A9 6C 69 62 64 6C 2E 73 6F 00    aLibdlSo DCB "libdl.so",0     ; DATA XREF: LOAD:000005B8↓o
LOAD:000003B2 5F 5F 61 65 61 62 69 5F 6D 65+aAeabiMemclr4 DCB "__aeabi_memclr4",0
LOAD:000003B2 6D 63 6C 72 34 00                                           ; DATA XREF: LOAD:000001F0↑o
LOAD:000003C2 4C 49 42 43 5F 4E 00          aLibcN DCB "LIBC_N",0         ; DATA XREF: LOAD:000005A8↓o
LOAD:000003C9 5F 5F 73 6E 70 72 69 6E 74 66+aSnprintfChk DCB "__snprintf_chk",0
LOAD:000003C9 5F 63 68 6B 00                                              ; DATA XREF: LOAD:00000200↑o
LOAD:000003D8 5F 5F 61 6E 64 72 6F 69 64 5F+aAndroidLogPrin DCB "__android_log_print",0
LOAD:000003D8 6C 6F 67 5F 70 72 69 6E 74 00                               ; DATA XREF: LOAD:00000210↑o
LOAD:000003EC 64 65 69 6E 69 74 5F 65 66 66+aDeinitEffect DCB "deinit_effect",0
LOAD:000003EC 65 63 74 00                                                 ; DATA XREF: LOAD:00000220↑o
LOAD:000003FA 66 72 65 65 00                aFree DCB "free",0            ; DATA XREF: LOAD:00000230↑o
LOAD:000003FF 67 65 74 5F 65 66 66 65 63 74+aGetEffectCurre DCB "get_effect_current_level",0
LOAD:000003FF 5F 63 75 72 72 65 6E 74 5F 6C+                              ; DATA XREF: LOAD:00000240↑o
LOAD:00000418 69 6E 69 74 5F 65 66 66 65 63+aInitEffect DCB "init_effect",0
LOAD:00000418 74 00                                                       ; DATA XREF: LOAD:00000250↑o
LOAD:00000424 6D 61 6C 6C 6F 63 00          aMalloc DCB "malloc",0        ; DATA XREF: LOAD:00000260↑o
LOAD:0000042B 73 65 74 5F 65 66 66 65 63 74+aSetEffect DCB "set_effect",0 ; DATA XREF: LOAD:00000270↑o
LOAD:00000436 73 65 74 5F 65 66 66 65 63 74+aSetEffectCurre DCB "set_effect_current_level",0
LOAD:00000436 5F 63 75 72 72 65 6E 74 5F 6C+                              ; DATA XREF: LOAD:00000280↑o
LOAD:0000044F 5F 5F 73 74 61 63 6B 5F 63 68+aStackChkFail DCB "__stack_chk_fail",0
LOAD:0000044F 6B 5F 66 61 69 6C 00                                        ; DATA XREF: LOAD:00000290↑o
LOAD:00000460 5F 5F 73 74 61 63 6B 5F 63 68+aStackChkGuard DCB "__stack_chk_guard",0
LOAD:00000460 6B 5F 67 75 61 72 64 00                                     ; DATA XREF: LOAD:000002A0↑o
LOAD:00000472 61 62 6F 72 74 00             aAbort DCB "abort",0          ; DATA XREF: LOAD:000002B0↑o
LOAD:00000478 66 70 72 69 6E 74 66 00       aFprintf DCB "fprintf",0      ; DATA XREF: LOAD:000002C0↑o
LOAD:00000480 73 74 64 65 72 72 00          aStderr DCB "stderr",0        ; DATA XREF: LOAD:000002D0↑o
LOAD:00000487 5F 5F 61 65 61 62 69 5F 6D 65+aAeabiMemcpy DCB "__aeabi_memcpy",0
LOAD:00000487 6D 63 70 79 00                                              ; DATA XREF: LOAD:000002E0↑o
LOAD:00000496 5F 5F 67 6E 75 5F 55 6E 77 69+aGnuUnwindFindE DCB "__gnu_Unwind_Find_exidx",0
LOAD:00000496 6E 64 5F 46 69 6E 64 5F 65 78+                              ; DATA XREF: LOAD:000002F0↑o
LOAD:000004AE 5F 5F 61 65 61 62 69 5F 6D 65+aAeabiMemclr8 DCB "__aeabi_memclr8",0
LOAD:000004AE 6D 63 6C 72 38 00                                           ; DATA XREF: LOAD:00000300↑o
LOAD:000004BE 5F 5F 62 73 73 5F 73 74 61 72+aBssStart DCB "__bss_start",0 ; DATA XREF: LOAD:00000340↑o
LOAD:000004CA 5F 65 6E 64 00                aEnd DCB "_end",0             ; DATA XREF: LOAD:00000310↑o
LOAD:000004CF 5F 65 64 61 74 61 00          aEdata DCB "_edata",0         ; DATA XREF: LOAD:00000320↑o
LOAD:000004D6 6C 69 62 6C 6F 67 2E 73 6F 00 aLiblogSo DCB "liblog.so",0
LOAD:000004E0 6C 69 62 64 69 73 5F 63 6F 72+aLibdisCoreSo DCB "libdis_core.so",0
LOAD:000004EF 6C 69 62 63 2B 2B 2E 73 6F 00 aLibcSo_0 DCB "libc++.so",0
LOAD:000004F9 6C 69 62 6D 2E 73 6F 00       aLibmSo DCB "libm.so",0
LOAD:00000501 00 00 00                      DCB 0, 0, 0
LOAD:00000504                               ; ELF GNU Hash Table
LOAD:00000504 03 00 00 00                   elf_gnu_hash_nbuckets DCD 3
LOAD:00000508 17 00 00 00                   elf_gnu_hash_symbias DCD 0x17
LOAD:0000050C 01 00 00 00                   elf_gnu_hash_bitmask_nwords DCD 1
LOAD:00000510 05 00 00 00                   elf_gnu_hash_shift DCD 5
LOAD:00000514 08 44 00 29                   elf_gnu_hash_indexes DCD 0x29004408
LOAD:00000518 17 00 00 00 19 00 00 00 00 00+elf_gnu_hash_bucket DCD 0x17, 0x19, 0
LOAD:00000524 BA E3 92 7C 43 45 D5 EC 62 EF+elf_gnu_hash_chain DCD 0x7C92E3BA, 0xECD54543, 0xB87EF62, 0x1C5871D9
LOAD:00000534                               ; ELF GNU Symbol Version Table
LOAD:00000534 00 00                         DCW 0
LOAD:00000536 02 00                         DCW 2                         ; __cxa_finalize@@LIBC
LOAD:00000538 02 00                         DCW 2                         ; __cxa_atexit@@LIBC
LOAD:0000053A 02 00                         DCW 2                         ; __register_atfork@@LIBC
LOAD:0000053C 04 00                         DCW 4                         ; dladdr@@LIBC
LOAD:0000053E 03 00                         DCW 3                         ; __aeabi_memclr4@@LIBC_N
LOAD:00000540 02 00                         DCW 2                         ; __snprintf_chk@@LIBC
LOAD:00000542 00 00                         DCW 0                         ; local  symbol: __android_log_print
LOAD:00000544 00 00                         DCW 0                         ; local  symbol: deinit_effect
LOAD:00000546 02 00                         DCW 2                         ; free@@LIBC
LOAD:00000548 00 00                         DCW 0                         ; local  symbol: get_effect_current_level
LOAD:0000054A 00 00                         DCW 0                         ; local  symbol: init_effect
LOAD:0000054C 02 00                         DCW 2                         ; malloc@@LIBC
LOAD:0000054E 00 00                         DCW 0                         ; local  symbol: set_effect
LOAD:00000550 00 00                         DCW 0                         ; local  symbol: set_effect_current_level
LOAD:00000552 02 00                         DCW 2                         ; __stack_chk_fail@@LIBC
LOAD:00000554 02 00                         DCW 2                         ; __stack_chk_guard@@LIBC
LOAD:00000556 02 00                         DCW 2                         ; abort@@LIBC
LOAD:00000558 02 00                         DCW 2                         ; fprintf@@LIBC
LOAD:0000055A 02 00                         DCW 2                         ; stderr@@LIBC
LOAD:0000055C 03 00                         DCW 3                         ; __aeabi_memcpy@@LIBC_N
LOAD:0000055E 03 00                         DCW 3                         ; __gnu_Unwind_Find_exidx@@LIBC_N
LOAD:00000560 03 00                         DCW 3                         ; __aeabi_memclr8@@LIBC_N
LOAD:00000562 01 00                         DCW 1                         ; global symbol: _end
LOAD:00000564 01 00                         DCW 1                         ; global symbol: _edata
LOAD:00000566 01 00                         DCW 1                         ; global symbol: HMI
LOAD:00000568 01 00                         DCW 1                         ; global symbol: __bss_start
LOAD:0000056A 00 00                         DCW 0
LOAD:0000056C                               ; ELF GNU Symbol Version Definitions
LOAD:0000056C 01 00 01 00 01 00 01 00 CF 46+Elf32_Verdef <1, 1, 1, 1, 0xAC46CF, 0x14, 0>
LOAD:00000580 1D 00 00 00 00 00 00 00       Elf32_Verdaux <aDisEffectM86So - byte_350, 0> ; "dis_effect.m86.so"
LOAD:00000588                               ; ELF GNU Symbol Version Requirements
LOAD:00000588 01 00 02 00 15 00 00 00 10 00+Elf32_Verneed <1, 2, aLibcSo - byte_350, 0x10, 0x30> ; "libc.so"
LOAD:00000598 63 0D 05 00 00 00 02 00 10 00+Elf32_Vernaux <0x50D63, 0, 2, aLibc - byte_350, 0x10> ; "LIBC"
LOAD:000005A8 3E 69 0D 05 00 00 03 00 72 00+Elf32_Vernaux <0x50D693E, 0, 3, aLibcN - byte_350, 0> ; "LIBC_N"
LOAD:000005B8 01 00 01 00 59 00 00 00 10 00+Elf32_Verneed <1, 1, aLibdlSo - byte_350, 0x10, 0> ; "libdl.so"
LOAD:000005C8 63 0D 05 00 00 00 04 00 10 00+Elf32_Vernaux <0x50D63, 0, 4, aLibc - byte_350, 0> ; "LIBC"
LOAD:000005D8                               ; ELF REL Relocation Table
LOAD:000005D8 2C 3E 00 00 17 00 00 00       Elf32_Rel <0x3E2C, 0x17>      ; R_ARM_RELATIVE
LOAD:000005E0 38 3E 00 00 17 00 00 00       Elf32_Rel <0x3E38, 0x17>      ; R_ARM_RELATIVE
LOAD:000005E8 3C 3E 00 00 17 00 00 00       Elf32_Rel <0x3E3C, 0x17>      ; R_ARM_RELATIVE
LOAD:000005F0 40 3E 00 00 17 00 00 00       Elf32_Rel <0x3E40, 0x17>      ; R_ARM_RELATIVE
LOAD:000005F8 44 3E 00 00 17 00 00 00       Elf32_Rel <0x3E44, 0x17>      ; R_ARM_RELATIVE
LOAD:00000600 48 3E 00 00 17 00 00 00       Elf32_Rel <0x3E48, 0x17>      ; R_ARM_RELATIVE
LOAD:00000608 4C 3E 00 00 17 00 00 00       Elf32_Rel <0x3E4C, 0x17>      ; R_ARM_RELATIVE
LOAD:00000610 50 3E 00 00 17 00 00 00       Elf32_Rel <0x3E50, 0x17>      ; R_ARM_RELATIVE
LOAD:00000618 54 3E 00 00 17 00 00 00       Elf32_Rel <0x3E54, 0x17>      ; R_ARM_RELATIVE
LOAD:00000620 58 3E 00 00 17 00 00 00       Elf32_Rel <0x3E58, 0x17>      ; R_ARM_RELATIVE
LOAD:00000628 5C 3E 00 00 17 00 00 00       Elf32_Rel <0x3E5C, 0x17>      ; R_ARM_RELATIVE
LOAD:00000630 60 3E 00 00 17 00 00 00       Elf32_Rel <0x3E60, 0x17>      ; R_ARM_RELATIVE
LOAD:00000638 64 3E 00 00 17 00 00 00       Elf32_Rel <0x3E64, 0x17>      ; R_ARM_RELATIVE
LOAD:00000640 68 3E 00 00 17 00 00 00       Elf32_Rel <0x3E68, 0x17>      ; R_ARM_RELATIVE
LOAD:00000648 6C 3E 00 00 17 00 00 00       Elf32_Rel <0x3E6C, 0x17>      ; R_ARM_RELATIVE
LOAD:00000650 70 3E 00 00 17 00 00 00       Elf32_Rel <0x3E70, 0x17>      ; R_ARM_RELATIVE
LOAD:00000658 74 3E 00 00 17 00 00 00       Elf32_Rel <0x3E74, 0x17>      ; R_ARM_RELATIVE
LOAD:00000660 98 3F 00 00 17 00 00 00       Elf32_Rel <0x3F98, 0x17>      ; R_ARM_RELATIVE
LOAD:00000668 9C 3F 00 00 17 00 00 00       Elf32_Rel <0x3F9C, 0x17>      ; R_ARM_RELATIVE
LOAD:00000670 A0 3F 00 00 17 00 00 00       Elf32_Rel <0x3FA0, 0x17>      ; R_ARM_RELATIVE
LOAD:00000678 00 40 00 00 17 00 00 00       Elf32_Rel <0x4000, 0x17>      ; R_ARM_RELATIVE
LOAD:00000680 04 40 00 00 17 00 00 00       Elf32_Rel <0x4004, 0x17>      ; R_ARM_RELATIVE
LOAD:00000688 10 40 00 00 17 00 00 00       Elf32_Rel <0x4010, 0x17>      ; R_ARM_RELATIVE
LOAD:00000690 14 40 00 00 17 00 00 00       Elf32_Rel <0x4014, 0x17>      ; R_ARM_RELATIVE
LOAD:00000698 18 40 00 00 17 00 00 00       Elf32_Rel <0x4018, 0x17>      ; R_ARM_RELATIVE
LOAD:000006A0 1C 40 00 00 17 00 00 00       Elf32_Rel <0x401C, 0x17>      ; R_ARM_RELATIVE
LOAD:000006A8 90 3F 00 00 15 10 00 00       Elf32_Rel <0x3F90, 0x1015>    ; R_ARM_GLOB_DAT __stack_chk_guard
LOAD:000006B0 94 3F 00 00 15 13 00 00       Elf32_Rel <0x3F94, 0x1315>    ; R_ARM_GLOB_DAT stderr
LOAD:000006B8                               ; ELF JMPREL Relocation Table
LOAD:000006B8 B0 3F 00 00 16 01 00 00       Elf32_Rel <0x3FB0, 0x116>     ; R_ARM_JUMP_SLOT __cxa_finalize
LOAD:000006C0 B4 3F 00 00 16 02 00 00       Elf32_Rel <0x3FB4, 0x216>     ; R_ARM_JUMP_SLOT __cxa_atexit
LOAD:000006C8 B8 3F 00 00 16 03 00 00       Elf32_Rel <0x3FB8, 0x316>     ; R_ARM_JUMP_SLOT __register_atfork
LOAD:000006D0 BC 3F 00 00 16 0C 00 00       Elf32_Rel <0x3FBC, 0xC16>     ; R_ARM_JUMP_SLOT malloc
LOAD:000006D8 C0 3F 00 00 16 05 00 00       Elf32_Rel <0x3FC0, 0x516>     ; R_ARM_JUMP_SLOT __aeabi_memclr4
LOAD:000006E0 C4 3F 00 00 16 07 00 00       Elf32_Rel <0x3FC4, 0x716>     ; R_ARM_JUMP_SLOT __android_log_print
LOAD:000006E8 C8 3F 00 00 16 09 00 00       Elf32_Rel <0x3FC8, 0x916>     ; R_ARM_JUMP_SLOT free
LOAD:000006F0 CC 3F 00 00 16 0D 00 00       Elf32_Rel <0x3FCC, 0xD16>     ; R_ARM_JUMP_SLOT set_effect
LOAD:000006F8 D0 3F 00 00 16 0E 00 00       Elf32_Rel <0x3FD0, 0xE16>     ; R_ARM_JUMP_SLOT set_effect_current_level
LOAD:00000700 D4 3F 00 00 16 0A 00 00       Elf32_Rel <0x3FD4, 0xA16>     ; R_ARM_JUMP_SLOT get_effect_current_level
LOAD:00000708 D8 3F 00 00 16 0B 00 00       Elf32_Rel <0x3FD8, 0xB16>     ; R_ARM_JUMP_SLOT init_effect
LOAD:00000710 DC 3F 00 00 16 08 00 00       Elf32_Rel <0x3FDC, 0x816>     ; R_ARM_JUMP_SLOT deinit_effect
LOAD:00000718 E0 3F 00 00 16 0F 00 00       Elf32_Rel <0x3FE0, 0xF16>     ; R_ARM_JUMP_SLOT __stack_chk_fail
LOAD:00000720 E4 3F 00 00 16 11 00 00       Elf32_Rel <0x3FE4, 0x1116>    ; R_ARM_JUMP_SLOT abort
LOAD:00000728 E8 3F 00 00 16 12 00 00       Elf32_Rel <0x3FE8, 0x1216>    ; R_ARM_JUMP_SLOT fprintf
LOAD:00000730 EC 3F 00 00 16 14 00 00       Elf32_Rel <0x3FEC, 0x1416>    ; R_ARM_JUMP_SLOT __aeabi_memcpy
LOAD:00000738 F0 3F 00 00 16 16 00 00       Elf32_Rel <0x3FF0, 0x1616>    ; R_ARM_JUMP_SLOT __aeabi_memclr8
LOAD:00000740 F4 3F 00 00 16 04 00 00       Elf32_Rel <0x3FF4, 0x416>     ; R_ARM_JUMP_SLOT dladdr
LOAD:00000748 F8 3F 00 00 16 06 00 00       Elf32_Rel <0x3FF8, 0x616>     ; R_ARM_JUMP_SLOT __snprintf_chk
LOAD:00000750 FC 3F 00 00 16 15 00 00       Elf32_Rel <0x3FFC, 0x1516>    ; R_ARM_JUMP_SLOT __gnu_Unwind_Find_exidx
LOAD:00000750                               ; LOAD ends
LOAD:00000750
.plt:00000758                               ; ===========================================================================
.plt:00000758
.plt:00000758                               ; Segment type: Pure code
.plt:00000758                               AREA .plt, CODE
.plt:00000758                               CODE32
.plt:00000758
.plt:00000758                               ; =============== S U B R O U T I N E =======================================
.plt:00000758
.plt:00000758
.plt:00000758                               ; void sub_758()
.plt:00000758                               sub_758
.plt:00000758 04 E0 2D E5                   PUSH            {LR}
.plt:0000075C 04 E0 9F E5                   LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x768)
.plt:00000760 0E E0 8F E0                   ADD             LR, PC, LR    ; _GLOBAL_OFFSET_TABLE_
.plt:00000764 08 F0 BE E5                   LDR             PC, [LR,#(off_3FAC - 0x3FA4)]! ; dword_0
.plt:00000764
.plt:00000764                               ; End of function sub_758
.plt:00000764
.plt:00000764                               ; ---------------------------------------------------------------------------
.plt:00000768 3C 38 00 00                   off_768 DCD _GLOBAL_OFFSET_TABLE_ - 0x768
.plt:00000768                                                             ; DATA XREF: sub_758+4↑r
.plt:0000076C                               ; [0000000C BYTES: COLLAPSED FUNCTION __cxa_finalize. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00000778                               ; [0000000C BYTES: COLLAPSED FUNCTION __cxa_atexit. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00000784                               ; [0000000C BYTES: COLLAPSED FUNCTION __register_atfork. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00000790                               ; [0000000C BYTES: COLLAPSED FUNCTION malloc. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000079C                               ; [0000000C BYTES: COLLAPSED FUNCTION __aeabi_memclr4. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000007A8                               ; [0000000C BYTES: COLLAPSED FUNCTION __android_log_print. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000007B4                               ; [0000000C BYTES: COLLAPSED FUNCTION free. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000007C0                               ; [0000000C BYTES: COLLAPSED FUNCTION set_effect. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000007CC                               ; [0000000C BYTES: COLLAPSED FUNCTION set_effect_current_level. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000007D8                               ; [0000000C BYTES: COLLAPSED FUNCTION get_effect_current_level. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000007E4                               ; [0000000C BYTES: COLLAPSED FUNCTION init_effect. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000007F0                               ; [0000000C BYTES: COLLAPSED FUNCTION deinit_effect. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:000007FC                               ; [0000000C BYTES: COLLAPSED FUNCTION __stack_chk_fail. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00000808                               ; [0000000C BYTES: COLLAPSED FUNCTION abort. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00000814                               ; [0000000C BYTES: COLLAPSED FUNCTION fprintf. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00000820                               ; [0000000C BYTES: COLLAPSED FUNCTION __aeabi_memcpy. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000082C                               ; [0000000C BYTES: COLLAPSED FUNCTION __aeabi_memclr8. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00000838                               ; [0000000C BYTES: COLLAPSED FUNCTION dladdr. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00000844                               ; [0000000C BYTES: COLLAPSED FUNCTION __snprintf_chk. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00000850                               ; [0000000C BYTES: COLLAPSED FUNCTION __gnu_Unwind_Find_exidx. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000085C                               ; ===========================================================================
.text:0000085C
.text:0000085C                               ; Segment type: Pure code
.text:0000085C                               AREA .text, CODE
.text:0000085C                               CODE32
.text:0000085C
.text:0000085C                               ; =============== S U B R O U T I N E =======================================
.text:0000085C
.text:0000085C                               ; Attributes: bp-based frame
.text:0000085C
.text:0000085C                               ; int sub_85C()
.text:0000085C                               sub_85C                       ; DATA XREF: .fini_array:off_3E2C↓o
.text:0000085C 00 48 2D E9                   PUSH            {R11,LR}
.text:00000860 04 B0 8D E2                   ADD             R11, SP, #4
.text:00000864 0C 30 9F E5                   LDR             R3, =(off_4000 - 0x870)
.text:00000868 03 30 8F E0                   ADD             R3, PC, R3    ; off_4000
.text:0000086C 03 00 A0 E1                   MOV             R0, R3        ; void *
.text:00000870 BD FF FF EB                   BL              __cxa_finalize
.text:00000870
.text:00000874 00 88 BD E8                   POP             {R11,PC}
.text:00000874
.text:00000874                               ; End of function sub_85C
.text:00000874
.text:00000874                               ; ---------------------------------------------------------------------------
.text:00000878 90 37 00 00                   off_878 DCD off_4000 - 0x870  ; DATA XREF: sub_85C+8↑r
.text:0000087C
.text:0000087C                               ; =============== S U B R O U T I N E =======================================
.text:0000087C
.text:0000087C                               ; Attributes: bp-based frame
.text:0000087C
.text:0000087C                               ; int (*__fastcall sub_87C(int (*result)(void)))(void)
.text:0000087C                               sub_87C                       ; DATA XREF: sub_8A8+10↓o
.text:0000087C                                                             ; sub_8A8+14↓o
.text:0000087C                                                             ; .text:off_8EC↓o
.text:0000087C
.text:0000087C                               var_8= -8
.text:0000087C
.text:0000087C 00 48 2D E9                   PUSH            {R11,LR}
.text:00000880 04 B0 8D E2                   ADD             R11, SP, #4
.text:00000884 08 D0 4D E2                   SUB             SP, SP, #8
.text:00000888 08 00 0B E5                   STR             R0, [R11,#var_8]
.text:0000088C 08 30 1B E5                   LDR             R3, [R11,#var_8]
.text:00000890 00 00 53 E3                   CMP             R3, #0
.text:00000894 01 00 00 0A                   BEQ             loc_8A0
.text:00000894
.text:00000898 08 30 1B E5                   LDR             R3, [R11,#var_8]
.text:0000089C 33 FF 2F E1                   BLX             R3
.text:0000089C
.text:000008A0
.text:000008A0                               loc_8A0                       ; CODE XREF: sub_87C+18↑j
.text:000008A0 04 D0 4B E2                   SUB             SP, R11, #4
.text:000008A4 00 88 BD E8                   POP             {R11,PC}
.text:000008A4
.text:000008A4                               ; End of function sub_87C
.text:000008A4
.text:000008A8
.text:000008A8                               ; =============== S U B R O U T I N E =======================================
.text:000008A8
.text:000008A8                               ; Attributes: bp-based frame
.text:000008A8
.text:000008A8                               ; int __fastcall sub_8A8(void *)
.text:000008A8                               sub_8A8
.text:000008A8
.text:000008A8                               obj= -8
.text:000008A8
.text:000008A8 00 48 2D E9                   PUSH            {R11,LR}
.text:000008AC 04 B0 8D E2                   ADD             R11, SP, #4
.text:000008B0 08 D0 4D E2                   SUB             SP, SP, #8
.text:000008B4 08 00 0B E5                   STR             R0, [R11,#obj]
.text:000008B8 2C 30 9F E5                   LDR             R3, =(sub_87C - 0x8C4)
.text:000008BC 03 30 8F E0                   ADD             R3, PC, R3    ; sub_87C
.text:000008C0 03 00 A0 E1                   MOV             R0, R3        ; lpfunc
.text:000008C4 08 10 1B E5                   LDR             R1, [R11,#obj] ; obj
.text:000008C8 20 30 9F E5                   LDR             R3, =(off_4000 - 0x8D4)
.text:000008CC 03 30 8F E0                   ADD             R3, PC, R3    ; off_4000
.text:000008D0 03 20 A0 E1                   MOV             R2, R3        ; lpdso_handle
.text:000008D4 A7 FF FF EB                   BL              __cxa_atexit
.text:000008D4
.text:000008D8 00 30 A0 E1                   MOV             R3, R0
.text:000008DC 00 00 A0 E1                   NOP
.text:000008E0 03 00 A0 E1                   MOV             R0, R3
.text:000008E4 04 D0 4B E2                   SUB             SP, R11, #4
.text:000008E8 00 88 BD E8                   POP             {R11,PC}
.text:000008E8
.text:000008E8                               ; End of function sub_8A8
.text:000008E8
.text:000008E8                               ; ---------------------------------------------------------------------------
.text:000008EC B8 FF FF FF                   off_8EC DCD sub_87C - 0x8C4   ; DATA XREF: sub_8A8+10↑r
.text:000008F0 2C 37 00 00                   off_8F0 DCD off_4000 - 0x8D4  ; DATA XREF: sub_8A8+20↑r
.text:000008F4
.text:000008F4                               ; =============== S U B R O U T I N E =======================================
.text:000008F4
.text:000008F4                               ; Attributes: bp-based frame
.text:000008F4
.text:000008F4                               ; int __fastcall sub_8F4(int, int, int)
.text:000008F4                               sub_8F4
.text:000008F4
.text:000008F4                               var_10= -0x10
.text:000008F4                               var_C= -0xC
.text:000008F4                               var_8= -8
.text:000008F4
.text:000008F4 00 48 2D E9                   PUSH            {R11,LR}
.text:000008F8 04 B0 8D E2                   ADD             R11, SP, #4
.text:000008FC 10 D0 4D E2                   SUB             SP, SP, #0x10
.text:00000900 08 00 0B E5                   STR             R0, [R11,#var_8]
.text:00000904 0C 10 0B E5                   STR             R1, [R11,#var_C]
.text:00000908 10 20 0B E5                   STR             R2, [R11,#var_10]
.text:0000090C 08 00 1B E5                   LDR             R0, [R11,#var_8]
.text:00000910 0C 10 1B E5                   LDR             R1, [R11,#var_C]
.text:00000914 10 20 1B E5                   LDR             R2, [R11,#var_10]
.text:00000918 18 30 9F E5                   LDR             R3, =(off_4000 - 0x924)
.text:0000091C 03 30 8F E0                   ADD             R3, PC, R3    ; off_4000
.text:00000920 97 FF FF EB                   BL              __register_atfork
.text:00000920
.text:00000924 00 30 A0 E1                   MOV             R3, R0
.text:00000928 00 00 A0 E1                   NOP
.text:0000092C 03 00 A0 E1                   MOV             R0, R3
.text:00000930 04 D0 4B E2                   SUB             SP, R11, #4
.text:00000934 00 88 BD E8                   POP             {R11,PC}
.text:00000934
.text:00000934                               ; End of function sub_8F4
.text:00000934
.text:00000934                               ; ---------------------------------------------------------------------------
.text:00000938 DC 36 00 00                   off_938 DCD off_4000 - 0x924  ; DATA XREF: sub_8F4+24↑r
.text:0000093C                               CODE16
.text:0000093C
.text:0000093C                               ; =============== S U B R O U T I N E =======================================
.text:0000093C
.text:0000093C
.text:0000093C                               ; int __fastcall sub_93C(int, int, _DWORD *)
.text:0000093C                               sub_93C                       ; DATA XREF: .data:off_4004↓o
.text:0000093C                               ; __unwind {
.text:0000093C 70 B5                         PUSH            {R4-R6,LR}
.text:0000093E 06 46                         MOV             R6, R0
.text:00000940 5C 20                         MOVS            R0, #0x5C ; '\' ; size
.text:00000942 14 46                         MOV             R4, R2
.text:00000944 FF F7 24 EF                   BLX             malloc
.text:00000944
.text:00000948 05 46                         MOV             R5, R0
.text:0000094A 6D B3                         CBZ             R5, loc_9A8
.text:0000094A
.text:0000094C 28 46                         MOV             R0, R5
.text:0000094E 58 21                         MOVS            R1, #0x58 ; 'X'
.text:00000950 FF F7 24 EF                   BLX             __aeabi_memclr4
.text:00000950
.text:00000954 19 48                         LDR             R0, =(sub_A00+1 - 0x95C)
.text:00000956 1C 49                         LDR             R1, =(j_j_get_effect_current_level+1 - 0x962)
.text:00000958 78 44                         ADD             R0, PC        ; sub_A00
.text:0000095A 00 EE 90 0B                   VMOV.32         D16[0], R0
.text:0000095E 79 44                         ADD             R1, PC        ; j_j_get_effect_current_level
.text:00000960 17 48                         LDR             R0, =(sub_A04+1 - 0x966)
.text:00000962 78 44                         ADD             R0, PC        ; sub_A04
.text:00000964 20 EE 90 0B                   VMOV.32         D16[1], R0
.text:00000968 44 F2 54 40 C4 F6 57 00       MOV             R0, #0x48574454
.text:00000970 28 60                         STR             R0, [R5]
.text:00000972 14 48                         LDR             R0, =(sub_A08+1 - 0x978)
.text:00000974 78 44                         ADD             R0, PC        ; sub_A08
.text:00000976 01 EE 90 0B                   VMOV.32         D17[0], R0
.text:0000097A 00 20                         MOVS            R0, #0
.text:0000097C 68 60                         STR             R0, [R5,#4]
.text:0000097E AE 60                         STR             R6, [R5,#8]
.text:00000980 21 EE 90 1B                   VMOV.32         D17[1], R1
.text:00000984 11 49                         LDR             R1, =(sub_9E4+1 - 0x98A)
.text:00000986 79 44                         ADD             R1, PC        ; sub_9E4
.text:00000988 E9 63                         STR             R1, [R5,#0x3C]
.text:0000098A 05 F1 48 01                   ADD.W           R1, R5, #0x48 ; 'H'
.text:0000098E 41 F9 8F 0A                   VST1.32         {D16-D17}, [R1]
.text:00000992 0F 49                         LDR             R1, =(sub_9EE+1 - 0x998)
.text:00000994 79 44                         ADD             R1, PC        ; sub_9EE
.text:00000996 A9 65                         STR             R1, [R5,#0x58]
.text:00000998 0E 49                         LDR             R1, =(j_j_init_effect+1 - 0x99E)
.text:0000099A 79 44                         ADD             R1, PC        ; j_j_init_effect
.text:0000099C 29 64                         STR             R1, [R5,#0x40]
.text:0000099E 0E 49                         LDR             R1, =(j_j_deinit_effect+1 - 0x9A4)
.text:000009A0 79 44                         ADD             R1, PC        ; j_j_deinit_effect
.text:000009A2 69 64                         STR             R1, [R5,#0x44]
.text:000009A4 25 60                         STR             R5, [R4]
.text:000009A6 70 BD                         POP             {R4-R6,PC}
.text:000009A6
.text:000009A8                               ; ---------------------------------------------------------------------------
.text:000009A8
.text:000009A8                               loc_9A8                       ; CODE XREF: sub_93C+E↑j
.text:000009A8 0C 49                         LDR             R1, =(aDisEffect - 0x9B2) ; "dis_effect"
.text:000009AA 06 20                         MOVS            R0, #6
.text:000009AC 0C 4A                         LDR             R2, =(aErrorFailedToC - 0x9B4) ; "[ERROR] failed to create dis effect dev"...
.text:000009AE 79 44                         ADD             R1, PC        ; "dis_effect"
.text:000009B0 7A 44                         ADD             R2, PC        ; "[ERROR] failed to create dis effect dev"...
.text:000009B2 FF F7 FA EE                   BLX             __android_log_print
.text:000009B2
.text:000009B6 6F F0 0B 00                   MOV             R0, #0xFFFFFFF4
.text:000009BA 70 BD                         POP             {R4-R6,PC}
.text:000009BA
.text:000009BA                               ; End of function sub_93C
.text:000009BA
.text:000009BA                               ; ---------------------------------------------------------------------------
.text:000009BC A5 00 00 00                   off_9BC DCD sub_A00+1 - 0x95C ; DATA XREF: sub_93C+18↑r
.text:000009C0 9F 00 00 00                   off_9C0 DCD sub_A04+1 - 0x966 ; DATA XREF: sub_93C+24↑r
.text:000009C4 91 00 00 00                   off_9C4 DCD sub_A08+1 - 0x978 ; DATA XREF: sub_93C+36↑r
.text:000009C8 AB 00 00 00                   off_9C8 DCD j_j_get_effect_current_level+1 - 0x962
.text:000009C8                                                             ; DATA XREF: sub_93C+1A↑r
.text:000009CC 5B 00 00 00                   off_9CC DCD sub_9E4+1 - 0x98A ; DATA XREF: sub_93C+48↑r
.text:000009D0 57 00 00 00                   off_9D0 DCD sub_9EE+1 - 0x998 ; DATA XREF: sub_93C+56↑r
.text:000009D4 73 00 00 00                   off_9D4 DCD j_j_init_effect+1 - 0x99E
.text:000009D4                                                             ; DATA XREF: sub_93C+5C↑r
.text:000009D8 71 00 00 00                   off_9D8 DCD j_j_deinit_effect+1 - 0x9A4
.text:000009D8                                                             ; DATA XREF: sub_93C+62↑r
.text:000009DC 46 18 00 00                   off_9DC DCD aDisEffect - 0x9B2
.text:000009DC                                                             ; DATA XREF: sub_93C:loc_9A8↑r
.text:000009DC                                                             ; "dis_effect"
.text:000009E0 6D 18 00 00                   off_9E0 DCD aErrorFailedToC - 0x9B4
.text:000009E0                                                             ; DATA XREF: sub_93C+70↑r
.text:000009E0                               ; } // starts at 93C          ; "[ERROR] failed to create dis effect dev"...
.text:000009E4
.text:000009E4                               ; =============== S U B R O U T I N E =======================================
.text:000009E4
.text:000009E4
.text:000009E4                               ; int __fastcall sub_9E4(void *)
.text:000009E4                               sub_9E4                       ; DATA XREF: sub_93C+48↑o
.text:000009E4                                                             ; sub_93C+4A↑o
.text:000009E4                                                             ; .text:off_9CC↑o
.text:000009E4                               ; __unwind {
.text:000009E4 80 B5                         PUSH            {R7,LR}
.text:000009E6 FF F7 E6 EE                   BLX             free
.text:000009E6
.text:000009EA 00 20                         MOVS            R0, #0
.text:000009EC 80 BD                         POP             {R7,PC}
.text:000009EC                               ; } // starts at 9E4
.text:000009EC
.text:000009EC                               ; End of function sub_9E4
.text:000009EC
.text:000009EE
.text:000009EE                               ; =============== S U B R O U T I N E =======================================
.text:000009EE
.text:000009EE
.text:000009EE                               ; int __fastcall sub_9EE(int)
.text:000009EE                               sub_9EE                       ; DATA XREF: sub_93C+56↑o
.text:000009EE                                                             ; sub_93C+58↑o
.text:000009EE                                                             ; .text:off_9D0↑o
.text:000009EE                               ; __unwind {
.text:000009EE 10 B5                         PUSH            {R4,LR}
.text:000009F0 04 46                         MOV             R4, R0
.text:000009F2 FF F7 E6 EE                   BLX             set_effect
.text:000009F2
.text:000009F6 20 46                         MOV             R0, R4
.text:000009F8 FF F7 E8 EE                   BLX             set_effect_current_level
.text:000009F8
.text:000009FC 00 20                         MOVS            R0, #0
.text:000009FE 10 BD                         POP             {R4,PC}
.text:000009FE                               ; } // starts at 9EE
.text:000009FE
.text:000009FE                               ; End of function sub_9EE
.text:000009FE
.text:00000A00
.text:00000A00                               ; =============== S U B R O U T I N E =======================================
.text:00000A00
.text:00000A00
.text:00000A00                               sub_A00                       ; DATA XREF: sub_93C+18↑o
.text:00000A00                                                             ; sub_93C+1C↑o
.text:00000A00                                                             ; .text:off_9BC↑o
.text:00000A00                               ; __unwind {
.text:00000A00 00 20                         MOVS            R0, #0
.text:00000A02 70 47                         BX              LR
.text:00000A02
.text:00000A02                               ; End of function sub_A00
.text:00000A02
.text:00000A04
.text:00000A04                               ; =============== S U B R O U T I N E =======================================
.text:00000A04
.text:00000A04
.text:00000A04                               sub_A04                       ; DATA XREF: sub_93C+24↑o
.text:00000A04                                                             ; sub_93C+26↑o
.text:00000A04                                                             ; .text:off_9C0↑o
.text:00000A04 1E 20                         MOVS            R0, #0x1E
.text:00000A06 70 47                         BX              LR
.text:00000A06
.text:00000A06                               ; End of function sub_A04
.text:00000A06
.text:00000A08
.text:00000A08                               ; =============== S U B R O U T I N E =======================================
.text:00000A08
.text:00000A08
.text:00000A08                               sub_A08                       ; DATA XREF: sub_93C+36↑o
.text:00000A08                                                             ; sub_93C+38↑o
.text:00000A08                                                             ; .text:off_9C4↑o
.text:00000A08 0F 20                         MOVS            R0, #0xF
.text:00000A0A 70 47                         BX              LR
.text:00000A0A
.text:00000A0A                               ; End of function sub_A08
.text:00000A0A
.text:00000A0C                               ; [00000004 BYTES: COLLAPSED FUNCTION j_j_get_effect_current_level. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000A10                               ; [00000004 BYTES: COLLAPSED FUNCTION j_j_init_effect. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000A14                               ; [00000004 BYTES: COLLAPSED FUNCTION j_j_deinit_effect. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000A18
.text:00000A18                               ; =============== S U B R O U T I N E =======================================
.text:00000A18
.text:00000A18
.text:00000A18                               ; unsigned int *__fastcall sub_A18(unsigned int *result, int *, int *)
.text:00000A18                               sub_A18                       ; CODE XREF: sub_18E4+1E↓p
.text:00000A18 03 68                         LDR             R3, [R0]
.text:00000A1A 00 2B                         CMP             R3, #0
.text:00000A1C 0A DB                         BLT             loc_A34
.text:00000A1C
.text:00000A1E 01 23                         MOVS            R3, #1
.text:00000A20 0B 60                         STR             R3, [R1]
.text:00000A22 04 23                         MOVS            R3, #4
.text:00000A24 50 F8 04 1F                   LDR.W           R1, [R0,#4]!
.text:00000A28 4F EA 11 61                   MOV.W           R1, R1,LSR#24
.text:00000A2C 03 EB 81 01                   ADD.W           R1, R3, R1,LSL#2
.text:00000A30 11 60                         STR             R1, [R2]
.text:00000A32 70 47                         BX              LR
.text:00000A32
.text:00000A34                               ; ---------------------------------------------------------------------------
.text:00000A34
.text:00000A34                               loc_A34                       ; CODE XREF: sub_A18+4↑j
.text:00000A34 C3 F3 03 6C                   UBFX.W          R12, R3, #0x18, #4
.text:00000A38 BC F1 00 0F                   CMP.W           R12, #0
.text:00000A3C 0F D0                         BEQ             loc_A5E
.text:00000A3C
.text:00000A3E BC F1 03 0F                   CMP.W           R12, #3
.text:00000A42 1E BF                         ITTT NE
.text:00000A44 BC F1 01 0F                   CMPNE.W         R12, #1
.text:00000A48 00 20                         MOVNE           R0, #0
.text:00000A4A 70 47                         BXNE            LR
.text:00000A4A
.text:00000A4C C3 F3 07 4C                   UBFX.W          R12, R3, #0x10, #8
.text:00000A50 4F F0 04 03                   MOV.W           R3, #4
.text:00000A54 03 EB 8C 03                   ADD.W           R3, R3, R12,LSL#2
.text:00000A58 4F F0 02 0C                   MOV.W           R12, #2
.text:00000A5C 02 E0                         B               loc_A64
.text:00000A5C
.text:00000A5E                               ; ---------------------------------------------------------------------------
.text:00000A5E
.text:00000A5E                               loc_A5E                       ; CODE XREF: sub_A18+24↑j
.text:00000A5E 4F F0 01 0C                   MOV.W           R12, #1
.text:00000A62 04 23                         MOVS            R3, #4
.text:00000A62
.text:00000A64
.text:00000A64                               loc_A64                       ; CODE XREF: sub_A18+44↑j
.text:00000A64 13 60                         STR             R3, [R2]
.text:00000A66 C1 F8 00 C0                   STR.W           R12, [R1]
.text:00000A6A 70 47                         BX              LR
.text:00000A6A                               ; } // starts at A00
.text:00000A6A
.text:00000A6A                               ; End of function sub_A18
.text:00000A6A
.text:00000A6C
.text:00000A6C                               ; =============== S U B R O U T I N E =======================================
.text:00000A6C
.text:00000A6C
.text:00000A6C                               ; int __fastcall sub_A6C(int, int, unsigned int, unsigned int)
.text:00000A6C                               sub_A6C                       ; CODE XREF: sub_18E4+2A↓p
.text:00000A6C
.text:00000A6C                               var_30= -0x30
.text:00000A6C                               var_2C= -0x2C
.text:00000A6C                               var_28= -0x28
.text:00000A6C
.text:00000A6C                               ; __unwind {
.text:00000A6C 2D E9 F0 4F                   PUSH.W          {R4-R11,LR}
.text:00000A70 83 B0                         SUB             SP, SP, #0xC
.text:00000A72 04 46                         MOV             R4, R0
.text:00000A74 A7 48                         LDR             R0, =(__stack_chk_guard_ptr - 0xA7E)
.text:00000A76 1D 46                         MOV             R5, R3
.text:00000A78 93 46                         MOV             R11, R2
.text:00000A7A 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00000A7C 89 46                         MOV             R9, R1
.text:00000A7E 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00000A80 AB 45                         CMP             R11, R5
.text:00000A82 00 68                         LDR             R0, [R0]
.text:00000A84 02 90                         STR             R0, [SP,#0x30+var_28]
.text:00000A86 80 F0 2D 81                   BCS.W           loc_CE4
.text:00000A86
.text:00000A8A 00 20                         MOVS            R0, #0
.text:00000A8C 0D F1 04 08                   ADD.W           R8, SP, #0x30+var_2C
.text:00000A90 00 90                         STR             R0, [SP,#0x30+var_30]
.text:00000A90
.text:00000A92
.text:00000A92                               loc_A92                       ; CODE XREF: sub_A6C+1CA↓j
.text:00000A92 8B F0 03 00                   EOR.W           R0, R11, #3
.text:00000A96 0B F1 01 07                   ADD.W           R7, R11, #1
.text:00000A9A 19 F8 00 A0                   LDRB.W          R10, [R9,R0]
.text:00000A9E 1A F0 80 0F                   TST.W           R10, #0x80
.text:00000AA2 0D D1                         BNE             loc_AC0
.text:00000AA2
.text:00000AA4 20 46                         MOV             R0, R4
.text:00000AA6 0D 21                         MOVS            R1, #0xD
.text:00000AA8 42 46                         MOV             R2, R8
.text:00000AAA 00 F0 59 FC                   BL              sub_1360
.text:00000AAA
.text:00000AAE 4F EA 8A 00                   MOV.W           R0, R10,LSL#2
.text:00000AB2 1A F0 40 0F                   TST.W           R10, #0x40
.text:00000AB6 20 D1                         BNE             loc_AFA
.text:00000AB6
.text:00000AB8 01 99                         LDR             R1, [SP,#0x30+var_2C]
.text:00000ABA 08 44                         ADD             R0, R1
.text:00000ABC 02 1D                         ADDS            R2, R0, #4
.text:00000ABE 23 E0                         B               loc_B08
.text:00000ABE
.text:00000AC0                               ; ---------------------------------------------------------------------------
.text:00000AC0
.text:00000AC0                               loc_AC0                       ; CODE XREF: sub_A6C+36↑j
.text:00000AC0 0A F0 F0 01                   AND.W           R1, R10, #0xF0
.text:00000AC4 09 20                         MOVS            R0, #9
.text:00000AC6 AF 29                         CMP             R1, #0xAF
.text:00000AC8 24 DC                         BGT             loc_B14
.text:00000AC8
.text:00000ACA 80 29                         CMP             R1, #0x80
.text:00000ACC 36 D0                         BEQ             loc_B3C
.text:00000ACC
.text:00000ACE 90 29                         CMP             R1, #0x90
.text:00000AD0 4F D0                         BEQ             loc_B72
.text:00000AD0
.text:00000AD2 A0 29                         CMP             R1, #0xA0
.text:00000AD4 40 F0 11 81                   BNE.W           loc_CFA       ; jumptable 00000B9A cases 180-183
.text:00000AD4
.text:00000AD8 0A F0 07 01                   AND.W           R1, R10, #7
.text:00000ADC 10 22                         MOVS            R2, #0x10
.text:00000ADE 01 31                         ADDS            R1, #1
.text:00000AE0 4F F4 80 40                   MOV.W           R0, #0x4000
.text:00000AE4 02 FA 01 F1                   LSL.W           R1, R2, R1
.text:00000AE8 00 EA CA 20                   AND.W           R0, R0, R10,LSL#11
.text:00000AEC 10 39                         SUBS            R1, #0x10
.text:00000AEE 00 23                         MOVS            R3, #0
.text:00000AF0 41 EA 00 02                   ORR.W           R2, R1, R0
.text:00000AF4 20 46                         MOV             R0, R4
.text:00000AF6 00 21                         MOVS            R1, #0
.text:00000AF8 99 E0                         B               loc_C2E
.text:00000AF8
.text:00000AFA                               ; ---------------------------------------------------------------------------
.text:00000AFA
.text:00000AFA                               loc_AFA                       ; CODE XREF: sub_A6C+4A↑j
.text:00000AFA 01 99                         LDR             R1, [SP,#0x30+var_2C]
.text:00000AFC 00 F0 FC 00                   AND.W           R0, R0, #0xFC
.text:00000B00 6F F0 03 02                   MOV             R2, #0xFFFFFFFC
.text:00000B04 10 1A                         SUBS            R0, R2, R0
.text:00000B06 42 18                         ADDS            R2, R0, R1
.text:00000B06
.text:00000B08
.text:00000B08                               loc_B08                       ; CODE XREF: sub_A6C+52↑j
.text:00000B08                                                             ; sub_A6C+19A↓j
.text:00000B08 01 92                         STR             R2, [SP,#0x30+var_2C]
.text:00000B08
.text:00000B0A
.text:00000B0A                               loc_B0A                       ; CODE XREF: sub_A6C+11E↓j
.text:00000B0A 20 46                         MOV             R0, R4
.text:00000B0C 0D 21                         MOVS            R1, #0xD
.text:00000B0E 00 F0 3E FC                   BL              sub_138E
.text:00000B0E
.text:00000B12 8E E0                         B               loc_C32
.text:00000B12
.text:00000B14                               ; ---------------------------------------------------------------------------
.text:00000B14
.text:00000B14                               loc_B14                       ; CODE XREF: sub_A6C+5C↑j
.text:00000B14 B0 29                         CMP             R1, #0xB0
.text:00000B16 39 D0                         BEQ             loc_B8C
.text:00000B16
.text:00000B18 C0 29                         CMP             R1, #0xC0
.text:00000B1A 00 F0 75 80                   BEQ.W           loc_C08
.text:00000B1A
.text:00000B1E D0 29                         CMP             R1, #0xD0
.text:00000B20 40 F0 EB 80                   BNE.W           loc_CFA       ; jumptable 00000B9A cases 180-183
.text:00000B20
.text:00000B24 1A F0 08 0F                   TST.W           R10, #8
.text:00000B28 40 F0 D6 80                   BNE.W           def_C10       ; jumptable 00000C10 default case
.text:00000B28
.text:00000B2C 0A F0 07 00                   AND.W           R0, R10, #7
.text:00000B30 01 21                         MOVS            R1, #1
.text:00000B32 01 30                         ADDS            R0, #1
.text:00000B34 40 F4 00 22                   ORR.W           R2, R0, #0x80000
.text:00000B38 20 46                         MOV             R0, R4
.text:00000B3A 77 E0                         B               loc_C2C
.text:00000B3A
.text:00000B3C                               ; ---------------------------------------------------------------------------
.text:00000B3C
.text:00000B3C                               loc_B3C                       ; CODE XREF: sub_A6C+60↑j
.text:00000B3C AF 42                         CMP             R7, R5
.text:00000B3E 80 F0 CB 80                   BCS.W           def_C10       ; jumptable 00000C10 default case
.text:00000B3E
.text:00000B42 87 F0 03 00                   EOR.W           R0, R7, #3
.text:00000B46 4F EA 0A 36                   MOV.W           R6, R10,LSL#12
.text:00000B4A 19 F8 00 00                   LDRB.W          R0, [R9,R0]
.text:00000B4E B1 B2                         UXTH            R1, R6
.text:00000B50 41 EA 00 12                   ORR.W           R2, R1, R0,LSL#4
.text:00000B54 00 2A                         CMP             R2, #0
.text:00000B56 00 F0 BF 80                   BEQ.W           def_C10       ; jumptable 00000C10 default case
.text:00000B56
.text:00000B5A 20 46                         MOV             R0, R4
.text:00000B5C 00 21                         MOVS            R1, #0
.text:00000B5E 00 23                         MOVS            R3, #0
.text:00000B60 00 F0 74 F9                   BL              sub_E4C
.text:00000B60
.text:00000B64 00 99                         LDR             R1, [SP,#0x30+var_30]
.text:00000B66 06 F4 00 40                   AND.W           R0, R6, #0x8000
.text:00000B6A 41 EA D0 31                   ORR.W           R1, R1, R0,LSR#15
.text:00000B6E 00 91                         STR             R1, [SP,#0x30+var_30]
.text:00000B70 A8 E0                         B               loc_CC4
.text:00000B70
.text:00000B72                               ; ---------------------------------------------------------------------------
.text:00000B72
.text:00000B72                               loc_B72                       ; CODE XREF: sub_A6C+64↑j
.text:00000B72 0A F0 0F 01                   AND.W           R1, R10, #0xF
.text:00000B76 41 F0 02 00                   ORR.W           R0, R1, #2
.text:00000B7A 0F 28                         CMP             R0, #0xF
.text:00000B7C 00 F0 AC 80                   BEQ.W           def_C10       ; jumptable 00000C10 default case
.text:00000B7C
.text:00000B80 20 46                         MOV             R0, R4
.text:00000B82 42 46                         MOV             R2, R8
.text:00000B84 00 F0 EC FB                   BL              sub_1360
.text:00000B84
.text:00000B88 01 9A                         LDR             R2, [SP,#0x30+var_2C]
.text:00000B8A BE E7                         B               loc_B0A
.text:00000B8A
.text:00000B8C                               ; ---------------------------------------------------------------------------
.text:00000B8C
.text:00000B8C                               loc_B8C                       ; CODE XREF: sub_A6C+AA↑j
.text:00000B8C AA F1 B0 02                   SUB.W           R2, R10, #0xB0 ; switch 8 cases
.text:00000B90 07 2A                         CMP             R2, #7
.text:00000B92 53 D8                         BHI             def_B9A       ; jumptable 00000B9A default case
.text:00000B92
.text:00000B94 09 20                         MOVS            R0, #9
.text:00000B96 00 21                         MOVS            R1, #0
.text:00000B98 00 26                         MOVS            R6, #0
.text:00000B9A DF E8 02 F0                   TBB.W           [PC,R2]       ; switch jump
.text:00000B9A
.text:00000B9A                               ; ---------------------------------------------------------------------------
.text:00000B9E 9F                            jpt_B9A DCB 0x9F              ; jump table for switch statement
.text:00000B9F 04                            DCB 4
.text:00000BA0 17                            DCB 0x17
.text:00000BA1 58                            DCB 0x58
.text:00000BA2 AE                            DCB 0xAE
.text:00000BA3 AE                            DCB 0xAE
.text:00000BA4 AE                            DCB 0xAE
.text:00000BA5 AE                            DCB 0xAE
.text:00000BA6                               ; ---------------------------------------------------------------------------
.text:00000BA6
.text:00000BA6                               loc_BA6                       ; CODE XREF: sub_A6C+12E↑j
.text:00000BA6 AF 42                         CMP             R7, R5        ; jumptable 00000B9A case 177
.text:00000BA8 80 F0 96 80                   BCS.W           def_C10       ; jumptable 00000C10 default case
.text:00000BA8
.text:00000BAC 87 F0 03 00                   EOR.W           R0, R7, #3
.text:00000BB0 19 F8 00 20                   LDRB.W          R2, [R9,R0]
.text:00000BB4 09 20                         MOVS            R0, #9
.text:00000BB6 00 2A                         CMP             R2, #0
.text:00000BB8 00 F0 9F 80                   BEQ.W           loc_CFA       ; jumptable 00000B9A cases 180-183
.text:00000BB8
.text:00000BBC 12 F0 F0 01                   ANDS.W          R1, R2, #0xF0
.text:00000BC0 40 F0 9B 80                   BNE.W           loc_CFA       ; jumptable 00000B9A cases 180-183
.text:00000BC0
.text:00000BC4 20 46                         MOV             R0, R4
.text:00000BC6 00 21                         MOVS            R1, #0
.text:00000BC8 00 23                         MOVS            R3, #0
.text:00000BCA 79 E0                         B               loc_CC0
.text:00000BCA
.text:00000BCC                               ; ---------------------------------------------------------------------------
.text:00000BCC
.text:00000BCC                               loc_BCC                       ; CODE XREF: sub_A6C+12E↑j
.text:00000BCC                                                             ; sub_A6C+184↓j
.text:00000BCC AF 42                         CMP             R7, R5        ; jumptable 00000B9A case 178
.text:00000BCE 80 F0 83 80                   BCS.W           def_C10       ; jumptable 00000C10 default case
.text:00000BCE
.text:00000BD2 87 F0 03 00                   EOR.W           R0, R7, #3
.text:00000BD6 01 37                         ADDS            R7, #1
.text:00000BD8 19 F8 00 00                   LDRB.W          R0, [R9,R0]
.text:00000BDC 00 F0 7F 02                   AND.W           R2, R0, #0x7F
.text:00000BE0 10 F0 80 0F                   TST.W           R0, #0x80
.text:00000BE4 02 FA 01 F2                   LSL.W           R2, R2, R1
.text:00000BE8 01 F1 07 01                   ADD.W           R1, R1, #7
.text:00000BEC 46 EA 02 06                   ORR.W           R6, R6, R2
.text:00000BF0 EC D1                         BNE             loc_BCC       ; jumptable 00000B9A case 178
.text:00000BF0
.text:00000BF2 20 46                         MOV             R0, R4
.text:00000BF4 0D 21                         MOVS            R1, #0xD
.text:00000BF6 42 46                         MOV             R2, R8
.text:00000BF8 00 F0 B2 FB                   BL              sub_1360
.text:00000BF8
.text:00000BFC 01 98                         LDR             R0, [SP,#0x30+var_2C]
.text:00000BFE 00 EB 86 00                   ADD.W           R0, R0, R6,LSL#2
.text:00000C02 00 F5 01 72                   ADD.W           R2, R0, #0x204
.text:00000C06 7F E7                         B               loc_B08
.text:00000C06
.text:00000C08                               ; ---------------------------------------------------------------------------
.text:00000C08
.text:00000C08                               loc_C08                       ; CODE XREF: sub_A6C+AE↑j
.text:00000C08 AA F1 C0 00                   SUB.W           R0, R10, #0xC0 ; switch 10 cases
.text:00000C0C 09 28                         CMP             R0, #9
.text:00000C0E 63 D8                         BHI             def_C10       ; jumptable 00000C10 default case
.text:00000C0E
.text:00000C10 DF E8 00 F0                   TBB.W           [PC,R0]       ; switch jump
.text:00000C10
.text:00000C10                               ; ---------------------------------------------------------------------------
.text:00000C14 05                            jpt_C10 DCB 5                 ; jump table for switch statement
.text:00000C15 05                            DCB 5
.text:00000C16 05                            DCB 5
.text:00000C17 05                            DCB 5
.text:00000C18 05                            DCB 5
.text:00000C19 05                            DCB 5
.text:00000C1A 45                            DCB 0x45
.text:00000C1B 5B                            DCB 0x5B
.text:00000C1C 2E                            DCB 0x2E
.text:00000C1D 2E                            DCB 0x2E
.text:00000C1E                               ; ---------------------------------------------------------------------------
.text:00000C1E
.text:00000C1E                               loc_C1E                       ; CODE XREF: sub_A6C+1A4↑j
.text:00000C1E 0A F0 07 00                   AND.W           R0, R10, #7   ; jumptable 00000C10 cases 192-197
.text:00000C22 03 21                         MOVS            R1, #3
.text:00000C24 01 30                         ADDS            R0, #1
.text:00000C26 40 F4 20 22                   ORR.W           R2, R0, #0xA0000
.text:00000C2A 20 46                         MOV             R0, R4
.text:00000C2A
.text:00000C2C
.text:00000C2C                               loc_C2C                       ; CODE XREF: sub_A6C+CE↑j
.text:00000C2C 05 23                         MOVS            R3, #5
.text:00000C2C
.text:00000C2E
.text:00000C2E                               loc_C2E                       ; CODE XREF: sub_A6C+8C↑j
.text:00000C2E                                                             ; sub_A6C+1E0↓j
.text:00000C2E 00 F0 0D F9                   BL              sub_E4C
.text:00000C2E
.text:00000C32
.text:00000C32                               loc_C32                       ; CODE XREF: sub_A6C+A6↑j
.text:00000C32 BB 46                         MOV             R11, R7
.text:00000C32
.text:00000C34
.text:00000C34                               loc_C34                       ; CODE XREF: sub_A6C+25C↓j
.text:00000C34 AB 45                         CMP             R11, R5
.text:00000C36 FF F4 2C AF                   BCC.W           loc_A92
.text:00000C36
.text:00000C3A 4F E0                         B               loc_CDC       ; jumptable 00000B9A case 176
.text:00000C3A
.text:00000C3C                               ; ---------------------------------------------------------------------------
.text:00000C3C
.text:00000C3C                               def_B9A                       ; CODE XREF: sub_A6C+126↑j
.text:00000C3C 0A F0 07 00                   AND.W           R0, R10, #7   ; jumptable 00000B9A default case
.text:00000C40 01 21                         MOVS            R1, #1
.text:00000C42 01 30                         ADDS            R0, #1
.text:00000C44 01 23                         MOVS            R3, #1
.text:00000C46 40 F4 00 22                   ORR.W           R2, R0, #0x80000
.text:00000C4A 20 46                         MOV             R0, R4
.text:00000C4C EF E7                         B               loc_C2E
.text:00000C4C
.text:00000C4E                               ; ---------------------------------------------------------------------------
.text:00000C4E
.text:00000C4E                               loc_C4E                       ; CODE XREF: sub_A6C+12E↑j
.text:00000C4E 87 F0 03 00                   EOR.W           R0, R7, #3    ; jumptable 00000B9A case 179
.text:00000C52 01 23                         MOVS            R3, #1
.text:00000C54 19 F8 00 00                   LDRB.W          R0, [R9,R0]
.text:00000C58 4F EA 00 31                   MOV.W           R1, R0,LSL#12
.text:00000C5C 00 F0 0F 00                   AND.W           R0, R0, #0xF
.text:00000C60 3F FA 81 F1                   UXTB16.W        R1, R1
.text:00000C64 01 30                         ADDS            R0, #1
.text:00000C66 40 EA 01 02                   ORR.W           R2, R0, R1
.text:00000C6A 20 46                         MOV             R0, R4
.text:00000C6C 01 21                         MOVS            R1, #1
.text:00000C6E 27 E0                         B               loc_CC0
.text:00000C6E
.text:00000C70                               ; ---------------------------------------------------------------------------
.text:00000C70
.text:00000C70                               loc_C70                       ; CODE XREF: sub_A6C+1A4↑j
.text:00000C70 87 F0 03 00                   EOR.W           R0, R7, #3    ; jumptable 00000C10 cases 200,201
.text:00000C74 10 22                         MOVS            R2, #0x10
.text:00000C76 19 F8 00 10                   LDRB.W          R1, [R9,R0]
.text:00000C7A BA F1 C8 0F                   CMP.W           R10, #0xC8
.text:00000C7E 4F EA 11 10                   MOV.W           R0, R1,LSR#4
.text:00000C82 08 BF                         IT EQ
.text:00000C84 42 EA 11 10                   ORREQ.W         R0, R2, R1,LSR#4
.text:00000C88 01 F0 0F 01                   AND.W           R1, R1, #0xF
.text:00000C8C 42 18                         ADDS            R2, R0, R1
.text:00000C8E 1F 2A                         CMP             R2, #0x1F
.text:00000C90 22 D8                         BHI             def_C10       ; jumptable 00000C10 default case
.text:00000C90
.text:00000C92 01 31                         ADDS            R1, #1
.text:00000C94 41 EA 00 42                   ORR.W           R2, R1, R0,LSL#16
.text:00000C98 20 46                         MOV             R0, R4
.text:00000C9A 01 21                         MOVS            R1, #1
.text:00000C9C 0F E0                         B               loc_CBE
.text:00000C9C
.text:00000C9E                               ; ---------------------------------------------------------------------------
.text:00000C9E
.text:00000C9E                               loc_C9E                       ; CODE XREF: sub_A6C+1A4↑j
.text:00000C9E 87 F0 03 00                   EOR.W           R0, R7, #3    ; jumptable 00000C10 case 198
.text:00000CA2 19 F8 00 00                   LDRB.W          R0, [R9,R0]
.text:00000CA6 00 F0 0F 01                   AND.W           R1, R0, #0xF
.text:00000CAA 01 EB 10 12                   ADD.W           R2, R1, R0,LSR#4
.text:00000CAE 0F 2A                         CMP             R2, #0xF
.text:00000CB0 12 D8                         BHI             def_C10       ; jumptable 00000C10 default case
.text:00000CB0
.text:00000CB2 00 09                         LSRS            R0, R0, #4
.text:00000CB4 01 31                         ADDS            R1, #1
.text:00000CB6 41 EA 00 42                   ORR.W           R2, R1, R0,LSL#16
.text:00000CBA 20 46                         MOV             R0, R4
.text:00000CBC 03 21                         MOVS            R1, #3
.text:00000CBC
.text:00000CBE
.text:00000CBE                               loc_CBE                       ; CODE XREF: sub_A6C+230↑j
.text:00000CBE 05 23                         MOVS            R3, #5
.text:00000CBE
.text:00000CC0
.text:00000CC0                               loc_CC0                       ; CODE XREF: sub_A6C+15E↑j
.text:00000CC0                                                             ; sub_A6C+202↑j
.text:00000CC0 00 F0 C4 F8                   BL              sub_E4C
.text:00000CC0
.text:00000CC4
.text:00000CC4                               loc_CC4                       ; CODE XREF: sub_A6C+104↑j
.text:00000CC4                                                             ; sub_A6C+26A↓j
.text:00000CC4 0B F1 02 0B                   ADD.W           R11, R11, #2
.text:00000CC8 B4 E7                         B               loc_C34
.text:00000CC8
.text:00000CCA                               ; ---------------------------------------------------------------------------
.text:00000CCA
.text:00000CCA                               loc_CCA                       ; CODE XREF: sub_A6C+1A4↑j
.text:00000CCA 87 F0 03 00                   EOR.W           R0, R7, #3    ; jumptable 00000C10 case 199
.text:00000CCE 19 F8 00 00                   LDRB.W          R0, [R9,R0]
.text:00000CD2 08 B1                         CBZ             R0, def_C10   ; jumptable 00000C10 default case
.text:00000CD2
.text:00000CD4 10 28                         CMP             R0, #0x10
.text:00000CD6 F5 D3                         BCC             loc_CC4
.text:00000CD6
.text:00000CD8
.text:00000CD8                               def_C10                       ; CODE XREF: sub_A6C+BC↑j
.text:00000CD8                                                             ; sub_A6C+D2↑j
.text:00000CD8                                                             ; sub_A6C+EA↑j
.text:00000CD8                                                             ; sub_A6C+110↑j
.text:00000CD8                                                             ; sub_A6C+13C↑j
.text:00000CD8                                                             ; sub_A6C+162↑j
.text:00000CD8                                                             ; sub_A6C+1A2↑j
.text:00000CD8                                                             ; sub_A6C+224↑j
.text:00000CD8                                                             ; sub_A6C+244↑j
.text:00000CD8                                                             ; sub_A6C+266↑j
.text:00000CD8 09 20                         MOVS            R0, #9        ; jumptable 00000C10 default case
.text:00000CDA 0E E0                         B               loc_CFA       ; jumptable 00000B9A cases 180-183
.text:00000CDA
.text:00000CDC                               ; ---------------------------------------------------------------------------
.text:00000CDC
.text:00000CDC                               loc_CDC                       ; CODE XREF: sub_A6C+12E↑j
.text:00000CDC                                                             ; sub_A6C+1CE↑j
.text:00000CDC 00 98                         LDR             R0, [SP,#0x30+var_30] ; jumptable 00000B9A case 176
.text:00000CDE 10 F0 01 0F                   TST.W           R0, #1
.text:00000CE2 09 D1                         BNE             loc_CF8
.text:00000CE2
.text:00000CE4
.text:00000CE4                               loc_CE4                       ; CODE XREF: sub_A6C+1A↑j
.text:00000CE4 01 AA                         ADD             R2, SP, #0x30+var_2C
.text:00000CE6 20 46                         MOV             R0, R4
.text:00000CE8 0E 21                         MOVS            R1, #0xE
.text:00000CEA 00 F0 39 FB                   BL              sub_1360
.text:00000CEA
.text:00000CEE 01 9A                         LDR             R2, [SP,#0x30+var_2C]
.text:00000CF0 20 46                         MOV             R0, R4
.text:00000CF2 0F 21                         MOVS            R1, #0xF
.text:00000CF4 00 F0 4B FB                   BL              sub_138E
.text:00000CF4
.text:00000CF8
.text:00000CF8                               loc_CF8                       ; CODE XREF: sub_A6C+276↑j
.text:00000CF8 08 20                         MOVS            R0, #8
.text:00000CF8
.text:00000CFA
.text:00000CFA                               loc_CFA                       ; CODE XREF: sub_A6C+68↑j
.text:00000CFA                                                             ; sub_A6C+B4↑j
.text:00000CFA                                                             ; sub_A6C+12E↑j
.text:00000CFA                                                             ; sub_A6C+14C↑j
.text:00000CFA                                                             ; sub_A6C+154↑j
.text:00000CFA                                                             ; sub_A6C+26E↑j
.text:00000CFA 07 49                         LDR             R1, =(__stack_chk_guard_ptr - 0xD02) ; jumptable 00000B9A cases 180-183
.text:00000CFC 02 9A                         LDR             R2, [SP,#0x30+var_28]
.text:00000CFE 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:00000D00 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:00000D02 09 68                         LDR             R1, [R1]
.text:00000D04 89 1A                         SUBS            R1, R1, R2
.text:00000D06 04 BF                         ITT EQ
.text:00000D08 03 B0                         ADDEQ           SP, SP, #0xC
.text:00000D0A BD E8 F0 8F                   POPEQ.W         {R4-R11,PC}
.text:00000D0A
.text:00000D0E FF F7 76 ED                   BLX             __stack_chk_fail
.text:00000D0E
.text:00000D0E                               ; End of function sub_A6C
.text:00000D0E
.text:00000D0E                               ; ---------------------------------------------------------------------------
.text:00000D12 00 BF                         ALIGN 4
.text:00000D14 12 35 00 00                   off_D14 DCD __stack_chk_guard_ptr - 0xA7E
.text:00000D14                                                             ; DATA XREF: sub_A6C+8↑r
.text:00000D18 8E 32 00 00                   off_D18 DCD __stack_chk_guard_ptr - 0xD02
.text:00000D18                                                             ; DATA XREF: sub_A6C:loc_CFA↑r
.text:00000D18                               ; } // starts at A6C
.text:00000D1C                               ; ---------------------------------------------------------------------------
.text:00000D1C                               ; __unwind {
.text:00000D1C 70 B5                         PUSH            {R4-R6,LR}
.text:00000D1E 16 46                         MOV             R6, R2
.text:00000D20 05 46                         MOV             R5, R0
.text:00000D22 04 29                         CMP             R1, #4        ; switch 5 cases
.text:00000D24 37 D8                         BHI             def_D28       ; jumptable 00000D28 default case, case 2
.text:00000D24
.text:00000D26 04 9C                         LDR             R4, [SP,#0x10]
.text:00000D28 DF E8 01 F0                   TBB.W           [PC,R1]       ; switch jump
.text:00000D28
.text:00000D28                               ; ---------------------------------------------------------------------------
.text:00000D2C 03                            jpt_D28 DCB 3                 ; jump table for switch statement
.text:00000D2D 1D                            DCB 0x1D
.text:00000D2E 35                            DCB 0x35
.text:00000D2F 0A                            DCB 0xA
.text:00000D30 12                            DCB 0x12
.text:00000D31 00                            ALIGN 2
.text:00000D32
.text:00000D32                               loc_D32                       ; CODE XREF: .text:00000D28↑j
.text:00000D32 02 20                         MOVS            R0, #2        ; jumptable 00000D28 case 0
.text:00000D34 0F 2E                         CMP             R6, #0xF
.text:00000D36 23 D8                         BHI             locret_D80
.text:00000D36
.text:00000D38 13 BB                         CBNZ            R3, locret_D80
.text:00000D38
.text:00000D3A 28 46                         MOV             R0, R5
.text:00000D3C 31 46                         MOV             R1, R6
.text:00000D3E 0E E0                         B               loc_D5E
.text:00000D3E
.text:00000D40                               ; ---------------------------------------------------------------------------
.text:00000D40
.text:00000D40                               loc_D40                       ; CODE XREF: .text:00000D28↑j
.text:00000D40 02 20                         MOVS            R0, #2        ; jumptable 00000D28 case 3
.text:00000D42 1F 2E                         CMP             R6, #0x1F
.text:00000D44 1C D8                         BHI             locret_D80
.text:00000D44
.text:00000D46 05 2B                         CMP             R3, #5
.text:00000D48 1A D1                         BNE             locret_D80
.text:00000D48
.text:00000D4A 06 F1 70 01                   ADD.W           R1, R6, #0x70 ; 'p'
.text:00000D4E 1A E0                         B               loc_D86
.text:00000D4E
.text:00000D50                               ; ---------------------------------------------------------------------------
.text:00000D50
.text:00000D50                               loc_D50                       ; CODE XREF: .text:00000D28↑j
.text:00000D50 02 20                         MOVS            R0, #2        ; jumptable 00000D28 case 4
.text:00000D52 03 2E                         CMP             R6, #3
.text:00000D54 14 D8                         BHI             locret_D80
.text:00000D54
.text:00000D56 9B B9                         CBNZ            R3, locret_D80
.text:00000D56
.text:00000D58 06 F1 C0 01                   ADD.W           R1, R6, #0xC0
.text:00000D5C 28 46                         MOV             R0, R5
.text:00000D5C
.text:00000D5E
.text:00000D5E                               loc_D5E                       ; CODE XREF: .text:00000D3E↑j
.text:00000D5E 22 46                         MOV             R2, R4
.text:00000D60 00 F0 FE FA                   BL              sub_1360
.text:00000D60
.text:00000D64 13 E0                         B               loc_D8E
.text:00000D64
.text:00000D66                               ; ---------------------------------------------------------------------------
.text:00000D66
.text:00000D66                               loc_D66                       ; CODE XREF: .text:00000D28↑j
.text:00000D66 05 2B                         CMP             R3, #5        ; jumptable 00000D28 case 1
.text:00000D68 07 D0                         BEQ             loc_D7A
.text:00000D68
.text:00000D6A 01 2B                         CMP             R3, #1
.text:00000D6C 07 D1                         BNE             loc_D7E
.text:00000D6C
.text:00000D6E 0F 2E                         CMP             R6, #0xF
.text:00000D70 05 D8                         BHI             loc_D7E
.text:00000D70
.text:00000D72 28 46                         MOV             R0, R5
.text:00000D74 00 F0 7C FB                   BL              sub_1470
.text:00000D74
.text:00000D78 03 E0                         B               loc_D82
.text:00000D78
.text:00000D7A                               ; ---------------------------------------------------------------------------
.text:00000D7A
.text:00000D7A                               loc_D7A                       ; CODE XREF: .text:00000D68↑j
.text:00000D7A 1F 2E                         CMP             R6, #0x1F
.text:00000D7C 01 D9                         BLS             loc_D82
.text:00000D7C
.text:00000D7E
.text:00000D7E                               loc_D7E                       ; CODE XREF: .text:00000D6C↑j
.text:00000D7E                                                             ; .text:00000D70↑j
.text:00000D7E 02 20                         MOVS            R0, #2
.text:00000D7E
.text:00000D80
.text:00000D80                               locret_D80                    ; CODE XREF: .text:00000D36↑j
.text:00000D80                                                             ; .text:00000D38↑j
.text:00000D80                                                             ; .text:00000D44↑j
.text:00000D80                                                             ; .text:00000D48↑j
.text:00000D80                                                             ; .text:00000D54↑j
.text:00000D80                                                             ; .text:00000D56↑j
.text:00000D80 70 BD                         POP             {R4-R6,PC}
.text:00000D80
.text:00000D82                               ; ---------------------------------------------------------------------------
.text:00000D82
.text:00000D82                               loc_D82                       ; CODE XREF: .text:00000D78↑j
.text:00000D82                                                             ; .text:00000D7C↑j
.text:00000D82 06 F5 80 71                   ADD.W           R1, R6, #0x100
.text:00000D82
.text:00000D86
.text:00000D86                               loc_D86                       ; CODE XREF: .text:00000D4E↑j
.text:00000D86 28 46                         MOV             R0, R5
.text:00000D88 22 46                         MOV             R2, R4
.text:00000D8A 00 F0 22 FB                   BL              sub_13D2
.text:00000D8A
.text:00000D8E
.text:00000D8E                               loc_D8E                       ; CODE XREF: .text:00000D64↑j
.text:00000D8E 00 28                         CMP             R0, #0
.text:00000D90 18 BF                         IT NE
.text:00000D92 02 20                         MOVNE           R0, #2
.text:00000D94 70 BD                         POP             {R4-R6,PC}
.text:00000D94
.text:00000D96                               ; ---------------------------------------------------------------------------
.text:00000D96
.text:00000D96                               def_D28                       ; CODE XREF: .text:00000D24↑j
.text:00000D96                                                             ; .text:00000D28↑j
.text:00000D96 04 48                         LDR             R0, =(aUnwindVrsResul_1 - 0xDA2) ; jumptable 00000D28 default case, case 2
.text:00000D98 40 F2 75 31                   MOVW            R1, #0x375
.text:00000D9C 03 4A                         LDR             R2, =(aUnsupportedReg - 0xDA4) ; "unsupported register class"
.text:00000D9E 78 44                         ADD             R0, PC        ; "_Unwind_VRS_Result _Unwind_VRS_Get_Inte"...
.text:00000DA0 7A 44                         ADD             R2, PC        ; "unsupported register class"
.text:00000DA2 00 F0 13 FA                   BL              sub_11CC
.text:00000DA2
.text:00000DA2                               ; ---------------------------------------------------------------------------
.text:00000DA6 00 BF                         ALIGN 4
.text:00000DA8 FB 16 00 00                   off_DA8 DCD aUnwindVrsResul_1 - 0xDA2
.text:00000DA8                                                             ; DATA XREF: .text:def_D28↑r
.text:00000DA8                                                             ; "_Unwind_VRS_Result _Unwind_VRS_Get_Inte"...
.text:00000DAC 9D 15 00 00                   off_DAC DCD aUnsupportedReg - 0xDA4
.text:00000DAC                                                             ; DATA XREF: .text:00000D9C↑r
.text:00000DAC                                                             ; "unsupported register class"
.text:00000DB0
.text:00000DB0                               ; =============== S U B R O U T I N E =======================================
.text:00000DB0
.text:00000DB0
.text:00000DB0                               ; int __fastcall sub_DB0(int, int, unsigned int, int, int *)
.text:00000DB0                               sub_DB0                       ; CODE XREF: sub_E4C+64↓p
.text:00000DB0                                                             ; sub_E4C+D2↓p
.text:00000DB0
.text:00000DB0                               arg_0=  0
.text:00000DB0
.text:00000DB0 70 B5                         PUSH            {R4-R6,LR}
.text:00000DB2 15 46                         MOV             R5, R2
.text:00000DB4 04 46                         MOV             R4, R0
.text:00000DB6 04 29                         CMP             R1, #4        ; switch 5 cases
.text:00000DB8 3B D8                         BHI             def_DBC       ; jumptable 00000DBC default case, case 2
.text:00000DB8
.text:00000DBA 04 9E                         LDR             R6, [SP,#0x10+arg_0]
.text:00000DBC DF E8 01 F0                   TBB.W           [PC,R1]       ; switch jump
.text:00000DBC
.text:00000DBC                               ; ---------------------------------------------------------------------------
.text:00000DC0 03                            jpt_DBC DCB 3                 ; jump table for switch statement
.text:00000DC1 20                            DCB 0x20
.text:00000DC2 39                            DCB 0x39
.text:00000DC3 0B                            DCB 0xB
.text:00000DC4 15                            DCB 0x15
.text:00000DC5 00                            ALIGN 2
.text:00000DC6
.text:00000DC6                               loc_DC6                       ; CODE XREF: sub_DB0+C↑j
.text:00000DC6 02 20                         MOVS            R0, #2        ; jumptable 00000DBC case 0
.text:00000DC8 0F 2D                         CMP             R5, #0xF
.text:00000DCA 26 D8                         BHI             locret_E1A
.text:00000DCA
.text:00000DCC 2B BB                         CBNZ            R3, locret_E1A
.text:00000DCC
.text:00000DCE 32 68                         LDR             R2, [R6]
.text:00000DD0 20 46                         MOV             R0, R4
.text:00000DD2 29 46                         MOV             R1, R5
.text:00000DD4 11 E0                         B               loc_DFA
.text:00000DD4
.text:00000DD6                               ; ---------------------------------------------------------------------------
.text:00000DD6
.text:00000DD6                               loc_DD6                       ; CODE XREF: sub_DB0+C↑j
.text:00000DD6 02 20                         MOVS            R0, #2        ; jumptable 00000DBC case 3
.text:00000DD8 1F 2D                         CMP             R5, #0x1F
.text:00000DDA 1E D8                         BHI             locret_E1A
.text:00000DDA
.text:00000DDC 05 2B                         CMP             R3, #5
.text:00000DDE 1C D1                         BNE             locret_E1A
.text:00000DDE
.text:00000DE0 D6 E9 00 23                   LDRD.W          R2, R3, [R6]
.text:00000DE4 05 F1 70 01                   ADD.W           R1, R5, #0x70 ; 'p'
.text:00000DE8 1C E0                         B               loc_E24
.text:00000DE8
.text:00000DEA                               ; ---------------------------------------------------------------------------
.text:00000DEA
.text:00000DEA                               loc_DEA                       ; CODE XREF: sub_DB0+C↑j
.text:00000DEA 02 20                         MOVS            R0, #2        ; jumptable 00000DBC case 4
.text:00000DEC 03 2D                         CMP             R5, #3
.text:00000DEE 14 D8                         BHI             locret_E1A
.text:00000DEE
.text:00000DF0 9B B9                         CBNZ            R3, locret_E1A
.text:00000DF0
.text:00000DF2 32 68                         LDR             R2, [R6]
.text:00000DF4 05 F1 C0 01                   ADD.W           R1, R5, #0xC0
.text:00000DF8 20 46                         MOV             R0, R4
.text:00000DF8
.text:00000DFA
.text:00000DFA                               loc_DFA                       ; CODE XREF: sub_DB0+24↑j
.text:00000DFA 00 F0 C8 FA                   BL              sub_138E
.text:00000DFA
.text:00000DFE 14 E0                         B               loc_E2A
.text:00000DFE
.text:00000E00                               ; ---------------------------------------------------------------------------
.text:00000E00
.text:00000E00                               loc_E00                       ; CODE XREF: sub_DB0+C↑j
.text:00000E00 05 2B                         CMP             R3, #5        ; jumptable 00000DBC case 1
.text:00000E02 07 D0                         BEQ             loc_E14
.text:00000E02
.text:00000E04 01 2B                         CMP             R3, #1
.text:00000E06 07 D1                         BNE             loc_E18
.text:00000E06
.text:00000E08 0F 2D                         CMP             R5, #0xF
.text:00000E0A 05 D8                         BHI             loc_E18
.text:00000E0A
.text:00000E0C 20 46                         MOV             R0, R4
.text:00000E0E 00 F0 2F FB                   BL              sub_1470
.text:00000E0E
.text:00000E12 03 E0                         B               loc_E1C
.text:00000E12
.text:00000E14                               ; ---------------------------------------------------------------------------
.text:00000E14
.text:00000E14                               loc_E14                       ; CODE XREF: sub_DB0+52↑j
.text:00000E14 1F 2D                         CMP             R5, #0x1F
.text:00000E16 01 D9                         BLS             loc_E1C
.text:00000E16
.text:00000E18
.text:00000E18                               loc_E18                       ; CODE XREF: sub_DB0+56↑j
.text:00000E18                                                             ; sub_DB0+5A↑j
.text:00000E18 02 20                         MOVS            R0, #2
.text:00000E18
.text:00000E1A
.text:00000E1A                               locret_E1A                    ; CODE XREF: sub_DB0+1A↑j
.text:00000E1A                                                             ; sub_DB0+1C↑j
.text:00000E1A                                                             ; sub_DB0+2A↑j
.text:00000E1A                                                             ; sub_DB0+2E↑j
.text:00000E1A                                                             ; sub_DB0+3E↑j
.text:00000E1A                                                             ; sub_DB0+40↑j
.text:00000E1A 70 BD                         POP             {R4-R6,PC}
.text:00000E1A
.text:00000E1C                               ; ---------------------------------------------------------------------------
.text:00000E1C
.text:00000E1C                               loc_E1C                       ; CODE XREF: sub_DB0+62↑j
.text:00000E1C                                                             ; sub_DB0+66↑j
.text:00000E1C D6 E9 00 23                   LDRD.W          R2, R3, [R6]
.text:00000E20 05 F5 80 71                   ADD.W           R1, R5, #0x100
.text:00000E20
.text:00000E24
.text:00000E24                               loc_E24                       ; CODE XREF: sub_DB0+38↑j
.text:00000E24 20 46                         MOV             R0, R4
.text:00000E26 00 F0 EC FA                   BL              sub_1402
.text:00000E26
.text:00000E2A
.text:00000E2A                               loc_E2A                       ; CODE XREF: sub_DB0+4E↑j
.text:00000E2A 00 28                         CMP             R0, #0
.text:00000E2C 18 BF                         IT NE
.text:00000E2E 02 20                         MOVNE           R0, #2
.text:00000E30 70 BD                         POP             {R4-R6,PC}
.text:00000E30
.text:00000E32                               ; ---------------------------------------------------------------------------
.text:00000E32
.text:00000E32                               def_DBC                       ; CODE XREF: sub_DB0+8↑j
.text:00000E32                                                             ; sub_DB0+C↑j
.text:00000E32 04 48                         LDR             R0, =(aUnwindVrsResul - 0xE3E) ; jumptable 00000DBC default case, case 2
.text:00000E34 40 F2 45 31                   MOVW            R1, #0x345
.text:00000E38 03 4A                         LDR             R2, =(aUnsupportedReg - 0xE40) ; "unsupported register class"
.text:00000E3A 78 44                         ADD             R0, PC        ; "_Unwind_VRS_Result _Unwind_VRS_Set(_Unw"...
.text:00000E3C 7A 44                         ADD             R2, PC        ; "unsupported register class"
.text:00000E3E 00 F0 C5 F9                   BL              sub_11CC
.text:00000E3E
.text:00000E3E                               ; End of function sub_DB0
.text:00000E3E
.text:00000E3E                               ; ---------------------------------------------------------------------------
.text:00000E42 00 BF                         ALIGN 4
.text:00000E44 85 14 00 00                   off_E44 DCD aUnwindVrsResul - 0xE3E
.text:00000E44                                                             ; DATA XREF: sub_DB0:def_DBC↑r
.text:00000E44                                                             ; "_Unwind_VRS_Result _Unwind_VRS_Set(_Unw"...
.text:00000E48 01 15 00 00                   off_E48 DCD aUnsupportedReg - 0xE40
.text:00000E48                                                             ; DATA XREF: sub_DB0+88↑r
.text:00000E48                               ; } // starts at D1C          ; "unsupported register class"
.text:00000E4C
.text:00000E4C                               ; =============== S U B R O U T I N E =======================================
.text:00000E4C
.text:00000E4C
.text:00000E4C                               ; int __fastcall sub_E4C(int, int, unsigned int, int)
.text:00000E4C                               sub_E4C                       ; CODE XREF: sub_A6C+F4↑p
.text:00000E4C                                                             ; sub_A6C:loc_C2E↑p
.text:00000E4C                                                             ; sub_A6C:loc_CC0↑p
.text:00000E4C
.text:00000E4C                               var_38= -0x38
.text:00000E4C                               var_30= -0x30
.text:00000E4C                               var_28= -0x28
.text:00000E4C                               var_24= -0x24
.text:00000E4C
.text:00000E4C                               ; __unwind {
.text:00000E4C 2D E9 F0 47                   PUSH.W          {R4-R10,LR}
.text:00000E50 86 B0                         SUB             SP, SP, #0x18
.text:00000E52 80 46                         MOV             R8, R0
.text:00000E54 48 48                         LDR             R0, =(__stack_chk_guard_ptr - 0xE5E)
.text:00000E56 0D 46                         MOV             R5, R1
.text:00000E58 1F 46                         MOV             R7, R3
.text:00000E5A 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00000E5C 16 46                         MOV             R6, R2
.text:00000E5E 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00000E60 04 2D                         CMP             R5, #4        ; switch 5 cases
.text:00000E62 00 68                         LDR             R0, [R0]
.text:00000E64 05 90                         STR             R0, [SP,#0x38+var_24]
.text:00000E66 00 F2 7E 80                   BHI.W           def_E6A       ; jumptable 00000E6A default case, case 2
.text:00000E66
.text:00000E6A DF E8 05 F0                   TBB.W           [PC,R5]       ; switch jump
.text:00000E6A
.text:00000E6A                               ; ---------------------------------------------------------------------------
.text:00000E6E 03                            jpt_E6A DCB 3                 ; jump table for switch statement
.text:00000E6F 37                            DCB 0x37
.text:00000E70 7C                            DCB 0x7C
.text:00000E71 37                            DCB 0x37
.text:00000E72 03                            DCB 3
.text:00000E73 00                            ALIGN 2
.text:00000E74
.text:00000E74                               loc_E74                       ; CODE XREF: sub_E4C+1E↑j
.text:00000E74 00 2F                         CMP             R7, #0        ; jumptable 00000E6A cases 0,4
.text:00000E76 5E D1                         BNE             loc_F36
.text:00000E76
.text:00000E78 02 AA                         ADD             R2, SP, #0x38+var_30
.text:00000E7A 40 46                         MOV             R0, R8
.text:00000E7C 0D 21                         MOVS            R1, #0xD
.text:00000E7E 00 F0 6F FA                   BL              sub_1360
.text:00000E7E
.text:00000E82 00 28                         CMP             R0, #0
.text:00000E84 57 D1                         BNE             loc_F36
.text:00000E84
.text:00000E86 00 24                         MOVS            R4, #0
.text:00000E88 4F F0 01 09                   MOV.W           R9, #1
.text:00000E8C 0D F1 10 0A                   ADD.W           R10, SP, #0x38+var_28
.text:00000E90 00 27                         MOVS            R7, #0
.text:00000E90
.text:00000E92
.text:00000E92                               loc_E92                       ; CODE XREF: sub_E4C+84↓j
.text:00000E92 09 FA 07 F0                   LSL.W           R0, R9, R7
.text:00000E96 30 42                         TST             R0, R6
.text:00000E98 18 D0                         BEQ             loc_ECC
.text:00000E98
.text:00000E9A 02 98                         LDR             R0, [SP,#0x38+var_30]
.text:00000E9C 3A 46                         MOV             R2, R7
.text:00000E9E 00 23                         MOVS            R3, #0
.text:00000EA0 01 1D                         ADDS            R1, R0, #4
.text:00000EA2 02 91                         STR             R1, [SP,#0x38+var_30]
.text:00000EA4 29 46                         MOV             R1, R5
.text:00000EA6 00 68                         LDR             R0, [R0]
.text:00000EA8 CD F8 00 A0                   STR.W           R10, [SP,#0x38+var_38]
.text:00000EAC 04 90                         STR             R0, [SP,#0x38+var_28]
.text:00000EAE 40 46                         MOV             R0, R8
.text:00000EB0 FF F7 7E FF                   BL              sub_DB0
.text:00000EB0
.text:00000EB4 00 21                         MOVS            R1, #0
.text:00000EB6 00 22                         MOVS            R2, #0
.text:00000EB8 0D 2F                         CMP             R7, #0xD
.text:00000EBA 08 BF                         IT EQ
.text:00000EBC 01 21                         MOVEQ           R1, #1
.text:00000EBE 00 2D                         CMP             R5, #0
.text:00000EC0 08 BF                         IT EQ
.text:00000EC2 01 22                         MOVEQ           R2, #1
.text:00000EC4 B8 BB                         CBNZ            R0, loc_F36
.text:00000EC4
.text:00000EC6 02 EA 01 00                   AND.W           R0, R2, R1
.text:00000ECA 04 43                         ORRS            R4, R0
.text:00000ECA
.text:00000ECC
.text:00000ECC                               loc_ECC                       ; CODE XREF: sub_E4C+4C↑j
.text:00000ECC 01 37                         ADDS            R7, #1
.text:00000ECE 10 2F                         CMP             R7, #0x10
.text:00000ED0 DF D3                         BCC             loc_E92
.text:00000ED0
.text:00000ED2 14 F0 01 0F                   TST.W           R4, #1
.text:00000ED6 3D D0                         BEQ             loc_F54
.text:00000ED6
.text:00000ED8 00 20                         MOVS            R0, #0
.text:00000EDA 2D E0                         B               loc_F38
.text:00000EDA
.text:00000EDC                               ; ---------------------------------------------------------------------------
.text:00000EDC
.text:00000EDC                               loc_EDC                       ; CODE XREF: sub_E4C+1E↑j
.text:00000EDC 47 F0 04 00                   ORR.W           R0, R7, #4    ; jumptable 00000E6A cases 1,3
.text:00000EE0 05 28                         CMP             R0, #5
.text:00000EE2 28 D1                         BNE             loc_F36
.text:00000EE2
.text:00000EE4 04 AA                         ADD             R2, SP, #0x38+var_28
.text:00000EE6 40 46                         MOV             R0, R8
.text:00000EE8 0D 21                         MOVS            R1, #0xD
.text:00000EEA 00 F0 39 FA                   BL              sub_1360
.text:00000EEA
.text:00000EEE 10 BB                         CBNZ            R0, loc_F36
.text:00000EEE
.text:00000EF0 B0 B2                         UXTH            R0, R6
.text:00000EF2 D0 B1                         CBZ             R0, loc_F2A
.text:00000EF2
.text:00000EF4 34 0C                         LSRS            R4, R6, #0x10
.text:00000EF6 0D F1 08 09                   ADD.W           R9, SP, #0x38+var_30
.text:00000EFA 14 FA 86 F6                   UXTAH.W         R6, R4, R6
.text:00000EFA
.text:00000EFE
.text:00000EFE                               loc_EFE                       ; CODE XREF: sub_E4C+DC↓j
.text:00000EFE 04 98                         LDR             R0, [SP,#0x38+var_28]
.text:00000F00 3B 46                         MOV             R3, R7
.text:00000F02 01 1D                         ADDS            R1, R0, #4
.text:00000F04 04 91                         STR             R1, [SP,#0x38+var_28]
.text:00000F06 01 46                         MOV             R1, R0
.text:00000F08 51 F8 08 2B                   LDR.W           R2, [R1],#8
.text:00000F0C 04 91                         STR             R1, [SP,#0x38+var_28]
.text:00000F0E 29 46                         MOV             R1, R5
.text:00000F10 40 68                         LDR             R0, [R0,#4]
.text:00000F12 CD E9 02 20                   STRD.W          R2, R0, [SP,#0x38+var_30]
.text:00000F16 40 46                         MOV             R0, R8
.text:00000F18 22 46                         MOV             R2, R4
.text:00000F1A CD F8 00 90                   STR.W           R9, [SP,#0x38+var_38]
.text:00000F1E FF F7 47 FF                   BL              sub_DB0
.text:00000F1E
.text:00000F22 40 B9                         CBNZ            R0, loc_F36
.text:00000F22
.text:00000F24 01 34                         ADDS            R4, #1
.text:00000F26 B4 42                         CMP             R4, R6
.text:00000F28 E9 D3                         BCC             loc_EFE
.text:00000F28
.text:00000F2A
.text:00000F2A                               loc_F2A                       ; CODE XREF: sub_E4C+A6↑j
.text:00000F2A 01 2F                         CMP             R7, #1
.text:00000F2C 10 D1                         BNE             loc_F50
.text:00000F2C
.text:00000F2E 04 98                         LDR             R0, [SP,#0x38+var_28]
.text:00000F30 02 1D                         ADDS            R2, R0, #4
.text:00000F32 04 92                         STR             R2, [SP,#0x38+var_28]
.text:00000F34 0F E0                         B               loc_F56
.text:00000F34
.text:00000F36                               ; ---------------------------------------------------------------------------
.text:00000F36
.text:00000F36                               loc_F36                       ; CODE XREF: sub_E4C+2A↑j
.text:00000F36                                                             ; sub_E4C+38↑j
.text:00000F36                                                             ; sub_E4C+78↑j
.text:00000F36                                                             ; sub_E4C+96↑j
.text:00000F36                                                             ; sub_E4C+A2↑j
.text:00000F36                                                             ; sub_E4C+D6↑j
.text:00000F36 02 20                         MOVS            R0, #2
.text:00000F36
.text:00000F38
.text:00000F38                               loc_F38                       ; CODE XREF: sub_E4C+8E↑j
.text:00000F38                                                             ; sub_E4C+118↓j
.text:00000F38 10 49                         LDR             R1, =(__stack_chk_guard_ptr - 0xF40)
.text:00000F3A 05 9A                         LDR             R2, [SP,#0x38+var_24]
.text:00000F3C 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:00000F3E 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:00000F40 09 68                         LDR             R1, [R1]
.text:00000F42 89 1A                         SUBS            R1, R1, R2
.text:00000F44 04 BF                         ITT EQ
.text:00000F46 06 B0                         ADDEQ           SP, SP, #0x18
.text:00000F48 BD E8 F0 87                   POPEQ.W         {R4-R10,PC}
.text:00000F48
.text:00000F4C FF F7 56 EC                   BLX             __stack_chk_fail
.text:00000F4C
.text:00000F50                               ; ---------------------------------------------------------------------------
.text:00000F50
.text:00000F50                               loc_F50                       ; CODE XREF: sub_E4C+E0↑j
.text:00000F50 04 9A                         LDR             R2, [SP,#0x38+var_28]
.text:00000F52 00 E0                         B               loc_F56
.text:00000F52
.text:00000F54                               ; ---------------------------------------------------------------------------
.text:00000F54
.text:00000F54                               loc_F54                       ; CODE XREF: sub_E4C+8A↑j
.text:00000F54 02 9A                         LDR             R2, [SP,#0x38+var_30]
.text:00000F54
.text:00000F56
.text:00000F56                               loc_F56                       ; CODE XREF: sub_E4C+E8↑j
.text:00000F56                                                             ; sub_E4C+106↑j
.text:00000F56 40 46                         MOV             R0, R8
.text:00000F58 0D 21                         MOVS            R1, #0xD
.text:00000F5A 00 F0 18 FA                   BL              sub_138E
.text:00000F5A
.text:00000F5E 00 28                         CMP             R0, #0
.text:00000F60 18 BF                         IT NE
.text:00000F62 02 20                         MOVNE           R0, #2
.text:00000F64 E8 E7                         B               loc_F38
.text:00000F64
.text:00000F66                               ; ---------------------------------------------------------------------------
.text:00000F66
.text:00000F66                               def_E6A                       ; CODE XREF: sub_E4C+1A↑j
.text:00000F66                                                             ; sub_E4C+1E↑j
.text:00000F66 06 48                         LDR             R0, =(aUnwindVrsResul_0 - 0xF72) ; jumptable 00000E6A default case, case 2
.text:00000F68 40 F2 CB 31                   MOVW            R1, #0x3CB
.text:00000F6C 05 4A                         LDR             R2, =(aUnsupportedReg - 0xF74) ; "unsupported register class"
.text:00000F6E 78 44                         ADD             R0, PC        ; "_Unwind_VRS_Result _Unwind_VRS_Pop(_Unw"...
.text:00000F70 7A 44                         ADD             R2, PC        ; "unsupported register class"
.text:00000F72 00 F0 2B F9                   BL              sub_11CC
.text:00000F72
.text:00000F72                               ; End of function sub_E4C
.text:00000F72
.text:00000F72                               ; ---------------------------------------------------------------------------
.text:00000F76 00 BF                         ALIGN 4
.text:00000F78 32 31 00 00                   off_F78 DCD __stack_chk_guard_ptr - 0xE5E
.text:00000F78                                                             ; DATA XREF: sub_E4C+8↑r
.text:00000F7C 50 30 00 00                   off_F7C DCD __stack_chk_guard_ptr - 0xF40
.text:00000F7C                                                             ; DATA XREF: sub_E4C:loc_F38↑r
.text:00000F80 EA 13 00 00                   off_F80 DCD aUnwindVrsResul_0 - 0xF72
.text:00000F80                                                             ; DATA XREF: sub_E4C:def_E6A↑r
.text:00000F80                                                             ; "_Unwind_VRS_Result _Unwind_VRS_Pop(_Unw"...
.text:00000F84 CD 13 00 00                   off_F84 DCD aUnsupportedReg - 0xF74
.text:00000F84                                                             ; DATA XREF: sub_E4C+120↑r
.text:00000F84                               ; } // starts at E4C          ; "unsupported register class"
.text:00000F88
.text:00000F88                               ; =============== S U B R O U T I N E =======================================
.text:00000F88
.text:00000F88
.text:00000F88                               ; int __fastcall sub_F88(int, int, int)
.text:00000F88                               sub_F88                       ; DATA XREF: sub_1990+C2↓o
.text:00000F88                                                             ; .got:off_3FA0↓o
.text:00000F88
.text:00000F88                               var_3C= -0x3C
.text:00000F88                               var_34= -0x34
.text:00000F88                               var_14= -0x14
.text:00000F88
.text:00000F88                               ; __unwind {
.text:00000F88 08 46                         MOV             R0, R1
.text:00000F8A 11 46                         MOV             R1, R2
.text:00000F8C 00 F0 00 B8                   B.W             loc_F90
.text:00000F8C                               ; } // starts at F88
.text:00000F8C
.text:00000F90                               ; ---------------------------------------------------------------------------
.text:00000F90
.text:00000F90                               loc_F90                       ; CODE XREF: sub_F88+4↑j
.text:00000F90                                                             ; sub_FEC+4↓j
.text:00000F90                                                             ; sub_FF4+4↓j
.text:00000F90                               ; __unwind {
.text:00000F90 B0 B5                         PUSH            {R4,R5,R7,LR}
.text:00000F92 8C B0                         SUB             SP, SP, #0x30
.text:00000F94 05 46                         MOV             R5, R0
.text:00000F96 13 48                         LDR             R0, =(__stack_chk_guard_ptr - 0xFA0)
.text:00000F98 0C 46                         MOV             R4, R1
.text:00000F9A 01 A9                         ADD             R1, SP, #0x40+var_3C
.text:00000F9C 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00000F9E 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00000FA0 00 68                         LDR             R0, [R0]
.text:00000FA2 0B 90                         STR             R0, [SP,#0x40+var_14]
.text:00000FA4 20 46                         MOV             R0, R4
.text:00000FA6 00 F0 4B FA                   BL              sub_1440
.text:00000FA6
.text:00000FAA 95 F8 50 00                   LDRB.W          R0, [R5,#0x50]
.text:00000FAE 10 F0 01 0F                   TST.W           R0, #1
.text:00000FB2 04 D1                         BNE             loc_FBE
.text:00000FB2
.text:00000FB4 03 98                         LDR             R0, [SP,#0x40+var_34]
.text:00000FB6 00 68                         LDR             R0, [R0]
.text:00000FB8 08 B1                         CBZ             R0, loc_FBE
.text:00000FB8
.text:00000FBA 09 20                         MOVS            R0, #9
.text:00000FBC 07 E0                         B               loc_FCE
.text:00000FBC
.text:00000FBE                               ; ---------------------------------------------------------------------------
.text:00000FBE
.text:00000FBE                               loc_FBE                       ; CODE XREF: sub_F88+2A↑j
.text:00000FBE                                                             ; sub_F88+30↑j
.text:00000FBE 20 46                         MOV             R0, R4
.text:00000FC0 00 F0 3B FA                   BL              sub_143A
.text:00000FC0
.text:00000FC4 01 46                         MOV             R1, R0
.text:00000FC6 09 20                         MOVS            R0, #9
.text:00000FC8 01 29                         CMP             R1, #1
.text:00000FCA 08 BF                         IT EQ
.text:00000FCC 08 20                         MOVEQ           R0, #8
.text:00000FCC
.text:00000FCE
.text:00000FCE                               loc_FCE                       ; CODE XREF: sub_F88+34↑j
.text:00000FCE 06 49                         LDR             R1, =(__stack_chk_guard_ptr - 0xFD6)
.text:00000FD0 0B 9A                         LDR             R2, [SP,#0x40+var_14]
.text:00000FD2 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:00000FD4 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:00000FD6 09 68                         LDR             R1, [R1]
.text:00000FD8 89 1A                         SUBS            R1, R1, R2
.text:00000FDA 04 BF                         ITT EQ
.text:00000FDC 0C B0                         ADDEQ           SP, SP, #0x30 ; '0'
.text:00000FDE B0 BD                         POPEQ           {R4,R5,R7,PC}
.text:00000FDE
.text:00000FE0 FF F7 0C EC                   BLX             __stack_chk_fail
.text:00000FE0
.text:00000FE0                               ; End of function sub_F88
.text:00000FE0
.text:00000FE0                               ; ---------------------------------------------------------------------------
.text:00000FE4 F0 2F 00 00                   off_FE4 DCD __stack_chk_guard_ptr - 0xFA0
.text:00000FE4                                                             ; DATA XREF: sub_F88+E↑r
.text:00000FE8 BA 2F 00 00                   off_FE8 DCD __stack_chk_guard_ptr - 0xFD6
.text:00000FE8                                                             ; DATA XREF: sub_F88:loc_FCE↑r
.text:00000FE8                               ; } // starts at F90
.text:00000FEC
.text:00000FEC                               ; =============== S U B R O U T I N E =======================================
.text:00000FEC
.text:00000FEC
.text:00000FEC                               ; void sub_FEC()
.text:00000FEC                               sub_FEC                       ; DATA XREF: sub_1990+DA↓o
.text:00000FEC                                                             ; .got:off_3F9C↓o
.text:00000FEC                               ; __unwind {
.text:00000FEC 08 46                         MOV             R0, R1
.text:00000FEE 11 46                         MOV             R1, R2
.text:00000FF0 FF F7 CE BF                   B.W             loc_F90
.text:00000FF0
.text:00000FF0                               ; End of function sub_FEC
.text:00000FF0
.text:00000FF4
.text:00000FF4                               ; =============== S U B R O U T I N E =======================================
.text:00000FF4
.text:00000FF4
.text:00000FF4                               ; void sub_FF4()
.text:00000FF4                               sub_FF4                       ; DATA XREF: sub_1990+CE↓o
.text:00000FF4                                                             ; .got:off_3F98↓o
.text:00000FF4 08 46                         MOV             R0, R1
.text:00000FF6 11 46                         MOV             R1, R2
.text:00000FF8 FF F7 CA BF                   B.W             loc_F90
.text:00000FF8                               ; } // starts at FEC
.text:00000FF8
.text:00000FF8                               ; End of function sub_FF4
.text:00000FF8
.text:00000FFC
.text:00000FFC                               ; =============== S U B R O U T I N E =======================================
.text:00000FFC
.text:00000FFC
.text:00000FFC                               ; int __fastcall sub_FFC(int *, int, int, int)
.text:00000FFC                               sub_FFC
.text:00000FFC
.text:00000FFC                               var_8A0= -0x8A0
.text:00000FFC                               var_894= -0x894
.text:00000FFC                               var_88C= -0x88C
.text:00000FFC                               var_880= -0x880
.text:00000FFC                               var_878= -0x878
.text:00000FFC                               var_478= -0x478
.text:00000FFC                               var_18= -0x18
.text:00000FFC
.text:00000FFC                               ; __unwind {
.text:00000FFC F0 B5                         PUSH            {R4-R7,LR}
.text:00000FFE AD F5 08 6D                   SUB.W           SP, SP, #0x880
.text:00001002 83 B0                         SUB             SP, SP, #0xC
.text:00001004 04 46                         MOV             R4, R0
.text:00001006 26 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x100E)
.text:00001008 0A AD                         ADD             R5, SP, #0x8A0+var_878
.text:0000100A 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:0000100C 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:0000100E 00 68                         LDR             R0, [R0]
.text:00001010 CD F8 88 08                   STR.W           R0, [SP,#0x8A0+var_18]
.text:00001014 28 46                         MOV             R0, R5
.text:00001016 00 F0 3E E9                   BLX             sub_1294
.text:00001016
.text:0000101A 00 20                         MOVS            R0, #0
.text:0000101C 0D F5 85 66                   ADD.W           R6, SP, #0x8A0+var_478
.text:00001020 E0 60                         STR             R0, [R4,#0xC]
.text:00001022 30 46                         MOV             R0, R6
.text:00001024 29 46                         MOV             R1, R5
.text:00001026 00 F0 79 F9                   BL              sub_131C
.text:00001026
.text:0000102A 69 46                         MOV             R1, SP
.text:0000102C 30 46                         MOV             R0, R6
.text:0000102E 00 F0 07 FA                   BL              sub_1440
.text:0000102E
.text:00001032 B8 B9                         CBNZ            R0, loc_1064
.text:00001032
.text:00001034 0D F5 85 66                   ADD.W           R6, SP, #0x8A0+var_478
.text:00001038 6F 46                         MOV             R7, SP
.text:0000103A 03 25                         MOVS            R5, #3
.text:0000103A
.text:0000103C
.text:0000103C                               loc_103C                      ; CODE XREF: sub_FFC+66↓j
.text:0000103C 03 9B                         LDR             R3, [SP,#0x8A0+var_894]
.text:0000103E 5B B1                         CBZ             R3, loc_1058
.text:0000103E
.text:00001040 00 98                         LDR             R0, [SP,#0x8A0+var_8A0]
.text:00001042 21 46                         MOV             R1, R4
.text:00001044 32 46                         MOV             R2, R6
.text:00001046 A0 64                         STR             R0, [R4,#0x48]
.text:00001048 08 98                         LDR             R0, [SP,#0x8A0+var_880]
.text:0000104A E0 64                         STR             R0, [R4,#0x4C]
.text:0000104C 05 98                         LDR             R0, [SP,#0x8A0+var_88C]
.text:0000104E 20 65                         STR             R0, [R4,#0x50]
.text:00001050 00 20                         MOVS            R0, #0
.text:00001052 98 47                         BLX             R3
.text:00001052
.text:00001054 08 28                         CMP             R0, #8
.text:00001056 15 D1                         BNE             loc_1084
.text:00001056
.text:00001058
.text:00001058                               loc_1058                      ; CODE XREF: sub_FFC+42↑j
.text:00001058 30 46                         MOV             R0, R6
.text:0000105A 39 46                         MOV             R1, R7
.text:0000105C 00 F0 F0 F9                   BL              sub_1440
.text:0000105C
.text:00001060 00 28                         CMP             R0, #0
.text:00001062 EB D0                         BEQ             loc_103C
.text:00001062
.text:00001064
.text:00001064                               loc_1064                      ; CODE XREF: sub_FFC+36↑j
.text:00001064 03 25                         MOVS            R5, #3
.text:00001064
.text:00001066
.text:00001066                               loc_1066                      ; CODE XREF: sub_FFC+92↓j
.text:00001066                                                             ; sub_FFC+A0↓j
.text:00001066 0F 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x1070)
.text:00001068 DD F8 88 18                   LDR.W           R1, [SP,#0x8A0+var_18]
.text:0000106C 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:0000106E 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00001070 00 68                         LDR             R0, [R0]
.text:00001072 40 1A                         SUBS            R0, R0, R1
.text:00001074 01 BF                         ITTTT EQ
.text:00001076 28 46                         MOVEQ           R0, R5
.text:00001078 0D F5 08 6D                   ADDEQ.W         SP, SP, #0x880
.text:0000107C 03 B0                         ADDEQ           SP, SP, #0xC
.text:0000107E F0 BD                         POPEQ           {R4-R7,PC}
.text:0000107E
.text:00001080 FF F7 BC EB                   BLX             __stack_chk_fail
.text:00001080
.text:00001084                               ; ---------------------------------------------------------------------------
.text:00001084
.text:00001084                               loc_1084                      ; CODE XREF: sub_FFC+5A↑j
.text:00001084 06 28                         CMP             R0, #6
.text:00001086 03 D0                         BEQ             loc_1090
.text:00001086
.text:00001088 09 28                         CMP             R0, #9
.text:0000108A 08 BF                         IT EQ
.text:0000108C 09 25                         MOVEQ           R5, #9
.text:0000108E EA E7                         B               loc_1066
.text:0000108E
.text:00001090                               ; ---------------------------------------------------------------------------
.text:00001090
.text:00001090                               loc_1090                      ; CODE XREF: sub_FFC+8A↑j
.text:00001090 0A A8                         ADD             R0, SP, #0x8A0+var_878
.text:00001092 21 46                         MOV             R1, R4
.text:00001094 00 22                         MOVS            R2, #0
.text:00001096 00 F0 07 F8                   BL              sub_10A8
.text:00001096
.text:0000109A 02 25                         MOVS            R5, #2
.text:0000109C E3 E7                         B               loc_1066
.text:0000109C
.text:0000109C                               ; End of function sub_FFC
.text:0000109C
.text:0000109C                               ; ---------------------------------------------------------------------------
.text:0000109E 00 BF                         ALIGN 0x10
.text:000010A0 82 2F 00 00                   off_10A0 DCD __stack_chk_guard_ptr - 0x100E
.text:000010A0                                                             ; DATA XREF: sub_FFC+A↑r
.text:000010A4 20 2F 00 00                   off_10A4 DCD __stack_chk_guard_ptr - 0x1070
.text:000010A4                                                             ; DATA XREF: sub_FFC:loc_1066↑r
.text:000010A4                               ; } // starts at FFC
.text:000010A8
.text:000010A8                               ; =============== S U B R O U T I N E =======================================
.text:000010A8
.text:000010A8
.text:000010A8                               ; int __fastcall sub_10A8(const void *, int *, char)
.text:000010A8                               sub_10A8                      ; CODE XREF: sub_FFC+9A↑p
.text:000010A8                                                             ; sub_1198+16↓p
.text:000010A8
.text:000010A8                               var_4B8= -0x4B8
.text:000010A8                               var_4B4= -0x4B4
.text:000010A8                               var_4A8= -0x4A8
.text:000010A8                               var_4A0= -0x4A0
.text:000010A8                               var_494= -0x494
.text:000010A8                               var_48C= -0x48C
.text:000010A8                               var_488= -0x488
.text:000010A8                               var_24= -0x24
.text:000010A8
.text:000010A8                               ; __unwind {
.text:000010A8 2D E9 F0 47                   PUSH.W          {R4-R10,LR}
.text:000010AC AD F5 93 6D                   SUB.W           SP, SP, #0x498
.text:000010B0 0C 46                         MOV             R4, R1
.text:000010B2 01 46                         MOV             R1, R0
.text:000010B4 33 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x10BE)
.text:000010B6 0C AD                         ADD             R5, SP, #0x4B8+var_488
.text:000010B8 92 46                         MOV             R10, R2
.text:000010BA 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:000010BC 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:000010BE 00 68                         LDR             R0, [R0]
.text:000010C0 CD F8 94 04                   STR.W           R0, [SP,#0x4B8+var_24]
.text:000010C4 28 46                         MOV             R0, R5
.text:000010C6 00 F0 29 F9                   BL              sub_131C
.text:000010C6
.text:000010CA 01 26                         MOVS            R6, #1
.text:000010CC 0D F1 2C 08                   ADD.W           R8, SP, #0x4B8+var_48C
.text:000010D0 0D F1 04 09                   ADD.W           R9, SP, #0x4B8+var_4B4
.text:000010D4 00 E0                         B               loc_10D8
.text:000010D4
.text:000010D6                               ; ---------------------------------------------------------------------------
.text:000010D6
.text:000010D6                               loc_10D6                      ; CODE XREF: sub_10A8+68↓j
.text:000010D6                                                             ; sub_10A8+8C↓j
.text:000010D6 01 3E                         SUBS            R6, #1
.text:000010D6
.text:000010D8
.text:000010D8                               loc_10D8                      ; CODE XREF: sub_10A8+2C↑j
.text:000010D8 01 27                         MOVS            R7, #1
.text:000010DA 1A F0 01 00                   ANDS.W          R0, R10, #1
.text:000010DE 18 BF                         IT NE
.text:000010E0 02 27                         MOVNE           R7, #2
.text:000010E2 08 D0                         BEQ             loc_10F6
.text:000010E2
.text:000010E4 3E B9                         CBNZ            R6, loc_10F6
.text:000010E4
.text:000010E6 22 69                         LDR             R2, [R4,#0x10]
.text:000010E8 28 46                         MOV             R0, R5
.text:000010EA 4F F0 FF 31                   MOV.W           R1, #0xFFFFFFFF
.text:000010EE 00 F0 4E F9                   BL              sub_138E
.text:000010EE
.text:000010F2 4F F0 00 0A                   MOV.W           R10, #0
.text:000010F2
.text:000010F6
.text:000010F6                               loc_10F6                      ; CODE XREF: sub_10A8+3A↑j
.text:000010F6                                                             ; sub_10A8+3C↑j
.text:000010F6 28 46                         MOV             R0, R5
.text:000010F8 6F F0 01 01                   MOV             R1, #0xFFFFFFFE
.text:000010FC 42 46                         MOV             R2, R8
.text:000010FE 00 F0 2F F9                   BL              sub_1360
.text:000010FE
.text:00001102 28 46                         MOV             R0, R5
.text:00001104 49 46                         MOV             R1, R9
.text:00001106 00 F0 9B F9                   BL              sub_1440
.text:00001106
.text:0000110A 60 BB                         CBNZ            R0, loc_1166
.text:0000110A
.text:0000110C 04 9B                         LDR             R3, [SP,#0x4B8+var_4A8]
.text:0000110E 00 2B                         CMP             R3, #0
.text:00001110 E1 D0                         BEQ             loc_10D6
.text:00001110
.text:00001112 01 98                         LDR             R0, [SP,#0x4B8+var_4B4]
.text:00001114 21 46                         MOV             R1, R4
.text:00001116 2A 46                         MOV             R2, R5
.text:00001118 A0 64                         STR             R0, [R4,#0x48]
.text:0000111A 09 98                         LDR             R0, [SP,#0x4B8+var_494]
.text:0000111C E0 64                         STR             R0, [R4,#0x4C]
.text:0000111E 06 98                         LDR             R0, [SP,#0x4B8+var_4A0]
.text:00001120 20 65                         STR             R0, [R4,#0x50]
.text:00001122 38 46                         MOV             R0, R7
.text:00001124 98 47                         BLX             R3
.text:00001124
.text:00001126 07 28                         CMP             R0, #7
.text:00001128 11 D0                         BEQ             loc_114E
.text:00001128
.text:0000112A 08 28                         CMP             R0, #8
.text:0000112C 0B D1                         BNE             loc_1146
.text:0000112C
.text:0000112E 0B 98                         LDR             R0, [SP,#0x4B8+var_48C]
.text:00001130 21 6A                         LDR             R1, [R4,#0x20]
.text:00001132 88 42                         CMP             R0, R1
.text:00001134 CF D1                         BNE             loc_10D6
.text:00001134
.text:00001136 14 48                         LDR             R0, =(aUnwindReasonCo - 0x1142) ; "_Unwind_Reason_Code unwind_phase2(unw_c"...
.text:00001138 40 F2 8D 21                   MOVW            R1, #0x28D
.text:0000113C 13 4A                         LDR             R2, =(aDuringPhase1Pe - 0x1144) ; "during phase1 personality function said"...
.text:0000113E 78 44                         ADD             R0, PC        ; "_Unwind_Reason_Code unwind_phase2(unw_c"...
.text:00001140 7A 44                         ADD             R2, PC        ; "during phase1 personality function said"...
.text:00001142 00 F0 43 F8                   BL              sub_11CC
.text:00001142
.text:00001146                               ; ---------------------------------------------------------------------------
.text:00001146
.text:00001146                               loc_1146                      ; CODE XREF: sub_10A8+84↑j
.text:00001146 09 28                         CMP             R0, #9
.text:00001148 0D D1                         BNE             loc_1166
.text:00001148
.text:0000114A FF F7 5E EB                   BLX             abort
.text:0000114A
.text:0000114E                               ; ---------------------------------------------------------------------------
.text:0000114E
.text:0000114E                               loc_114E                      ; CODE XREF: sub_10A8+80↑j
.text:0000114E 0C AD                         ADD             R5, SP, #0x4B8+var_488
.text:00001150 6A 46                         MOV             R2, SP
.text:00001152 28 46                         MOV             R0, R5
.text:00001154 4F F0 FF 31                   MOV.W           R1, #0xFFFFFFFF
.text:00001158 00 F0 02 F9                   BL              sub_1360
.text:00001158
.text:0000115C 00 98                         LDR             R0, [SP,#0x4B8+var_4B8]
.text:0000115E 20 61                         STR             R0, [R4,#0x10]
.text:00001160 28 46                         MOV             R0, R5
.text:00001162 00 F0 7C F9                   BL              sub_145E
.text:00001162
.text:00001166
.text:00001166                               loc_1166                      ; CODE XREF: sub_10A8+62↑j
.text:00001166                                                             ; sub_10A8+A0↑j
.text:00001166 0A 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x1170)
.text:00001168 DD F8 94 14                   LDR.W           R1, [SP,#0x4B8+var_24]
.text:0000116C 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:0000116E 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00001170 00 68                         LDR             R0, [R0]
.text:00001172 40 1A                         SUBS            R0, R0, R1
.text:00001174 04 BF                         ITT EQ
.text:00001176 0D F5 93 6D                   ADDEQ.W         SP, SP, #0x498
.text:0000117A BD E8 F0 87                   POPEQ.W         {R4-R10,PC}
.text:0000117A
.text:0000117E FF F7 3E EB                   BLX             __stack_chk_fail
.text:0000117E
.text:0000117E                               ; End of function sub_10A8
.text:0000117E
.text:0000117E                               ; ---------------------------------------------------------------------------
.text:00001182 00 BF                         ALIGN 4
.text:00001184 D2 2E 00 00                   off_1184 DCD __stack_chk_guard_ptr - 0x10BE
.text:00001184                                                             ; DATA XREF: sub_10A8+C↑r
.text:00001188 90 12 00 00                   off_1188 DCD aUnwindReasonCo - 0x1142
.text:00001188                                                             ; DATA XREF: sub_10A8+8E↑r
.text:00001188                                                             ; "_Unwind_Reason_Code unwind_phase2(unw_c"...
.text:0000118C DC 12 00 00                   off_118C DCD aDuringPhase1Pe - 0x1144
.text:0000118C                                                             ; DATA XREF: sub_10A8+94↑r
.text:0000118C                                                             ; "during phase1 personality function said"...
.text:00001190 20 2E 00 00                   off_1190 DCD __stack_chk_guard_ptr - 0x1170
.text:00001190                                                             ; DATA XREF: sub_10A8:loc_1166↑r
.text:00001190                               ; } // starts at 10A8
.text:00001194                               ; [00000002 BYTES: COLLAPSED FUNCTION nullsub_1. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00001196 00 00                         ALIGN 4
.text:00001196                               ; } // starts at 1194
.text:00001198
.text:00001198                               ; =============== S U B R O U T I N E =======================================
.text:00001198
.text:00001198                               ; Attributes: noreturn
.text:00001198
.text:00001198                               ; void __fastcall __noreturn sub_1198(int *, int, int, int)
.text:00001198                               sub_1198
.text:00001198                               ; __unwind {
.text:00001198 B0 B5                         PUSH            {R4,R5,R7,LR}
.text:0000119A AD F5 80 6D                   SUB.W           SP, SP, #0x400
.text:0000119E 6D 46                         MOV             R5, SP
.text:000011A0 04 46                         MOV             R4, R0
.text:000011A2 28 46                         MOV             R0, R5
.text:000011A4 00 F0 76 E8                   BLX             sub_1294
.text:000011A4
.text:000011A8 28 46                         MOV             R0, R5
.text:000011AA 21 46                         MOV             R1, R4
.text:000011AC 01 22                         MOVS            R2, #1
.text:000011AE FF F7 7B FF                   BL              sub_10A8
.text:000011AE
.text:000011B2 04 48                         LDR             R0, =(aVoidUnwindResu - 0x11BE) ; "void _Unwind_Resume(_Unwind_Exception *"...
.text:000011B4 40 F2 F1 21                   MOVW            R1, #0x2F1
.text:000011B8 03 4A                         LDR             R2, =(aUnwindResumeCa - 0x11C0) ; "_Unwind_Resume() can't return"
.text:000011BA 78 44                         ADD             R0, PC        ; "void _Unwind_Resume(_Unwind_Exception *"...
.text:000011BC 7A 44                         ADD             R2, PC        ; "_Unwind_Resume() can't return"
.text:000011BE 00 F0 05 F8                   BL              sub_11CC
.text:000011BE
.text:000011BE                               ; End of function sub_1198
.text:000011BE
.text:000011BE                               ; ---------------------------------------------------------------------------
.text:000011C2 00 BF                         ALIGN 4
.text:000011C4 91 10 00 00                   off_11C4 DCD aVoidUnwindResu - 0x11BE
.text:000011C4                                                             ; DATA XREF: sub_1198+1A↑r
.text:000011C4                                                             ; "void _Unwind_Resume(_Unwind_Exception *"...
.text:000011C8 E5 10 00 00                   off_11C8 DCD aUnwindResumeCa - 0x11C0
.text:000011C8                                                             ; DATA XREF: sub_1198+20↑r
.text:000011C8                               ; } // starts at 1198         ; "_Unwind_Resume() can't return"
.text:000011CC
.text:000011CC                               ; =============== S U B R O U T I N E =======================================
.text:000011CC
.text:000011CC                               ; Attributes: noreturn
.text:000011CC
.text:000011CC                               ; void __fastcall __noreturn sub_11CC(const char *, int, const char *)
.text:000011CC                               sub_11CC                      ; CODE XREF: .text:00000DA2↑p
.text:000011CC                                                             ; sub_DB0+8E↑p
.text:000011CC                                                             ; sub_E4C+126↑p
.text:000011CC                                                             ; sub_10A8+9A↑p
.text:000011CC                                                             ; sub_1198+26↑p
.text:000011CC
.text:000011CC                               var_10= -0x10
.text:000011CC
.text:000011CC                               ; __unwind {
.text:000011CC 80 B5                         PUSH            {R7,LR}
.text:000011CE 82 B0                         SUB             SP, SP, #8
.text:000011D0 84 46                         MOV             R12, R0
.text:000011D2 07 48                         LDR             R0, =(stderr_ptr - 0x11DA)
.text:000011D4 08 4B                         LDR             R3, =(aExternalLibunw - 0x11DE) ; "external/libunwind_llvm/src/Unwind-EHAB"...
.text:000011D6 78 44                         ADD             R0, PC        ; stderr_ptr
.text:000011D8 00 68                         LDR             R0, [R0]      ; stderr
.text:000011DA 7B 44                         ADD             R3, PC        ; "external/libunwind_llvm/src/Unwind-EHAB"...
.text:000011DC 00 68                         LDR             R0, [R0]      ; stream
.text:000011DE CD E9 00 12                   STRD.W          R1, R2, [SP,#0x10+var_10]
.text:000011E2 62 46                         MOV             R2, R12
.text:000011E4 03 49                         LDR             R1, =(aLibunwindSSDS - 0x11EA) ; "libunwind: %s %s:%d - %s\n"
.text:000011E6 79 44                         ADD             R1, PC        ; "libunwind: %s %s:%d - %s\n"
.text:000011E8 FF F7 14 EB                   BLX             fprintf
.text:000011E8
.text:000011EC FF F7 0C EB                   BLX             abort
.text:000011EC
.text:000011EC                               ; End of function sub_11CC
.text:000011EC
.text:000011EC                               ; ---------------------------------------------------------------------------
.text:000011F0 BA 2D 00 00                   off_11F0 DCD stderr_ptr - 0x11DA
.text:000011F0                                                             ; DATA XREF: sub_11CC+6↑r
.text:000011F4 99 12 00 00                   off_11F4 DCD aLibunwindSSDS - 0x11EA
.text:000011F4                                                             ; DATA XREF: sub_11CC+18↑r
.text:000011F4                                                             ; "libunwind: %s %s:%d - %s\n"
.text:000011F8 9A 10 00 00                   off_11F8 DCD aExternalLibunw - 0x11DE
.text:000011F8                                                             ; DATA XREF: sub_11CC+8↑r
.text:000011F8                               ; } // starts at 11CC         ; "external/libunwind_llvm/src/Unwind-EHAB"...
.text:000011FC
.text:000011FC                               ; =============== S U B R O U T I N E =======================================
.text:000011FC
.text:000011FC
.text:000011FC                               ; int __fastcall sub_11FC(int)
.text:000011FC                               sub_11FC
.text:000011FC
.text:000011FC                               var_34= -0x34
.text:000011FC                               var_2C= -0x2C
.text:000011FC                               var_C= -0xC
.text:000011FC
.text:000011FC                               ; __unwind {
.text:000011FC 80 B5                         PUSH            {R7,LR}
.text:000011FE 8C B0                         SUB             SP, SP, #0x30
.text:00001200 0B 49                         LDR             R1, =(__stack_chk_guard_ptr - 0x1206)
.text:00001202 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:00001204 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:00001206 09 68                         LDR             R1, [R1]
.text:00001208 0B 91                         STR             R1, [SP,#0x38+var_C]
.text:0000120A 01 A9                         ADD             R1, SP, #0x38+var_34
.text:0000120C 00 F0 18 F9                   BL              sub_1440
.text:0000120C
.text:00001210 01 46                         MOV             R1, R0
.text:00001212 03 98                         LDR             R0, [SP,#0x38+var_2C]
.text:00001214 00 29                         CMP             R1, #0
.text:00001216 07 49                         LDR             R1, =(__stack_chk_guard_ptr - 0x1222)
.text:00001218 18 BF                         IT NE
.text:0000121A 00 20                         MOVNE           R0, #0
.text:0000121C 0B 9A                         LDR             R2, [SP,#0x38+var_C]
.text:0000121E 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:00001220 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:00001222 09 68                         LDR             R1, [R1]
.text:00001224 89 1A                         SUBS            R1, R1, R2
.text:00001226 04 BF                         ITT EQ
.text:00001228 0C B0                         ADDEQ           SP, SP, #0x30 ; '0'
.text:0000122A 80 BD                         POPEQ           {R7,PC}
.text:0000122A
.text:0000122C FF F7 E6 EA                   BLX             __stack_chk_fail
.text:0000122C
.text:0000122C                               ; End of function sub_11FC
.text:0000122C
.text:0000122C                               ; ---------------------------------------------------------------------------
.text:00001230 8A 2D 00 00                   off_1230 DCD __stack_chk_guard_ptr - 0x1206
.text:00001230                                                             ; DATA XREF: sub_11FC+4↑r
.text:00001234 6E 2D 00 00                   off_1234 DCD __stack_chk_guard_ptr - 0x1222
.text:00001234                                                             ; DATA XREF: sub_11FC+1A↑r
.text:00001238
.text:00001238                               ; =============== S U B R O U T I N E =======================================
.text:00001238
.text:00001238
.text:00001238                               ; int __fastcall sub_1238(int)
.text:00001238                               sub_1238
.text:00001238
.text:00001238                               var_34= -0x34
.text:00001238                               var_C= -0xC
.text:00001238
.text:00001238 80 B5                         PUSH            {R7,LR}
.text:0000123A 8C B0                         SUB             SP, SP, #0x30
.text:0000123C 0B 49                         LDR             R1, =(__stack_chk_guard_ptr - 0x1242)
.text:0000123E 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:00001240 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:00001242 09 68                         LDR             R1, [R1]
.text:00001244 0B 91                         STR             R1, [SP,#0x38+var_C]
.text:00001246 01 A9                         ADD             R1, SP, #0x38+var_34
.text:00001248 00 F0 FA F8                   BL              sub_1440
.text:00001248
.text:0000124C 01 46                         MOV             R1, R0
.text:0000124E 01 98                         LDR             R0, [SP,#0x38+var_34]
.text:00001250 00 29                         CMP             R1, #0
.text:00001252 07 49                         LDR             R1, =(__stack_chk_guard_ptr - 0x125E)
.text:00001254 18 BF                         IT NE
.text:00001256 00 20                         MOVNE           R0, #0
.text:00001258 0B 9A                         LDR             R2, [SP,#0x38+var_C]
.text:0000125A 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:0000125C 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:0000125E 09 68                         LDR             R1, [R1]
.text:00001260 89 1A                         SUBS            R1, R1, R2
.text:00001262 04 BF                         ITT EQ
.text:00001264 0C B0                         ADDEQ           SP, SP, #0x30 ; '0'
.text:00001266 80 BD                         POPEQ           {R7,PC}
.text:00001266
.text:00001268 FF F7 C8 EA                   BLX             __stack_chk_fail
.text:00001268
.text:00001268                               ; End of function sub_1238
.text:00001268
.text:00001268                               ; ---------------------------------------------------------------------------
.text:0000126C 4E 2D 00 00                   off_126C DCD __stack_chk_guard_ptr - 0x1242
.text:0000126C                                                             ; DATA XREF: sub_1238+4↑r
.text:00001270 32 2D 00 00                   off_1270 DCD __stack_chk_guard_ptr - 0x125E
.text:00001270                                                             ; DATA XREF: sub_1238+1A↑r
.text:00001270                               ; } // starts at 11FC
.text:00001274                               ; ---------------------------------------------------------------------------
.text:00001274                               ; __unwind {
.text:00001274 01 46                         MOV             R1, R0
.text:00001276 8A 68                         LDR             R2, [R1,#8]
.text:00001278 0A B1                         CBZ             R2, locret_127E
.text:00001278
.text:0000127A 01 20                         MOVS            R0, #1
.text:0000127C 10 47                         BX              R2
.text:0000127C
.text:0000127E                               ; ---------------------------------------------------------------------------
.text:0000127E
.text:0000127E                               locret_127E                   ; CODE XREF: .text:00001278↑j
.text:0000127E 70 47                         BX              LR
.text:0000127E                               ; } // starts at 1274
.text:0000127E
.text:00001280
.text:00001280                               ; =============== S U B R O U T I N E =======================================
.text:00001280
.text:00001280
.text:00001280                               ; int __fastcall sub_1280(int, int)
.text:00001280                               sub_1280
.text:00001280                               ; __unwind {
.text:00001280 80 B5                         PUSH            {R7,LR}
.text:00001282 08 46                         MOV             R0, R1
.text:00001284 00 F0 D9 F8                   BL              sub_143A
.text:00001284
.text:00001288 09 21                         MOVS            R1, #9
.text:0000128A 01 28                         CMP             R0, #1
.text:0000128C 08 BF                         IT EQ
.text:0000128E 00 21                         MOVEQ           R1, #0
.text:00001290 08 46                         MOV             R0, R1
.text:00001292 80 BD                         POP             {R7,PC}
.text:00001292                               ; } // starts at 1280
.text:00001292
.text:00001292                               ; End of function sub_1280
.text:00001292
.text:00001294                               CODE32
.text:00001294
.text:00001294                               ; =============== S U B R O U T I N E =======================================
.text:00001294
.text:00001294
.text:00001294                               ; int __fastcall sub_1294(_DWORD *, int, int, int, int)
.text:00001294                               sub_1294                      ; CODE XREF: sub_FFC+1A↑p
.text:00001294                                                             ; sub_1198+C↑p
.text:00001294 FF 1F 80 E8                   STM             R0, {R0-R12}
.text:00001298 34 D0 80 E5                   STR             SP, [R0,#0x34]
.text:0000129C 38 E0 80 E5                   STR             LR, [R0,#0x38]
.text:000012A0 3C E0 80 E5                   STR             LR, [R0,#0x3C]
.text:000012A4 00 00 A0 E3                   MOV             R0, #0
.text:000012A8 1E FF 2F E1                   BX              LR
.text:000012A8
.text:000012A8                               ; End of function sub_1294
.text:000012A8
.text:000012AC
.text:000012AC                               ; =============== S U B R O U T I N E =======================================
.text:000012AC
.text:000012AC
.text:000012AC                               ; _QWORD *__fastcall sub_12AC(_QWORD *result)
.text:000012AC                               sub_12AC                      ; CODE XREF: sub_15D4:loc_1646↓p
.text:000012AC                                                             ; sub_1678:loc_1704↓p
.text:000012AC 20 0B 80 EC                   VSTM            R0, {D0-D15}
.text:000012B0 1E FF 2F E1                   BX              LR
.text:000012B0
.text:000012B0                               ; End of function sub_12AC
.text:000012B0
.text:000012B4
.text:000012B4                               ; =============== S U B R O U T I N E =======================================
.text:000012B4
.text:000012B4
.text:000012B4                               ; _QWORD *__fastcall sub_12B4(_QWORD *result)
.text:000012B4                               sub_12B4                      ; CODE XREF: sub_15D4+30↓p
.text:000012B4                                                             ; sub_1678+36↓p
.text:000012B4 20 0B 80 EC                   VSTM            R0, {D0-D15}
.text:000012B8 1E FF 2F E1                   BX              LR
.text:000012B8
.text:000012B8                               ; End of function sub_12B4
.text:000012B8
.text:000012BC
.text:000012BC                               ; =============== S U B R O U T I N E =======================================
.text:000012BC
.text:000012BC
.text:000012BC                               ; _QWORD *__fastcall sub_12BC(_QWORD *result)
.text:000012BC                               sub_12BC                      ; CODE XREF: sub_15D4+64↓p
.text:000012BC                                                             ; sub_1678+74↓p
.text:000012BC 20 0B C0 EC                   VSTM            R0, {D16-D31}
.text:000012C0 1E FF 2F E1                   BX              LR
.text:000012C0
.text:000012C0                               ; End of function sub_12BC
.text:000012C0
.text:000012C4
.text:000012C4                               ; =============== S U B R O U T I N E =======================================
.text:000012C4
.text:000012C4
.text:000012C4                               ; void sub_12C4()
.text:000012C4                               sub_12C4                      ; CODE XREF: sub_15D4+46↓p
.text:000012C4                                                             ; sub_1678+4C↓p
.text:000012C4 02 01 E0 EC                   STCL            p1, c0, [R0],#8
.text:000012C8 02 11 E0 EC                   STCL            p1, c1, [R0],#8
.text:000012CC 02 21 E0 EC                   STCL            p1, c2, [R0],#8
.text:000012D0 02 31 E0 EC                   STCL            p1, c3, [R0],#8
.text:000012D4 02 41 E0 EC                   STCL            p1, c4, [R0],#8
.text:000012D8 02 51 E0 EC                   STCL            p1, c5, [R0],#8
.text:000012DC 02 61 E0 EC                   STCL            p1, c6, [R0],#8
.text:000012E0 02 71 E0 EC                   STCL            p1, c7, [R0],#8
.text:000012E4 02 81 E0 EC                   STCL            p1, c8, [R0],#8
.text:000012E8 02 91 E0 EC                   STCL            p1, c9, [R0],#8
.text:000012EC 02 A1 E0 EC                   STCL            p1, c10, [R0],#8
.text:000012F0 02 B1 E0 EC                   STCL            p1, c11, [R0],#8
.text:000012F4 02 C1 E0 EC                   STCL            p1, c12, [R0],#8
.text:000012F8 02 D1 E0 EC                   STCL            p1, c13, [R0],#8
.text:000012FC 02 E1 E0 EC                   STCL            p1, c14, [R0],#8
.text:00001300 02 F1 E0 EC                   STCL            p1, c15, [R0],#8
.text:00001304 1E FF 2F E1                   BX              LR
.text:00001304
.text:00001304                               ; End of function sub_12C4
.text:00001304
.text:00001308
.text:00001308                               ; =============== S U B R O U T I N E =======================================
.text:00001308
.text:00001308
.text:00001308                               ; void sub_1308()
.text:00001308                               sub_1308                      ; CODE XREF: sub_1498+5A↓p
.text:00001308                                                             ; sub_1524+56↓p
.text:00001308 01 81 A0 FC                   STC2            p1, c8, [R0],#4
.text:0000130C 01 91 A0 FC                   STC2            p1, c9, [R0],#4
.text:00001310 01 A1 A0 FC                   STC2            p1, c10, [R0],#4
.text:00001314 01 B1 A0 FC                   STC2            p1, c11, [R0],#4
.text:00001318 1E FF 2F E1                   BX              LR
.text:00001318
.text:00001318                               ; End of function sub_1308
.text:00001318
.text:0000131C                               CODE16
.text:0000131C
.text:0000131C                               ; =============== S U B R O U T I N E =======================================
.text:0000131C
.text:0000131C
.text:0000131C                               ; int __fastcall sub_131C(int, const void *)
.text:0000131C                               sub_131C                      ; CODE XREF: sub_FFC+2A↑p
.text:0000131C                                                             ; sub_10A8+1E↑p
.text:0000131C                               ; __unwind {
.text:0000131C 10 B5                         PUSH            {R4,LR}
.text:0000131E 04 46                         MOV             R4, R0
.text:00001320 0D 48                         LDR             R0, =(unk_3E30 - 0x1328)
.text:00001322 40 22                         MOVS            R2, #0x40 ; '@'
.text:00001324 78 44                         ADD             R0, PC        ; unk_3E30
.text:00001326 08 30                         ADDS            R0, #8
.text:00001328 20 60                         STR             R0, [R4]
.text:0000132A 0C 48                         LDR             R0, =(unk_4088 - 0x1330)
.text:0000132C 78 44                         ADD             R0, PC        ; unk_4088
.text:0000132E 60 60                         STR             R0, [R4,#4]
.text:00001330 00 20                         MOVS            R0, #0
.text:00001332 84 F8 4C 00                   STRB.W          R0, [R4,#0x4C]
.text:00001336 A0 64                         STR             R0, [R4,#0x48]
.text:00001338 04 F1 08 00                   ADD.W           R0, R4, #8
.text:0000133C FF F7 70 EA                   BLX             __aeabi_memcpy
.text:0000133C
.text:00001340 04 F1 50 00                   ADD.W           R0, R4, #0x50 ; 'P'
.text:00001344 4F F4 E1 71                   MOV.W           R1, #0x1C2
.text:00001348 FF F7 70 EA                   BLX             __aeabi_memclr8
.text:00001348
.text:0000134C 20 46                         MOV             R0, R4
.text:0000134E 00 21                         MOVS            R1, #0
.text:00001350 00 F0 72 FA                   BL              sub_1838
.text:00001350
.text:00001354 00 20                         MOVS            R0, #0
.text:00001356 10 BD                         POP             {R4,PC}
.text:00001356
.text:00001356                               ; End of function sub_131C
.text:00001356
.text:00001356                               ; ---------------------------------------------------------------------------
.text:00001358 08 2B 00 00                   off_1358 DCD unk_3E30 - 0x1328
.text:00001358                                                             ; DATA XREF: sub_131C+4↑r
.text:0000135C 58 2D 00 00                   off_135C DCD unk_4088 - 0x1330
.text:0000135C                                                             ; DATA XREF: sub_131C+E↑r
.text:0000135C                               ; } // starts at 131C
.text:00001360
.text:00001360                               ; =============== S U B R O U T I N E =======================================
.text:00001360
.text:00001360
.text:00001360                               ; int __fastcall sub_1360(int, int, _DWORD *)
.text:00001360                               sub_1360                      ; CODE XREF: sub_A6C+3E↑p
.text:00001360                                                             ; sub_A6C+118↑p
.text:00001360                                                             ; sub_A6C+18C↑p
.text:00001360                                                             ; sub_A6C+27E↑p
.text:00001360                                                             ; .text:00000D60↑p
.text:00001360                                                             ; sub_E4C+32↑p
.text:00001360                                                             ; sub_E4C+9E↑p
.text:00001360                                                             ; sub_10A8+56↑p
.text:00001360                                                             ; sub_10A8+B0↑p
.text:00001360                               ; __unwind {
.text:00001360 70 B5                         PUSH            {R4-R6,LR}
.text:00001362 06 46                         MOV             R6, R0
.text:00001364 14 46                         MOV             R4, R2
.text:00001366 30 68                         LDR             R0, [R6]
.text:00001368 0D 46                         MOV             R5, R1
.text:0000136A 82 68                         LDR             R2, [R0,#8]
.text:0000136C 30 46                         MOV             R0, R6
.text:0000136E 90 47                         BLX             R2
.text:0000136E
.text:00001370 01 28                         CMP             R0, #1
.text:00001372 07 D1                         BNE             loc_1384
.text:00001372
.text:00001374 30 68                         LDR             R0, [R6]
.text:00001376 29 46                         MOV             R1, R5
.text:00001378 C2 68                         LDR             R2, [R0,#0xC]
.text:0000137A 30 46                         MOV             R0, R6
.text:0000137C 90 47                         BLX             R2
.text:0000137C
.text:0000137E 20 60                         STR             R0, [R4]
.text:00001380 00 20                         MOVS            R0, #0
.text:00001382 70 BD                         POP             {R4-R6,PC}
.text:00001382
.text:00001384                               ; ---------------------------------------------------------------------------
.text:00001384
.text:00001384                               loc_1384                      ; CODE XREF: sub_1360+12↑j
.text:00001384 4E F2 72 60 CF F6 FF 70       MOV             R0, #0xFFFFE672
.text:0000138C 70 BD                         POP             {R4-R6,PC}
.text:0000138C
.text:0000138C                               ; End of function sub_1360
.text:0000138C
.text:0000138E
.text:0000138E                               ; =============== S U B R O U T I N E =======================================
.text:0000138E
.text:0000138E
.text:0000138E                               ; int __fastcall sub_138E(int, int, int)
.text:0000138E                               sub_138E                      ; CODE XREF: sub_A6C+A2↑p
.text:0000138E                                                             ; sub_A6C+288↑p
.text:0000138E                                                             ; sub_DB0:loc_DFA↑p
.text:0000138E                                                             ; sub_E4C+10E↑p
.text:0000138E                                                             ; sub_10A8+46↑p
.text:0000138E 70 B5                         PUSH            {R4-R6,LR}
.text:00001390 04 46                         MOV             R4, R0
.text:00001392 16 46                         MOV             R6, R2
.text:00001394 20 68                         LDR             R0, [R4]
.text:00001396 0D 46                         MOV             R5, R1
.text:00001398 82 68                         LDR             R2, [R0,#8]
.text:0000139A 20 46                         MOV             R0, R4
.text:0000139C 90 47                         BLX             R2
.text:0000139C
.text:0000139E 01 28                         CMP             R0, #1
.text:000013A0 0A D1                         BNE             loc_13B8
.text:000013A0
.text:000013A2 20 68                         LDR             R0, [R4]
.text:000013A4 29 46                         MOV             R1, R5
.text:000013A6 32 46                         MOV             R2, R6
.text:000013A8 03 69                         LDR             R3, [R0,#0x10]
.text:000013AA 20 46                         MOV             R0, R4
.text:000013AC 98 47                         BLX             R3
.text:000013AC
.text:000013AE B5 F1 FF 3F                   CMP.W           R5, #0xFFFFFFFF
.text:000013B2 06 D0                         BEQ             loc_13C2
.text:000013B2
.text:000013B4 00 25                         MOVS            R5, #0
.text:000013B6 0A E0                         B               loc_13CE
.text:000013B6
.text:000013B8                               ; ---------------------------------------------------------------------------
.text:000013B8
.text:000013B8                               loc_13B8                      ; CODE XREF: sub_138E+12↑j
.text:000013B8 4E F2 72 65 CF F6 FF 75       MOV             R5, #0xFFFFE672
.text:000013C0 05 E0                         B               loc_13CE
.text:000013C0
.text:000013C2                               ; ---------------------------------------------------------------------------
.text:000013C2
.text:000013C2                               loc_13C2                      ; CODE XREF: sub_138E+24↑j
.text:000013C2 20 68                         LDR             R0, [R4]
.text:000013C4 00 21                         MOVS            R1, #0
.text:000013C6 00 25                         MOVS            R5, #0
.text:000013C8 42 6B                         LDR             R2, [R0,#0x34]
.text:000013CA 20 46                         MOV             R0, R4
.text:000013CC 90 47                         BLX             R2
.text:000013CC
.text:000013CE
.text:000013CE                               loc_13CE                      ; CODE XREF: sub_138E+28↑j
.text:000013CE                                                             ; sub_138E+32↑j
.text:000013CE 28 46                         MOV             R0, R5
.text:000013D0 70 BD                         POP             {R4-R6,PC}
.text:000013D0
.text:000013D0                               ; End of function sub_138E
.text:000013D0
.text:000013D2
.text:000013D2                               ; =============== S U B R O U T I N E =======================================
.text:000013D2
.text:000013D2
.text:000013D2                               ; int __fastcall sub_13D2(int, int, _QWORD *)
.text:000013D2                               sub_13D2                      ; CODE XREF: .text:00000D8A↑p
.text:000013D2 70 B5                         PUSH            {R4-R6,LR}
.text:000013D4 06 46                         MOV             R6, R0
.text:000013D6 14 46                         MOV             R4, R2
.text:000013D8 30 68                         LDR             R0, [R6]
.text:000013DA 0D 46                         MOV             R5, R1
.text:000013DC 42 69                         LDR             R2, [R0,#0x14]
.text:000013DE 30 46                         MOV             R0, R6
.text:000013E0 90 47                         BLX             R2
.text:000013E0
.text:000013E2 01 28                         CMP             R0, #1
.text:000013E4 08 D1                         BNE             loc_13F8
.text:000013E4
.text:000013E6 30 68                         LDR             R0, [R6]
.text:000013E8 29 46                         MOV             R1, R5
.text:000013EA 82 69                         LDR             R2, [R0,#0x18]
.text:000013EC 30 46                         MOV             R0, R6
.text:000013EE 90 47                         BLX             R2
.text:000013EE
.text:000013F0 C4 E9 00 01                   STRD.W          R0, R1, [R4]
.text:000013F4 00 20                         MOVS            R0, #0
.text:000013F6 70 BD                         POP             {R4-R6,PC}
.text:000013F6
.text:000013F8                               ; ---------------------------------------------------------------------------
.text:000013F8
.text:000013F8                               loc_13F8                      ; CODE XREF: sub_13D2+12↑j
.text:000013F8 4E F2 72 60 CF F6 FF 70       MOV             R0, #0xFFFFE672
.text:00001400 70 BD                         POP             {R4-R6,PC}
.text:00001400                               ; } // starts at 1360
.text:00001400
.text:00001400                               ; End of function sub_13D2
.text:00001400
.text:00001402
.text:00001402                               ; =============== S U B R O U T I N E =======================================
.text:00001402
.text:00001402
.text:00001402                               ; int __fastcall sub_1402(int, int, int, int)
.text:00001402                               sub_1402                      ; CODE XREF: sub_DB0+76↑p
.text:00001402                               ; __unwind {
.text:00001402 2D E9 F0 41                   PUSH.W          {R4-R8,LR}
.text:00001406 07 46                         MOV             R7, R0
.text:00001408 15 46                         MOV             R5, R2
.text:0000140A 38 68                         LDR             R0, [R7]
.text:0000140C 98 46                         MOV             R8, R3
.text:0000140E 0E 46                         MOV             R6, R1
.text:00001410 42 69                         LDR             R2, [R0,#0x14]
.text:00001412 38 46                         MOV             R0, R7
.text:00001414 90 47                         BLX             R2
.text:00001414
.text:00001416 01 28                         CMP             R0, #1
.text:00001418 09 D1                         BNE             loc_142E
.text:00001418
.text:0000141A 38 68                         LDR             R0, [R7]
.text:0000141C 31 46                         MOV             R1, R6
.text:0000141E 2A 46                         MOV             R2, R5
.text:00001420 43 46                         MOV             R3, R8
.text:00001422 C4 69                         LDR             R4, [R0,#0x1C]
.text:00001424 38 46                         MOV             R0, R7
.text:00001426 A0 47                         BLX             R4
.text:00001426
.text:00001428 00 20                         MOVS            R0, #0
.text:0000142A BD E8 F0 81                   POP.W           {R4-R8,PC}
.text:0000142A
.text:0000142E                               ; ---------------------------------------------------------------------------
.text:0000142E
.text:0000142E                               loc_142E                      ; CODE XREF: sub_1402+16↑j
.text:0000142E 4E F2 72 60 CF F6 FF 70       MOV             R0, #0xFFFFE672
.text:00001436 BD E8 F0 81                   POP.W           {R4-R8,PC}
.text:00001436                               ; } // starts at 1402
.text:00001436
.text:00001436                               ; End of function sub_1402
.text:00001436
.text:0000143A
.text:0000143A                               ; =============== S U B R O U T I N E =======================================
.text:0000143A
.text:0000143A
.text:0000143A                               ; int __fastcall sub_143A(int)
.text:0000143A                               sub_143A                      ; CODE XREF: sub_F88+38↑p
.text:0000143A                                                             ; sub_1280+4↑p
.text:0000143A                               ; __unwind {
.text:0000143A 01 68                         LDR             R1, [R0]
.text:0000143C 09 6A                         LDR             R1, [R1,#0x20]
.text:0000143E 08 47                         BX              R1
.text:0000143E                               ; } // starts at 143A
.text:0000143E
.text:0000143E                               ; End of function sub_143A
.text:0000143E
.text:00001440
.text:00001440                               ; =============== S U B R O U T I N E =======================================
.text:00001440
.text:00001440
.text:00001440                               ; int __fastcall sub_1440(int, int)
.text:00001440                               sub_1440                      ; CODE XREF: sub_F88+1E↑p
.text:00001440                                                             ; sub_FFC+32↑p
.text:00001440                                                             ; sub_FFC+60↑p
.text:00001440                                                             ; sub_10A8+5E↑p
.text:00001440                                                             ; sub_11FC+10↑p
.text:00001440                                                             ; sub_1238+10↑p
.text:00001440                               ; __unwind {
.text:00001440 10 B5                         PUSH            {R4,LR}
.text:00001442 0C 46                         MOV             R4, R1
.text:00001444 01 68                         LDR             R1, [R0]
.text:00001446 4A 6A                         LDR             R2, [R1,#0x24]
.text:00001448 21 46                         MOV             R1, R4
.text:0000144A 90 47                         BLX             R2
.text:0000144A
.text:0000144C 61 68                         LDR             R1, [R4,#4]
.text:0000144E 00 20                         MOVS            R0, #0
.text:00001450 00 29                         CMP             R1, #0
.text:00001452 04 BF                         ITT EQ
.text:00001454 4E F2 6B 60                   MOVWEQ          R0, #0xE66B
.text:00001458 CF F6 FF 70                   MOVTEQ          R0, #0xFFFF
.text:0000145C 10 BD                         POP             {R4,PC}
.text:0000145C                               ; } // starts at 1440
.text:0000145C
.text:0000145C                               ; End of function sub_1440
.text:0000145C
.text:0000145E
.text:0000145E                               ; =============== S U B R O U T I N E =======================================
.text:0000145E
.text:0000145E
.text:0000145E                               ; int __fastcall sub_145E(int)
.text:0000145E                               sub_145E                      ; CODE XREF: sub_10A8+BA↑p
.text:0000145E                               ; __unwind {
.text:0000145E 80 B5                         PUSH            {R7,LR}
.text:00001460 01 68                         LDR             R1, [R0]
.text:00001462 89 6A                         LDR             R1, [R1,#0x28]
.text:00001464 88 47                         BLX             R1
.text:00001464
.text:00001466 4E F2 74 60 CF F6 FF 70       MOV             R0, #0xFFFFE674
.text:0000146E 80 BD                         POP             {R7,PC}
.text:0000146E                               ; } // starts at 145E
.text:0000146E
.text:0000146E                               ; End of function sub_145E
.text:0000146E
.text:00001470
.text:00001470                               ; =============== S U B R O U T I N E =======================================
.text:00001470
.text:00001470
.text:00001470                               ; int __fastcall sub_1470(int)
.text:00001470                               sub_1470                      ; CODE XREF: .text:00000D74↑p
.text:00001470                                                             ; sub_DB0+5E↑p
.text:00001470                               ; __unwind {
.text:00001470 01 68                         LDR             R1, [R0]
.text:00001472 C9 6B                         LDR             R1, [R1,#0x3C]
.text:00001474 08 47                         BX              R1
.text:00001474
.text:00001474                               ; End of function sub_1470
.text:00001474
.text:00001476
.text:00001476                               ; =============== S U B R O U T I N E =======================================
.text:00001476
.text:00001476
.text:00001476                               ; int __fastcall sub_1476(int, int)
.text:00001476                               sub_1476                      ; DATA XREF: .data.rel.ro:00003E40↓o
.text:00001476 21 F0 03 00                   BIC.W           R0, R1, #3
.text:0000147A 00 22                         MOVS            R2, #0
.text:0000147C C0 28                         CMP             R0, #0xC0
.text:0000147E 4F F0 00 00                   MOV.W           R0, #0
.text:00001482 A1 F1 10 01                   SUB.W           R1, R1, #0x10
.text:00001486 08 BF                         IT EQ
.text:00001488 01 20                         MOVEQ           R0, #1
.text:0000148A 11 F1 13 0F                   CMN.W           R1, #0x13
.text:0000148E 88 BF                         IT HI
.text:00001490 01 22                         MOVHI           R2, #1
.text:00001492 40 EA 02 00                   ORR.W           R0, R0, R2
.text:00001496 70 47                         BX              LR
.text:00001496                               ; } // starts at 1470
.text:00001496
.text:00001496                               ; End of function sub_1476
.text:00001496
.text:00001498
.text:00001498                               ; =============== S U B R O U T I N E =======================================
.text:00001498
.text:00001498
.text:00001498                               ; int __fastcall sub_1498(int, int)
.text:00001498                               sub_1498                      ; DATA XREF: .data.rel.ro:00003E44↓o
.text:00001498                               ; __unwind {
.text:00001498 B0 B5                         PUSH            {R4,R5,R7,LR}
.text:0000149A 0D 46                         MOV             R5, R1
.text:0000149C 04 46                         MOV             R4, R0
.text:0000149E 0C 2D                         CMP             R5, #0xC
.text:000014A0 06 DD                         BLE             loc_14B0
.text:000014A0
.text:000014A2 0F 2D                         CMP             R5, #0xF
.text:000014A4 0A D0                         BEQ             loc_14BC
.text:000014A4
.text:000014A6 0E 2D                         CMP             R5, #0xE
.text:000014A8 0E D0                         BEQ             loc_14C8
.text:000014A8
.text:000014AA 0D 2D                         CMP             R5, #0xD
.text:000014AC 09 D0                         BEQ             loc_14C2
.text:000014AC
.text:000014AE 0E E0                         B               loc_14CE
.text:000014AE
.text:000014B0                               ; ---------------------------------------------------------------------------
.text:000014B0
.text:000014B0                               loc_14B0                      ; CODE XREF: sub_1498+8↑j
.text:000014B0 15 F1 02 0F                   CMN.W           R5, #2
.text:000014B4 05 D0                         BEQ             loc_14C2
.text:000014B4
.text:000014B6 B5 F1 FF 3F                   CMP.W           R5, #0xFFFFFFFF
.text:000014BA 08 D1                         BNE             loc_14CE
.text:000014BA
.text:000014BC
.text:000014BC                               loc_14BC                      ; CODE XREF: sub_1498+C↑j
.text:000014BC 04 F1 44 00                   ADD.W           R0, R4, #0x44 ; 'D'
.text:000014C0 1D E0                         B               loc_14FE
.text:000014C0
.text:000014C2                               ; ---------------------------------------------------------------------------
.text:000014C2
.text:000014C2                               loc_14C2                      ; CODE XREF: sub_1498+14↑j
.text:000014C2                                                             ; sub_1498+1C↑j
.text:000014C2 04 F1 3C 00                   ADD.W           R0, R4, #0x3C ; '<'
.text:000014C6 1A E0                         B               loc_14FE
.text:000014C6
.text:000014C8                               ; ---------------------------------------------------------------------------
.text:000014C8
.text:000014C8                               loc_14C8                      ; CODE XREF: sub_1498+10↑j
.text:000014C8 04 F1 40 00                   ADD.W           R0, R4, #0x40 ; '@'
.text:000014CC 17 E0                         B               loc_14FE
.text:000014CC
.text:000014CE                               ; ---------------------------------------------------------------------------
.text:000014CE
.text:000014CE                               loc_14CE                      ; CODE XREF: sub_1498+16↑j
.text:000014CE                                                             ; sub_1498+22↑j
.text:000014CE 0C 2D                         CMP             R5, #0xC
.text:000014D0 03 D8                         BHI             loc_14DA
.text:000014D0
.text:000014D2 04 EB 85 00                   ADD.W           R0, R4, R5,LSL#2
.text:000014D6 08 30                         ADDS            R0, #8
.text:000014D8 11 E0                         B               loc_14FE
.text:000014D8
.text:000014DA                               ; ---------------------------------------------------------------------------
.text:000014DA
.text:000014DA                               loc_14DA                      ; CODE XREF: sub_1498+38↑j
.text:000014DA 25 F0 03 00                   BIC.W           R0, R5, #3
.text:000014DE C0 28                         CMP             R0, #0xC0
.text:000014E0 0F D1                         BNE             loc_1502
.text:000014E0
.text:000014E2 94 F8 4C 00                   LDRB.W          R0, [R4,#0x4C]
.text:000014E6 30 B9                         CBNZ            R0, loc_14F6
.text:000014E6
.text:000014E8 01 20                         MOVS            R0, #1
.text:000014EA 84 F8 4C 00                   STRB.W          R0, [R4,#0x4C]
.text:000014EE 04 F5 EC 70                   ADD.W           R0, R4, #0x1D8
.text:000014F2 FF F7 0A EF                   BLX             sub_1308
.text:000014F2
.text:000014F6
.text:000014F6                               loc_14F6                      ; CODE XREF: sub_1498+4E↑j
.text:000014F6 04 EB 85 00                   ADD.W           R0, R4, R5,LSL#2
.text:000014FA A0 F5 94 70                   SUB.W           R0, R0, #0x128
.text:000014FA
.text:000014FE
.text:000014FE                               loc_14FE                      ; CODE XREF: sub_1498+28↑j
.text:000014FE                                                             ; sub_1498+2E↑j
.text:000014FE                                                             ; sub_1498+34↑j
.text:000014FE                                                             ; sub_1498+40↑j
.text:000014FE 00 68                         LDR             R0, [R0]
.text:00001500 B0 BD                         POP             {R4,R5,R7,PC}
.text:00001500
.text:00001502                               ; ---------------------------------------------------------------------------
.text:00001502
.text:00001502                               loc_1502                      ; CODE XREF: sub_1498+48↑j
.text:00001502 05 48                         LDR             R0, =(aUint32TLibunwi - 0x1510) ; "uint32_t libunwind::Registers_arm::getR"...
.text:00001504 40 F2 AC 52                   MOVW            R2, #0x5AC
.text:00001508 04 49                         LDR             R1, =(aExternalLibunw_1 - 0x1512) ; "external/libunwind_llvm/src/Registers.h"...
.text:0000150A 05 4B                         LDR             R3, =(aUnsupportedArm - 0x1514) ; "unsupported arm register"
.text:0000150C 78 44                         ADD             R0, PC        ; "uint32_t libunwind::Registers_arm::getR"...
.text:0000150E 79 44                         ADD             R1, PC        ; "external/libunwind_llvm/src/Registers.h"...
.text:00001510 7B 44                         ADD             R3, PC        ; "unsupported arm register"
.text:00001512 00 F0 D1 F9                   BL              sub_18B8
.text:00001512
.text:00001512                               ; End of function sub_1498
.text:00001512
.text:00001512                               ; ---------------------------------------------------------------------------
.text:00001516 00 BF                         ALIGN 4
.text:00001518 41 10 00 00                   off_1518 DCD aUint32TLibunwi - 0x1510
.text:00001518                                                             ; DATA XREF: sub_1498:loc_1502↑r
.text:00001518                                                             ; "uint32_t libunwind::Registers_arm::getR"...
.text:0000151C 73 10 00 00                   off_151C DCD aExternalLibunw_1 - 0x1512
.text:0000151C                                                             ; DATA XREF: sub_1498+70↑r
.text:0000151C                                                             ; "external/libunwind_llvm/src/Registers.h"...
.text:00001520 9B 10 00 00                   off_1520 DCD aUnsupportedArm - 0x1514
.text:00001520                                                             ; DATA XREF: sub_1498+72↑r
.text:00001520                               ; } // starts at 1498         ; "unsupported arm register"
.text:00001524
.text:00001524                               ; =============== S U B R O U T I N E =======================================
.text:00001524
.text:00001524
.text:00001524                               ; int __fastcall sub_1524(int result, int, int)
.text:00001524                               sub_1524                      ; DATA XREF: .data.rel.ro:00003E48↓o
.text:00001524                               ; __unwind {
.text:00001524 70 B5                         PUSH            {R4-R6,LR}
.text:00001526 0E 46                         MOV             R6, R1
.text:00001528 14 46                         MOV             R4, R2
.text:0000152A 05 46                         MOV             R5, R0
.text:0000152C 0C 2E                         CMP             R6, #0xC
.text:0000152E 06 DD                         BLE             loc_153E
.text:0000152E
.text:00001530 0F 2E                         CMP             R6, #0xF
.text:00001532 0A D0                         BEQ             loc_154A
.text:00001532
.text:00001534 0E 2E                         CMP             R6, #0xE
.text:00001536 0C D0                         BEQ             loc_1552
.text:00001536
.text:00001538 0D 2E                         CMP             R6, #0xD
.text:0000153A 08 D0                         BEQ             loc_154E
.text:0000153A
.text:0000153C 0B E0                         B               loc_1556
.text:0000153C
.text:0000153E                               ; ---------------------------------------------------------------------------
.text:0000153E
.text:0000153E                               loc_153E                      ; CODE XREF: sub_1524+A↑j
.text:0000153E 16 F1 02 0F                   CMN.W           R6, #2
.text:00001542 04 D0                         BEQ             loc_154E
.text:00001542
.text:00001544 B6 F1 FF 3F                   CMP.W           R6, #0xFFFFFFFF
.text:00001548 05 D1                         BNE             loc_1556
.text:00001548
.text:0000154A
.text:0000154A                               loc_154A                      ; CODE XREF: sub_1524+E↑j
.text:0000154A 6C 64                         STR             R4, [R5,#0x44]
.text:0000154C 70 BD                         POP             {R4-R6,PC}
.text:0000154C
.text:0000154E                               ; ---------------------------------------------------------------------------
.text:0000154E
.text:0000154E                               loc_154E                      ; CODE XREF: sub_1524+16↑j
.text:0000154E                                                             ; sub_1524+1E↑j
.text:0000154E EC 63                         STR             R4, [R5,#0x3C]
.text:00001550 70 BD                         POP             {R4-R6,PC}
.text:00001550
.text:00001552                               ; ---------------------------------------------------------------------------
.text:00001552
.text:00001552                               loc_1552                      ; CODE XREF: sub_1524+12↑j
.text:00001552 2C 64                         STR             R4, [R5,#0x40]
.text:00001554 70 BD                         POP             {R4-R6,PC}
.text:00001554
.text:00001556                               ; ---------------------------------------------------------------------------
.text:00001556
.text:00001556                               loc_1556                      ; CODE XREF: sub_1524+18↑j
.text:00001556                                                             ; sub_1524+24↑j
.text:00001556 0C 2E                         CMP             R6, #0xC
.text:00001558 03 D8                         BHI             loc_1562
.text:00001558
.text:0000155A 05 EB 86 00                   ADD.W           R0, R5, R6,LSL#2
.text:0000155E 84 60                         STR             R4, [R0,#8]
.text:00001560 70 BD                         POP             {R4-R6,PC}
.text:00001560
.text:00001562                               ; ---------------------------------------------------------------------------
.text:00001562
.text:00001562                               loc_1562                      ; CODE XREF: sub_1524+34↑j
.text:00001562 26 F0 03 00                   BIC.W           R0, R6, #3
.text:00001566 C0 28                         CMP             R0, #0xC0
.text:00001568 11 D1                         BNE             loc_158E
.text:00001568
.text:0000156A 95 F8 4C 00                   LDRB.W          R0, [R5,#0x4C]
.text:0000156E 30 B9                         CBNZ            R0, loc_157E
.text:0000156E
.text:00001570 01 20                         MOVS            R0, #1
.text:00001572 85 F8 4C 00                   STRB.W          R0, [R5,#0x4C]
.text:00001576 05 F5 EC 70                   ADD.W           R0, R5, #0x1D8
.text:0000157A FF F7 C6 EE                   BLX             sub_1308
.text:0000157A
.text:0000157E
.text:0000157E                               loc_157E                      ; CODE XREF: sub_1524+4A↑j
.text:0000157E 4F F6 D8 61                   MOVW            R1, #0xFED8
.text:00001582 05 EB 86 00                   ADD.W           R0, R5, R6,LSL#2
.text:00001586 CF F6 FF 71                   MOVT            R1, #0xFFFF
.text:0000158A 44 50                         STR             R4, [R0,R1]
.text:0000158C 70 BD                         POP             {R4-R6,PC}
.text:0000158C
.text:0000158E                               ; ---------------------------------------------------------------------------
.text:0000158E
.text:0000158E                               loc_158E                      ; CODE XREF: sub_1524+44↑j
.text:0000158E 05 48                         LDR             R0, =(aVoidLibunwindR - 0x159C) ; "void libunwind::Registers_arm::setRegis"...
.text:00001590 40 F2 BF 52                   MOVW            R2, #0x5BF
.text:00001594 04 49                         LDR             R1, =(aExternalLibunw_1 - 0x159E) ; "external/libunwind_llvm/src/Registers.h"...
.text:00001596 05 4B                         LDR             R3, =(aUnsupportedArm - 0x15A0) ; "unsupported arm register"
.text:00001598 78 44                         ADD             R0, PC        ; "void libunwind::Registers_arm::setRegis"...
.text:0000159A 79 44                         ADD             R1, PC        ; "external/libunwind_llvm/src/Registers.h"...
.text:0000159C 7B 44                         ADD             R3, PC        ; "unsupported arm register"
.text:0000159E 00 F0 8B F9                   BL              sub_18B8
.text:0000159E
.text:0000159E                               ; End of function sub_1524
.text:0000159E
.text:0000159E                               ; ---------------------------------------------------------------------------
.text:000015A2 00 BF                         ALIGN 4
.text:000015A4 2C 10 00 00                   off_15A4 DCD aVoidLibunwindR - 0x159C
.text:000015A4                                                             ; DATA XREF: sub_1524:loc_158E↑r
.text:000015A4                                                             ; "void libunwind::Registers_arm::setRegis"...
.text:000015A8 E7 0F 00 00                   off_15A8 DCD aExternalLibunw_1 - 0x159E
.text:000015A8                                                             ; DATA XREF: sub_1524+70↑r
.text:000015A8                                                             ; "external/libunwind_llvm/src/Registers.h"...
.text:000015AC 0F 10 00 00                   off_15AC DCD aUnsupportedArm - 0x15A0
.text:000015AC                                                             ; DATA XREF: sub_1524+72↑r
.text:000015AC                               ; } // starts at 1524         ; "unsupported arm register"
.text:000015B0
.text:000015B0                               ; =============== S U B R O U T I N E =======================================
.text:000015B0
.text:000015B0
.text:000015B0                               ; int __fastcall sub_15B0(int, int)
.text:000015B0                               sub_15B0                      ; DATA XREF: .data.rel.ro:00003E4C↓o
.text:000015B0                               ; __unwind {
.text:000015B0 21 F0 0F 00                   BIC.W           R0, R1, #0xF
.text:000015B4 00 22                         MOVS            R2, #0
.text:000015B6 70 28                         CMP             R0, #0x70 ; 'p'
.text:000015B8 4F F0 00 00                   MOV.W           R0, #0
.text:000015BC 21 F0 1F 01                   BIC.W           R1, R1, #0x1F
.text:000015C0 08 BF                         IT EQ
.text:000015C2 01 20                         MOVEQ           R0, #1
.text:000015C4 B1 F5 80 7F                   CMP.W           R1, #0x100
.text:000015C8 08 BF                         IT EQ
.text:000015CA 01 22                         MOVEQ           R2, #1
.text:000015CC 40 EA 02 00                   ORR.W           R0, R0, R2
.text:000015D0 70 47                         BX              LR
.text:000015D0
.text:000015D0                               ; End of function sub_15B0
.text:000015D0
.text:000015D0                               ; ---------------------------------------------------------------------------
.text:000015D2 00 00                         ALIGN 4
.text:000015D2                               ; } // starts at 15B0
.text:000015D4
.text:000015D4                               ; =============== S U B R O U T I N E =======================================
.text:000015D4
.text:000015D4
.text:000015D4                               ; __int64 __fastcall sub_15D4(int, int)
.text:000015D4                               sub_15D4                      ; DATA XREF: .data.rel.ro:00003E50↓o
.text:000015D4                               ; __unwind {
.text:000015D4 B0 B5                         PUSH            {R4,R5,R7,LR}
.text:000015D6 0C 46                         MOV             R4, R1
.text:000015D8 05 46                         MOV             R5, R0
.text:000015DA 24 F0 0F 00                   BIC.W           R0, R4, #0xF
.text:000015DE 70 28                         CMP             R0, #0x70 ; 'p'
.text:000015E0 13 D0                         BEQ             loc_160A
.text:000015E0
.text:000015E2 B0 F5 88 7F                   CMP.W           R0, #0x110
.text:000015E6 1F D0                         BEQ             loc_1628
.text:000015E6
.text:000015E8 B0 F5 80 7F                   CMP.W           R0, #0x100
.text:000015EC 34 D1                         BNE             loc_1658
.text:000015EC
.text:000015EE 95 F8 49 00                   LDRB.W          R0, [R5,#0x49]
.text:000015F2 50 BB                         CBNZ            R0, loc_164A
.text:000015F2
.text:000015F4 01 20                         MOVS            R0, #1
.text:000015F6 85 F8 49 00                   STRB.W          R0, [R5,#0x49]
.text:000015FA 05 F1 50 00                   ADD.W           R0, R5, #0x50 ; 'P'
.text:000015FE 95 F8 48 10                   LDRB.W          R1, [R5,#0x48]
.text:00001602 01 B3                         CBZ             R1, loc_1646
.text:00001602
.text:00001604 FF F7 56 EE                   BLX             sub_12B4
.text:00001604
.text:00001608 1F E0                         B               loc_164A
.text:00001608
.text:0000160A                               ; ---------------------------------------------------------------------------
.text:0000160A
.text:0000160A                               loc_160A                      ; CODE XREF: sub_15D4+C↑j
.text:0000160A 95 F8 4B 00                   LDRB.W          R0, [R5,#0x4B]
.text:0000160E 30 B9                         CBNZ            R0, loc_161E
.text:0000160E
.text:00001610 01 20                         MOVS            R0, #1
.text:00001612 85 F8 4B 00                   STRB.W          R0, [R5,#0x4B]
.text:00001616 05 F5 AC 70                   ADD.W           R0, R5, #0x158
.text:0000161A FF F7 54 EE                   BLX             sub_12C4
.text:0000161A
.text:0000161E
.text:0000161E                               loc_161E                      ; CODE XREF: sub_15D4+3A↑j
.text:0000161E 05 EB C4 00                   ADD.W           R0, R5, R4,LSL#3
.text:00001622 A0 F5 0A 70                   SUB.W           R0, R0, #0x228
.text:00001626 14 E0                         B               loc_1652
.text:00001626
.text:00001628                               ; ---------------------------------------------------------------------------
.text:00001628
.text:00001628                               loc_1628                      ; CODE XREF: sub_15D4+12↑j
.text:00001628 95 F8 4A 00                   LDRB.W          R0, [R5,#0x4A]
.text:0000162C 30 B9                         CBNZ            R0, loc_163C
.text:0000162C
.text:0000162E 01 20                         MOVS            R0, #1
.text:00001630 85 F8 4A 00                   STRB.W          R0, [R5,#0x4A]
.text:00001634 05 F1 D8 00                   ADD.W           R0, R5, #0xD8
.text:00001638 FF F7 40 EE                   BLX             sub_12BC
.text:00001638
.text:0000163C
.text:0000163C                               loc_163C                      ; CODE XREF: sub_15D4+58↑j
.text:0000163C 05 EB C4 00                   ADD.W           R0, R5, R4,LSL#3
.text:00001640 A0 F5 F5 60                   SUB.W           R0, R0, #0x7A8
.text:00001644 05 E0                         B               loc_1652
.text:00001644
.text:00001646                               ; ---------------------------------------------------------------------------
.text:00001646
.text:00001646                               loc_1646                      ; CODE XREF: sub_15D4+2E↑j
.text:00001646 FF F7 32 EE                   BLX             sub_12AC
.text:00001646
.text:0000164A
.text:0000164A                               loc_164A                      ; CODE XREF: sub_15D4+1E↑j
.text:0000164A                                                             ; sub_15D4+34↑j
.text:0000164A 05 EB C4 00                   ADD.W           R0, R5, R4,LSL#3
.text:0000164E A0 F5 F6 60                   SUB.W           R0, R0, #0x7B0
.text:0000164E
.text:00001652
.text:00001652                               loc_1652                      ; CODE XREF: sub_15D4+52↑j
.text:00001652                                                             ; sub_15D4+70↑j
.text:00001652 D0 E9 00 01                   LDRD.W          R0, R1, [R0]
.text:00001656 B0 BD                         POP             {R4,R5,R7,PC}
.text:00001656
.text:00001658                               ; ---------------------------------------------------------------------------
.text:00001658
.text:00001658                               loc_1658                      ; CODE XREF: sub_15D4+18↑j
.text:00001658 04 48                         LDR             R0, =(aUnwFpregTLibun - 0x1666) ; "unw_fpreg_t libunwind::Registers_arm::g"...
.text:0000165A 40 F2 89 62                   MOVW            R2, #0x689
.text:0000165E 04 49                         LDR             R1, =(aExternalLibunw_1 - 0x1668) ; "external/libunwind_llvm/src/Registers.h"...
.text:00001660 04 4B                         LDR             R3, =(aUnknownArmFloa - 0x166A) ; "Unknown ARM float register"
.text:00001662 78 44                         ADD             R0, PC        ; "unw_fpreg_t libunwind::Registers_arm::g"...
.text:00001664 79 44                         ADD             R1, PC        ; "external/libunwind_llvm/src/Registers.h"...
.text:00001666 7B 44                         ADD             R3, PC        ; "Unknown ARM float register"
.text:00001668 00 F0 26 F9                   BL              sub_18B8
.text:00001668
.text:00001668                               ; End of function sub_15D4
.text:00001668
.text:00001668                               ; ---------------------------------------------------------------------------
.text:0000166C 9C 0F 00 00                   off_166C DCD aUnwFpregTLibun - 0x1666
.text:0000166C                                                             ; DATA XREF: sub_15D4:loc_1658↑r
.text:0000166C                                                             ; "unw_fpreg_t libunwind::Registers_arm::g"...
.text:00001670 1D 0F 00 00                   off_1670 DCD aExternalLibunw_1 - 0x1668
.text:00001670                                                             ; DATA XREF: sub_15D4+8A↑r
.text:00001670                                                             ; "external/libunwind_llvm/src/Registers.h"...
.text:00001674 D4 0F 00 00                   off_1674 DCD aUnknownArmFloa - 0x166A
.text:00001674                                                             ; DATA XREF: sub_15D4+8C↑r
.text:00001674                               ; } // starts at 15D4         ; "Unknown ARM float register"
.text:00001678
.text:00001678                               ; =============== S U B R O U T I N E =======================================
.text:00001678
.text:00001678
.text:00001678                               ; int __fastcall sub_1678(int, int, int, int)
.text:00001678                               sub_1678                      ; DATA XREF: .data.rel.ro:00003E54↓o
.text:00001678                               ; __unwind {
.text:00001678 F0 B5                         PUSH            {R4-R7,LR}
.text:0000167A 81 B0                         SUB             SP, SP, #4
.text:0000167C 0E 46                         MOV             R6, R1
.text:0000167E 07 46                         MOV             R7, R0
.text:00001680 26 F0 0F 00                   BIC.W           R0, R6, #0xF
.text:00001684 1D 46                         MOV             R5, R3
.text:00001686 14 46                         MOV             R4, R2
.text:00001688 70 28                         CMP             R0, #0x70 ; 'p'
.text:0000168A 13 D0                         BEQ             loc_16B4
.text:0000168A
.text:0000168C B0 F5 88 7F                   CMP.W           R0, #0x110
.text:00001690 24 D0                         BEQ             loc_16DC
.text:00001690
.text:00001692 B0 F5 80 7F                   CMP.W           R0, #0x100
.text:00001696 45 D1                         BNE             loc_1724
.text:00001696
.text:00001698 97 F8 49 00                   LDRB.W          R0, [R7,#0x49]
.text:0000169C A0 BB                         CBNZ            R0, loc_1708
.text:0000169C
.text:0000169E 01 20                         MOVS            R0, #1
.text:000016A0 87 F8 49 00                   STRB.W          R0, [R7,#0x49]
.text:000016A4 07 F1 50 00                   ADD.W           R0, R7, #0x50 ; 'P'
.text:000016A8 97 F8 48 10                   LDRB.W          R1, [R7,#0x48]
.text:000016AC 51 B3                         CBZ             R1, loc_1704
.text:000016AC
.text:000016AE FF F7 02 EE                   BLX             sub_12B4
.text:000016AE
.text:000016B2 29 E0                         B               loc_1708
.text:000016B2
.text:000016B4                               ; ---------------------------------------------------------------------------
.text:000016B4
.text:000016B4                               loc_16B4                      ; CODE XREF: sub_1678+12↑j
.text:000016B4 97 F8 4B 00                   LDRB.W          R0, [R7,#0x4B]
.text:000016B8 30 B9                         CBNZ            R0, loc_16C8
.text:000016B8
.text:000016BA 01 20                         MOVS            R0, #1
.text:000016BC 87 F8 4B 00                   STRB.W          R0, [R7,#0x4B]
.text:000016C0 07 F5 AC 70                   ADD.W           R0, R7, #0x158
.text:000016C4 FF F7 FE ED                   BLX             sub_12C4
.text:000016C4
.text:000016C8
.text:000016C8                               loc_16C8                      ; CODE XREF: sub_1678+40↑j
.text:000016C8 4F F6 DC 51                   MOVW            R1, #0xFDDC
.text:000016CC 07 EB C6 00                   ADD.W           R0, R7, R6,LSL#3
.text:000016D0 CF F6 FF 71                   MOVT            R1, #0xFFFF
.text:000016D4 45 50                         STR             R5, [R0,R1]
.text:000016D6 4F F6 D8 51                   MOVW            R1, #0xFDD8
.text:000016DA 1E E0                         B               loc_171A
.text:000016DA
.text:000016DC                               ; ---------------------------------------------------------------------------
.text:000016DC
.text:000016DC                               loc_16DC                      ; CODE XREF: sub_1678+18↑j
.text:000016DC 97 F8 4A 00                   LDRB.W          R0, [R7,#0x4A]
.text:000016E0 30 B9                         CBNZ            R0, loc_16F0
.text:000016E0
.text:000016E2 01 20                         MOVS            R0, #1
.text:000016E4 87 F8 4A 00                   STRB.W          R0, [R7,#0x4A]
.text:000016E8 07 F1 D8 00                   ADD.W           R0, R7, #0xD8
.text:000016EC FF F7 E6 ED                   BLX             sub_12BC
.text:000016EC
.text:000016F0
.text:000016F0                               loc_16F0                      ; CODE XREF: sub_1678+68↑j
.text:000016F0 4F F6 5C 01                   MOVW            R1, #0xF85C
.text:000016F4 07 EB C6 00                   ADD.W           R0, R7, R6,LSL#3
.text:000016F8 CF F6 FF 71                   MOVT            R1, #0xFFFF
.text:000016FC 45 50                         STR             R5, [R0,R1]
.text:000016FE 4F F6 58 01                   MOVW            R1, #0xF858
.text:00001702 0A E0                         B               loc_171A
.text:00001702
.text:00001704                               ; ---------------------------------------------------------------------------
.text:00001704
.text:00001704                               loc_1704                      ; CODE XREF: sub_1678+34↑j
.text:00001704 FF F7 D2 ED                   BLX             sub_12AC
.text:00001704
.text:00001708
.text:00001708                               loc_1708                      ; CODE XREF: sub_1678+24↑j
.text:00001708                                                             ; sub_1678+3A↑j
.text:00001708 4F F6 54 01                   MOVW            R1, #0xF854
.text:0000170C 07 EB C6 00                   ADD.W           R0, R7, R6,LSL#3
.text:00001710 CF F6 FF 71                   MOVT            R1, #0xFFFF
.text:00001714 45 50                         STR             R5, [R0,R1]
.text:00001716 4F F6 50 01                   MOVW            R1, #0xF850
.text:00001716
.text:0000171A
.text:0000171A                               loc_171A                      ; CODE XREF: sub_1678+62↑j
.text:0000171A                                                             ; sub_1678+8A↑j
.text:0000171A CF F6 FF 71                   MOVT            R1, #0xFFFF
.text:0000171E 44 50                         STR             R4, [R0,R1]
.text:00001720 01 B0                         ADD             SP, SP, #4
.text:00001722 F0 BD                         POP             {R4-R7,PC}
.text:00001722
.text:00001724                               ; ---------------------------------------------------------------------------
.text:00001724
.text:00001724                               loc_1724                      ; CODE XREF: sub_1678+1E↑j
.text:00001724 04 48                         LDR             R0, =(aVoidLibunwindR_0 - 0x1732) ; "void libunwind::Registers_arm::setFloat"...
.text:00001726 40 F2 A4 62                   MOVW            R2, #0x6A4
.text:0000172A 04 49                         LDR             R1, =(aExternalLibunw_1 - 0x1734) ; "external/libunwind_llvm/src/Registers.h"...
.text:0000172C 04 4B                         LDR             R3, =(aUnknownArmFloa - 0x1736) ; "Unknown ARM float register"
.text:0000172E 78 44                         ADD             R0, PC        ; "void libunwind::Registers_arm::setFloat"...
.text:00001730 79 44                         ADD             R1, PC        ; "external/libunwind_llvm/src/Registers.h"...
.text:00001732 7B 44                         ADD             R3, PC        ; "Unknown ARM float register"
.text:00001734 00 F0 C0 F8                   BL              sub_18B8
.text:00001734
.text:00001734                               ; End of function sub_1678
.text:00001734
.text:00001734                               ; ---------------------------------------------------------------------------
.text:00001738 27 0F 00 00                   off_1738 DCD aVoidLibunwindR_0 - 0x1732
.text:00001738                                                             ; DATA XREF: sub_1678:loc_1724↑r
.text:00001738                                                             ; "void libunwind::Registers_arm::setFloat"...
.text:0000173C 51 0E 00 00                   off_173C DCD aExternalLibunw_1 - 0x1734
.text:0000173C                                                             ; DATA XREF: sub_1678+B2↑r
.text:0000173C                                                             ; "external/libunwind_llvm/src/Registers.h"...
.text:00001740 08 0F 00 00                   off_1740 DCD aUnknownArmFloa - 0x1736
.text:00001740                                                             ; DATA XREF: sub_1678+B4↑r
.text:00001740                               ; } // starts at 1678         ; "Unknown ARM float register"
.text:00001744
.text:00001744                               ; =============== S U B R O U T I N E =======================================
.text:00001744
.text:00001744
.text:00001744                               ; int __fastcall sub_1744(_DWORD *)
.text:00001744                               sub_1744                      ; DATA XREF: .data.rel.ro:00003E58↓o
.text:00001744                               ; __unwind {
.text:00001744 B0 B5                         PUSH            {R4,R5,R7,LR}
.text:00001746 04 46                         MOV             R4, R0
.text:00001748 94 F8 10 02                   LDRB.W          R0, [R4,#0x210]
.text:0000174C 68 B9                         CBNZ            R0, loc_176A
.text:0000174C
.text:0000174E 20 46                         MOV             R0, R4
.text:00001750 00 F0 C8 F8                   BL              sub_18E4
.text:00001750
.text:00001754 01 28                         CMP             R0, #1
.text:00001756 18 BF                         IT NE
.text:00001758 B0 BD                         POPNE           {R4,R5,R7,PC}
.text:00001758
.text:0000175A 20 68                         LDR             R0, [R4]
.text:0000175C 01 21                         MOVS            R1, #1
.text:0000175E 42 6B                         LDR             R2, [R0,#0x34]
.text:00001760 20 46                         MOV             R0, R4
.text:00001762 90 47                         BLX             R2
.text:00001762
.text:00001764 94 F8 10 02                   LDRB.W          R0, [R4,#0x210]
.text:00001768 08 B1                         CBZ             R0, loc_176E
.text:00001768
.text:0000176A
.text:0000176A                               loc_176A                      ; CODE XREF: sub_1744+8↑j
.text:0000176A 00 20                         MOVS            R0, #0
.text:0000176C B0 BD                         POP             {R4,R5,R7,PC}
.text:0000176C
.text:0000176E                               ; ---------------------------------------------------------------------------
.text:0000176E
.text:0000176E                               loc_176E                      ; CODE XREF: sub_1744+24↑j
.text:0000176E D4 F8 F8 01                   LDR.W           R0, [R4,#0x1F8]
.text:00001772 68 B1                         CBZ             R0, loc_1790
.text:00001772
.text:00001774 20 68                         LDR             R0, [R4]
.text:00001776 6F F0 01 01                   MOV             R1, #0xFFFFFFFE
.text:0000177A D0 E9 03 25                   LDRD.W          R2, R5, [R0,#0xC]
.text:0000177E 20 46                         MOV             R0, R4
.text:00001780 90 47                         BLX             R2
.text:00001780
.text:00001782 D4 F8 F8 11                   LDR.W           R1, [R4,#0x1F8]
.text:00001786 0A 18                         ADDS            R2, R1, R0
.text:00001788 20 46                         MOV             R0, R4
.text:0000178A 6F F0 01 01                   MOV             R1, #0xFFFFFFFE
.text:0000178E A8 47                         BLX             R5
.text:0000178E
.text:00001790
.text:00001790                               loc_1790                      ; CODE XREF: sub_1744+2E↑j
.text:00001790 01 20                         MOVS            R0, #1
.text:00001792 B0 BD                         POP             {R4,R5,R7,PC}
.text:00001792                               ; } // starts at 1744
.text:00001792
.text:00001792                               ; End of function sub_1744
.text:00001792
.text:00001794
.text:00001794                               ; =============== S U B R O U T I N E =======================================
.text:00001794
.text:00001794
.text:00001794                               ; _DWORD *__fastcall sub_1794(int, _DWORD *)
.text:00001794                               sub_1794                      ; DATA XREF: .data.rel.ro:00003E5C↓o
.text:00001794                               ; __unwind {
.text:00001794 10 B5                         PUSH            {R4,LR}
.text:00001796 00 F5 F4 70                   ADD.W           R0, R0, #0x1E8
.text:0000179A B0 E8 1C 50                   LDM.W           R0!, {R2-R4,R12,LR}
.text:0000179E A1 E8 1C 50                   STM.W           R1!, {R2-R4,R12,LR}
.text:000017A2 90 E8 1C 50                   LDM.W           R0, {R2-R4,R12,LR}
.text:000017A6 81 E8 1C 50                   STM.W           R1, {R2-R4,R12,LR}
.text:000017AA 10 BD                         POP             {R4,PC}
.text:000017AA
.text:000017AA                               ; End of function sub_1794
.text:000017AA
.text:000017AC
.text:000017AC                               ; =============== S U B R O U T I N E =======================================
.text:000017AC
.text:000017AC
.text:000017AC                               ; int __fastcall sub_17AC(int)
.text:000017AC                               sub_17AC                      ; DATA XREF: .data.rel.ro:00003E60↓o
.text:000017AC 10 B5                         PUSH            {R4,LR}
.text:000017AE 00 F1 08 04                   ADD.W           R4, R0, #8
.text:000017B2 20 46                         MOV             R0, R4
.text:000017B4 00 F0 C0 F8                   BL              sub_1938
.text:000017B4
.text:000017B8 20 46                         MOV             R0, R4
.text:000017BA BD E8 10 40                   POP.W           {R4,LR}
.text:000017BE 00 F0 5B BC                   B.W             sub_2078
.text:000017BE                               ; } // starts at 1794
.text:000017BE
.text:000017BE                               ; End of function sub_17AC
.text:000017BE
.text:000017C2
.text:000017C2                               ; =============== S U B R O U T I N E =======================================
.text:000017C2
.text:000017C2
.text:000017C2                               ; int __fastcall sub_17C2(int)
.text:000017C2                               sub_17C2                      ; DATA XREF: .data.rel.ro:00003E64↓o
.text:000017C2                               ; __unwind {
.text:000017C2 90 F8 11 02                   LDRB.W          R0, [R0,#0x211]
.text:000017C6 70 47                         BX              LR
.text:000017C6                               ; } // starts at 17C2
.text:000017C6
.text:000017C6                               ; End of function sub_17C2
.text:000017C6
.text:000017C8
.text:000017C8                               ; =============== S U B R O U T I N E =======================================
.text:000017C8
.text:000017C8
.text:000017C8                               ; int __fastcall sub_17C8(int, int, int, _DWORD *)
.text:000017C8                               sub_17C8                      ; DATA XREF: .data.rel.ro:00003E68↓o
.text:000017C8
.text:000017C8                               var_30= -0x30
.text:000017C8                               var_2C= -0x2C
.text:000017C8                               var_28= -0x28
.text:000017C8                               var_20= -0x20
.text:000017C8                               var_1C= -0x1C
.text:000017C8                               var_18= -0x18
.text:000017C8
.text:000017C8                               ; __unwind {
.text:000017C8 F0 B5                         PUSH            {R4-R7,LR}
.text:000017CA 87 B0                         SUB             SP, SP, #0x1C
.text:000017CC 0E 46                         MOV             R6, R1
.text:000017CE 17 49                         LDR             R1, =(__stack_chk_guard_ptr - 0x17D8)
.text:000017D0 15 46                         MOV             R5, R2
.text:000017D2 1C 46                         MOV             R4, R3
.text:000017D4 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:000017D6 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:000017D8 09 68                         LDR             R1, [R1]
.text:000017DA 06 91                         STR             R1, [SP,#0x30+var_18]
.text:000017DC 01 68                         LDR             R1, [R0]
.text:000017DE CA 68                         LDR             R2, [R1,#0xC]
.text:000017E0 4F F0 FF 31                   MOV.W           R1, #0xFFFFFFFF
.text:000017E4 90 47                         BLX             R2
.text:000017E4
.text:000017E6 02 A9                         ADD             R1, SP, #0x30+var_28
.text:000017E8 07 46                         MOV             R7, R0
.text:000017EA FF F7 26 E8                   BLX             dladdr
.text:000017EA
.text:000017EE 88 B1                         CBZ             R0, loc_1814
.text:000017EE
.text:000017F0 04 98                         LDR             R0, [SP,#0x30+var_20]
.text:000017F2 78 B1                         CBZ             R0, loc_1814
.text:000017F2
.text:000017F4 01 90                         STR             R0, [SP,#0x30+var_2C]
.text:000017F6 29 46                         MOV             R1, R5
.text:000017F8 0D 48                         LDR             R0, =(aS - 0x1804) ; "%s"
.text:000017FA 00 22                         MOVS            R2, #0
.text:000017FC 4F F0 FF 33                   MOV.W           R3, #0xFFFFFFFF
.text:00001800 78 44                         ADD             R0, PC        ; "%s"
.text:00001802 00 90                         STR             R0, [SP,#0x30+var_30]
.text:00001804 30 46                         MOV             R0, R6
.text:00001806 FF F7 1E E8                   BLX             __snprintf_chk
.text:00001806
.text:0000180A 05 98                         LDR             R0, [SP,#0x30+var_1C]
.text:0000180C 38 1A                         SUBS            R0, R7, R0
.text:0000180E 20 60                         STR             R0, [R4]
.text:00001810 01 20                         MOVS            R0, #1
.text:00001812 00 E0                         B               loc_1816
.text:00001812
.text:00001814                               ; ---------------------------------------------------------------------------
.text:00001814
.text:00001814                               loc_1814                      ; CODE XREF: sub_17C8+26↑j
.text:00001814                                                             ; sub_17C8+2A↑j
.text:00001814 00 20                         MOVS            R0, #0
.text:00001814
.text:00001816
.text:00001816                               loc_1816                      ; CODE XREF: sub_17C8+4A↑j
.text:00001816 07 49                         LDR             R1, =(__stack_chk_guard_ptr - 0x181E)
.text:00001818 06 9A                         LDR             R2, [SP,#0x30+var_18]
.text:0000181A 79 44                         ADD             R1, PC        ; __stack_chk_guard_ptr
.text:0000181C 09 68                         LDR             R1, [R1]      ; __stack_chk_guard
.text:0000181E 09 68                         LDR             R1, [R1]
.text:00001820 89 1A                         SUBS            R1, R1, R2
.text:00001822 04 BF                         ITT EQ
.text:00001824 07 B0                         ADDEQ           SP, SP, #0x1C
.text:00001826 F0 BD                         POPEQ           {R4-R7,PC}
.text:00001826
.text:00001828 FE F7 E8 EF                   BLX             __stack_chk_fail
.text:00001828
.text:00001828                               ; End of function sub_17C8
.text:00001828
.text:00001828                               ; ---------------------------------------------------------------------------
.text:0000182C B8 27 00 00                   off_182C DCD __stack_chk_guard_ptr - 0x17D8
.text:0000182C                                                             ; DATA XREF: sub_17C8+6↑r
.text:00001830 97 0E 00 00                   off_1830 DCD aS - 0x1804      ; DATA XREF: sub_17C8+30↑r
.text:00001830                                                             ; "%s"
.text:00001834 72 27 00 00                   off_1834 DCD __stack_chk_guard_ptr - 0x181E
.text:00001834                                                             ; DATA XREF: sub_17C8:loc_1816↑r
.text:00001834                               ; } // starts at 17C8
.text:00001838
.text:00001838                               ; =============== S U B R O U T I N E =======================================
.text:00001838
.text:00001838
.text:00001838                               ; int __fastcall sub_1838(int *, int)
.text:00001838                               sub_1838                      ; CODE XREF: sub_131C+34↑p
.text:00001838                                                             ; DATA XREF: .data.rel.ro:00003E6C↓o
.text:00001838
.text:00001838                               var_20= -0x20
.text:00001838                               var_1C= -0x1C
.text:00001838                               var_18= -0x18
.text:00001838                               var_14= -0x14
.text:00001838
.text:00001838                               ; __unwind {
.text:00001838 70 B5                         PUSH            {R4-R6,LR}
.text:0000183A 84 B0                         SUB             SP, SP, #0x10
.text:0000183C 04 46                         MOV             R4, R0
.text:0000183E 18 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x184A)
.text:00001840 0E 46                         MOV             R6, R1
.text:00001842 4F F0 FF 31                   MOV.W           R1, #0xFFFFFFFF
.text:00001846 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00001848 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:0000184A 00 68                         LDR             R0, [R0]
.text:0000184C 03 90                         STR             R0, [SP,#0x20+var_14]
.text:0000184E 20 68                         LDR             R0, [R4]
.text:00001850 C2 68                         LDR             R2, [R0,#0xC]
.text:00001852 20 46                         MOV             R0, R4
.text:00001854 90 47                         BLX             R2
.text:00001854
.text:00001856 00 21                         MOVS            R1, #0
.text:00001858 20 F0 01 05                   BIC.W           R5, R0, #1
.text:0000185C 02 91                         STR             R1, [SP,#0x20+var_18]
.text:0000185E 00 2E                         CMP             R6, #0
.text:00001860 18 BF                         IT NE
.text:00001862 01 3D                         SUBNE           R5, #1
.text:00001864 02 A9                         ADD             R1, SP, #0x20+var_18
.text:00001866 28 46                         MOV             R0, R5
.text:00001868 FE F7 F2 EF                   BLX             __gnu_Unwind_Find_exidx
.text:00001868
.text:0000186C 02 99                         LDR             R1, [SP,#0x20+var_18]
.text:0000186E 00 28                         CMP             R0, #0
.text:00001870 00 90                         STR             R0, [SP,#0x20+var_20]
.text:00001872 01 91                         STR             R1, [SP,#0x20+var_1C]
.text:00001874 06 D0                         BEQ             loc_1884
.text:00001874
.text:00001876 29 B1                         CBZ             R1, loc_1884
.text:00001876
.text:00001878 6A 46                         MOV             R2, SP
.text:0000187A 20 46                         MOV             R0, R4
.text:0000187C 29 46                         MOV             R1, R5
.text:0000187E 00 F0 87 F8                   BL              sub_1990
.text:0000187E
.text:00001882 10 B9                         CBNZ            R0, loc_188A
.text:00001882
.text:00001884
.text:00001884                               loc_1884                      ; CODE XREF: sub_1838+3C↑j
.text:00001884                                                             ; sub_1838+3E↑j
.text:00001884 01 20                         MOVS            R0, #1
.text:00001886 84 F8 10 02                   STRB.W          R0, [R4,#0x210]
.text:00001886
.text:0000188A
.text:0000188A                               loc_188A                      ; CODE XREF: sub_1838+4A↑j
.text:0000188A 06 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x1892)
.text:0000188C 03 99                         LDR             R1, [SP,#0x20+var_14]
.text:0000188E 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00001890 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00001892 00 68                         LDR             R0, [R0]
.text:00001894 40 1A                         SUBS            R0, R0, R1
.text:00001896 04 BF                         ITT EQ
.text:00001898 04 B0                         ADDEQ           SP, SP, #0x10
.text:0000189A 70 BD                         POPEQ           {R4-R6,PC}
.text:0000189A
.text:0000189C FE F7 AE EF                   BLX             __stack_chk_fail
.text:0000189C
.text:0000189C                               ; End of function sub_1838
.text:0000189C
.text:0000189C                               ; ---------------------------------------------------------------------------
.text:000018A0 46 27 00 00                   off_18A0 DCD __stack_chk_guard_ptr - 0x184A
.text:000018A0                                                             ; DATA XREF: sub_1838+6↑r
.text:000018A4 FE 26 00 00                   off_18A4 DCD __stack_chk_guard_ptr - 0x1892
.text:000018A4                                                             ; DATA XREF: sub_1838:loc_188A↑r
.text:000018A4                               ; } // starts at 1838
.text:000018A8                               ; ---------------------------------------------------------------------------
.text:000018A8
.text:000018A8                               loc_18A8                      ; DATA XREF: .data.rel.ro:00003E70↓o
.text:000018A8                               ; __unwind {
.text:000018A8 08 30                         ADDS            R0, #8
.text:000018AA 00 F0 67 B9                   B.W             loc_1B7C
.text:000018AA
.text:000018AE
.text:000018AE                               ; =============== S U B R O U T I N E =======================================
.text:000018AE
.text:000018AE
.text:000018AE                               ; int __fastcall sub_18AE(int result)
.text:000018AE                               sub_18AE                      ; DATA XREF: .data.rel.ro:00003E74↓o
.text:000018AE 01 21                         MOVS            R1, #1
.text:000018B0 80 F8 48 10                   STRB.W          R1, [R0,#0x48]
.text:000018B4 70 47                         BX              LR
.text:000018B4
.text:000018B4                               ; End of function sub_18AE
.text:000018B4
.text:000018B4                               ; ---------------------------------------------------------------------------
.text:000018B6 00 00                         ALIGN 4
.text:000018B6                               ; } // starts at 18A8
.text:000018B8
.text:000018B8                               ; =============== S U B R O U T I N E =======================================
.text:000018B8
.text:000018B8                               ; Attributes: noreturn
.text:000018B8
.text:000018B8                               ; void __fastcall __noreturn sub_18B8(const char *, const char *, int, const char *)
.text:000018B8                               sub_18B8                      ; CODE XREF: sub_1498+7A↑p
.text:000018B8                                                             ; sub_1524+7A↑p
.text:000018B8                                                             ; sub_15D4+94↑p
.text:000018B8                                                             ; sub_1678+BC↑p
.text:000018B8                                                             ; sub_1990+160↓p
.text:000018B8                                                             ; sub_1990+174↓p
.text:000018B8
.text:000018B8                               var_10= -0x10
.text:000018B8
.text:000018B8                               ; __unwind {
.text:000018B8 80 B5                         PUSH            {R7,LR}
.text:000018BA 82 B0                         SUB             SP, SP, #8
.text:000018BC 86 46                         MOV             LR, R0
.text:000018BE 07 48                         LDR             R0, =(stderr_ptr - 0x18C8)
.text:000018C0 8C 46                         MOV             R12, R1
.text:000018C2 07 49                         LDR             R1, =(aLibunwindSSDS - 0x18CC) ; "libunwind: %s %s:%d - %s\n"
.text:000018C4 78 44                         ADD             R0, PC        ; stderr_ptr
.text:000018C6 00 68                         LDR             R0, [R0]      ; stderr
.text:000018C8 79 44                         ADD             R1, PC        ; "libunwind: %s %s:%d - %s\n"
.text:000018CA 00 68                         LDR             R0, [R0]      ; stream
.text:000018CC CD E9 00 23                   STRD.W          R2, R3, [SP,#0x10+var_10]
.text:000018D0 72 46                         MOV             R2, LR
.text:000018D2 63 46                         MOV             R3, R12
.text:000018D4 FE F7 9E EF                   BLX             fprintf
.text:000018D4
.text:000018D8 FE F7 96 EF                   BLX             abort
.text:000018D8
.text:000018D8                               ; End of function sub_18B8
.text:000018D8
.text:000018D8                               ; ---------------------------------------------------------------------------
.text:000018DC CC 26 00 00                   off_18DC DCD stderr_ptr - 0x18C8
.text:000018DC                                                             ; DATA XREF: sub_18B8+6↑r
.text:000018E0 B7 0B 00 00                   off_18E0 DCD aLibunwindSSDS - 0x18CC
.text:000018E0                                                             ; DATA XREF: sub_18B8+A↑r
.text:000018E0                               ; } // starts at 18B8         ; "libunwind: %s %s:%d - %s\n"
.text:000018E4
.text:000018E4                               ; =============== S U B R O U T I N E =======================================
.text:000018E4
.text:000018E4
.text:000018E4                               ; int __fastcall sub_18E4(int)
.text:000018E4                               sub_18E4                      ; CODE XREF: sub_1744+C↑p
.text:000018E4
.text:000018E4                               var_1C= -0x1C
.text:000018E4                               var_18= -0x18
.text:000018E4                               var_14= -0x14
.text:000018E4
.text:000018E4                               ; __unwind {
.text:000018E4 B0 B5                         PUSH            {R4,R5,R7,LR}
.text:000018E6 84 B0                         SUB             SP, SP, #0x10
.text:000018E8 05 46                         MOV             R5, R0
.text:000018EA 11 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x18F4)
.text:000018EC 00 24                         MOVS            R4, #0
.text:000018EE 01 A9                         ADD             R1, SP, #0x20+var_1C
.text:000018F0 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:000018F2 02 AA                         ADD             R2, SP, #0x20+var_18
.text:000018F4 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:000018F6 00 68                         LDR             R0, [R0]
.text:000018F8 03 90                         STR             R0, [SP,#0x20+var_14]
.text:000018FA CD E9 01 44                   STRD.W          R4, R4, [SP,#0x20+var_1C]
.text:000018FE D5 F8 08 02                   LDR.W           R0, [R5,#0x208]
.text:00001902 FF F7 89 F8                   BL              sub_A18
.text:00001902
.text:00001906 DD E9 01 23                   LDRD.W          R2, R3, [SP,#0x20+var_1C]
.text:0000190A 01 46                         MOV             R1, R0
.text:0000190C 28 46                         MOV             R0, R5
.text:0000190E FF F7 AD F8                   BL              sub_A6C
.text:0000190E
.text:00001912 08 28                         CMP             R0, #8
.text:00001914 07 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x1920)
.text:00001916 08 BF                         IT EQ
.text:00001918 01 24                         MOVEQ           R4, #1
.text:0000191A 03 99                         LDR             R1, [SP,#0x20+var_14]
.text:0000191C 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:0000191E 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00001920 00 68                         LDR             R0, [R0]
.text:00001922 40 1A                         SUBS            R0, R0, R1
.text:00001924 02 BF                         ITTT EQ
.text:00001926 20 46                         MOVEQ           R0, R4
.text:00001928 04 B0                         ADDEQ           SP, SP, #0x10
.text:0000192A B0 BD                         POPEQ           {R4,R5,R7,PC}
.text:0000192A
.text:0000192C FE F7 66 EF                   BLX             __stack_chk_fail
.text:0000192C
.text:0000192C                               ; End of function sub_18E4
.text:0000192C
.text:0000192C                               ; ---------------------------------------------------------------------------
.text:00001930 9C 26 00 00                   off_1930 DCD __stack_chk_guard_ptr - 0x18F4
.text:00001930                                                             ; DATA XREF: sub_18E4+6↑r
.text:00001934 70 26 00 00                   off_1934 DCD __stack_chk_guard_ptr - 0x1920
.text:00001934                                                             ; DATA XREF: sub_18E4+30↑r
.text:00001934                               ; } // starts at 18E4
.text:00001938
.text:00001938                               ; =============== S U B R O U T I N E =======================================
.text:00001938
.text:00001938
.text:00001938                               ; _DWORD *__fastcall sub_1938(int)
.text:00001938                               sub_1938                      ; CODE XREF: sub_17AC+8↑p
.text:00001938                               ; __unwind {
.text:00001938 10 B5                         PUSH            {R4,LR}
.text:0000193A 04 46                         MOV             R4, R0
.text:0000193C 94 F8 41 00                   LDRB.W          R0, [R4,#0x41]
.text:00001940 48 B1                         CBZ             R0, loc_1956
.text:00001940
.text:00001942 94 F8 40 10                   LDRB.W          R1, [R4,#0x40]
.text:00001946 04 F1 48 00                   ADD.W           R0, R4, #0x48 ; 'H'
.text:0000194A 11 B1                         CBZ             R1, loc_1952
.text:0000194A
.text:0000194C 00 F0 48 EB                   BLX             sub_1FE0
.text:0000194C
.text:00001950 01 E0                         B               loc_1956
.text:00001950
.text:00001952                               ; ---------------------------------------------------------------------------
.text:00001952
.text:00001952                               loc_1952                      ; CODE XREF: sub_1938+12↑j
.text:00001952 00 F0 42 EB                   BLX             sub_1FD8
.text:00001952
.text:00001956
.text:00001956                               loc_1956                      ; CODE XREF: sub_1938+8↑j
.text:00001956                                                             ; sub_1938+18↑j
.text:00001956 B4 F8 42 00                   LDRH.W          R0, [R4,#0x42]
.text:0000195A 10 F0 FF 0F                   TST.W           R0, #0xFF
.text:0000195E 06 D0                         BEQ             loc_196E
.text:0000195E
.text:00001960 04 F1 D0 00                   ADD.W           R0, R4, #0xD0
.text:00001964 00 F0 40 EB                   BLX             sub_1FE8
.text:00001964
.text:00001968 94 F8 43 00                   LDRB.W          R0, [R4,#0x43]
.text:0000196C 00 E0                         B               loc_1970
.text:0000196C
.text:0000196E                               ; ---------------------------------------------------------------------------
.text:0000196E
.text:0000196E                               loc_196E                      ; CODE XREF: sub_1938+26↑j
.text:0000196E 00 0A                         LSRS            R0, R0, #8
.text:0000196E
.text:00001970
.text:00001970                               loc_1970                      ; CODE XREF: sub_1938+34↑j
.text:00001970 18 B1                         CBZ             R0, loc_197A
.text:00001970
.text:00001972 04 F5 A8 70                   ADD.W           R0, R4, #0x150
.text:00001976 00 F0 3C EB                   BLX             sub_1FF0
.text:00001976
.text:0000197A
.text:0000197A                               loc_197A                      ; CODE XREF: sub_1938:loc_1970↑j
.text:0000197A 94 F8 44 00                   LDRB.W          R0, [R4,#0x44]
.text:0000197E 28 B1                         CBZ             R0, locret_198C
.text:0000197E
.text:00001980 04 F5 E8 70                   ADD.W           R0, R4, #0x1D0
.text:00001984 BD E8 10 40                   POP.W           {R4,LR}
.text:00001988 00 F0 7E BB                   B.W             sub_2088
.text:00001988
.text:0000198C                               ; ---------------------------------------------------------------------------
.text:0000198C
.text:0000198C                               locret_198C                   ; CODE XREF: sub_1938+46↑j
.text:0000198C 10 BD                         POP             {R4,PC}
.text:0000198C
.text:0000198C                               ; End of function sub_1938
.text:0000198C
.text:0000198C                               ; ---------------------------------------------------------------------------
.text:0000198E 00 00                         ALIGN 0x10
.text:0000198E                               ; } // starts at 1938
.text:00001990
.text:00001990                               ; =============== S U B R O U T I N E =======================================
.text:00001990
.text:00001990
.text:00001990                               ; int __fastcall sub_1990(int *, int, _DWORD *)
.text:00001990                               sub_1990                      ; CODE XREF: sub_1838+46↑p
.text:00001990
.text:00001990                               var_48= -0x48
.text:00001990                               var_40= -0x40
.text:00001990                               var_38= -0x38
.text:00001990                               var_34= -0x34
.text:00001990                               var_2C= -0x2C
.text:00001990                               var_28= -0x28
.text:00001990                               var_24= -0x24
.text:00001990                               var_20= -0x20
.text:00001990
.text:00001990                               ; __unwind {
.text:00001990 2D E9 F0 43                   PUSH.W          {R4-R9,LR}
.text:00001994 8B B0                         SUB             SP, SP, #0x2C
.text:00001996 04 46                         MOV             R4, R0
.text:00001998 5B 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x19A2)
.text:0000199A 13 46                         MOV             R3, R2
.text:0000199C 00 25                         MOVS            R5, #0
.text:0000199E 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:000019A0 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:000019A2 00 68                         LDR             R0, [R0]
.text:000019A4 0A 90                         STR             R0, [SP,#0x48+var_20]
.text:000019A6 09 A8                         ADD             R0, SP, #0x48+var_24
.text:000019A8 08 91                         STR             R1, [SP,#0x48+var_28]
.text:000019AA 08 A9                         ADD             R1, SP, #0x48+var_28
.text:000019AC 5E 68                         LDR             R6, [R3,#4]
.text:000019AE 62 68                         LDR             R2, [R4,#4]
.text:000019B0 CD E9 00 62                   STRD.W          R6, R2, [SP,#0x48+var_48]
.text:000019B4 CD E9 02 31                   STRD.W          R3, R1, [SP,#0x48+var_40]
.text:000019B8 00 21                         MOVS            R1, #0
.text:000019BA 04 90                         STR             R0, [SP,#0x48+var_38]
.text:000019BC 05 A8                         ADD             R0, SP, #0x48+var_34
.text:000019BE 00 F0 B9 F8                   BL              sub_1B34
.text:000019BE
.text:000019C2 05 98                         LDR             R0, [SP,#0x48+var_34]
.text:000019C4 00 28                         CMP             R0, #0
.text:000019C6 7E D0                         BEQ             loc_1AC6
.text:000019C6
.text:000019C8 B0 42                         CMP             R0, R6
.text:000019CA 7C D0                         BEQ             loc_1AC6
.text:000019CA
.text:000019CC 07 99                         LDR             R1, [SP,#0x48+var_2C]
.text:000019CE 09 68                         LDR             R1, [R1]
.text:000019D0 01 EB C0 01                   ADD.W           R1, R1, R0,LSL#3
.text:000019D4 08 46                         MOV             R0, R1
.text:000019D6 0A 46                         MOV             R2, R1
.text:000019D8 50 F8 04 59                   LDR.W           R5, [R0],#-4
.text:000019DC 52 F8 08 8D                   LDR.W           R8, [R2,#-8]!
.text:000019E0 10 B1                         CBZ             R0, loc_19E8
.text:000019E0
.text:000019E2 07 68                         LDR             R7, [R0]
.text:000019E4 01 2F                         CMP             R7, #1
.text:000019E6 01 D1                         BNE             loc_19EC
.text:000019E6
.text:000019E8
.text:000019E8                               loc_19E8                      ; CODE XREF: sub_1990+50↑j
.text:000019E8 00 25                         MOVS            R5, #0
.text:000019EA 6C E0                         B               loc_1AC6
.text:000019EA
.text:000019EC                               ; ---------------------------------------------------------------------------
.text:000019EC
.text:000019EC                               loc_19EC                      ; CODE XREF: sub_1990+56↑j
.text:000019EC 00 2F                         CMP             R7, #0
.text:000019EE 1A DB                         BLT             loc_1A26
.text:000019EE
.text:000019F0 4F F0 00 4C                   MOV.W           R12, #0x80000000
.text:000019F4 0C EA 47 06                   AND.W           R6, R12, R7,LSL#1
.text:000019F8 3E 43                         ORRS            R6, R7
.text:000019FA 37 58                         LDR             R7, [R6,R0]
.text:000019FC 30 44                         ADD             R0, R6
.text:000019FE B7 F1 FF 3F                   CMP.W           R7, #0xFFFFFFFF
.text:00001A02 13 DD                         BLE             loc_1A2C
.text:00001A02
.text:00001A04 03 46                         MOV             R3, R0
.text:00001A06 0C EA 47 06                   AND.W           R6, R12, R7,LSL#1
.text:00001A0A 53 F8 04 9F                   LDR.W           R9, [R3,#4]!
.text:00001A0E 4F F0 00 0C                   MOV.W           R12, #0
.text:00001A12 37 43                         ORRS            R7, R6
.text:00001A14 07 EB 00 0E                   ADD.W           LR, R7, R0
.text:00001A18 4F EA 19 67                   MOV.W           R7, R9,LSR#24
.text:00001A1C 03 EB 87 03                   ADD.W           R3, R3, R7,LSL#2
.text:00001A20 03 F1 04 09                   ADD.W           R9, R3, #4
.text:00001A24 17 E0                         B               loc_1A56
.text:00001A24
.text:00001A26                               ; ---------------------------------------------------------------------------
.text:00001A26
.text:00001A26                               loc_1A26                      ; CODE XREF: sub_1990+5E↑j
.text:00001A26 4F F0 01 0C                   MOV.W           R12, #1
.text:00001A2A 01 E0                         B               loc_1A30
.text:00001A2A
.text:00001A2C                               ; ---------------------------------------------------------------------------
.text:00001A2C
.text:00001A2C                               loc_1A2C                      ; CODE XREF: sub_1990+72↑j
.text:00001A2C 4F F0 00 0C                   MOV.W           R12, #0
.text:00001A2C
.text:00001A30
.text:00001A30                               loc_1A30                      ; CODE XREF: sub_1990+9A↑j
.text:00001A30 C7 F3 03 66                   UBFX.W          R6, R7, #0x18, #4
.text:00001A34 02 2E                         CMP             R6, #2
.text:00001A36 10 D0                         BEQ             loc_1A5A
.text:00001A36
.text:00001A38 01 2E                         CMP             R6, #1
.text:00001A3A 14 D0                         BEQ             loc_1A66
.text:00001A3A
.text:00001A3C 00 2E                         CMP             R6, #0
.text:00001A3E 4F D1                         BNE             loc_1AE0
.text:00001A3E
.text:00001A40 37 4E                         LDR             R6, =(off_3FA0 - 0x1A54)
.text:00001A42 00 F1 04 09                   ADD.W           R9, R0, #4
.text:00001A46 BC F1 00 0F                   CMP.W           R12, #0
.text:00001A4A 18 BF                         IT NE
.text:00001A4C 4F F0 00 09                   MOVNE.W         R9, #0
.text:00001A50 7E 44                         ADD             R6, PC        ; off_3FA0
.text:00001A52 D6 F8 00 E0                   LDR.W           LR, [R6]      ; sub_F88
.text:00001A52
.text:00001A56
.text:00001A56                               loc_1A56                      ; CODE XREF: sub_1990+94↑j
.text:00001A56 00 26                         MOVS            R6, #0
.text:00001A58 18 E0                         B               loc_1A8C
.text:00001A58
.text:00001A5A                               ; ---------------------------------------------------------------------------
.text:00001A5A
.text:00001A5A                               loc_1A5A                      ; CODE XREF: sub_1990+A6↑j
.text:00001A5A 2C 4E                         LDR             R6, =(off_3F98 - 0x1A60)
.text:00001A5C 7E 44                         ADD             R6, PC        ; off_3F98
.text:00001A5E D6 F8 00 E0                   LDR.W           LR, [R6]      ; sub_FF4
.text:00001A62 01 26                         MOVS            R6, #1
.text:00001A64 04 E0                         B               loc_1A70
.text:00001A64
.text:00001A66                               ; ---------------------------------------------------------------------------
.text:00001A66
.text:00001A66                               loc_1A66                      ; CODE XREF: sub_1990+AA↑j
.text:00001A66 2A 4E                         LDR             R6, =(off_3F9C - 0x1A6C)
.text:00001A68 7E 44                         ADD             R6, PC        ; off_3F9C
.text:00001A6A D6 F8 00 E0                   LDR.W           LR, [R6]      ; sub_FEC
.text:00001A6E 00 26                         MOVS            R6, #0
.text:00001A6E
.text:00001A70
.text:00001A70                               loc_1A70                      ; CODE XREF: sub_1990+D4↑j
.text:00001A70 C7 F3 07 43                   UBFX.W          R3, R7, #0x10, #8
.text:00001A74 1F 46                         MOV             R7, R3
.text:00001A76 00 2B                         CMP             R3, #0
.text:00001A78 18 BF                         IT NE
.text:00001A7A 01 27                         MOVNE           R7, #1
.text:00001A7C 07 EA 0C 07                   AND.W           R7, R7, R12
.text:00001A80 01 2F                         CMP             R7, #1
.text:00001A82 37 D0                         BEQ             loc_1AF4
.text:00001A82
.text:00001A84 00 EB 83 03                   ADD.W           R3, R0, R3,LSL#2
.text:00001A88 03 F1 04 09                   ADD.W           R9, R3, #4
.text:00001A88
.text:00001A8C
.text:00001A8C                               loc_1A8C                      ; CODE XREF: sub_1990+C8↑j
.text:00001A8C 4F F0 00 43                   MOV.W           R3, #0x80000000
.text:00001A90 00 2E                         CMP             R6, #0
.text:00001A92 03 EA 45 07                   AND.W           R7, R3, R5,LSL#1
.text:00001A96 03 EA 48 03                   AND.W           R3, R3, R8,LSL#1
.text:00001A9A 45 EA 07 05                   ORR.W           R5, R5, R7
.text:00001A9E 43 EA 08 03                   ORR.W           R3, R3, R8
.text:00001AA2 29 44                         ADD             R1, R5
.text:00001AA4 1A 44                         ADD             R2, R3
.text:00001AA6 C4 E9 7A 21                   STRD.W          R2, R1, [R4,#0x1E8]
.text:00001AAA 4F F0 01 05                   MOV.W           R5, #1
.text:00001AAE C4 F8 08 02                   STR.W           R0, [R4,#0x208]
.text:00001AB2 C4 E9 7C 9E                   STRD.W          R9, LR, [R4,#0x1F0]
.text:00001AB6 18 BF                         IT NE
.text:00001AB8 02 26                         MOVNE           R6, #2
.text:00001ABA BC F1 00 0F                   CMP.W           R12, #0
.text:00001ABE 18 BF                         IT NE
.text:00001AC0 01 26                         MOVNE           R6, #1
.text:00001AC2 C4 F8 FC 61                   STR.W           R6, [R4,#0x1FC]
.text:00001AC2
.text:00001AC6
.text:00001AC6                               loc_1AC6                      ; CODE XREF: sub_1990+36↑j
.text:00001AC6                                                             ; sub_1990+3A↑j
.text:00001AC6                                                             ; sub_1990+5A↑j
.text:00001AC6 1A 48                         LDR             R0, =(__stack_chk_guard_ptr - 0x1ACE)
.text:00001AC8 0A 99                         LDR             R1, [SP,#0x48+var_20]
.text:00001ACA 78 44                         ADD             R0, PC        ; __stack_chk_guard_ptr
.text:00001ACC 00 68                         LDR             R0, [R0]      ; __stack_chk_guard
.text:00001ACE 00 68                         LDR             R0, [R0]
.text:00001AD0 40 1A                         SUBS            R0, R0, R1
.text:00001AD2 02 BF                         ITTT EQ
.text:00001AD4 28 46                         MOVEQ           R0, R5
.text:00001AD6 0B B0                         ADDEQ           SP, SP, #0x2C ; ','
.text:00001AD8 BD E8 F0 83                   POPEQ.W         {R4-R9,PC}
.text:00001AD8
.text:00001ADC FE F7 8E EE                   BLX             __stack_chk_fail
.text:00001ADC
.text:00001AE0                               ; ---------------------------------------------------------------------------
.text:00001AE0
.text:00001AE0                               loc_1AE0                      ; CODE XREF: sub_1990+AE↑j
.text:00001AE0 10 48                         LDR             R0, =(aBoolLibunwindU - 0x1AEE) ; "bool libunwind::UnwindCursor<libunwind:"...
.text:00001AE2 4F F4 42 72                   MOV.W           R2, #0x308
.text:00001AE6 10 49                         LDR             R1, =(aExternalLibunw_0 - 0x1AF0) ; "external/libunwind_llvm/src/UnwindCurso"...
.text:00001AE8 10 4B                         LDR             R3, =(aUnknownPersona - 0x1AF2) ; "unknown personality routine"
.text:00001AEA 78 44                         ADD             R0, PC        ; "bool libunwind::UnwindCursor<libunwind:"...
.text:00001AEC 79 44                         ADD             R1, PC        ; "external/libunwind_llvm/src/UnwindCurso"...
.text:00001AEE 7B 44                         ADD             R3, PC        ; "unknown personality routine"
.text:00001AF0 FF F7 E2 FE                   BL              sub_18B8
.text:00001AF0
.text:00001AF4                               ; ---------------------------------------------------------------------------
.text:00001AF4
.text:00001AF4                               loc_1AF4                      ; CODE XREF: sub_1990+F2↑j
.text:00001AF4 07 48                         LDR             R0, =(aBoolLibunwindU - 0x1B02) ; "bool libunwind::UnwindCursor<libunwind:"...
.text:00001AF6 40 F2 0F 32                   MOVW            R2, #0x30F
.text:00001AFA 07 49                         LDR             R1, =(aExternalLibunw_0 - 0x1B04) ; "external/libunwind_llvm/src/UnwindCurso"...
.text:00001AFC 07 4B                         LDR             R3, =(aIndexInlinedTa - 0x1B06) ; "index inlined table detected but pr fun"...
.text:00001AFE 78 44                         ADD             R0, PC        ; "bool libunwind::UnwindCursor<libunwind:"...
.text:00001B00 79 44                         ADD             R1, PC        ; "external/libunwind_llvm/src/UnwindCurso"...
.text:00001B02 7B 44                         ADD             R3, PC        ; "index inlined table detected but pr fun"...
.text:00001B04 FF F7 D8 FE                   BL              sub_18B8
.text:00001B04
.text:00001B04                               ; End of function sub_1990
.text:00001B04
.text:00001B04                               ; ---------------------------------------------------------------------------
.text:00001B08 EE 25 00 00                   off_1B08 DCD __stack_chk_guard_ptr - 0x19A2
.text:00001B08                                                             ; DATA XREF: sub_1990+8↑r
.text:00001B0C 38 25 00 00                   off_1B0C DCD off_3F98 - 0x1A60
.text:00001B0C                                                             ; DATA XREF: sub_1990:loc_1A5A↑r
.text:00001B10 30 25 00 00                   off_1B10 DCD off_3F9C - 0x1A6C
.text:00001B10                                                             ; DATA XREF: sub_1990:loc_1A66↑r
.text:00001B14 9C 0B 00 00                   off_1B14 DCD aBoolLibunwindU - 0x1B02
.text:00001B14                                                             ; DATA XREF: sub_1990:loc_1AF4↑r
.text:00001B14                                                             ; "bool libunwind::UnwindCursor<libunwind:"...
.text:00001B18 20 0A 00 00                   off_1B18 DCD aExternalLibunw_0 - 0x1B04
.text:00001B18                                                             ; DATA XREF: sub_1990+16A↑r
.text:00001B18                                                             ; "external/libunwind_llvm/src/UnwindCurso"...
.text:00001B1C 92 0C 00 00                   off_1B1C DCD aIndexInlinedTa - 0x1B06
.text:00001B1C                                                             ; DATA XREF: sub_1990+16C↑r
.text:00001B1C                                                             ; "index inlined table detected but pr fun"...
.text:00001B20 4C 25 00 00                   off_1B20 DCD off_3FA0 - 0x1A54
.text:00001B20                                                             ; DATA XREF: sub_1990+B0↑r
.text:00001B24 B0 0B 00 00                   off_1B24 DCD aBoolLibunwindU - 0x1AEE
.text:00001B24                                                             ; DATA XREF: sub_1990:loc_1AE0↑r
.text:00001B24                                                             ; "bool libunwind::UnwindCursor<libunwind:"...
.text:00001B28 34 0A 00 00                   off_1B28 DCD aExternalLibunw_0 - 0x1AF0
.text:00001B28                                                             ; DATA XREF: sub_1990+156↑r
.text:00001B28                                                             ; "external/libunwind_llvm/src/UnwindCurso"...
.text:00001B2C 8A 0C 00 00                   off_1B2C DCD aUnknownPersona - 0x1AF2
.text:00001B2C                                                             ; DATA XREF: sub_1990+158↑r
.text:00001B2C                                                             ; "unknown personality routine"
.text:00001B30 C2 24 00 00                   off_1B30 DCD __stack_chk_guard_ptr - 0x1ACE
.text:00001B30                                                             ; DATA XREF: sub_1990:loc_1AC6↑r
.text:00001B30                               ; } // starts at 1990
.text:00001B34
.text:00001B34                               ; =============== S U B R O U T I N E =======================================
.text:00001B34
.text:00001B34
.text:00001B34                               ; _DWORD *__fastcall sub_1B34(_DWORD *, int, int, _DWORD *, int, int, int, _DWORD *)
.text:00001B34                               sub_1B34                      ; CODE XREF: sub_1990+2E↑p
.text:00001B34
.text:00001B34                               arg_0=  0
.text:00001B34                               arg_C=  0xC
.text:00001B34
.text:00001B34                               ; __unwind {
.text:00001B34 2D E9 F0 41                   PUSH.W          {R4-R8,LR}
.text:00001B38 09 9E                         LDR             R6, [SP,#0x18+arg_C]
.text:00001B3A 4F F0 00 4E                   MOV.W           LR, #0x80000000
.text:00001B3E 06 9D                         LDR             R5, [SP,#0x18+arg_0]
.text:00001B40 D6 F8 00 C0                   LDR.W           R12, [R6]
.text:00001B44 6C 1A                         SUBS            R4, R5, R1
.text:00001B46 02 E0                         B               loc_1B4E
.text:00001B46
.text:00001B48                               ; ---------------------------------------------------------------------------
.text:00001B48
.text:00001B48                               loc_1B48                      ; CODE XREF: sub_1B34+3E↓j
.text:00001B48 69 1E                         SUBS            R1, R5, #1
.text:00001B4A 0C 1B                         SUBS            R4, R1, R4
.text:00001B4C 71 1C                         ADDS            R1, R6, #1
.text:00001B4C
.text:00001B4E
.text:00001B4E                               loc_1B4E                      ; CODE XREF: sub_1B34+12↑j
.text:00001B4E                                                             ; sub_1B34+3C↓j
.text:00001B4E 25 46                         MOV             R5, R4
.text:00001B50 85 B1                         CBZ             R5, loc_1B74
.text:00001B50
.text:00001B52 D3 F8 00 80                   LDR.W           R8, [R3]
.text:00001B56 01 EB 55 06                   ADD.W           R6, R1, R5,LSR#1
.text:00001B5A 58 F8 36 70                   LDR.W           R7, [R8,R6,LSL#3]
.text:00001B5E 0E EA 47 04                   AND.W           R4, LR, R7,LSL#1
.text:00001B62 3C 43                         ORRS            R4, R7
.text:00001B64 08 EB C6 07                   ADD.W           R7, R8, R6,LSL#3
.text:00001B68 27 44                         ADD             R7, R4
.text:00001B6A 4F EA 55 04                   MOV.W           R4, R5,LSR#1
.text:00001B6E BC 45                         CMP             R12, R7
.text:00001B70 ED D3                         BCC             loc_1B4E
.text:00001B70
.text:00001B72 E9 E7                         B               loc_1B48
.text:00001B72
.text:00001B74                               ; ---------------------------------------------------------------------------
.text:00001B74
.text:00001B74                               loc_1B74                      ; CODE XREF: sub_1B34+1C↑j
.text:00001B74 0E C0                         STM             R0!, {R1-R3}
.text:00001B76 BD E8 F0 81                   POP.W           {R4-R8,PC}
.text:00001B76
.text:00001B76                               ; End of function sub_1B34
.text:00001B76
.text:00001B76                               ; ---------------------------------------------------------------------------
.text:00001B7A 00 00                         ALIGN 4
.text:00001B7A                               ; } // starts at 1B34
.text:00001B7C
.text:00001B7C                               loc_1B7C                      ; CODE XREF: .text:000018AA↑j
.text:00001B7C                               ; __unwind {
.text:00001B7C 8A 1C                         ADDS            R2, R1, #2
.text:00001B7E 61 2A                         CMP             R2, #0x61 ; 'a' ; switch 98 cases
.text:00001B80 00 F2 6B 80                   BHI.W           def_1B8A      ; jumptable 00001B8A default case
.text:00001B80
.text:00001B84 DF F8 F8 02                   LDR.W           R0, =(aPc - 0x1B8C) ; "pc"
.text:00001B88 78 44                         ADD             R0, PC        ; "pc"
.text:00001B8A DF E8 12 F0                   TBH.W           [PC,R2,LSL#1] ; switch jump
.text:00001B8A
.text:00001B8A                               ; ---------------------------------------------------------------------------
.text:00001B8E 62 00                         jpt_1B8A DCW 0x62             ; jump table for switch statement
.text:00001B90 91 00                         DCW 0x91
.text:00001B92 92 00                         DCW 0x92
.text:00001B94 95 00                         DCW 0x95
.text:00001B96 98 00                         DCW 0x98
.text:00001B98 9B 00                         DCW 0x9B
.text:00001B9A 9E 00                         DCW 0x9E
.text:00001B9C A1 00                         DCW 0xA1
.text:00001B9E A4 00                         DCW 0xA4
.text:00001BA0 A7 00                         DCW 0xA7
.text:00001BA2 AA 00                         DCW 0xAA
.text:00001BA4 AD 00                         DCW 0xAD
.text:00001BA6 B0 00                         DCW 0xB0
.text:00001BA8 B3 00                         DCW 0xB3
.text:00001BAA B6 00                         DCW 0xB6
.text:00001BAC 62 00                         DCW 0x62
.text:00001BAE B9 00                         DCW 0xB9
.text:00001BB0 91 00                         DCW 0x91
.text:00001BB2 8F 00                         DCW 0x8F
.text:00001BB4 8F 00                         DCW 0x8F
.text:00001BB6 8F 00                         DCW 0x8F
.text:00001BB8 8F 00                         DCW 0x8F
.text:00001BBA 8F 00                         DCW 0x8F
.text:00001BBC 8F 00                         DCW 0x8F
.text:00001BBE 8F 00                         DCW 0x8F
.text:00001BC0 8F 00                         DCW 0x8F
.text:00001BC2 8F 00                         DCW 0x8F
.text:00001BC4 8F 00                         DCW 0x8F
.text:00001BC6 8F 00                         DCW 0x8F
.text:00001BC8 8F 00                         DCW 0x8F
.text:00001BCA 8F 00                         DCW 0x8F
.text:00001BCC 8F 00                         DCW 0x8F
.text:00001BCE 8F 00                         DCW 0x8F
.text:00001BD0 8F 00                         DCW 0x8F
.text:00001BD2 8F 00                         DCW 0x8F
.text:00001BD4 8F 00                         DCW 0x8F
.text:00001BD6 8F 00                         DCW 0x8F
.text:00001BD8 8F 00                         DCW 0x8F
.text:00001BDA 8F 00                         DCW 0x8F
.text:00001BDC 8F 00                         DCW 0x8F
.text:00001BDE 8F 00                         DCW 0x8F
.text:00001BE0 8F 00                         DCW 0x8F
.text:00001BE2 8F 00                         DCW 0x8F
.text:00001BE4 8F 00                         DCW 0x8F
.text:00001BE6 8F 00                         DCW 0x8F
.text:00001BE8 8F 00                         DCW 0x8F
.text:00001BEA 8F 00                         DCW 0x8F
.text:00001BEC 8F 00                         DCW 0x8F
.text:00001BEE 8F 00                         DCW 0x8F
.text:00001BF0 8F 00                         DCW 0x8F
.text:00001BF2 8F 00                         DCW 0x8F
.text:00001BF4 8F 00                         DCW 0x8F
.text:00001BF6 8F 00                         DCW 0x8F
.text:00001BF8 8F 00                         DCW 0x8F
.text:00001BFA 8F 00                         DCW 0x8F
.text:00001BFC 8F 00                         DCW 0x8F
.text:00001BFE 8F 00                         DCW 0x8F
.text:00001C00 8F 00                         DCW 0x8F
.text:00001C02 8F 00                         DCW 0x8F
.text:00001C04 8F 00                         DCW 0x8F
.text:00001C06 8F 00                         DCW 0x8F
.text:00001C08 8F 00                         DCW 0x8F
.text:00001C0A 8F 00                         DCW 0x8F
.text:00001C0C 8F 00                         DCW 0x8F
.text:00001C0E 8F 00                         DCW 0x8F
.text:00001C10 8F 00                         DCW 0x8F
.text:00001C12 BC 00                         DCW 0xBC
.text:00001C14 BF 00                         DCW 0xBF
.text:00001C16 C2 00                         DCW 0xC2
.text:00001C18 C5 00                         DCW 0xC5
.text:00001C1A C8 00                         DCW 0xC8
.text:00001C1C CB 00                         DCW 0xCB
.text:00001C1E CE 00                         DCW 0xCE
.text:00001C20 D1 00                         DCW 0xD1
.text:00001C22 D4 00                         DCW 0xD4
.text:00001C24 D7 00                         DCW 0xD7
.text:00001C26 DA 00                         DCW 0xDA
.text:00001C28 DD 00                         DCW 0xDD
.text:00001C2A E0 00                         DCW 0xE0
.text:00001C2C E3 00                         DCW 0xE3
.text:00001C2E E6 00                         DCW 0xE6
.text:00001C30 E9 00                         DCW 0xE9
.text:00001C32 EC 00                         DCW 0xEC
.text:00001C34 EF 00                         DCW 0xEF
.text:00001C36 F2 00                         DCW 0xF2
.text:00001C38 F5 00                         DCW 0xF5
.text:00001C3A F8 00                         DCW 0xF8
.text:00001C3C FB 00                         DCW 0xFB
.text:00001C3E FE 00                         DCW 0xFE
.text:00001C40 01 01                         DCW 0x101
.text:00001C42 04 01                         DCW 0x104
.text:00001C44 07 01                         DCW 0x107
.text:00001C46 0A 01                         DCW 0x10A
.text:00001C48 0D 01                         DCW 0x10D
.text:00001C4A 10 01                         DCW 0x110
.text:00001C4C 13 01                         DCW 0x113
.text:00001C4E 16 01                         DCW 0x116
.text:00001C50 19 01                         DCW 0x119
.text:00001C52                               ; ---------------------------------------------------------------------------
.text:00001C52
.text:00001C52                               loc_1C52                      ; CODE XREF: .text:00001B8A↑j
.text:00001C52 DF F8 64 03                   LDR.W           R0, =(aSp - 0x1C5A) ; jumptable 00001B8A cases 0,15
.text:00001C56 78 44                         ADD             R0, PC        ; "sp"
.text:00001C58 70 47                         BX              LR
.text:00001C58
.text:00001C5A                               ; ---------------------------------------------------------------------------
.text:00001C5A
.text:00001C5A                               def_1B8A                      ; CODE XREF: .text:00001B80↑j
.text:00001C5A A1 F5 80 70                   SUB.W           R0, R1, #0x100 ; jumptable 00001B8A default case
.text:00001C5E 1F 28                         CMP             R0, #0x1F
.text:00001C60 24 D8                         BHI             def_1C62      ; jumptable 00001B8A cases 18-65
.text:00001C60                                                             ; jumptable 00001C62 default case
.text:00001C60
.text:00001C62 DF E8 10 F0                   TBH.W           [PC,R0,LSL#1] ; switch jump
.text:00001C62
.text:00001C62                               ; ---------------------------------------------------------------------------
.text:00001C66 20 00                         jpt_1C62 DCW 0x20             ; jump table for switch statement
.text:00001C68 B0 00                         DCW 0xB0
.text:00001C6A B3 00                         DCW 0xB3
.text:00001C6C B6 00                         DCW 0xB6
.text:00001C6E B9 00                         DCW 0xB9
.text:00001C70 BC 00                         DCW 0xBC
.text:00001C72 BF 00                         DCW 0xBF
.text:00001C74 C2 00                         DCW 0xC2
.text:00001C76 C5 00                         DCW 0xC5
.text:00001C78 C8 00                         DCW 0xC8
.text:00001C7A CB 00                         DCW 0xCB
.text:00001C7C CE 00                         DCW 0xCE
.text:00001C7E D1 00                         DCW 0xD1
.text:00001C80 D4 00                         DCW 0xD4
.text:00001C82 D7 00                         DCW 0xD7
.text:00001C84 DA 00                         DCW 0xDA
.text:00001C86 DD 00                         DCW 0xDD
.text:00001C88 E0 00                         DCW 0xE0
.text:00001C8A E3 00                         DCW 0xE3
.text:00001C8C E6 00                         DCW 0xE6
.text:00001C8E E9 00                         DCW 0xE9
.text:00001C90 EC 00                         DCW 0xEC
.text:00001C92 EF 00                         DCW 0xEF
.text:00001C94 F2 00                         DCW 0xF2
.text:00001C96 F5 00                         DCW 0xF5
.text:00001C98 F8 00                         DCW 0xF8
.text:00001C9A FB 00                         DCW 0xFB
.text:00001C9C FE 00                         DCW 0xFE
.text:00001C9E 01 01                         DCW 0x101
.text:00001CA0 04 01                         DCW 0x104
.text:00001CA2 07 01                         DCW 0x107
.text:00001CA4 0A 01                         DCW 0x10A
.text:00001CA6                               ; ---------------------------------------------------------------------------
.text:00001CA6
.text:00001CA6                               loc_1CA6                      ; CODE XREF: .text:00001C62↑j
.text:00001CA6 96 48                         LDR             R0, =(aD0 - 0x1CAC) ; jumptable 00001C62 case 256
.text:00001CA8 78 44                         ADD             R0, PC        ; "d0"
.text:00001CAA 70 47                         BX              LR
.text:00001CAA
.text:00001CAC                               ; ---------------------------------------------------------------------------
.text:00001CAC
.text:00001CAC                               def_1C62                      ; CODE XREF: .text:00001B8A↑j
.text:00001CAC                                                             ; .text:00001C60↑j
.text:00001CAC C4 48                         LDR             R0, =(aUnknownRegiste - 0x1CB2) ; jumptable 00001B8A cases 18-65
.text:00001CAC                                                             ; jumptable 00001C62 default case
.text:00001CAE 78 44                         ADD             R0, PC        ; "unknown register"
.text:00001CAE
.text:00001CB0
.text:00001CB0                               locret_1CB0                   ; CODE XREF: .text:00001B8A↑j
.text:00001CB0 70 47                         BX              LR            ; jumptable 00001B8A cases 1,17
.text:00001CB0
.text:00001CB2                               ; ---------------------------------------------------------------------------
.text:00001CB2
.text:00001CB2                               loc_1CB2                      ; CODE XREF: .text:00001B8A↑j
.text:00001CB2 C0 48                         LDR             R0, =(aR0 - 0x1CB8) ; jumptable 00001B8A case 2
.text:00001CB4 78 44                         ADD             R0, PC        ; "r0"
.text:00001CB6 70 47                         BX              LR
.text:00001CB6
.text:00001CB8                               ; ---------------------------------------------------------------------------
.text:00001CB8
.text:00001CB8                               loc_1CB8                      ; CODE XREF: .text:00001B8A↑j
.text:00001CB8 BD 48                         LDR             R0, =(aR1 - 0x1CBE) ; jumptable 00001B8A case 3
.text:00001CBA 78 44                         ADD             R0, PC        ; "r1"
.text:00001CBC 70 47                         BX              LR
.text:00001CBC
.text:00001CBE                               ; ---------------------------------------------------------------------------
.text:00001CBE
.text:00001CBE                               loc_1CBE                      ; CODE XREF: .text:00001B8A↑j
.text:00001CBE BB 48                         LDR             R0, =(aR2 - 0x1CC4) ; jumptable 00001B8A case 4
.text:00001CC0 78 44                         ADD             R0, PC        ; "r2"
.text:00001CC2 70 47                         BX              LR
.text:00001CC2
.text:00001CC4                               ; ---------------------------------------------------------------------------
.text:00001CC4
.text:00001CC4                               loc_1CC4                      ; CODE XREF: .text:00001B8A↑j
.text:00001CC4 B8 48                         LDR             R0, =(aR3 - 0x1CCA) ; jumptable 00001B8A case 5
.text:00001CC6 78 44                         ADD             R0, PC        ; "r3"
.text:00001CC8 70 47                         BX              LR
.text:00001CC8
.text:00001CCA                               ; ---------------------------------------------------------------------------
.text:00001CCA
.text:00001CCA                               loc_1CCA                      ; CODE XREF: .text:00001B8A↑j
.text:00001CCA B6 48                         LDR             R0, =(aR4 - 0x1CD0) ; jumptable 00001B8A case 6
.text:00001CCC 78 44                         ADD             R0, PC        ; "r4"
.text:00001CCE 70 47                         BX              LR
.text:00001CCE
.text:00001CD0                               ; ---------------------------------------------------------------------------
.text:00001CD0
.text:00001CD0                               loc_1CD0                      ; CODE XREF: .text:00001B8A↑j
.text:00001CD0 B3 48                         LDR             R0, =(aR5 - 0x1CD6) ; jumptable 00001B8A case 7
.text:00001CD2 78 44                         ADD             R0, PC        ; "r5"
.text:00001CD4 70 47                         BX              LR
.text:00001CD4
.text:00001CD6                               ; ---------------------------------------------------------------------------
.text:00001CD6
.text:00001CD6                               loc_1CD6                      ; CODE XREF: .text:00001B8A↑j
.text:00001CD6 B1 48                         LDR             R0, =(aR6 - 0x1CDC) ; jumptable 00001B8A case 8
.text:00001CD8 78 44                         ADD             R0, PC        ; "r6"
.text:00001CDA 70 47                         BX              LR
.text:00001CDA
.text:00001CDC                               ; ---------------------------------------------------------------------------
.text:00001CDC
.text:00001CDC                               loc_1CDC                      ; CODE XREF: .text:00001B8A↑j
.text:00001CDC AE 48                         LDR             R0, =(aR7 - 0x1CE2) ; jumptable 00001B8A case 9
.text:00001CDE 78 44                         ADD             R0, PC        ; "r7"
.text:00001CE0 70 47                         BX              LR
.text:00001CE0
.text:00001CE2                               ; ---------------------------------------------------------------------------
.text:00001CE2
.text:00001CE2                               loc_1CE2                      ; CODE XREF: .text:00001B8A↑j
.text:00001CE2 AC 48                         LDR             R0, =(aR8 - 0x1CE8) ; jumptable 00001B8A case 10
.text:00001CE4 78 44                         ADD             R0, PC        ; "r8"
.text:00001CE6 70 47                         BX              LR
.text:00001CE6
.text:00001CE8                               ; ---------------------------------------------------------------------------
.text:00001CE8
.text:00001CE8                               loc_1CE8                      ; CODE XREF: .text:00001B8A↑j
.text:00001CE8 A9 48                         LDR             R0, =(aR9 - 0x1CEE) ; jumptable 00001B8A case 11
.text:00001CEA 78 44                         ADD             R0, PC        ; "r9"
.text:00001CEC 70 47                         BX              LR
.text:00001CEC
.text:00001CEE                               ; ---------------------------------------------------------------------------
.text:00001CEE
.text:00001CEE                               loc_1CEE                      ; CODE XREF: .text:00001B8A↑j
.text:00001CEE A7 48                         LDR             R0, =(aR10 - 0x1CF4) ; jumptable 00001B8A case 12
.text:00001CF0 78 44                         ADD             R0, PC        ; "r10"
.text:00001CF2 70 47                         BX              LR
.text:00001CF2
.text:00001CF4                               ; ---------------------------------------------------------------------------
.text:00001CF4
.text:00001CF4                               loc_1CF4                      ; CODE XREF: .text:00001B8A↑j
.text:00001CF4 A4 48                         LDR             R0, =(aR11 - 0x1CFA) ; jumptable 00001B8A case 13
.text:00001CF6 78 44                         ADD             R0, PC        ; "r11"
.text:00001CF8 70 47                         BX              LR
.text:00001CF8
.text:00001CFA                               ; ---------------------------------------------------------------------------
.text:00001CFA
.text:00001CFA                               loc_1CFA                      ; CODE XREF: .text:00001B8A↑j
.text:00001CFA A2 48                         LDR             R0, =(aR12 - 0x1D00) ; jumptable 00001B8A case 14
.text:00001CFC 78 44                         ADD             R0, PC        ; "r12"
.text:00001CFE 70 47                         BX              LR
.text:00001CFE
.text:00001D00                               ; ---------------------------------------------------------------------------
.text:00001D00
.text:00001D00                               loc_1D00                      ; CODE XREF: .text:00001B8A↑j
.text:00001D00 AE 48                         LDR             R0, =(aLr - 0x1D06) ; jumptable 00001B8A case 16
.text:00001D02 78 44                         ADD             R0, PC        ; "lr"
.text:00001D04 70 47                         BX              LR
.text:00001D04
.text:00001D06                               ; ---------------------------------------------------------------------------
.text:00001D06
.text:00001D06                               loc_1D06                      ; CODE XREF: .text:00001B8A↑j
.text:00001D06 9E 48                         LDR             R0, =(aS0 - 0x1D0C) ; jumptable 00001B8A case 66
.text:00001D08 78 44                         ADD             R0, PC        ; "s0"
.text:00001D0A 70 47                         BX              LR
.text:00001D0A
.text:00001D0C                               ; ---------------------------------------------------------------------------
.text:00001D0C
.text:00001D0C                               loc_1D0C                      ; CODE XREF: .text:00001B8A↑j
.text:00001D0C 9B 48                         LDR             R0, =(aS1 - 0x1D12) ; jumptable 00001B8A case 67
.text:00001D0E 78 44                         ADD             R0, PC        ; "s1"
.text:00001D10 70 47                         BX              LR
.text:00001D10
.text:00001D12                               ; ---------------------------------------------------------------------------
.text:00001D12
.text:00001D12                               loc_1D12                      ; CODE XREF: .text:00001B8A↑j
.text:00001D12 99 48                         LDR             R0, =(aS2 - 0x1D18) ; jumptable 00001B8A case 68
.text:00001D14 78 44                         ADD             R0, PC        ; "s2"
.text:00001D16 70 47                         BX              LR
.text:00001D16
.text:00001D18                               ; ---------------------------------------------------------------------------
.text:00001D18
.text:00001D18                               loc_1D18                      ; CODE XREF: .text:00001B8A↑j
.text:00001D18 96 48                         LDR             R0, =(aS3 - 0x1D1E) ; jumptable 00001B8A case 69
.text:00001D1A 78 44                         ADD             R0, PC        ; "s3"
.text:00001D1C 70 47                         BX              LR
.text:00001D1C
.text:00001D1E                               ; ---------------------------------------------------------------------------
.text:00001D1E
.text:00001D1E                               loc_1D1E                      ; CODE XREF: .text:00001B8A↑j
.text:00001D1E 94 48                         LDR             R0, =(aS4 - 0x1D24) ; jumptable 00001B8A case 70
.text:00001D20 78 44                         ADD             R0, PC        ; "s4"
.text:00001D22 70 47                         BX              LR
.text:00001D22
.text:00001D24                               ; ---------------------------------------------------------------------------
.text:00001D24
.text:00001D24                               loc_1D24                      ; CODE XREF: .text:00001B8A↑j
.text:00001D24 91 48                         LDR             R0, =(aS5 - 0x1D2A) ; jumptable 00001B8A case 71
.text:00001D26 78 44                         ADD             R0, PC        ; "s5"
.text:00001D28 70 47                         BX              LR
.text:00001D28
.text:00001D2A                               ; ---------------------------------------------------------------------------
.text:00001D2A
.text:00001D2A                               loc_1D2A                      ; CODE XREF: .text:00001B8A↑j
.text:00001D2A 8F 48                         LDR             R0, =(aS6 - 0x1D30) ; jumptable 00001B8A case 72
.text:00001D2C 78 44                         ADD             R0, PC        ; "s6"
.text:00001D2E 70 47                         BX              LR
.text:00001D2E
.text:00001D30                               ; ---------------------------------------------------------------------------
.text:00001D30
.text:00001D30                               loc_1D30                      ; CODE XREF: .text:00001B8A↑j
.text:00001D30 8C 48                         LDR             R0, =(aS7 - 0x1D36) ; jumptable 00001B8A case 73
.text:00001D32 78 44                         ADD             R0, PC        ; "s7"
.text:00001D34 70 47                         BX              LR
.text:00001D34
.text:00001D36                               ; ---------------------------------------------------------------------------
.text:00001D36
.text:00001D36                               loc_1D36                      ; CODE XREF: .text:00001B8A↑j
.text:00001D36 8A 48                         LDR             R0, =(aS8 - 0x1D3C) ; jumptable 00001B8A case 74
.text:00001D38 78 44                         ADD             R0, PC        ; "s8"
.text:00001D3A 70 47                         BX              LR
.text:00001D3A
.text:00001D3C                               ; ---------------------------------------------------------------------------
.text:00001D3C
.text:00001D3C                               loc_1D3C                      ; CODE XREF: .text:00001B8A↑j
.text:00001D3C 87 48                         LDR             R0, =(aS9 - 0x1D42) ; jumptable 00001B8A case 75
.text:00001D3E 78 44                         ADD             R0, PC        ; "s9"
.text:00001D40 70 47                         BX              LR
.text:00001D40
.text:00001D42                               ; ---------------------------------------------------------------------------
.text:00001D42
.text:00001D42                               loc_1D42                      ; CODE XREF: .text:00001B8A↑j
.text:00001D42 85 48                         LDR             R0, =(aS10 - 0x1D48) ; jumptable 00001B8A case 76
.text:00001D44 78 44                         ADD             R0, PC        ; "s10"
.text:00001D46 70 47                         BX              LR
.text:00001D46
.text:00001D48                               ; ---------------------------------------------------------------------------
.text:00001D48
.text:00001D48                               loc_1D48                      ; CODE XREF: .text:00001B8A↑j
.text:00001D48 82 48                         LDR             R0, =(aS11 - 0x1D4E) ; jumptable 00001B8A case 77
.text:00001D4A 78 44                         ADD             R0, PC        ; "s11"
.text:00001D4C 70 47                         BX              LR
.text:00001D4C
.text:00001D4E                               ; ---------------------------------------------------------------------------
.text:00001D4E
.text:00001D4E                               loc_1D4E                      ; CODE XREF: .text:00001B8A↑j
.text:00001D4E 80 48                         LDR             R0, =(aS12 - 0x1D54) ; jumptable 00001B8A case 78
.text:00001D50 78 44                         ADD             R0, PC        ; "s12"
.text:00001D52 70 47                         BX              LR
.text:00001D52
.text:00001D54                               ; ---------------------------------------------------------------------------
.text:00001D54
.text:00001D54                               loc_1D54                      ; CODE XREF: .text:00001B8A↑j
.text:00001D54 7D 48                         LDR             R0, =(aS13 - 0x1D5A) ; jumptable 00001B8A case 79
.text:00001D56 78 44                         ADD             R0, PC        ; "s13"
.text:00001D58 70 47                         BX              LR
.text:00001D58
.text:00001D5A                               ; ---------------------------------------------------------------------------
.text:00001D5A
.text:00001D5A                               loc_1D5A                      ; CODE XREF: .text:00001B8A↑j
.text:00001D5A 7B 48                         LDR             R0, =(aS14 - 0x1D60) ; jumptable 00001B8A case 80
.text:00001D5C 78 44                         ADD             R0, PC        ; "s14"
.text:00001D5E 70 47                         BX              LR
.text:00001D5E
.text:00001D60                               ; ---------------------------------------------------------------------------
.text:00001D60
.text:00001D60                               loc_1D60                      ; CODE XREF: .text:00001B8A↑j
.text:00001D60 78 48                         LDR             R0, =(aS15 - 0x1D66) ; jumptable 00001B8A case 81
.text:00001D62 78 44                         ADD             R0, PC        ; "s15"
.text:00001D64 70 47                         BX              LR
.text:00001D64
.text:00001D66                               ; ---------------------------------------------------------------------------
.text:00001D66
.text:00001D66                               loc_1D66                      ; CODE XREF: .text:00001B8A↑j
.text:00001D66 76 48                         LDR             R0, =(aS16 - 0x1D6C) ; jumptable 00001B8A case 82
.text:00001D68 78 44                         ADD             R0, PC        ; "s16"
.text:00001D6A 70 47                         BX              LR
.text:00001D6A
.text:00001D6C                               ; ---------------------------------------------------------------------------
.text:00001D6C
.text:00001D6C                               loc_1D6C                      ; CODE XREF: .text:00001B8A↑j
.text:00001D6C 73 48                         LDR             R0, =(aS17 - 0x1D72) ; jumptable 00001B8A case 83
.text:00001D6E 78 44                         ADD             R0, PC        ; "s17"
.text:00001D70 70 47                         BX              LR
.text:00001D70
.text:00001D72                               ; ---------------------------------------------------------------------------
.text:00001D72
.text:00001D72                               loc_1D72                      ; CODE XREF: .text:00001B8A↑j
.text:00001D72 71 48                         LDR             R0, =(aS18 - 0x1D78) ; jumptable 00001B8A case 84
.text:00001D74 78 44                         ADD             R0, PC        ; "s18"
.text:00001D76 70 47                         BX              LR
.text:00001D76
.text:00001D78                               ; ---------------------------------------------------------------------------
.text:00001D78
.text:00001D78                               loc_1D78                      ; CODE XREF: .text:00001B8A↑j
.text:00001D78 6E 48                         LDR             R0, =(aS19 - 0x1D7E) ; jumptable 00001B8A case 85
.text:00001D7A 78 44                         ADD             R0, PC        ; "s19"
.text:00001D7C 70 47                         BX              LR
.text:00001D7C
.text:00001D7E                               ; ---------------------------------------------------------------------------
.text:00001D7E
.text:00001D7E                               loc_1D7E                      ; CODE XREF: .text:00001B8A↑j
.text:00001D7E 6C 48                         LDR             R0, =(aS20 - 0x1D84) ; jumptable 00001B8A case 86
.text:00001D80 78 44                         ADD             R0, PC        ; "s20"
.text:00001D82 70 47                         BX              LR
.text:00001D82
.text:00001D84                               ; ---------------------------------------------------------------------------
.text:00001D84
.text:00001D84                               loc_1D84                      ; CODE XREF: .text:00001B8A↑j
.text:00001D84 69 48                         LDR             R0, =(aS21 - 0x1D8A) ; jumptable 00001B8A case 87
.text:00001D86 78 44                         ADD             R0, PC        ; "s21"
.text:00001D88 70 47                         BX              LR
.text:00001D88
.text:00001D8A                               ; ---------------------------------------------------------------------------
.text:00001D8A
.text:00001D8A                               loc_1D8A                      ; CODE XREF: .text:00001B8A↑j
.text:00001D8A 67 48                         LDR             R0, =(aS22 - 0x1D90) ; jumptable 00001B8A case 88
.text:00001D8C 78 44                         ADD             R0, PC        ; "s22"
.text:00001D8E 70 47                         BX              LR
.text:00001D8E
.text:00001D90                               ; ---------------------------------------------------------------------------
.text:00001D90
.text:00001D90                               loc_1D90                      ; CODE XREF: .text:00001B8A↑j
.text:00001D90 64 48                         LDR             R0, =(aS23 - 0x1D96) ; jumptable 00001B8A case 89
.text:00001D92 78 44                         ADD             R0, PC        ; "s23"
.text:00001D94 70 47                         BX              LR
.text:00001D94
.text:00001D96                               ; ---------------------------------------------------------------------------
.text:00001D96
.text:00001D96                               loc_1D96                      ; CODE XREF: .text:00001B8A↑j
.text:00001D96 62 48                         LDR             R0, =(aS24 - 0x1D9C) ; jumptable 00001B8A case 90
.text:00001D98 78 44                         ADD             R0, PC        ; "s24"
.text:00001D9A 70 47                         BX              LR
.text:00001D9A
.text:00001D9C                               ; ---------------------------------------------------------------------------
.text:00001D9C
.text:00001D9C                               loc_1D9C                      ; CODE XREF: .text:00001B8A↑j
.text:00001D9C 5F 48                         LDR             R0, =(aS25 - 0x1DA2) ; jumptable 00001B8A case 91
.text:00001D9E 78 44                         ADD             R0, PC        ; "s25"
.text:00001DA0 70 47                         BX              LR
.text:00001DA0
.text:00001DA2                               ; ---------------------------------------------------------------------------
.text:00001DA2
.text:00001DA2                               loc_1DA2                      ; CODE XREF: .text:00001B8A↑j
.text:00001DA2 5D 48                         LDR             R0, =(aS26 - 0x1DA8) ; jumptable 00001B8A case 92
.text:00001DA4 78 44                         ADD             R0, PC        ; "s26"
.text:00001DA6 70 47                         BX              LR
.text:00001DA6
.text:00001DA8                               ; ---------------------------------------------------------------------------
.text:00001DA8
.text:00001DA8                               loc_1DA8                      ; CODE XREF: .text:00001B8A↑j
.text:00001DA8 5A 48                         LDR             R0, =(aS27 - 0x1DAE) ; jumptable 00001B8A case 93
.text:00001DAA 78 44                         ADD             R0, PC        ; "s27"
.text:00001DAC 70 47                         BX              LR
.text:00001DAC
.text:00001DAE                               ; ---------------------------------------------------------------------------
.text:00001DAE
.text:00001DAE                               loc_1DAE                      ; CODE XREF: .text:00001B8A↑j
.text:00001DAE 58 48                         LDR             R0, =(aS28 - 0x1DB4) ; jumptable 00001B8A case 94
.text:00001DB0 78 44                         ADD             R0, PC        ; "s28"
.text:00001DB2 70 47                         BX              LR
.text:00001DB2
.text:00001DB4                               ; ---------------------------------------------------------------------------
.text:00001DB4
.text:00001DB4                               loc_1DB4                      ; CODE XREF: .text:00001B8A↑j
.text:00001DB4 55 48                         LDR             R0, =(aS29 - 0x1DBA) ; jumptable 00001B8A case 95
.text:00001DB6 78 44                         ADD             R0, PC        ; "s29"
.text:00001DB8 70 47                         BX              LR
.text:00001DB8
.text:00001DBA                               ; ---------------------------------------------------------------------------
.text:00001DBA
.text:00001DBA                               loc_1DBA                      ; CODE XREF: .text:00001B8A↑j
.text:00001DBA 53 48                         LDR             R0, =(aS30 - 0x1DC0) ; jumptable 00001B8A case 96
.text:00001DBC 78 44                         ADD             R0, PC        ; "s30"
.text:00001DBE 70 47                         BX              LR
.text:00001DBE
.text:00001DC0                               ; ---------------------------------------------------------------------------
.text:00001DC0
.text:00001DC0                               loc_1DC0                      ; CODE XREF: .text:00001B8A↑j
.text:00001DC0 50 48                         LDR             R0, =(aS31 - 0x1DC6) ; jumptable 00001B8A case 97
.text:00001DC2 78 44                         ADD             R0, PC        ; "s31"
.text:00001DC4 70 47                         BX              LR
.text:00001DC4
.text:00001DC6                               ; ---------------------------------------------------------------------------
.text:00001DC6
.text:00001DC6                               loc_1DC6                      ; CODE XREF: .text:00001C62↑j
.text:00001DC6 4D 48                         LDR             R0, =(aD1 - 0x1DCC) ; jumptable 00001C62 case 257
.text:00001DC8 78 44                         ADD             R0, PC        ; "d1"
.text:00001DCA 70 47                         BX              LR
.text:00001DCA
.text:00001DCC                               ; ---------------------------------------------------------------------------
.text:00001DCC
.text:00001DCC                               loc_1DCC                      ; CODE XREF: .text:00001C62↑j
.text:00001DCC 4A 48                         LDR             R0, =(aD2 - 0x1DD2) ; jumptable 00001C62 case 258
.text:00001DCE 78 44                         ADD             R0, PC        ; "d2"
.text:00001DD0 70 47                         BX              LR
.text:00001DD0
.text:00001DD2                               ; ---------------------------------------------------------------------------
.text:00001DD2
.text:00001DD2                               loc_1DD2                      ; CODE XREF: .text:00001C62↑j
.text:00001DD2 48 48                         LDR             R0, =(aD3 - 0x1DD8) ; jumptable 00001C62 case 259
.text:00001DD4 78 44                         ADD             R0, PC        ; "d3"
.text:00001DD6 70 47                         BX              LR
.text:00001DD6
.text:00001DD8                               ; ---------------------------------------------------------------------------
.text:00001DD8
.text:00001DD8                               loc_1DD8                      ; CODE XREF: .text:00001C62↑j
.text:00001DD8 45 48                         LDR             R0, =(aD4 - 0x1DDE) ; jumptable 00001C62 case 260
.text:00001DDA 78 44                         ADD             R0, PC        ; "d4"
.text:00001DDC 70 47                         BX              LR
.text:00001DDC
.text:00001DDE                               ; ---------------------------------------------------------------------------
.text:00001DDE
.text:00001DDE                               loc_1DDE                      ; CODE XREF: .text:00001C62↑j
.text:00001DDE 43 48                         LDR             R0, =(aD5 - 0x1DE4) ; jumptable 00001C62 case 261
.text:00001DE0 78 44                         ADD             R0, PC        ; "d5"
.text:00001DE2 70 47                         BX              LR
.text:00001DE2
.text:00001DE4                               ; ---------------------------------------------------------------------------
.text:00001DE4
.text:00001DE4                               loc_1DE4                      ; CODE XREF: .text:00001C62↑j
.text:00001DE4 40 48                         LDR             R0, =(aD6 - 0x1DEA) ; jumptable 00001C62 case 262
.text:00001DE6 78 44                         ADD             R0, PC        ; "d6"
.text:00001DE8 70 47                         BX              LR
.text:00001DE8
.text:00001DEA                               ; ---------------------------------------------------------------------------
.text:00001DEA
.text:00001DEA                               loc_1DEA                      ; CODE XREF: .text:00001C62↑j
.text:00001DEA 3E 48                         LDR             R0, =(aD7 - 0x1DF0) ; jumptable 00001C62 case 263
.text:00001DEC 78 44                         ADD             R0, PC        ; "d7"
.text:00001DEE 70 47                         BX              LR
.text:00001DEE
.text:00001DF0                               ; ---------------------------------------------------------------------------
.text:00001DF0
.text:00001DF0                               loc_1DF0                      ; CODE XREF: .text:00001C62↑j
.text:00001DF0 3B 48                         LDR             R0, =(aD8 - 0x1DF6) ; jumptable 00001C62 case 264
.text:00001DF2 78 44                         ADD             R0, PC        ; "d8"
.text:00001DF4 70 47                         BX              LR
.text:00001DF4
.text:00001DF6                               ; ---------------------------------------------------------------------------
.text:00001DF6
.text:00001DF6                               loc_1DF6                      ; CODE XREF: .text:00001C62↑j
.text:00001DF6 39 48                         LDR             R0, =(aD9 - 0x1DFC) ; jumptable 00001C62 case 265
.text:00001DF8 78 44                         ADD             R0, PC        ; "d9"
.text:00001DFA 70 47                         BX              LR
.text:00001DFA
.text:00001DFC                               ; ---------------------------------------------------------------------------
.text:00001DFC
.text:00001DFC                               loc_1DFC                      ; CODE XREF: .text:00001C62↑j
.text:00001DFC 36 48                         LDR             R0, =(aD10 - 0x1E02) ; jumptable 00001C62 case 266
.text:00001DFE 78 44                         ADD             R0, PC        ; "d10"
.text:00001E00 70 47                         BX              LR
.text:00001E00
.text:00001E02                               ; ---------------------------------------------------------------------------
.text:00001E02
.text:00001E02                               loc_1E02                      ; CODE XREF: .text:00001C62↑j
.text:00001E02 34 48                         LDR             R0, =(aD11 - 0x1E08) ; jumptable 00001C62 case 267
.text:00001E04 78 44                         ADD             R0, PC        ; "d11"
.text:00001E06 70 47                         BX              LR
.text:00001E06
.text:00001E08                               ; ---------------------------------------------------------------------------
.text:00001E08
.text:00001E08                               loc_1E08                      ; CODE XREF: .text:00001C62↑j
.text:00001E08 31 48                         LDR             R0, =(aD12 - 0x1E0E) ; jumptable 00001C62 case 268
.text:00001E0A 78 44                         ADD             R0, PC        ; "d12"
.text:00001E0C 70 47                         BX              LR
.text:00001E0C
.text:00001E0E                               ; ---------------------------------------------------------------------------
.text:00001E0E
.text:00001E0E                               loc_1E0E                      ; CODE XREF: .text:00001C62↑j
.text:00001E0E 2F 48                         LDR             R0, =(aD13 - 0x1E14) ; jumptable 00001C62 case 269
.text:00001E10 78 44                         ADD             R0, PC        ; "d13"
.text:00001E12 70 47                         BX              LR
.text:00001E12
.text:00001E14                               ; ---------------------------------------------------------------------------
.text:00001E14
.text:00001E14                               loc_1E14                      ; CODE XREF: .text:00001C62↑j
.text:00001E14 2C 48                         LDR             R0, =(aD14 - 0x1E1A) ; jumptable 00001C62 case 270
.text:00001E16 78 44                         ADD             R0, PC        ; "d14"
.text:00001E18 70 47                         BX              LR
.text:00001E18
.text:00001E1A                               ; ---------------------------------------------------------------------------
.text:00001E1A
.text:00001E1A                               loc_1E1A                      ; CODE XREF: .text:00001C62↑j
.text:00001E1A 2A 48                         LDR             R0, =(aD15 - 0x1E20) ; jumptable 00001C62 case 271
.text:00001E1C 78 44                         ADD             R0, PC        ; "d15"
.text:00001E1E 70 47                         BX              LR
.text:00001E1E
.text:00001E20                               ; ---------------------------------------------------------------------------
.text:00001E20
.text:00001E20                               loc_1E20                      ; CODE XREF: .text:00001C62↑j
.text:00001E20 27 48                         LDR             R0, =(aD16 - 0x1E26) ; jumptable 00001C62 case 272
.text:00001E22 78 44                         ADD             R0, PC        ; "d16"
.text:00001E24 70 47                         BX              LR
.text:00001E24
.text:00001E26                               ; ---------------------------------------------------------------------------
.text:00001E26
.text:00001E26                               loc_1E26                      ; CODE XREF: .text:00001C62↑j
.text:00001E26 25 48                         LDR             R0, =(aD17 - 0x1E2C) ; jumptable 00001C62 case 273
.text:00001E28 78 44                         ADD             R0, PC        ; "d17"
.text:00001E2A 70 47                         BX              LR
.text:00001E2A
.text:00001E2C                               ; ---------------------------------------------------------------------------
.text:00001E2C
.text:00001E2C                               loc_1E2C                      ; CODE XREF: .text:00001C62↑j
.text:00001E2C 22 48                         LDR             R0, =(aD18 - 0x1E32) ; jumptable 00001C62 case 274
.text:00001E2E 78 44                         ADD             R0, PC        ; "d18"
.text:00001E30 70 47                         BX              LR
.text:00001E30
.text:00001E32                               ; ---------------------------------------------------------------------------
.text:00001E32
.text:00001E32                               loc_1E32                      ; CODE XREF: .text:00001C62↑j
.text:00001E32 20 48                         LDR             R0, =(aD19 - 0x1E38) ; jumptable 00001C62 case 275
.text:00001E34 78 44                         ADD             R0, PC        ; "d19"
.text:00001E36 70 47                         BX              LR
.text:00001E36
.text:00001E38                               ; ---------------------------------------------------------------------------
.text:00001E38
.text:00001E38                               loc_1E38                      ; CODE XREF: .text:00001C62↑j
.text:00001E38 1D 48                         LDR             R0, =(aD20 - 0x1E3E) ; jumptable 00001C62 case 276
.text:00001E3A 78 44                         ADD             R0, PC        ; "d20"
.text:00001E3C 70 47                         BX              LR
.text:00001E3C
.text:00001E3E                               ; ---------------------------------------------------------------------------
.text:00001E3E
.text:00001E3E                               loc_1E3E                      ; CODE XREF: .text:00001C62↑j
.text:00001E3E 1B 48                         LDR             R0, =(aD21 - 0x1E44) ; jumptable 00001C62 case 277
.text:00001E40 78 44                         ADD             R0, PC        ; "d21"
.text:00001E42 70 47                         BX              LR
.text:00001E42
.text:00001E44                               ; ---------------------------------------------------------------------------
.text:00001E44
.text:00001E44                               loc_1E44                      ; CODE XREF: .text:00001C62↑j
.text:00001E44 18 48                         LDR             R0, =(aD22 - 0x1E4A) ; jumptable 00001C62 case 278
.text:00001E46 78 44                         ADD             R0, PC        ; "d22"
.text:00001E48 70 47                         BX              LR
.text:00001E48
.text:00001E4A                               ; ---------------------------------------------------------------------------
.text:00001E4A
.text:00001E4A                               loc_1E4A                      ; CODE XREF: .text:00001C62↑j
.text:00001E4A 16 48                         LDR             R0, =(aD23 - 0x1E50) ; jumptable 00001C62 case 279
.text:00001E4C 78 44                         ADD             R0, PC        ; "d23"
.text:00001E4E 70 47                         BX              LR
.text:00001E4E
.text:00001E50                               ; ---------------------------------------------------------------------------
.text:00001E50
.text:00001E50                               loc_1E50                      ; CODE XREF: .text:00001C62↑j
.text:00001E50 13 48                         LDR             R0, =(aD24 - 0x1E56) ; jumptable 00001C62 case 280
.text:00001E52 78 44                         ADD             R0, PC        ; "d24"
.text:00001E54 70 47                         BX              LR
.text:00001E54
.text:00001E56                               ; ---------------------------------------------------------------------------
.text:00001E56
.text:00001E56                               loc_1E56                      ; CODE XREF: .text:00001C62↑j
.text:00001E56 11 48                         LDR             R0, =(aD25 - 0x1E5C) ; jumptable 00001C62 case 281
.text:00001E58 78 44                         ADD             R0, PC        ; "d25"
.text:00001E5A 70 47                         BX              LR
.text:00001E5A
.text:00001E5C                               ; ---------------------------------------------------------------------------
.text:00001E5C
.text:00001E5C                               loc_1E5C                      ; CODE XREF: .text:00001C62↑j
.text:00001E5C 0E 48                         LDR             R0, =(aD26 - 0x1E62) ; jumptable 00001C62 case 282
.text:00001E5E 78 44                         ADD             R0, PC        ; "d26"
.text:00001E60 70 47                         BX              LR
.text:00001E60
.text:00001E62                               ; ---------------------------------------------------------------------------
.text:00001E62
.text:00001E62                               loc_1E62                      ; CODE XREF: .text:00001C62↑j
.text:00001E62 0C 48                         LDR             R0, =(aD27 - 0x1E68) ; jumptable 00001C62 case 283
.text:00001E64 78 44                         ADD             R0, PC        ; "d27"
.text:00001E66 70 47                         BX              LR
.text:00001E66
.text:00001E68                               ; ---------------------------------------------------------------------------
.text:00001E68
.text:00001E68                               loc_1E68                      ; CODE XREF: .text:00001C62↑j
.text:00001E68 09 48                         LDR             R0, =(aD28 - 0x1E6E) ; jumptable 00001C62 case 284
.text:00001E6A 78 44                         ADD             R0, PC        ; "d28"
.text:00001E6C 70 47                         BX              LR
.text:00001E6C
.text:00001E6E                               ; ---------------------------------------------------------------------------
.text:00001E6E
.text:00001E6E                               loc_1E6E                      ; CODE XREF: .text:00001C62↑j
.text:00001E6E 07 48                         LDR             R0, =(aD29 - 0x1E74) ; jumptable 00001C62 case 285
.text:00001E70 78 44                         ADD             R0, PC        ; "d29"
.text:00001E72 70 47                         BX              LR
.text:00001E72
.text:00001E74                               ; ---------------------------------------------------------------------------
.text:00001E74
.text:00001E74                               loc_1E74                      ; CODE XREF: .text:00001C62↑j
.text:00001E74 04 48                         LDR             R0, =(aD30 - 0x1E7A) ; jumptable 00001C62 case 286
.text:00001E76 78 44                         ADD             R0, PC        ; "d30"
.text:00001E78 70 47                         BX              LR
.text:00001E78
.text:00001E7A                               ; ---------------------------------------------------------------------------
.text:00001E7A
.text:00001E7A                               loc_1E7A                      ; CODE XREF: .text:00001C62↑j
.text:00001E7A 02 48                         LDR             R0, =(aD31 - 0x1E80) ; jumptable 00001C62 case 287
.text:00001E7C 78 44                         ADD             R0, PC        ; "d31"
.text:00001E7E 70 47                         BX              LR
.text:00001E7E
.text:00001E7E                               ; ---------------------------------------------------------------------------
.text:00001E80 4E 0C 00 00                   off_1E80 DCD aPc - 0x1B8C     ; DATA XREF: .text:00001B84↑r
.text:00001E80                                                             ; "pc"
.text:00001E84 75 0A 00 00                   off_1E84 DCD aD31 - 0x1E80    ; DATA XREF: .text:loc_1E7A↑r
.text:00001E84                                                             ; "d31"
.text:00001E88 77 0A 00 00                   off_1E88 DCD aD30 - 0x1E7A    ; DATA XREF: .text:loc_1E74↑r
.text:00001E88                                                             ; "d30"
.text:00001E8C 79 0A 00 00                   off_1E8C DCD aD29 - 0x1E74    ; DATA XREF: .text:loc_1E6E↑r
.text:00001E8C                                                             ; "d29"
.text:00001E90 7B 0A 00 00                   off_1E90 DCD aD28 - 0x1E6E    ; DATA XREF: .text:loc_1E68↑r
.text:00001E90                                                             ; "d28"
.text:00001E94 7D 0A 00 00                   off_1E94 DCD aD27 - 0x1E68    ; DATA XREF: .text:loc_1E62↑r
.text:00001E94                                                             ; "d27"
.text:00001E98 7F 0A 00 00                   off_1E98 DCD aD26 - 0x1E62    ; DATA XREF: .text:loc_1E5C↑r
.text:00001E98                                                             ; "d26"
.text:00001E9C 81 0A 00 00                   off_1E9C DCD aD25 - 0x1E5C    ; DATA XREF: .text:loc_1E56↑r
.text:00001E9C                                                             ; "d25"
.text:00001EA0 83 0A 00 00                   off_1EA0 DCD aD24 - 0x1E56    ; DATA XREF: .text:loc_1E50↑r
.text:00001EA0                                                             ; "d24"
.text:00001EA4 85 0A 00 00                   off_1EA4 DCD aD23 - 0x1E50    ; DATA XREF: .text:loc_1E4A↑r
.text:00001EA4                                                             ; "d23"
.text:00001EA8 87 0A 00 00                   off_1EA8 DCD aD22 - 0x1E4A    ; DATA XREF: .text:loc_1E44↑r
.text:00001EA8                                                             ; "d22"
.text:00001EAC 89 0A 00 00                   off_1EAC DCD aD21 - 0x1E44    ; DATA XREF: .text:loc_1E3E↑r
.text:00001EAC                                                             ; "d21"
.text:00001EB0 8B 0A 00 00                   off_1EB0 DCD aD20 - 0x1E3E    ; DATA XREF: .text:loc_1E38↑r
.text:00001EB0                                                             ; "d20"
.text:00001EB4 8D 0A 00 00                   off_1EB4 DCD aD19 - 0x1E38    ; DATA XREF: .text:loc_1E32↑r
.text:00001EB4                                                             ; "d19"
.text:00001EB8 8F 0A 00 00                   off_1EB8 DCD aD18 - 0x1E32    ; DATA XREF: .text:loc_1E2C↑r
.text:00001EB8                                                             ; "d18"
.text:00001EBC 91 0A 00 00                   off_1EBC DCD aD17 - 0x1E2C    ; DATA XREF: .text:loc_1E26↑r
.text:00001EBC                                                             ; "d17"
.text:00001EC0 93 0A 00 00                   off_1EC0 DCD aD16 - 0x1E26    ; DATA XREF: .text:loc_1E20↑r
.text:00001EC0                                                             ; "d16"
.text:00001EC4 95 0A 00 00                   off_1EC4 DCD aD15 - 0x1E20    ; DATA XREF: .text:loc_1E1A↑r
.text:00001EC4                                                             ; "d15"
.text:00001EC8 97 0A 00 00                   off_1EC8 DCD aD14 - 0x1E1A    ; DATA XREF: .text:loc_1E14↑r
.text:00001EC8                                                             ; "d14"
.text:00001ECC 99 0A 00 00                   off_1ECC DCD aD13 - 0x1E14    ; DATA XREF: .text:loc_1E0E↑r
.text:00001ECC                                                             ; "d13"
.text:00001ED0 9B 0A 00 00                   off_1ED0 DCD aD12 - 0x1E0E    ; DATA XREF: .text:loc_1E08↑r
.text:00001ED0                                                             ; "d12"
.text:00001ED4 9D 0A 00 00                   off_1ED4 DCD aD11 - 0x1E08    ; DATA XREF: .text:loc_1E02↑r
.text:00001ED4                                                             ; "d11"
.text:00001ED8 9F 0A 00 00                   off_1ED8 DCD aD10 - 0x1E02    ; DATA XREF: .text:loc_1DFC↑r
.text:00001ED8                                                             ; "d10"
.text:00001EDC A2 0A 00 00                   off_1EDC DCD aD9 - 0x1DFC     ; DATA XREF: .text:loc_1DF6↑r
.text:00001EDC                                                             ; "d9"
.text:00001EE0 A5 0A 00 00                   off_1EE0 DCD aD8 - 0x1DF6     ; DATA XREF: .text:loc_1DF0↑r
.text:00001EE0                                                             ; "d8"
.text:00001EE4 A8 0A 00 00                   off_1EE4 DCD aD7 - 0x1DF0     ; DATA XREF: .text:loc_1DEA↑r
.text:00001EE4                                                             ; "d7"
.text:00001EE8 AB 0A 00 00                   off_1EE8 DCD aD6 - 0x1DEA     ; DATA XREF: .text:loc_1DE4↑r
.text:00001EE8                                                             ; "d6"
.text:00001EEC AE 0A 00 00                   off_1EEC DCD aD5 - 0x1DE4     ; DATA XREF: .text:loc_1DDE↑r
.text:00001EEC                                                             ; "d5"
.text:00001EF0 B1 0A 00 00                   off_1EF0 DCD aD4 - 0x1DDE     ; DATA XREF: .text:loc_1DD8↑r
.text:00001EF0                                                             ; "d4"
.text:00001EF4 B4 0A 00 00                   off_1EF4 DCD aD3 - 0x1DD8     ; DATA XREF: .text:loc_1DD2↑r
.text:00001EF4                                                             ; "d3"
.text:00001EF8 B7 0A 00 00                   off_1EF8 DCD aD2 - 0x1DD2     ; DATA XREF: .text:loc_1DCC↑r
.text:00001EF8                                                             ; "d2"
.text:00001EFC BA 0A 00 00                   off_1EFC DCD aD1 - 0x1DCC     ; DATA XREF: .text:loc_1DC6↑r
.text:00001EFC                                                             ; "d1"
.text:00001F00 D7 0B 00 00                   off_1F00 DCD aD0 - 0x1CAC     ; DATA XREF: .text:loc_1CA6↑r
.text:00001F00                                                             ; "d0"
.text:00001F04 B9 0A 00 00                   off_1F04 DCD aS31 - 0x1DC6    ; DATA XREF: .text:loc_1DC0↑r
.text:00001F04                                                             ; "s31"
.text:00001F08 BB 0A 00 00                   off_1F08 DCD aS30 - 0x1DC0    ; DATA XREF: .text:loc_1DBA↑r
.text:00001F08                                                             ; "s30"
.text:00001F0C BD 0A 00 00                   off_1F0C DCD aS29 - 0x1DBA    ; DATA XREF: .text:loc_1DB4↑r
.text:00001F0C                                                             ; "s29"
.text:00001F10 BF 0A 00 00                   off_1F10 DCD aS28 - 0x1DB4    ; DATA XREF: .text:loc_1DAE↑r
.text:00001F10                                                             ; "s28"
.text:00001F14 C1 0A 00 00                   off_1F14 DCD aS27 - 0x1DAE    ; DATA XREF: .text:loc_1DA8↑r
.text:00001F14                                                             ; "s27"
.text:00001F18 C3 0A 00 00                   off_1F18 DCD aS26 - 0x1DA8    ; DATA XREF: .text:loc_1DA2↑r
.text:00001F18                                                             ; "s26"
.text:00001F1C C5 0A 00 00                   off_1F1C DCD aS25 - 0x1DA2    ; DATA XREF: .text:loc_1D9C↑r
.text:00001F1C                                                             ; "s25"
.text:00001F20 C7 0A 00 00                   off_1F20 DCD aS24 - 0x1D9C    ; DATA XREF: .text:loc_1D96↑r
.text:00001F20                                                             ; "s24"
.text:00001F24 C9 0A 00 00                   off_1F24 DCD aS23 - 0x1D96    ; DATA XREF: .text:loc_1D90↑r
.text:00001F24                                                             ; "s23"
.text:00001F28 CB 0A 00 00                   off_1F28 DCD aS22 - 0x1D90    ; DATA XREF: .text:loc_1D8A↑r
.text:00001F28                                                             ; "s22"
.text:00001F2C CD 0A 00 00                   off_1F2C DCD aS21 - 0x1D8A    ; DATA XREF: .text:loc_1D84↑r
.text:00001F2C                                                             ; "s21"
.text:00001F30 CF 0A 00 00                   off_1F30 DCD aS20 - 0x1D84    ; DATA XREF: .text:loc_1D7E↑r
.text:00001F30                                                             ; "s20"
.text:00001F34 D1 0A 00 00                   off_1F34 DCD aS19 - 0x1D7E    ; DATA XREF: .text:loc_1D78↑r
.text:00001F34                                                             ; "s19"
.text:00001F38 D3 0A 00 00                   off_1F38 DCD aS18 - 0x1D78    ; DATA XREF: .text:loc_1D72↑r
.text:00001F38                                                             ; "s18"
.text:00001F3C D5 0A 00 00                   off_1F3C DCD aS17 - 0x1D72    ; DATA XREF: .text:loc_1D6C↑r
.text:00001F3C                                                             ; "s17"
.text:00001F40 D7 0A 00 00                   off_1F40 DCD aS16 - 0x1D6C    ; DATA XREF: .text:loc_1D66↑r
.text:00001F40                                                             ; "s16"
.text:00001F44 D9 0A 00 00                   off_1F44 DCD aS15 - 0x1D66    ; DATA XREF: .text:loc_1D60↑r
.text:00001F44                                                             ; "s15"
.text:00001F48 DB 0A 00 00                   off_1F48 DCD aS14 - 0x1D60    ; DATA XREF: .text:loc_1D5A↑r
.text:00001F48                                                             ; "s14"
.text:00001F4C DD 0A 00 00                   off_1F4C DCD aS13 - 0x1D5A    ; DATA XREF: .text:loc_1D54↑r
.text:00001F4C                                                             ; "s13"
.text:00001F50 DF 0A 00 00                   off_1F50 DCD aS12 - 0x1D54    ; DATA XREF: .text:loc_1D4E↑r
.text:00001F50                                                             ; "s12"
.text:00001F54 E1 0A 00 00                   off_1F54 DCD aS11 - 0x1D4E    ; DATA XREF: .text:loc_1D48↑r
.text:00001F54                                                             ; "s11"
.text:00001F58 E3 0A 00 00                   off_1F58 DCD aS10 - 0x1D48    ; DATA XREF: .text:loc_1D42↑r
.text:00001F58                                                             ; "s10"
.text:00001F5C E6 0A 00 00                   off_1F5C DCD aS9 - 0x1D42     ; DATA XREF: .text:loc_1D3C↑r
.text:00001F5C                                                             ; "s9"
.text:00001F60 E9 0A 00 00                   off_1F60 DCD aS8 - 0x1D3C     ; DATA XREF: .text:loc_1D36↑r
.text:00001F60                                                             ; "s8"
.text:00001F64 EC 0A 00 00                   off_1F64 DCD aS7 - 0x1D36     ; DATA XREF: .text:loc_1D30↑r
.text:00001F64                                                             ; "s7"
.text:00001F68 EF 0A 00 00                   off_1F68 DCD aS6 - 0x1D30     ; DATA XREF: .text:loc_1D2A↑r
.text:00001F68                                                             ; "s6"
.text:00001F6C F2 0A 00 00                   off_1F6C DCD aS5 - 0x1D2A     ; DATA XREF: .text:loc_1D24↑r
.text:00001F6C                                                             ; "s5"
.text:00001F70 F5 0A 00 00                   off_1F70 DCD aS4 - 0x1D24     ; DATA XREF: .text:loc_1D1E↑r
.text:00001F70                                                             ; "s4"
.text:00001F74 F8 0A 00 00                   off_1F74 DCD aS3 - 0x1D1E     ; DATA XREF: .text:loc_1D18↑r
.text:00001F74                                                             ; "s3"
.text:00001F78 FB 0A 00 00                   off_1F78 DCD aS2 - 0x1D18     ; DATA XREF: .text:loc_1D12↑r
.text:00001F78                                                             ; "s2"
.text:00001F7C FE 0A 00 00                   off_1F7C DCD aS1 - 0x1D12     ; DATA XREF: .text:loc_1D0C↑r
.text:00001F7C                                                             ; "s1"
.text:00001F80 01 0B 00 00                   off_1F80 DCD aS0 - 0x1D0C     ; DATA XREF: .text:loc_1D06↑r
.text:00001F80                                                             ; "s0"
.text:00001F84 09 0B 00 00                   off_1F84 DCD aR12 - 0x1D00    ; DATA XREF: .text:loc_1CFA↑r
.text:00001F84                                                             ; "r12"
.text:00001F88 0B 0B 00 00                   off_1F88 DCD aR11 - 0x1CFA    ; DATA XREF: .text:loc_1CF4↑r
.text:00001F88                                                             ; "r11"
.text:00001F8C 0D 0B 00 00                   off_1F8C DCD aR10 - 0x1CF4    ; DATA XREF: .text:loc_1CEE↑r
.text:00001F8C                                                             ; "r10"
.text:00001F90 10 0B 00 00                   off_1F90 DCD aR9 - 0x1CEE     ; DATA XREF: .text:loc_1CE8↑r
.text:00001F90                                                             ; "r9"
.text:00001F94 13 0B 00 00                   off_1F94 DCD aR8 - 0x1CE8     ; DATA XREF: .text:loc_1CE2↑r
.text:00001F94                                                             ; "r8"
.text:00001F98 16 0B 00 00                   off_1F98 DCD aR7 - 0x1CE2     ; DATA XREF: .text:loc_1CDC↑r
.text:00001F98                                                             ; "r7"
.text:00001F9C 19 0B 00 00                   off_1F9C DCD aR6 - 0x1CDC     ; DATA XREF: .text:loc_1CD6↑r
.text:00001F9C                                                             ; "r6"
.text:00001FA0 1C 0B 00 00                   off_1FA0 DCD aR5 - 0x1CD6     ; DATA XREF: .text:loc_1CD0↑r
.text:00001FA0                                                             ; "r5"
.text:00001FA4 1F 0B 00 00                   off_1FA4 DCD aR4 - 0x1CD0     ; DATA XREF: .text:loc_1CCA↑r
.text:00001FA4                                                             ; "r4"
.text:00001FA8 22 0B 00 00                   off_1FA8 DCD aR3 - 0x1CCA     ; DATA XREF: .text:loc_1CC4↑r
.text:00001FA8                                                             ; "r3"
.text:00001FAC 25 0B 00 00                   off_1FAC DCD aR2 - 0x1CC4     ; DATA XREF: .text:loc_1CBE↑r
.text:00001FAC                                                             ; "r2"
.text:00001FB0 28 0B 00 00                   off_1FB0 DCD aR1 - 0x1CBE     ; DATA XREF: .text:loc_1CB8↑r
.text:00001FB0                                                             ; "r1"
.text:00001FB4 2B 0B 00 00                   off_1FB4 DCD aR0 - 0x1CB8     ; DATA XREF: .text:loc_1CB2↑r
.text:00001FB4                                                             ; "r0"
.text:00001FB8 86 0B 00 00                   off_1FB8 DCD aSp - 0x1C5A     ; DATA XREF: .text:loc_1C52↑r
.text:00001FB8                                                             ; "sp"
.text:00001FBC D7 0A 00 00                   off_1FBC DCD aLr - 0x1D06     ; DATA XREF: .text:loc_1D00↑r
.text:00001FBC                                                             ; "lr"
.text:00001FC0 47 0C 00 00                   off_1FC0 DCD aUnknownRegiste - 0x1CB2
.text:00001FC0                                                             ; DATA XREF: .text:def_1C62↑r
.text:00001FC0                               ; } // starts at 1B7C         ; "unknown register"
.text:00001FC4                               CODE32
.text:00001FC4
.text:00001FC4                               ; =============== S U B R O U T I N E =======================================
.text:00001FC4
.text:00001FC4
.text:00001FC4                               ; int __fastcall sub_1FC4(int)
.text:00001FC4                               sub_1FC4                      ; DATA XREF: sub_2078:loc_207C↓o
.text:00001FC4                                                             ; sub_2078+8↓o
.text:00001FC4                                                             ; sub_2078:off_2084↓o
.text:00001FC4 00 E0 A0 E1                   MOV             LR, R0
.text:00001FC8 FF 1F 9E E8                   LDM             LR, {R0-R12}
.text:00001FCC 34 D0 9E E5                   LDR             SP, [LR,#0x34]
.text:00001FD0 3C E0 9E E5                   LDR             LR, [LR,#0x3C]
.text:00001FD4 1E FF 2F E1                   BX              LR
.text:00001FD4
.text:00001FD4                               ; End of function sub_1FC4
.text:00001FD4
.text:00001FD8
.text:00001FD8                               ; =============== S U B R O U T I N E =======================================
.text:00001FD8
.text:00001FD8
.text:00001FD8                               ; void sub_1FD8()
.text:00001FD8                               sub_1FD8                      ; CODE XREF: sub_1938:loc_1952↑p
.text:00001FD8 20 0B 90 EC                   VLDM            R0, {D0-D15}
.text:00001FDC 1E FF 2F E1                   BX              LR
.text:00001FDC
.text:00001FDC                               ; End of function sub_1FD8
.text:00001FDC
.text:00001FE0
.text:00001FE0                               ; =============== S U B R O U T I N E =======================================
.text:00001FE0
.text:00001FE0
.text:00001FE0                               ; void sub_1FE0()
.text:00001FE0                               sub_1FE0                      ; CODE XREF: sub_1938+14↑p
.text:00001FE0 20 0B 90 EC                   VLDM            R0, {D0-D15}
.text:00001FE4 1E FF 2F E1                   BX              LR
.text:00001FE4
.text:00001FE4                               ; End of function sub_1FE0
.text:00001FE4
.text:00001FE8
.text:00001FE8                               ; =============== S U B R O U T I N E =======================================
.text:00001FE8
.text:00001FE8
.text:00001FE8                               ; void sub_1FE8()
.text:00001FE8                               sub_1FE8                      ; CODE XREF: sub_1938+2C↑p
.text:00001FE8 20 0B D0 EC                   VLDM            R0, {D16-D31}
.text:00001FEC 1E FF 2F E1                   BX              LR
.text:00001FEC
.text:00001FEC                               ; End of function sub_1FE8
.text:00001FEC
.text:00001FF0
.text:00001FF0                               ; =============== S U B R O U T I N E =======================================
.text:00001FF0
.text:00001FF0
.text:00001FF0                               ; _DWORD *__fastcall sub_1FF0(int *)
.text:00001FF0                               sub_1FF0                      ; CODE XREF: sub_1938+3E↑p
.text:00001FF0 02 01 F0 EC                   LDCL            p1, c0, [R0],#8
.text:00001FF4 02 11 F0 EC                   LDCL            p1, c1, [R0],#8
.text:00001FF8 02 21 F0 EC                   LDCL            p1, c2, [R0],#8
.text:00001FFC 02 31 F0 EC                   LDCL            p1, c3, [R0],#8
.text:00002000 02 41 F0 EC                   LDCL            p1, c4, [R0],#8
.text:00002004 02 51 F0 EC                   LDCL            p1, c5, [R0],#8
.text:00002008 02 61 F0 EC                   LDCL            p1, c6, [R0],#8
.text:0000200C 02 71 F0 EC                   LDCL            p1, c7, [R0],#8
.text:00002010 02 81 F0 EC                   LDCL            p1, c8, [R0],#8
.text:00002014 02 91 F0 EC                   LDCL            p1, c9, [R0],#8
.text:00002018 02 A1 F0 EC                   LDCL            p1, c10, [R0],#8
.text:0000201C 02 B1 F0 EC                   LDCL            p1, c11, [R0],#8
.text:00002020 02 C1 F0 EC                   LDCL            p1, c12, [R0],#8
.text:00002024 02 D1 F0 EC                   LDCL            p1, c13, [R0],#8
.text:00002028 02 E1 F0 EC                   LDCL            p1, c14, [R0],#8
.text:0000202C 02 F1 F0 EC                   LDCL            p1, c15, [R0],#8
.text:00002030 1E FF 2F E1                   BX              LR
.text:00002030
.text:00002030                               ; End of function sub_1FF0
.text:00002030
.text:00002034
.text:00002034                               ; =============== S U B R O U T I N E =======================================
.text:00002034
.text:00002034
.text:00002034                               ; _DWORD *__fastcall sub_2034(int *)
.text:00002034                               sub_2034                      ; DATA XREF: sub_2088:loc_208C↓o
.text:00002034                                                             ; sub_2088+8↓o
.text:00002034                                                             ; sub_2088:off_2094↓o
.text:00002034 01 81 B0 FC                   LDC2            p1, c8, [R0],#4
.text:00002038 01 91 B0 FC                   LDC2            p1, c9, [R0],#4
.text:0000203C 01 A1 B0 FC                   LDC2            p1, c10, [R0],#4
.text:00002040 01 B1 B0 FC                   LDC2            p1, c11, [R0],#4
.text:00002044 1E FF 2F E1                   BX              LR
.text:00002044
.text:00002044                               ; End of function sub_2034
.text:00002044
.text:00002048                               CODE16
.text:00002048
.text:00002048                               ; =============== S U B R O U T I N E =======================================
.text:00002048
.text:00002048                               ; Attributes: thunk
.text:00002048
.text:00002048                               ; int j_get_effect_current_level()
.text:00002048                               j_get_effect_current_level    ; CODE XREF: j_j_get_effect_current_level↑j
.text:00002048 78 47                         BX              PC
.text:00002048
.text:00002048                               ; ---------------------------------------------------------------------------
.text:0000204A C0 46                         ALIGN 4
.text:0000204C                               CODE32
.text:0000204C
.text:0000204C                               loc_204C                      ; CODE XREF: j_get_effect_current_level↑j
.text:0000204C 00 C0 9F E5                   LDR             R12, =(get_effect_current_level - 0x2058)
.text:00002050 0F F0 8C E0                   ADD             PC, R12, PC   ; get_effect_current_level
.text:00002050
.text:00002050                               ; ---------------------------------------------------------------------------
.text:00002054 80 E7 FF FF                   off_2054 DCD get_effect_current_level - 0x2058
.text:00002054                                                             ; DATA XREF: j_get_effect_current_level:loc_204C↑r
.text:00002054                               ; End of function j_get_effect_current_level
.text:00002054
.text:00002058                               CODE16
.text:00002058
.text:00002058                               ; =============== S U B R O U T I N E =======================================
.text:00002058
.text:00002058                               ; Attributes: thunk
.text:00002058
.text:00002058                               ; int j_init_effect()
.text:00002058                               j_init_effect                 ; CODE XREF: j_j_init_effect↑j
.text:00002058 78 47                         BX              PC
.text:00002058
.text:00002058                               ; ---------------------------------------------------------------------------
.text:0000205A C0 46                         ALIGN 4
.text:0000205C                               CODE32
.text:0000205C
.text:0000205C                               loc_205C                      ; CODE XREF: j_init_effect↑j
.text:0000205C 00 C0 9F E5                   LDR             R12, =(init_effect - 0x2068)
.text:00002060 0F F0 8C E0                   ADD             PC, R12, PC   ; init_effect
.text:00002060
.text:00002060                               ; ---------------------------------------------------------------------------
.text:00002064 7C E7 FF FF                   off_2064 DCD init_effect - 0x2068
.text:00002064                                                             ; DATA XREF: j_init_effect:loc_205C↑r
.text:00002064                               ; End of function j_init_effect
.text:00002064
.text:00002068                               CODE16
.text:00002068
.text:00002068                               ; =============== S U B R O U T I N E =======================================
.text:00002068
.text:00002068                               ; Attributes: thunk
.text:00002068
.text:00002068                               ; int j_deinit_effect()
.text:00002068                               j_deinit_effect               ; CODE XREF: j_j_deinit_effect↑j
.text:00002068 78 47                         BX              PC
.text:00002068
.text:00002068                               ; ---------------------------------------------------------------------------
.text:0000206A C0 46                         ALIGN 4
.text:0000206C                               CODE32
.text:0000206C
.text:0000206C                               loc_206C                      ; CODE XREF: j_deinit_effect↑j
.text:0000206C 00 C0 9F E5                   LDR             R12, =(deinit_effect - 0x2078)
.text:00002070 0F F0 8C E0                   ADD             PC, R12, PC   ; deinit_effect
.text:00002070
.text:00002070                               ; ---------------------------------------------------------------------------
.text:00002074 78 E7 FF FF                   off_2074 DCD deinit_effect - 0x2078
.text:00002074                                                             ; DATA XREF: j_deinit_effect:loc_206C↑r
.text:00002074                               ; End of function j_deinit_effect
.text:00002074
.text:00002078                               CODE16
.text:00002078
.text:00002078                               ; =============== S U B R O U T I N E =======================================
.text:00002078
.text:00002078                               ; Attributes: thunk
.text:00002078
.text:00002078                               ; int __fastcall sub_2078(int)
.text:00002078                               sub_2078                      ; CODE XREF: sub_17AC+12↑j
.text:00002078 78 47                         BX              PC
.text:00002078
.text:00002078                               ; ---------------------------------------------------------------------------
.text:0000207A C0 46                         ALIGN 4
.text:0000207C                               CODE32
.text:0000207C
.text:0000207C                               loc_207C                      ; CODE XREF: sub_2078↑j
.text:0000207C 00 C0 9F E5                   LDR             R12, =(sub_1FC4 - 0x2088)
.text:00002080 0F F0 8C E0                   ADD             PC, R12, PC   ; sub_1FC4
.text:00002080
.text:00002080                               ; ---------------------------------------------------------------------------
.text:00002084 3C FF FF FF                   off_2084 DCD sub_1FC4 - 0x2088
.text:00002084                                                             ; DATA XREF: sub_2078:loc_207C↑r
.text:00002084                               ; End of function sub_2078
.text:00002084
.text:00002088                               CODE16
.text:00002088
.text:00002088                               ; =============== S U B R O U T I N E =======================================
.text:00002088
.text:00002088                               ; Attributes: thunk
.text:00002088
.text:00002088                               ; _DWORD *__fastcall sub_2088(int *)
.text:00002088                               sub_2088                      ; CODE XREF: sub_1938+50↑j
.text:00002088 78 47                         BX              PC
.text:00002088
.text:00002088                               ; ---------------------------------------------------------------------------
.text:0000208A C0 46                         ALIGN 4
.text:0000208C                               CODE32
.text:0000208C
.text:0000208C                               loc_208C                      ; CODE XREF: sub_2088↑j
.text:0000208C 00 C0 9F E5                   LDR             R12, =(sub_2034 - 0x2098)
.text:00002090 0F F0 8C E0                   ADD             PC, R12, PC   ; sub_2034
.text:00002090
.text:00002090                               ; ---------------------------------------------------------------------------
.text:00002094 9C FF FF FF                   off_2094 DCD sub_2034 - 0x2098
.text:00002094                                                             ; DATA XREF: sub_2088:loc_208C↑r
.text:00002094                               ; End of function sub_2088
.text:00002094
.text:00002094                               ; .text ends
.text:00002094
.ARM.exidx:00002098                               ; ===========================================================================
.ARM.exidx:00002098
.ARM.exidx:00002098                               ; Segment type: Pure data
.ARM.exidx:00002098                               AREA .ARM.exidx, DATA, READONLY
.ARM.exidx:00002098 A4                            unk_2098 DCB 0xA4             ; DATA XREF: LOAD:0000011C↑o
.ARM.exidx:00002099 E8                            DCB 0xE8
.ARM.exidx:0000209A FF                            DCB 0xFF
.ARM.exidx:0000209B 7F                            DCB 0x7F ; 
.ARM.exidx:0000209C B0                            DCB 0xB0
.ARM.exidx:0000209D B0                            DCB 0xB0
.ARM.exidx:0000209E AA                            DCB 0xAA
.ARM.exidx:0000209F 80                            DCB 0x80
.ARM.exidx:000020A0 44                            DCB 0x44 ; D
.ARM.exidx:000020A1 E9                            DCB 0xE9
.ARM.exidx:000020A2 FF                            DCB 0xFF
.ARM.exidx:000020A3 7F                            DCB 0x7F ; 
.ARM.exidx:000020A4 B0                            DCB 0xB0
.ARM.exidx:000020A5 08                            DCB    8
.ARM.exidx:000020A6 84                            DCB 0x84
.ARM.exidx:000020A7 80                            DCB 0x80
.ARM.exidx:000020A8 46                            DCB 0x46 ; F
.ARM.exidx:000020A9 E9                            DCB 0xE9
.ARM.exidx:000020AA FF                            DCB 0xFF
.ARM.exidx:000020AB 7F                            DCB 0x7F ; 
.ARM.exidx:000020AC B0                            DCB 0xB0
.ARM.exidx:000020AD B0                            DCB 0xB0
.ARM.exidx:000020AE A8                            DCB 0xA8
.ARM.exidx:000020AF 80                            DCB 0x80
.ARM.exidx:000020B0 50                            DCB 0x50 ; P
.ARM.exidx:000020B1 E9                            DCB 0xE9
.ARM.exidx:000020B2 FF                            DCB 0xFF
.ARM.exidx:000020B3 7F                            DCB 0x7F ; 
.ARM.exidx:000020B4 B0                            DCB 0xB0
.ARM.exidx:000020B5 B0                            DCB 0xB0
.ARM.exidx:000020B6 B0                            DCB 0xB0
.ARM.exidx:000020B7 80                            DCB 0x80
.ARM.exidx:000020B8 B4                            DCB 0xB4
.ARM.exidx:000020B9 E9                            DCB 0xE9
.ARM.exidx:000020BA FF                            DCB 0xFF
.ARM.exidx:000020BB 7F                            DCB 0x7F ; 
.ARM.exidx:000020BC B0                            DCB 0xB0
.ARM.exidx:000020BD AF                            DCB 0xAF
.ARM.exidx:000020BE 02                            DCB    2
.ARM.exidx:000020BF 80                            DCB 0x80
.ARM.exidx:000020C0 5C                            DCB 0x5C ; \
.ARM.exidx:000020C1 EC                            DCB 0xEC
.ARM.exidx:000020C2 FF                            DCB 0xFF
.ARM.exidx:000020C3 7F                            DCB 0x7F ; 
.ARM.exidx:000020C4 B0                            DCB 0xB0
.ARM.exidx:000020C5 B0                            DCB 0xB0
.ARM.exidx:000020C6 AA                            DCB 0xAA
.ARM.exidx:000020C7 80                            DCB 0x80
.ARM.exidx:000020C8 84                            DCB 0x84
.ARM.exidx:000020C9 ED                            DCB 0xED
.ARM.exidx:000020CA FF                            DCB 0xFF
.ARM.exidx:000020CB 7F                            DCB 0x7F ; 
.ARM.exidx:000020CC B0                            DCB 0xB0
.ARM.exidx:000020CD AE                            DCB 0xAE
.ARM.exidx:000020CE 05                            DCB    5
.ARM.exidx:000020CF 80                            DCB 0x80
.ARM.exidx:000020D0 B8                            DCB 0xB8
.ARM.exidx:000020D1 EE                            DCB 0xEE
.ARM.exidx:000020D2 FF                            DCB 0xFF
.ARM.exidx:000020D3 7F                            DCB 0x7F ; 
.ARM.exidx:000020D4 B0                            DCB 0xB0
.ARM.exidx:000020D5 B0                            DCB 0xB0
.ARM.exidx:000020D6 B0                            DCB 0xB0
.ARM.exidx:000020D7 80                            DCB 0x80
.ARM.exidx:000020D8 B8                            DCB 0xB8
.ARM.exidx:000020D9 EE                            DCB 0xEE
.ARM.exidx:000020DA FF                            DCB 0xFF
.ARM.exidx:000020DB 7F                            DCB 0x7F ; 
.ARM.exidx:000020DC 0B                            DCB  0xB
.ARM.exidx:000020DD 84                            DCB 0x84
.ARM.exidx:000020DE 0B                            DCB  0xB
.ARM.exidx:000020DF 80                            DCB 0x80
.ARM.exidx:000020E0 0C                            DCB  0xC
.ARM.exidx:000020E1 EF                            DCB 0xEF
.ARM.exidx:000020E2 FF                            DCB 0xFF
.ARM.exidx:000020E3 7F                            DCB 0x7F ; 
.ARM.exidx:000020E4 B0                            DCB 0xB0
.ARM.exidx:000020E5 B0                            DCB 0xB0
.ARM.exidx:000020E6 B0                            DCB 0xB0
.ARM.exidx:000020E7 80                            DCB 0x80
.ARM.exidx:000020E8 14                            DCB 0x14
.ARM.exidx:000020E9 EF                            DCB 0xEF
.ARM.exidx:000020EA FF                            DCB 0xFF
.ARM.exidx:000020EB 7F                            DCB 0x7F ; 
.ARM.exidx:000020EC 20                            DCB 0x20
.ARM.exidx:000020ED 08                            DCB    8
.ARM.exidx:000020EE 00                            DCB    0
.ARM.exidx:000020EF 00                            DCB    0
.ARM.exidx:000020F0 B8                            DCB 0xB8
.ARM.exidx:000020F1 EF                            DCB 0xEF
.ARM.exidx:000020F2 FF                            DCB 0xFF
.ARM.exidx:000020F3 7F                            DCB 0x7F ; 
.ARM.exidx:000020F4 24                            DCB 0x24 ; $
.ARM.exidx:000020F5 08                            DCB    8
.ARM.exidx:000020F6 00                            DCB    0
.ARM.exidx:000020F7 00                            DCB    0
.ARM.exidx:000020F8 9C                            DCB 0x9C
.ARM.exidx:000020F9 F0                            DCB 0xF0
.ARM.exidx:000020FA FF                            DCB 0xFF
.ARM.exidx:000020FB 7F                            DCB 0x7F ; 
.ARM.exidx:000020FC B0                            DCB 0xB0
.ARM.exidx:000020FD B0                            DCB 0xB0
.ARM.exidx:000020FE B0                            DCB 0xB0
.ARM.exidx:000020FF 80                            DCB 0x80
.ARM.exidx:00002100 98                            DCB 0x98
.ARM.exidx:00002101 F0                            DCB 0xF0
.ARM.exidx:00002102 FF                            DCB 0xFF
.ARM.exidx:00002103 7F                            DCB 0x7F ; 
.ARM.exidx:00002104 20                            DCB 0x20
.ARM.exidx:00002105 08                            DCB    8
.ARM.exidx:00002106 00                            DCB    0
.ARM.exidx:00002107 00                            DCB    0
.ARM.exidx:00002108 C4                            DCB 0xC4
.ARM.exidx:00002109 F0                            DCB 0xF0
.ARM.exidx:0000210A FF                            DCB 0xFF
.ARM.exidx:0000210B 7F                            DCB 0x7F ; 
.ARM.exidx:0000210C 08                            DCB    8
.ARM.exidx:0000210D 84                            DCB 0x84
.ARM.exidx:0000210E 01                            DCB    1
.ARM.exidx:0000210F 80                            DCB 0x80
.ARM.exidx:00002110 EC                            DCB 0xEC
.ARM.exidx:00002111 F0                            DCB 0xF0
.ARM.exidx:00002112 FF                            DCB 0xFF
.ARM.exidx:00002113 7F                            DCB 0x7F ; 
.ARM.exidx:00002114 08                            DCB    8
.ARM.exidx:00002115 84                            DCB 0x84
.ARM.exidx:00002116 0B                            DCB  0xB
.ARM.exidx:00002117 80                            DCB 0x80
.ARM.exidx:00002118 5C                            DCB 0x5C ; \
.ARM.exidx:00002119 F1                            DCB 0xF1
.ARM.exidx:0000211A FF                            DCB 0xFF
.ARM.exidx:0000211B 7F                            DCB 0x7F ; 
.ARM.exidx:0000211C B0                            DCB 0xB0
.ARM.exidx:0000211D B0                            DCB 0xB0
.ARM.exidx:0000211E B0                            DCB 0xB0
.ARM.exidx:0000211F 80                            DCB 0x80
.ARM.exidx:00002120 60                            DCB 0x60 ; `
.ARM.exidx:00002121 F1                            DCB 0xF1
.ARM.exidx:00002122 FF                            DCB 0xFF
.ARM.exidx:00002123 7F                            DCB 0x7F ; 
.ARM.exidx:00002124 B0                            DCB 0xB0
.ARM.exidx:00002125 08                            DCB    8
.ARM.exidx:00002126 84                            DCB 0x84
.ARM.exidx:00002127 80                            DCB 0x80
.ARM.exidx:00002128 6C                            DCB 0x6C ; l
.ARM.exidx:00002129 F1                            DCB 0xF1
.ARM.exidx:0000212A FF                            DCB 0xFF
.ARM.exidx:0000212B 7F                            DCB 0x7F ; 
.ARM.exidx:0000212C 01                            DCB    1
.ARM.exidx:0000212D 00                            DCB    0
.ARM.exidx:0000212E 00                            DCB    0
.ARM.exidx:0000212F 00                            DCB    0
.ARM.exidx:00002130 EC                            DCB 0xEC
.ARM.exidx:00002131 F1                            DCB 0xF1
.ARM.exidx:00002132 FF                            DCB 0xFF
.ARM.exidx:00002133 7F                            DCB 0x7F ; 
.ARM.exidx:00002134 B0                            DCB 0xB0
.ARM.exidx:00002135 B0                            DCB 0xB0
.ARM.exidx:00002136 A8                            DCB 0xA8
.ARM.exidx:00002137 80                            DCB 0x80
.ARM.exidx:00002138 28                            DCB 0x28 ; (
.ARM.exidx:00002139 F2                            DCB 0xF2
.ARM.exidx:0000213A FF                            DCB 0xFF
.ARM.exidx:0000213B 7F                            DCB 0x7F ; 
.ARM.exidx:0000213C B0                            DCB 0xB0
.ARM.exidx:0000213D B0                            DCB 0xB0
.ARM.exidx:0000213E AA                            DCB 0xAA
.ARM.exidx:0000213F 80                            DCB 0x80
.ARM.exidx:00002140 C2                            DCB 0xC2
.ARM.exidx:00002141 F2                            DCB 0xF2
.ARM.exidx:00002142 FF                            DCB 0xFF
.ARM.exidx:00002143 7F                            DCB 0x7F ; 
.ARM.exidx:00002144 B0                            DCB 0xB0
.ARM.exidx:00002145 B0                            DCB 0xB0
.ARM.exidx:00002146 AC                            DCB 0xAC
.ARM.exidx:00002147 80                            DCB 0x80
.ARM.exidx:00002148 F2                            DCB 0xF2
.ARM.exidx:00002149 F2                            DCB 0xF2
.ARM.exidx:0000214A FF                            DCB 0xFF
.ARM.exidx:0000214B 7F                            DCB 0x7F ; 
.ARM.exidx:0000214C B0                            DCB 0xB0
.ARM.exidx:0000214D B0                            DCB 0xB0
.ARM.exidx:0000214E B0                            DCB 0xB0
.ARM.exidx:0000214F 80                            DCB 0x80
.ARM.exidx:00002150 F0                            DCB 0xF0
.ARM.exidx:00002151 F2                            DCB 0xF2
.ARM.exidx:00002152 FF                            DCB 0xFF
.ARM.exidx:00002153 7F                            DCB 0x7F ; 
.ARM.exidx:00002154 B0                            DCB 0xB0
.ARM.exidx:00002155 B0                            DCB 0xB0
.ARM.exidx:00002156 A8                            DCB 0xA8
.ARM.exidx:00002157 80                            DCB 0x80
.ARM.exidx:00002158 06                            DCB    6
.ARM.exidx:00002159 F3                            DCB 0xF3
.ARM.exidx:0000215A FF                            DCB 0xFF
.ARM.exidx:0000215B 7F                            DCB 0x7F ; 
.ARM.exidx:0000215C B0                            DCB 0xB0
.ARM.exidx:0000215D 08                            DCB    8
.ARM.exidx:0000215E 84                            DCB 0x84
.ARM.exidx:0000215F 80                            DCB 0x80
.ARM.exidx:00002160 10                            DCB 0x10
.ARM.exidx:00002161 F3                            DCB 0xF3
.ARM.exidx:00002162 FF                            DCB 0xFF
.ARM.exidx:00002163 7F                            DCB 0x7F ; 
.ARM.exidx:00002164 B0                            DCB 0xB0
.ARM.exidx:00002165 B0                            DCB 0xB0
.ARM.exidx:00002166 B0                            DCB 0xB0
.ARM.exidx:00002167 80                            DCB 0x80
.ARM.exidx:00002168 30                            DCB 0x30 ; 0
.ARM.exidx:00002169 F3                            DCB 0xF3
.ARM.exidx:0000216A FF                            DCB 0xFF
.ARM.exidx:0000216B 7F                            DCB 0x7F ; 
.ARM.exidx:0000216C B0                            DCB 0xB0
.ARM.exidx:0000216D 0B                            DCB  0xB
.ARM.exidx:0000216E 84                            DCB 0x84
.ARM.exidx:0000216F 80                            DCB 0x80
.ARM.exidx:00002170 B4                            DCB 0xB4
.ARM.exidx:00002171 F3                            DCB 0xF3
.ARM.exidx:00002172 FF                            DCB 0xFF
.ARM.exidx:00002173 7F                            DCB 0x7F ; 
.ARM.exidx:00002174 B0                            DCB 0xB0
.ARM.exidx:00002175 B0                            DCB 0xB0
.ARM.exidx:00002176 AA                            DCB 0xAA
.ARM.exidx:00002177 80                            DCB 0x80
.ARM.exidx:00002178 38                            DCB 0x38 ; 8
.ARM.exidx:00002179 F4                            DCB 0xF4
.ARM.exidx:0000217A FF                            DCB 0xFF
.ARM.exidx:0000217B 7F                            DCB 0x7F ; 
.ARM.exidx:0000217C B0                            DCB 0xB0
.ARM.exidx:0000217D B0                            DCB 0xB0
.ARM.exidx:0000217E B0                            DCB 0xB0
.ARM.exidx:0000217F 80                            DCB 0x80
.ARM.exidx:00002180 54                            DCB 0x54 ; T
.ARM.exidx:00002181 F4                            DCB 0xF4
.ARM.exidx:00002182 FF                            DCB 0xFF
.ARM.exidx:00002183 7F                            DCB 0x7F ; 
.ARM.exidx:00002184 B0                            DCB 0xB0
.ARM.exidx:00002185 0B                            DCB  0xB
.ARM.exidx:00002186 84                            DCB 0x84
.ARM.exidx:00002187 80                            DCB 0x80
.ARM.exidx:00002188 F0                            DCB 0xF0
.ARM.exidx:00002189 F4                            DCB 0xF4
.ARM.exidx:0000218A FF                            DCB 0xFF
.ARM.exidx:0000218B 7F                            DCB 0x7F ; 
.ARM.exidx:0000218C B0                            DCB 0xB0
.ARM.exidx:0000218D AB                            DCB 0xAB
.ARM.exidx:0000218E 00                            DCB    0
.ARM.exidx:0000218F 80                            DCB 0x80
.ARM.exidx:00002190 B4                            DCB 0xB4
.ARM.exidx:00002191 F5                            DCB 0xF5
.ARM.exidx:00002192 FF                            DCB 0xFF
.ARM.exidx:00002193 7F                            DCB 0x7F ; 
.ARM.exidx:00002194 B0                            DCB 0xB0
.ARM.exidx:00002195 0B                            DCB  0xB
.ARM.exidx:00002196 84                            DCB 0x84
.ARM.exidx:00002197 80                            DCB 0x80
.ARM.exidx:00002198 FC                            DCB 0xFC
.ARM.exidx:00002199 F5                            DCB 0xF5
.ARM.exidx:0000219A FF                            DCB 0xFF
.ARM.exidx:0000219B 7F                            DCB 0x7F ; 
.ARM.exidx:0000219C B0                            DCB 0xB0
.ARM.exidx:0000219D B0                            DCB 0xB0
.ARM.exidx:0000219E A8                            DCB 0xA8
.ARM.exidx:0000219F 80                            DCB 0x80
.ARM.exidx:000021A0 22                            DCB 0x22 ; "
.ARM.exidx:000021A1 F6                            DCB 0xF6
.ARM.exidx:000021A2 FF                            DCB 0xFF
.ARM.exidx:000021A3 7F                            DCB 0x7F ; 
.ARM.exidx:000021A4 B0                            DCB 0xB0
.ARM.exidx:000021A5 B0                            DCB 0xB0
.ARM.exidx:000021A6 B0                            DCB 0xB0
.ARM.exidx:000021A7 80                            DCB 0x80
.ARM.exidx:000021A8 20                            DCB 0x20
.ARM.exidx:000021A9 F6                            DCB 0xF6
.ARM.exidx:000021AA FF                            DCB 0xFF
.ARM.exidx:000021AB 7F                            DCB 0x7F ; 
.ARM.exidx:000021AC B0                            DCB 0xB0
.ARM.exidx:000021AD AB                            DCB 0xAB
.ARM.exidx:000021AE 06                            DCB    6
.ARM.exidx:000021AF 80                            DCB 0x80
.ARM.exidx:000021B0 88                            DCB 0x88
.ARM.exidx:000021B1 F6                            DCB 0xF6
.ARM.exidx:000021B2 FF                            DCB 0xFF
.ARM.exidx:000021B3 7F                            DCB 0x7F ; 
.ARM.exidx:000021B4 B0                            DCB 0xB0
.ARM.exidx:000021B5 AA                            DCB 0xAA
.ARM.exidx:000021B6 03                            DCB    3
.ARM.exidx:000021B7 80                            DCB 0x80
.ARM.exidx:000021B8 F0                            DCB 0xF0
.ARM.exidx:000021B9 F6                            DCB 0xF6
.ARM.exidx:000021BA FF                            DCB 0xFF
.ARM.exidx:000021BB 7F                            DCB 0x7F ; 
.ARM.exidx:000021BC B0                            DCB 0xB0
.ARM.exidx:000021BD B0                            DCB 0xB0
.ARM.exidx:000021BE B0                            DCB 0xB0
.ARM.exidx:000021BF 80                            DCB 0x80
.ARM.exidx:000021C0 F8                            DCB 0xF8
.ARM.exidx:000021C1 F6                            DCB 0xF6
.ARM.exidx:000021C2 FF                            DCB 0xFF
.ARM.exidx:000021C3 7F                            DCB 0x7F ; 
.ARM.exidx:000021C4 08                            DCB    8
.ARM.exidx:000021C5 84                            DCB 0x84
.ARM.exidx:000021C6 01                            DCB    1
.ARM.exidx:000021C7 80                            DCB 0x80
.ARM.exidx:000021C8 1C                            DCB 0x1C
.ARM.exidx:000021C9 F7                            DCB 0xF7
.ARM.exidx:000021CA FF                            DCB 0xFF
.ARM.exidx:000021CB 7F                            DCB 0x7F ; 
.ARM.exidx:000021CC 0B                            DCB  0xB
.ARM.exidx:000021CD 84                            DCB 0x84
.ARM.exidx:000021CE 03                            DCB    3
.ARM.exidx:000021CF 80                            DCB 0x80
.ARM.exidx:000021D0 68                            DCB 0x68 ; h
.ARM.exidx:000021D1 F7                            DCB 0xF7
.ARM.exidx:000021D2 FF                            DCB 0xFF
.ARM.exidx:000021D3 7F                            DCB 0x7F ; 
.ARM.exidx:000021D4 B0                            DCB 0xB0
.ARM.exidx:000021D5 B0                            DCB 0xB0
.ARM.exidx:000021D6 A8                            DCB 0xA8
.ARM.exidx:000021D7 80                            DCB 0x80
.ARM.exidx:000021D8 B8                            DCB 0xB8
.ARM.exidx:000021D9 F7                            DCB 0xF7
.ARM.exidx:000021DA FF                            DCB 0xFF
.ARM.exidx:000021DB 7F                            DCB 0x7F ; 
.ARM.exidx:000021DC B0                            DCB 0xB0
.ARM.exidx:000021DD AD                            DCB 0xAD
.ARM.exidx:000021DE 0A                            DCB  0xA
.ARM.exidx:000021DF 80                            DCB 0x80
.ARM.exidx:000021E0 54                            DCB 0x54 ; T
.ARM.exidx:000021E1 F9                            DCB 0xF9
.ARM.exidx:000021E2 FF                            DCB 0xFF
.ARM.exidx:000021E3 7F                            DCB 0x7F ; 
.ARM.exidx:000021E4 B0                            DCB 0xB0
.ARM.exidx:000021E5 B0                            DCB 0xB0
.ARM.exidx:000021E6 AC                            DCB 0xAC
.ARM.exidx:000021E7 80                            DCB 0x80
.ARM.exidx:000021E8 94                            DCB 0x94
.ARM.exidx:000021E9 F9                            DCB 0xF9
.ARM.exidx:000021EA FF                            DCB 0xFF
.ARM.exidx:000021EB 7F                            DCB 0x7F ; 
.ARM.exidx:000021EC B0                            DCB 0xB0
.ARM.exidx:000021ED B0                            DCB 0xB0
.ARM.exidx:000021EE B0                            DCB 0xB0
.ARM.exidx:000021EF 80                            DCB 0x80
.ARM.exidx:000021F0 D4                            DCB 0xD4
.ARM.exidx:000021F1 FD                            DCB 0xFD
.ARM.exidx:000021F2 FF                            DCB 0xFF
.ARM.exidx:000021F3 7F                            DCB 0x7F ; 
.ARM.exidx:000021F4 01                            DCB    1
.ARM.exidx:000021F5 00                            DCB    0
.ARM.exidx:000021F6 00                            DCB    0
.ARM.exidx:000021F7 00                            DCB    0
.ARM.exidx:000021F7                               ; .ARM.exidx ends
.ARM.exidx:000021F7
.rodata:000021F8                               ; ===========================================================================
.rodata:000021F8
.rodata:000021F8                               ; Segment type: Pure data
.rodata:000021F8                               AREA .rodata, DATA, READONLY, ALIGN=0
.rodata:000021F8 64 69 73 5F 65 66 66 65 63 74+aDisEffect DCB "dis_effect",0 ; DATA XREF: sub_93C:loc_9A8↑o
.rodata:000021F8 00                                                          ; sub_93C+72↑o
.rodata:000021F8                                                             ; .text:off_9DC↑o
.rodata:000021F8                                                             ; .data:00004010↓o
.rodata:00002203 64 69 73 20 65 66 66 65 63 74+aDisEffectModul DCB "dis effect Module",0
.rodata:00002203 20 4D 6F 64 75 6C 65 00                                     ; DATA XREF: .data:00004014↓o
.rodata:00002215 4D 45 49 5A 55 2C 20 42 4F 42+aMeizuBobo DCB "MEIZU, BOBO",0
.rodata:00002215 4F 00                                                       ; DATA XREF: .data:00004018↓o
.rodata:00002221 5B 45 52 52 4F 52 5D 20 66 61+aErrorFailedToC DCB "[ERROR] failed to create dis effect device!",0xD,0xA,0
.rodata:00002221 69 6C 65 64 20 74 6F 20 63 72+                              ; DATA XREF: sub_93C+70↑o
.rodata:00002221 65 61 74 65 20 64 69 73 20 65+                              ; sub_93C+74↑o
.rodata:00002221 66 66 65 63 74 20 64 65 76 69+                              ; .text:off_9E0↑o
.rodata:0000224F 76 6F 69 64 20 5F 55 6E 77 69+aVoidUnwindResu DCB "void _Unwind_Resume(_Unwind_Exception *)",0
.rodata:0000224F 6E 64 5F 52 65 73 75 6D 65 28+                              ; DATA XREF: sub_1198+1A↑o
.rodata:0000224F 5F 55 6E 77 69 6E 64 5F 45 78+                              ; sub_1198+22↑o
.rodata:0000224F 63 65 70 74 69 6F 6E 20 2A 29+                              ; .text:off_11C4↑o
.rodata:00002278 65 78 74 65 72 6E 61 6C 2F 6C+aExternalLibunw DCB "external/libunwind_llvm/src/Unwind-EHABI.cpp",0
.rodata:00002278 69 62 75 6E 77 69 6E 64 5F 6C+                              ; DATA XREF: sub_11CC+8↑o
.rodata:00002278 6C 76 6D 2F 73 72 63 2F 55 6E+                              ; sub_11CC+E↑o
.rodata:00002278 77 69 6E 64 2D 45 48 41 42 49+                              ; .text:off_11F8↑o
.rodata:000022A5 5F 55 6E 77 69 6E 64 5F 52 65+aUnwindResumeCa DCB "_Unwind_Resume() can't return",0
.rodata:000022A5 73 75 6D 65 28 29 20 63 61 6E+                              ; DATA XREF: sub_1198+20↑o
.rodata:000022A5 27 74 20 72 65 74 75 72 6E 00                               ; sub_1198+24↑o
.rodata:000022A5                                                             ; .text:off_11C8↑o
.rodata:000022C3 5F 55 6E 77 69 6E 64 5F 56 52+aUnwindVrsResul DCB "_Unwind_VRS_Result _Unwind_VRS_Set(_Unwind_Context *, _Unwind_VRS_RegClass, uint32_t, _Unwind_"
.rodata:000022C3 53 5F 52 65 73 75 6C 74 20 5F+                              ; DATA XREF: sub_DB0:def_DBC↑o
.rodata:000022C3 55 6E 77 69 6E 64 5F 56 52 53+                              ; sub_DB0+8A↑o
.rodata:000022C3 5F 53 65 74 28 5F 55 6E 77 69+                              ; .text:off_E44↑o
.rodata:000022C3 6E 64 5F 43 6F 6E 74 65 78 74+DCB "VRS_DataRepresentation, void *)",0
.rodata:00002341 75 6E 73 75 70 70 6F 72 74 65+aUnsupportedReg DCB "unsupported register class",0
.rodata:00002341 64 20 72 65 67 69 73 74 65 72+                              ; DATA XREF: .text:00000D9C↑o
.rodata:00002341 20 63 6C 61 73 73 00                                        ; .text:00000DA0↑o
.rodata:00002341                                                             ; .text:off_DAC↑o
.rodata:00002341                                                             ; sub_DB0+88↑o
.rodata:00002341                                                             ; sub_DB0+8C↑o
.rodata:00002341                                                             ; .text:off_E48↑o
.rodata:00002341                                                             ; sub_E4C+120↑o
.rodata:00002341                                                             ; sub_E4C+124↑o
.rodata:00002341                                                             ; .text:off_F84↑o
.rodata:0000235C 5F 55 6E 77 69 6E 64 5F 56 52+aUnwindVrsResul_0 DCB "_Unwind_VRS_Result _Unwind_VRS_Pop(_Unwind_Context *, _Unwind_VRS_RegClass, uint32_t, _Unwind_"
.rodata:0000235C 53 5F 52 65 73 75 6C 74 20 5F+                              ; DATA XREF: sub_E4C:def_E6A↑o
.rodata:0000235C 55 6E 77 69 6E 64 5F 56 52 53+                              ; sub_E4C+122↑o
.rodata:0000235C 5F 50 6F 70 28 5F 55 6E 77 69+                              ; .text:off_F80↑o
.rodata:0000235C 6E 64 5F 43 6F 6E 74 65 78 74+DCB "VRS_DataRepresentation)",0
.rodata:000023D2 5F 55 6E 77 69 6E 64 5F 52 65+aUnwindReasonCo DCB "_Unwind_Reason_Code unwind_phase2(unw_context_t *, _Unwind_Exception *, bool)",0
.rodata:000023D2 61 73 6F 6E 5F 43 6F 64 65 20+                              ; DATA XREF: sub_10A8+8E↑o
.rodata:000023D2 75 6E 77 69 6E 64 5F 70 68 61+                              ; sub_10A8+96↑o
.rodata:000023D2 73 65 32 28 75 6E 77 5F 63 6F+                              ; .text:off_1188↑o
.rodata:00002420 64 75 72 69 6E 67 20 70 68 61+aDuringPhase1Pe DCB "during phase1 personality function said it would stop here, but now in phase2 it did not stop "
.rodata:00002420 73 65 31 20 70 65 72 73 6F 6E+                              ; DATA XREF: sub_10A8+94↑o
.rodata:00002420 61 6C 69 74 79 20 66 75 6E 63+                              ; sub_10A8+98↑o
.rodata:00002420 74 69 6F 6E 20 73 61 69 64 20+                              ; .text:off_118C↑o
.rodata:00002420 69 74 20 77 6F 75 6C 64 20 73+DCB "here",0
.rodata:00002483 6C 69 62 75 6E 77 69 6E 64 3A+aLibunwindSSDS DCB "libunwind: %s %s:%d - %s",0xA,0
.rodata:00002483 20 25 73 20 25 73 3A 25 64 20+                              ; DATA XREF: sub_11CC+18↑o
.rodata:00002483 2D 20 25 73 0A 00                                           ; sub_11CC+1A↑o
.rodata:00002483                                                             ; .text:off_11F4↑o
.rodata:00002483                                                             ; sub_18B8+A↑o
.rodata:00002483                                                             ; sub_18B8+10↑o
.rodata:00002483                                                             ; .text:off_18E0↑o
.rodata:0000249D 5F 55 6E 77 69 6E 64 5F 56 52+aUnwindVrsResul_1 DCB "_Unwind_VRS_Result _Unwind_VRS_Get_Internal(_Unwind_Context *, _Unwind_VRS_RegClass, uint32_t,"
.rodata:0000249D 53 5F 52 65 73 75 6C 74 20 5F+                              ; DATA XREF: .text:def_D28↑o
.rodata:0000249D 55 6E 77 69 6E 64 5F 56 52 53+                              ; .text:00000D9E↑o
.rodata:0000249D 5F 47 65 74 5F 49 6E 74 65 72+                              ; .text:off_DA8↑o
.rodata:0000249D 6E 61 6C 28 5F 55 6E 77 69 6E+DCB " _Unwind_VRS_DataRepresentation, void *)",0
.rodata:00002524 65 78 74 65 72 6E 61 6C 2F 6C+aExternalLibunw_0 DCB "external/libunwind_llvm/src/UnwindCursor.hpp",0
.rodata:00002524 69 62 75 6E 77 69 6E 64 5F 6C+                              ; DATA XREF: sub_1990+156↑o
.rodata:00002524 6C 76 6D 2F 73 72 63 2F 55 6E+                              ; sub_1990+15C↑o
.rodata:00002524 77 69 6E 64 43 75 72 73 6F 72+                              ; sub_1990+16A↑o
.rodata:00002524 2E 68 70 70 00                                              ; sub_1990+170↑o
.rodata:00002524                                                             ; .text:off_1B18↑o
.rodata:00002524                                                             ; .text:off_1B28↑o
.rodata:00002551 75 69 6E 74 33 32 5F 74 20 6C+aUint32TLibunwi DCB "uint32_t libunwind::Registers_arm::getRegister(int)",0
.rodata:00002551 69 62 75 6E 77 69 6E 64 3A 3A+                              ; DATA XREF: sub_1498:loc_1502↑o
.rodata:00002551 52 65 67 69 73 74 65 72 73 5F+                              ; sub_1498+74↑o
.rodata:00002551 61 72 6D 3A 3A 67 65 74 52 65+                              ; .text:off_1518↑o
.rodata:00002585 65 78 74 65 72 6E 61 6C 2F 6C+aExternalLibunw_1 DCB "external/libunwind_llvm/src/Registers.hpp",0
.rodata:00002585 69 62 75 6E 77 69 6E 64 5F 6C+                              ; DATA XREF: sub_1498+70↑o
.rodata:00002585 6C 76 6D 2F 73 72 63 2F 52 65+                              ; sub_1498+76↑o
.rodata:00002585 67 69 73 74 65 72 73 2E 68 70+                              ; .text:off_151C↑o
.rodata:00002585 70 00                                                       ; sub_1524+70↑o
.rodata:00002585                                                             ; sub_1524+76↑o
.rodata:00002585                                                             ; .text:off_15A8↑o
.rodata:00002585                                                             ; sub_15D4+8A↑o
.rodata:00002585                                                             ; sub_15D4+90↑o
.rodata:00002585                                                             ; .text:off_1670↑o
.rodata:00002585                                                             ; sub_1678+B2↑o
.rodata:00002585                                                             ; sub_1678+B8↑o
.rodata:00002585                                                             ; .text:off_173C↑o
.rodata:000025AF 75 6E 73 75 70 70 6F 72 74 65+aUnsupportedArm DCB "unsupported arm register",0
.rodata:000025AF 64 20 61 72 6D 20 72 65 67 69+                              ; DATA XREF: sub_1498+72↑o
.rodata:000025AF 73 74 65 72 00                                              ; sub_1498+78↑o
.rodata:000025AF                                                             ; .text:off_1520↑o
.rodata:000025AF                                                             ; sub_1524+72↑o
.rodata:000025AF                                                             ; sub_1524+78↑o
.rodata:000025AF                                                             ; .text:off_15AC↑o
.rodata:000025C8 76 6F 69 64 20 6C 69 62 75 6E+aVoidLibunwindR DCB "void libunwind::Registers_arm::setRegister(int, uint32_t)",0
.rodata:000025C8 77 69 6E 64 3A 3A 52 65 67 69+                              ; DATA XREF: sub_1524:loc_158E↑o
.rodata:000025C8 73 74 65 72 73 5F 61 72 6D 3A+                              ; sub_1524+74↑o
.rodata:000025C8 3A 73 65 74 52 65 67 69 73 74+                              ; .text:off_15A4↑o
.rodata:00002602 75 6E 77 5F 66 70 72 65 67 5F+aUnwFpregTLibun DCB "unw_fpreg_t libunwind::Registers_arm::getFloatRegister(int)",0
.rodata:00002602 74 20 6C 69 62 75 6E 77 69 6E+                              ; DATA XREF: sub_15D4:loc_1658↑o
.rodata:00002602 64 3A 3A 52 65 67 69 73 74 65+                              ; sub_15D4+8E↑o
.rodata:00002602 72 73 5F 61 72 6D 3A 3A 67 65+                              ; .text:off_166C↑o
.rodata:0000263E 55 6E 6B 6E 6F 77 6E 20 41 52+aUnknownArmFloa DCB "Unknown ARM float register",0
.rodata:0000263E 4D 20 66 6C 6F 61 74 20 72 65+                              ; DATA XREF: sub_15D4+8C↑o
.rodata:0000263E 67 69 73 74 65 72 00                                        ; sub_15D4+92↑o
.rodata:0000263E                                                             ; .text:off_1674↑o
.rodata:0000263E                                                             ; sub_1678+B4↑o
.rodata:0000263E                                                             ; sub_1678+BA↑o
.rodata:0000263E                                                             ; .text:off_1740↑o
.rodata:00002659 76 6F 69 64 20 6C 69 62 75 6E+aVoidLibunwindR_0 DCB "void libunwind::Registers_arm::setFloatRegister(int, unw_fpreg_t)",0
.rodata:00002659 77 69 6E 64 3A 3A 52 65 67 69+                              ; DATA XREF: sub_1678:loc_1724↑o
.rodata:00002659 73 74 65 72 73 5F 61 72 6D 3A+                              ; sub_1678+B6↑o
.rodata:00002659 3A 73 65 74 46 6C 6F 61 74 52+                              ; .text:off_1738↑o
.rodata:0000269B 25 73 00                      aS DCB "%s",0                 ; DATA XREF: sub_17C8+30↑o
.rodata:0000269B                                                             ; sub_17C8+38↑o
.rodata:0000269B                                                             ; .text:off_1830↑o
.rodata:0000269E 62 6F 6F 6C 20 6C 69 62 75 6E+aBoolLibunwindU DCB "bool libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoF"
.rodata:0000269E 77 69 6E 64 3A 3A 55 6E 77 69+                              ; DATA XREF: sub_1990:loc_1AE0↑o
.rodata:0000269E 6E 64 43 75 72 73 6F 72 3C 6C+                              ; sub_1990+15A↑o
.rodata:0000269E 69 62 75 6E 77 69 6E 64 3A 3A+                              ; sub_1990:loc_1AF4↑o
.rodata:0000269E 4C 6F 63 61 6C 41 64 64 72 65+                              ; sub_1990+16E↑o
.rodata:0000269E 73 73 53 70 61 63 65 2C 20 6C+                              ; .text:off_1B14↑o
.rodata:0000269E 69 62 75 6E 77 69 6E 64 3A 3A+                              ; .text:off_1B24↑o
.rodata:0000269E 52 65 67 69 73 74 65 72 73 5F+DCB "romEHABISection(pint_t, const libunwind::UnwindInfoSections &) [A = libunwind::LocalAddressSpa"
.rodata:0000269E 61 72 6D 3E 3A 3A 67 65 74 49+DCB "ce, R = libunwind::Registers_arm]",0
.rodata:0000277C 75 6E 6B 6E 6F 77 6E 20 70 65+aUnknownPersona DCB "unknown personality routine",0
.rodata:0000277C 72 73 6F 6E 61 6C 69 74 79 20+                              ; DATA XREF: sub_1990+158↑o
.rodata:0000277C 72 6F 75 74 69 6E 65 00                                     ; sub_1990+15E↑o
.rodata:0000277C                                                             ; .text:off_1B2C↑o
.rodata:00002798 69 6E 64 65 78 20 69 6E 6C 69+aIndexInlinedTa DCB "index inlined table detected but pr function requires extra words",0
.rodata:00002798 6E 65 64 20 74 61 62 6C 65 20+                              ; DATA XREF: sub_1990+16C↑o
.rodata:00002798 64 65 74 65 63 74 65 64 20 62+                              ; sub_1990+172↑o
.rodata:00002798 75 74 20 70 72 20 66 75 6E 63+                              ; .text:off_1B1C↑o
.rodata:000027DA 70 63 00                      aPc DCB "pc",0                ; DATA XREF: .text:00001B84↑o
.rodata:000027DA                                                             ; .text:00001B88↑o
.rodata:000027DA                                                             ; .text:off_1E80↑o
.rodata:000027DD 6C 72 00                      aLr DCB "lr",0                ; DATA XREF: .text:loc_1D00↑o
.rodata:000027DD                                                             ; .text:00001D02↑o
.rodata:000027DD                                                             ; .text:off_1FBC↑o
.rodata:000027E0 73 70 00                      aSp DCB "sp",0                ; DATA XREF: .text:loc_1C52↑o
.rodata:000027E0                                                             ; .text:00001C56↑o
.rodata:000027E0                                                             ; .text:off_1FB8↑o
.rodata:000027E3 72 30 00                      aR0 DCB "r0",0                ; DATA XREF: .text:loc_1CB2↑o
.rodata:000027E3                                                             ; .text:00001CB4↑o
.rodata:000027E3                                                             ; .text:off_1FB4↑o
.rodata:000027E6 72 31 00                      aR1 DCB "r1",0                ; DATA XREF: .text:loc_1CB8↑o
.rodata:000027E6                                                             ; .text:00001CBA↑o
.rodata:000027E6                                                             ; .text:off_1FB0↑o
.rodata:000027E9 72 32 00                      aR2 DCB "r2",0                ; DATA XREF: .text:loc_1CBE↑o
.rodata:000027E9                                                             ; .text:00001CC0↑o
.rodata:000027E9                                                             ; .text:off_1FAC↑o
.rodata:000027EC 72 33 00                      aR3 DCB "r3",0                ; DATA XREF: .text:loc_1CC4↑o
.rodata:000027EC                                                             ; .text:00001CC6↑o
.rodata:000027EC                                                             ; .text:off_1FA8↑o
.rodata:000027EF 72 34 00                      aR4 DCB "r4",0                ; DATA XREF: .text:loc_1CCA↑o
.rodata:000027EF                                                             ; .text:00001CCC↑o
.rodata:000027EF                                                             ; .text:off_1FA4↑o
.rodata:000027F2 72 35 00                      aR5 DCB "r5",0                ; DATA XREF: .text:loc_1CD0↑o
.rodata:000027F2                                                             ; .text:00001CD2↑o
.rodata:000027F2                                                             ; .text:off_1FA0↑o
.rodata:000027F5 72 36 00                      aR6 DCB "r6",0                ; DATA XREF: .text:loc_1CD6↑o
.rodata:000027F5                                                             ; .text:00001CD8↑o
.rodata:000027F5                                                             ; .text:off_1F9C↑o
.rodata:000027F8 72 37 00                      aR7 DCB "r7",0                ; DATA XREF: .text:loc_1CDC↑o
.rodata:000027F8                                                             ; .text:00001CDE↑o
.rodata:000027F8                                                             ; .text:off_1F98↑o
.rodata:000027FB 72 38 00                      aR8 DCB "r8",0                ; DATA XREF: .text:loc_1CE2↑o
.rodata:000027FB                                                             ; .text:00001CE4↑o
.rodata:000027FB                                                             ; .text:off_1F94↑o
.rodata:000027FE 72 39 00                      aR9 DCB "r9",0                ; DATA XREF: .text:loc_1CE8↑o
.rodata:000027FE                                                             ; .text:00001CEA↑o
.rodata:000027FE                                                             ; .text:off_1F90↑o
.rodata:00002801 72 31 30 00                   aR10 DCB "r10",0              ; DATA XREF: .text:loc_1CEE↑o
.rodata:00002801                                                             ; .text:00001CF0↑o
.rodata:00002801                                                             ; .text:off_1F8C↑o
.rodata:00002805 72 31 31 00                   aR11 DCB "r11",0              ; DATA XREF: .text:loc_1CF4↑o
.rodata:00002805                                                             ; .text:00001CF6↑o
.rodata:00002805                                                             ; .text:off_1F88↑o
.rodata:00002809 72 31 32 00                   aR12 DCB "r12",0              ; DATA XREF: .text:loc_1CFA↑o
.rodata:00002809                                                             ; .text:00001CFC↑o
.rodata:00002809                                                             ; .text:off_1F84↑o
.rodata:0000280D 73 30 00                      aS0 DCB "s0",0                ; DATA XREF: .text:loc_1D06↑o
.rodata:0000280D                                                             ; .text:00001D08↑o
.rodata:0000280D                                                             ; .text:off_1F80↑o
.rodata:00002810 73 31 00                      aS1 DCB "s1",0                ; DATA XREF: .text:loc_1D0C↑o
.rodata:00002810                                                             ; .text:00001D0E↑o
.rodata:00002810                                                             ; .text:off_1F7C↑o
.rodata:00002813 73 32 00                      aS2 DCB "s2",0                ; DATA XREF: .text:loc_1D12↑o
.rodata:00002813                                                             ; .text:00001D14↑o
.rodata:00002813                                                             ; .text:off_1F78↑o
.rodata:00002816 73 33 00                      aS3 DCB "s3",0                ; DATA XREF: .text:loc_1D18↑o
.rodata:00002816                                                             ; .text:00001D1A↑o
.rodata:00002816                                                             ; .text:off_1F74↑o
.rodata:00002819 73 34 00                      aS4 DCB "s4",0                ; DATA XREF: .text:loc_1D1E↑o
.rodata:00002819                                                             ; .text:00001D20↑o
.rodata:00002819                                                             ; .text:off_1F70↑o
.rodata:0000281C 73 35 00                      aS5 DCB "s5",0                ; DATA XREF: .text:loc_1D24↑o
.rodata:0000281C                                                             ; .text:00001D26↑o
.rodata:0000281C                                                             ; .text:off_1F6C↑o
.rodata:0000281F 73 36 00                      aS6 DCB "s6",0                ; DATA XREF: .text:loc_1D2A↑o
.rodata:0000281F                                                             ; .text:00001D2C↑o
.rodata:0000281F                                                             ; .text:off_1F68↑o
.rodata:00002822 73 37 00                      aS7 DCB "s7",0                ; DATA XREF: .text:loc_1D30↑o
.rodata:00002822                                                             ; .text:00001D32↑o
.rodata:00002822                                                             ; .text:off_1F64↑o
.rodata:00002825 73 38 00                      aS8 DCB "s8",0                ; DATA XREF: .text:loc_1D36↑o
.rodata:00002825                                                             ; .text:00001D38↑o
.rodata:00002825                                                             ; .text:off_1F60↑o
.rodata:00002828 73 39 00                      aS9 DCB "s9",0                ; DATA XREF: .text:loc_1D3C↑o
.rodata:00002828                                                             ; .text:00001D3E↑o
.rodata:00002828                                                             ; .text:off_1F5C↑o
.rodata:0000282B 73 31 30 00                   aS10 DCB "s10",0              ; DATA XREF: .text:loc_1D42↑o
.rodata:0000282B                                                             ; .text:00001D44↑o
.rodata:0000282B                                                             ; .text:off_1F58↑o
.rodata:0000282F 73 31 31 00                   aS11 DCB "s11",0              ; DATA XREF: .text:loc_1D48↑o
.rodata:0000282F                                                             ; .text:00001D4A↑o
.rodata:0000282F                                                             ; .text:off_1F54↑o
.rodata:00002833 73 31 32 00                   aS12 DCB "s12",0              ; DATA XREF: .text:loc_1D4E↑o
.rodata:00002833                                                             ; .text:00001D50↑o
.rodata:00002833                                                             ; .text:off_1F50↑o
.rodata:00002837 73 31 33 00                   aS13 DCB "s13",0              ; DATA XREF: .text:loc_1D54↑o
.rodata:00002837                                                             ; .text:00001D56↑o
.rodata:00002837                                                             ; .text:off_1F4C↑o
.rodata:0000283B 73 31 34 00                   aS14 DCB "s14",0              ; DATA XREF: .text:loc_1D5A↑o
.rodata:0000283B                                                             ; .text:00001D5C↑o
.rodata:0000283B                                                             ; .text:off_1F48↑o
.rodata:0000283F 73 31 35 00                   aS15 DCB "s15",0              ; DATA XREF: .text:loc_1D60↑o
.rodata:0000283F                                                             ; .text:00001D62↑o
.rodata:0000283F                                                             ; .text:off_1F44↑o
.rodata:00002843 73 31 36 00                   aS16 DCB "s16",0              ; DATA XREF: .text:loc_1D66↑o
.rodata:00002843                                                             ; .text:00001D68↑o
.rodata:00002843                                                             ; .text:off_1F40↑o
.rodata:00002847 73 31 37 00                   aS17 DCB "s17",0              ; DATA XREF: .text:loc_1D6C↑o
.rodata:00002847                                                             ; .text:00001D6E↑o
.rodata:00002847                                                             ; .text:off_1F3C↑o
.rodata:0000284B 73 31 38 00                   aS18 DCB "s18",0              ; DATA XREF: .text:loc_1D72↑o
.rodata:0000284B                                                             ; .text:00001D74↑o
.rodata:0000284B                                                             ; .text:off_1F38↑o
.rodata:0000284F 73 31 39 00                   aS19 DCB "s19",0              ; DATA XREF: .text:loc_1D78↑o
.rodata:0000284F                                                             ; .text:00001D7A↑o
.rodata:0000284F                                                             ; .text:off_1F34↑o
.rodata:00002853 73 32 30 00                   aS20 DCB "s20",0              ; DATA XREF: .text:loc_1D7E↑o
.rodata:00002853                                                             ; .text:00001D80↑o
.rodata:00002853                                                             ; .text:off_1F30↑o
.rodata:00002857 73 32 31 00                   aS21 DCB "s21",0              ; DATA XREF: .text:loc_1D84↑o
.rodata:00002857                                                             ; .text:00001D86↑o
.rodata:00002857                                                             ; .text:off_1F2C↑o
.rodata:0000285B 73 32 32 00                   aS22 DCB "s22",0              ; DATA XREF: .text:loc_1D8A↑o
.rodata:0000285B                                                             ; .text:00001D8C↑o
.rodata:0000285B                                                             ; .text:off_1F28↑o
.rodata:0000285F 73 32 33 00                   aS23 DCB "s23",0              ; DATA XREF: .text:loc_1D90↑o
.rodata:0000285F                                                             ; .text:00001D92↑o
.rodata:0000285F                                                             ; .text:off_1F24↑o
.rodata:00002863 73 32 34 00                   aS24 DCB "s24",0              ; DATA XREF: .text:loc_1D96↑o
.rodata:00002863                                                             ; .text:00001D98↑o
.rodata:00002863                                                             ; .text:off_1F20↑o
.rodata:00002867 73 32 35 00                   aS25 DCB "s25",0              ; DATA XREF: .text:loc_1D9C↑o
.rodata:00002867                                                             ; .text:00001D9E↑o
.rodata:00002867                                                             ; .text:off_1F1C↑o
.rodata:0000286B 73 32 36 00                   aS26 DCB "s26",0              ; DATA XREF: .text:loc_1DA2↑o
.rodata:0000286B                                                             ; .text:00001DA4↑o
.rodata:0000286B                                                             ; .text:off_1F18↑o
.rodata:0000286F 73 32 37 00                   aS27 DCB "s27",0              ; DATA XREF: .text:loc_1DA8↑o
.rodata:0000286F                                                             ; .text:00001DAA↑o
.rodata:0000286F                                                             ; .text:off_1F14↑o
.rodata:00002873 73 32 38 00                   aS28 DCB "s28",0              ; DATA XREF: .text:loc_1DAE↑o
.rodata:00002873                                                             ; .text:00001DB0↑o
.rodata:00002873                                                             ; .text:off_1F10↑o
.rodata:00002877 73 32 39 00                   aS29 DCB "s29",0              ; DATA XREF: .text:loc_1DB4↑o
.rodata:00002877                                                             ; .text:00001DB6↑o
.rodata:00002877                                                             ; .text:off_1F0C↑o
.rodata:0000287B 73 33 30 00                   aS30 DCB "s30",0              ; DATA XREF: .text:loc_1DBA↑o
.rodata:0000287B                                                             ; .text:00001DBC↑o
.rodata:0000287B                                                             ; .text:off_1F08↑o
.rodata:0000287F 73 33 31 00                   aS31 DCB "s31",0              ; DATA XREF: .text:loc_1DC0↑o
.rodata:0000287F                                                             ; .text:00001DC2↑o
.rodata:0000287F                                                             ; .text:off_1F04↑o
.rodata:00002883 64 30 00                      aD0 DCB "d0",0                ; DATA XREF: .text:loc_1CA6↑o
.rodata:00002883                                                             ; .text:00001CA8↑o
.rodata:00002883                                                             ; .text:off_1F00↑o
.rodata:00002886 64 31 00                      aD1 DCB "d1",0                ; DATA XREF: .text:loc_1DC6↑o
.rodata:00002886                                                             ; .text:00001DC8↑o
.rodata:00002886                                                             ; .text:off_1EFC↑o
.rodata:00002889 64 32 00                      aD2 DCB "d2",0                ; DATA XREF: .text:loc_1DCC↑o
.rodata:00002889                                                             ; .text:00001DCE↑o
.rodata:00002889                                                             ; .text:off_1EF8↑o
.rodata:0000288C 64 33 00                      aD3 DCB "d3",0                ; DATA XREF: .text:loc_1DD2↑o
.rodata:0000288C                                                             ; .text:00001DD4↑o
.rodata:0000288C                                                             ; .text:off_1EF4↑o
.rodata:0000288F 64 34 00                      aD4 DCB "d4",0                ; DATA XREF: .text:loc_1DD8↑o
.rodata:0000288F                                                             ; .text:00001DDA↑o
.rodata:0000288F                                                             ; .text:off_1EF0↑o
.rodata:00002892 64 35 00                      aD5 DCB "d5",0                ; DATA XREF: .text:loc_1DDE↑o
.rodata:00002892                                                             ; .text:00001DE0↑o
.rodata:00002892                                                             ; .text:off_1EEC↑o
.rodata:00002895 64 36 00                      aD6 DCB "d6",0                ; DATA XREF: .text:loc_1DE4↑o
.rodata:00002895                                                             ; .text:00001DE6↑o
.rodata:00002895                                                             ; .text:off_1EE8↑o
.rodata:00002898 64 37 00                      aD7 DCB "d7",0                ; DATA XREF: .text:loc_1DEA↑o
.rodata:00002898                                                             ; .text:00001DEC↑o
.rodata:00002898                                                             ; .text:off_1EE4↑o
.rodata:0000289B 64 38 00                      aD8 DCB "d8",0                ; DATA XREF: .text:loc_1DF0↑o
.rodata:0000289B                                                             ; .text:00001DF2↑o
.rodata:0000289B                                                             ; .text:off_1EE0↑o
.rodata:0000289E 64 39 00                      aD9 DCB "d9",0                ; DATA XREF: .text:loc_1DF6↑o
.rodata:0000289E                                                             ; .text:00001DF8↑o
.rodata:0000289E                                                             ; .text:off_1EDC↑o
.rodata:000028A1 64 31 30 00                   aD10 DCB "d10",0              ; DATA XREF: .text:loc_1DFC↑o
.rodata:000028A1                                                             ; .text:00001DFE↑o
.rodata:000028A1                                                             ; .text:off_1ED8↑o
.rodata:000028A5 64 31 31 00                   aD11 DCB "d11",0              ; DATA XREF: .text:loc_1E02↑o
.rodata:000028A5                                                             ; .text:00001E04↑o
.rodata:000028A5                                                             ; .text:off_1ED4↑o
.rodata:000028A9 64 31 32 00                   aD12 DCB "d12",0              ; DATA XREF: .text:loc_1E08↑o
.rodata:000028A9                                                             ; .text:00001E0A↑o
.rodata:000028A9                                                             ; .text:off_1ED0↑o
.rodata:000028AD 64 31 33 00                   aD13 DCB "d13",0              ; DATA XREF: .text:loc_1E0E↑o
.rodata:000028AD                                                             ; .text:00001E10↑o
.rodata:000028AD                                                             ; .text:off_1ECC↑o
.rodata:000028B1 64 31 34 00                   aD14 DCB "d14",0              ; DATA XREF: .text:loc_1E14↑o
.rodata:000028B1                                                             ; .text:00001E16↑o
.rodata:000028B1                                                             ; .text:off_1EC8↑o
.rodata:000028B5 64 31 35 00                   aD15 DCB "d15",0              ; DATA XREF: .text:loc_1E1A↑o
.rodata:000028B5                                                             ; .text:00001E1C↑o
.rodata:000028B5                                                             ; .text:off_1EC4↑o
.rodata:000028B9 64 31 36 00                   aD16 DCB "d16",0              ; DATA XREF: .text:loc_1E20↑o
.rodata:000028B9                                                             ; .text:00001E22↑o
.rodata:000028B9                                                             ; .text:off_1EC0↑o
.rodata:000028BD 64 31 37 00                   aD17 DCB "d17",0              ; DATA XREF: .text:loc_1E26↑o
.rodata:000028BD                                                             ; .text:00001E28↑o
.rodata:000028BD                                                             ; .text:off_1EBC↑o
.rodata:000028C1 64 31 38 00                   aD18 DCB "d18",0              ; DATA XREF: .text:loc_1E2C↑o
.rodata:000028C1                                                             ; .text:00001E2E↑o
.rodata:000028C1                                                             ; .text:off_1EB8↑o
.rodata:000028C5 64 31 39 00                   aD19 DCB "d19",0              ; DATA XREF: .text:loc_1E32↑o
.rodata:000028C5                                                             ; .text:00001E34↑o
.rodata:000028C5                                                             ; .text:off_1EB4↑o
.rodata:000028C9 64 32 30 00                   aD20 DCB "d20",0              ; DATA XREF: .text:loc_1E38↑o
.rodata:000028C9                                                             ; .text:00001E3A↑o
.rodata:000028C9                                                             ; .text:off_1EB0↑o
.rodata:000028CD 64 32 31 00                   aD21 DCB "d21",0              ; DATA XREF: .text:loc_1E3E↑o
.rodata:000028CD                                                             ; .text:00001E40↑o
.rodata:000028CD                                                             ; .text:off_1EAC↑o
.rodata:000028D1 64 32 32 00                   aD22 DCB "d22",0              ; DATA XREF: .text:loc_1E44↑o
.rodata:000028D1                                                             ; .text:00001E46↑o
.rodata:000028D1                                                             ; .text:off_1EA8↑o
.rodata:000028D5 64 32 33 00                   aD23 DCB "d23",0              ; DATA XREF: .text:loc_1E4A↑o
.rodata:000028D5                                                             ; .text:00001E4C↑o
.rodata:000028D5                                                             ; .text:off_1EA4↑o
.rodata:000028D9 64 32 34 00                   aD24 DCB "d24",0              ; DATA XREF: .text:loc_1E50↑o
.rodata:000028D9                                                             ; .text:00001E52↑o
.rodata:000028D9                                                             ; .text:off_1EA0↑o
.rodata:000028DD 64 32 35 00                   aD25 DCB "d25",0              ; DATA XREF: .text:loc_1E56↑o
.rodata:000028DD                                                             ; .text:00001E58↑o
.rodata:000028DD                                                             ; .text:off_1E9C↑o
.rodata:000028E1 64 32 36 00                   aD26 DCB "d26",0              ; DATA XREF: .text:loc_1E5C↑o
.rodata:000028E1                                                             ; .text:00001E5E↑o
.rodata:000028E1                                                             ; .text:off_1E98↑o
.rodata:000028E5 64 32 37 00                   aD27 DCB "d27",0              ; DATA XREF: .text:loc_1E62↑o
.rodata:000028E5                                                             ; .text:00001E64↑o
.rodata:000028E5                                                             ; .text:off_1E94↑o
.rodata:000028E9 64 32 38 00                   aD28 DCB "d28",0              ; DATA XREF: .text:loc_1E68↑o
.rodata:000028E9                                                             ; .text:00001E6A↑o
.rodata:000028E9                                                             ; .text:off_1E90↑o
.rodata:000028ED 64 32 39 00                   aD29 DCB "d29",0              ; DATA XREF: .text:loc_1E6E↑o
.rodata:000028ED                                                             ; .text:00001E70↑o
.rodata:000028ED                                                             ; .text:off_1E8C↑o
.rodata:000028F1 64 33 30 00                   aD30 DCB "d30",0              ; DATA XREF: .text:loc_1E74↑o
.rodata:000028F1                                                             ; .text:00001E76↑o
.rodata:000028F1                                                             ; .text:off_1E88↑o
.rodata:000028F5 64 33 31 00                   aD31 DCB "d31",0              ; DATA XREF: .text:loc_1E7A↑o
.rodata:000028F5                                                             ; .text:00001E7C↑o
.rodata:000028F5                                                             ; .text:off_1E84↑o
.rodata:000028F9 75 6E 6B 6E 6F 77 6E 20 72 65+aUnknownRegiste DCB "unknown register",0
.rodata:000028F9 67 69 73 74 65 72 00                                        ; DATA XREF: .text:def_1C62↑o
.rodata:000028F9                                                             ; .text:00001CAE↑o
.rodata:000028F9                                                             ; .text:off_1FC0↑o
.rodata:000028F9                               ; .rodata ends
.rodata:000028F9
LOAD:0000290A                               ; ===========================================================================
LOAD:0000290A
LOAD:0000290A                               ; Segment type: Pure code
LOAD:0000290A                               AREA LOAD, CODE, ALIGN=12
LOAD:0000290A                               CODE32
LOAD:0000290A 00 00                         DCW 0
LOAD:0000290A                               ; LOAD ends
LOAD:0000290A
.ARM.extab:0000290C                               ; ===========================================================================
.ARM.extab:0000290C
.ARM.extab:0000290C                               ; Segment type: Pure data
.ARM.extab:0000290C                               AREA .ARM.extab, DATA, READONLY
.ARM.extab:0000290C A2                            DCB 0xA2
.ARM.extab:0000290D B2                            DCB 0xB2
.ARM.extab:0000290E 01                            DCB    1
.ARM.extab:0000290F 81                            DCB 0x81
.ARM.extab:00002910 B0                            DCB 0xB0
.ARM.extab:00002911 B0                            DCB 0xB0
.ARM.extab:00002912 AB                            DCB 0xAB
.ARM.extab:00002913 03                            DCB    3
.ARM.extab:00002914 00                            DCB    0
.ARM.extab:00002915 00                            DCB    0
.ARM.extab:00002916 00                            DCB    0
.ARM.extab:00002917 00                            DCB    0
.ARM.extab:00002918 A5                            DCB 0xA5
.ARM.extab:00002919 B2                            DCB 0xB2
.ARM.extab:0000291A 01                            DCB    1
.ARM.extab:0000291B 81                            DCB 0x81
.ARM.extab:0000291C B0                            DCB 0xB0
.ARM.extab:0000291D B0                            DCB 0xB0
.ARM.extab:0000291E AE                            DCB 0xAE
.ARM.extab:0000291F 01                            DCB    1
.ARM.extab:00002920 00                            DCB    0
.ARM.extab:00002921 00                            DCB    0
.ARM.extab:00002922 00                            DCB    0
.ARM.extab:00002923 00                            DCB    0
.ARM.extab:00002924 7F                            DCB 0x7F ; 
.ARM.extab:00002925 B2                            DCB 0xB2
.ARM.extab:00002926 01                            DCB    1
.ARM.extab:00002927 81                            DCB 0x81
.ARM.extab:00002928 B0                            DCB 0xB0
.ARM.extab:00002929 B0                            DCB 0xB0
.ARM.extab:0000292A 0B                            DCB  0xB
.ARM.extab:0000292B 84                            DCB 0x84
.ARM.extab:0000292C 00                            DCB    0
.ARM.extab:0000292D 00                            DCB    0
.ARM.extab:0000292E 00                            DCB    0
.ARM.extab:0000292F 00                            DCB    0
.ARM.extab:0000292F                               ; .ARM.extab ends
.ARM.extab:0000292F
.fini_array:00003E2C                               ; ELF Termination Function Table
.fini_array:00003E2C                               ; ===========================================================================
.fini_array:00003E2C
.fini_array:00003E2C                               ; Segment type: Pure data
.fini_array:00003E2C                               AREA .fini_array, DATA
.fini_array:00003E2C 5C 08 00 00                   off_3E2C DCD sub_85C          ; DATA XREF: LOAD:0000009C↑o
.fini_array:00003E2C                                                             ; LOAD:0000013C↑o
.fini_array:00003E2C                               ; .fini_array ends
.fini_array:00003E2C
.data.rel.ro:00003E30                               ; ===========================================================================
.data.rel.ro:00003E30
.data.rel.ro:00003E30                               ; Segment type: Pure data
.data.rel.ro:00003E30                               AREA .data.rel.ro, DATA
.data.rel.ro:00003E30 00                            unk_3E30 DCB    0             ; DATA XREF: sub_131C+4↑o
.data.rel.ro:00003E30                                                             ; sub_131C+8↑o
.data.rel.ro:00003E30                                                             ; .text:off_1358↑o
.data.rel.ro:00003E31 00                            DCB    0
.data.rel.ro:00003E32 00                            DCB    0
.data.rel.ro:00003E33 00                            DCB    0
.data.rel.ro:00003E34 00                            DCB    0
.data.rel.ro:00003E35 00                            DCB    0
.data.rel.ro:00003E36 00                            DCB    0
.data.rel.ro:00003E37 00                            DCB    0
.data.rel.ro:00003E38 95 11 00 00                   off_3E38 DCD nullsub_1+1
.data.rel.ro:00003E3C 95 11 00 00                   DCD nullsub_1+1
.data.rel.ro:00003E40 77 14 00 00                   DCD sub_1476+1
.data.rel.ro:00003E44 99 14 00 00                   DCD sub_1498+1
.data.rel.ro:00003E48 25 15 00 00                   DCD sub_1524+1
.data.rel.ro:00003E4C B1 15 00 00                   DCD sub_15B0+1
.data.rel.ro:00003E50 D5 15 00 00                   DCD sub_15D4+1
.data.rel.ro:00003E54 79 16 00 00                   DCD sub_1678+1
.data.rel.ro:00003E58 45 17 00 00                   DCD sub_1744+1
.data.rel.ro:00003E5C 95 17 00 00                   DCD sub_1794+1
.data.rel.ro:00003E60 AD 17 00 00                   DCD sub_17AC+1
.data.rel.ro:00003E64 C3 17 00 00                   DCD sub_17C2+1
.data.rel.ro:00003E68 C9 17 00 00                   DCD sub_17C8+1
.data.rel.ro:00003E6C 39 18 00 00                   DCD sub_1838+1
.data.rel.ro:00003E70 A9 18 00 00                   DCD loc_18A8+1
.data.rel.ro:00003E74 AF 18 00 00                   DCD sub_18AE+1
.data.rel.ro:00003E74                               ; .data.rel.ro ends
.data.rel.ro:00003E74
LOAD:00003E78                               ; ELF Dynamic Information
LOAD:00003E78                               ; ===========================================================================
LOAD:00003E78
LOAD:00003E78                               ; Segment type: Pure data
LOAD:00003E78                               AREA LOAD, DATA, ALIGN=12
LOAD:00003E78 03 00 00 00 A4 3F 00 00       stru_3E78 Elf32_Dyn <3, <0x3FA4>>
LOAD:00003E78                                                             ; DATA XREF: LOAD:000000BC↑o
LOAD:00003E78                                                             ; DT_PLTGOT
LOAD:00003E80 02 00 00 00 A0 00 00 00       Elf32_Dyn <2, <0xA0>>         ; DT_PLTRELSZ
LOAD:00003E88 17 00 00 00 B8 06 00 00       Elf32_Dyn <0x17, <0x6B8>>     ; DT_JMPREL
LOAD:00003E90 14 00 00 00 11 00 00 00       Elf32_Dyn <0x14, <0x11>>      ; DT_PLTREL
LOAD:00003E98 11 00 00 00 D8 05 00 00       Elf32_Dyn <0x11, <0x5D8>>     ; DT_REL
LOAD:00003EA0 12 00 00 00 E0 00 00 00       Elf32_Dyn <0x12, <0xE0>>      ; DT_RELSZ
LOAD:00003EA8 13 00 00 00 08 00 00 00       Elf32_Dyn <0x13, <8>>         ; DT_RELENT
LOAD:00003EB0 FA FF FF 6F 1A 00 00 00       Elf32_Dyn <0x6FFFFFFA, <0x1A>> ; DT_RELCOUNT
LOAD:00003EB8 06 00 00 00 A0 01 00 00       Elf32_Dyn <6, <0x1A0>>        ; DT_SYMTAB
LOAD:00003EC0 0B 00 00 00 10 00 00 00       Elf32_Dyn <0xB, <0x10>>       ; DT_SYMENT
LOAD:00003EC8 05 00 00 00 50 03 00 00       Elf32_Dyn <5, <0x350>>        ; DT_STRTAB
LOAD:00003ED0 0A 00 00 00 B1 01 00 00       Elf32_Dyn <0xA, <0x1B1>>      ; DT_STRSZ
LOAD:00003ED8 F5 FE FF 6F 04 05 00 00       Elf32_Dyn <0x6FFFFEF5, <0x504>> ; DT_GNU_HASH
LOAD:00003EE0 01 00 00 00 86 01 00 00       Elf32_Dyn <1, <0x186>>        ; DT_NEEDED liblog.so
LOAD:00003EE8 01 00 00 00 90 01 00 00       Elf32_Dyn <1, <0x190>>        ; DT_NEEDED libdis_core.so
LOAD:00003EF0 01 00 00 00 9F 01 00 00       Elf32_Dyn <1, <0x19F>>        ; DT_NEEDED libc++.so
LOAD:00003EF8 01 00 00 00 59 00 00 00       Elf32_Dyn <1, <0x59>>         ; DT_NEEDED libdl.so
LOAD:00003F00 01 00 00 00 15 00 00 00       Elf32_Dyn <1, <0x15>>         ; DT_NEEDED libc.so
LOAD:00003F08 01 00 00 00 A9 01 00 00       Elf32_Dyn <1, <0x1A9>>        ; DT_NEEDED libm.so
LOAD:00003F10 0E 00 00 00 1D 00 00 00       Elf32_Dyn <0xE, <0x1D>>       ; DT_SONAME dis_effect.m86.so
LOAD:00003F18 1A 00 00 00 2C 3E 00 00       Elf32_Dyn <0x1A, <0x3E2C>>    ; DT_FINI_ARRAY
LOAD:00003F20 1C 00 00 00 04 00 00 00       Elf32_Dyn <0x1C, <4>>         ; DT_FINI_ARRAYSZ
LOAD:00003F28 1E 00 00 00 08 00 00 00       Elf32_Dyn <0x1E, <8>>         ; DT_FLAGS
LOAD:00003F30 FB FF FF 6F 01 00 00 00       Elf32_Dyn <0x6FFFFFFB, <1>>   ; DT_FLAGS_1
LOAD:00003F38 F0 FF FF 6F 34 05 00 00       Elf32_Dyn <0x6FFFFFF0, <0x534>> ; DT_VERSYM
LOAD:00003F40 FC FF FF 6F 6C 05 00 00       Elf32_Dyn <0x6FFFFFFC, <0x56C>> ; DT_VERDEF
LOAD:00003F48 FD FF FF 6F 01 00 00 00       Elf32_Dyn <0x6FFFFFFD, <1>>   ; DT_VERDEFNUM
LOAD:00003F50 FE FF FF 6F 88 05 00 00       Elf32_Dyn <0x6FFFFFFE, <0x588>> ; DT_VERNEED
LOAD:00003F58 FF FF FF 6F 02 00 00 00       Elf32_Dyn <0x6FFFFFFF, <2>>   ; DT_VERNEEDNUM
LOAD:00003F60 00 00 00 00 00 00 00 00       Elf32_Dyn <0>                 ; DT_NULL
LOAD:00003F68 00                            DCB    0
LOAD:00003F69 00                            DCB    0
LOAD:00003F6A 00                            DCB    0
LOAD:00003F6B 00                            DCB    0
LOAD:00003F6C 00                            DCB    0
LOAD:00003F6D 00                            DCB    0
LOAD:00003F6E 00                            DCB    0
LOAD:00003F6F 00                            DCB    0
LOAD:00003F70 00                            DCB    0
LOAD:00003F71 00                            DCB    0
LOAD:00003F72 00                            DCB    0
LOAD:00003F73 00                            DCB    0
LOAD:00003F74 00                            DCB    0
LOAD:00003F75 00                            DCB    0
LOAD:00003F76 00                            DCB    0
LOAD:00003F77 00                            DCB    0
LOAD:00003F78 00                            DCB    0
LOAD:00003F79 00                            DCB    0
LOAD:00003F7A 00                            DCB    0
LOAD:00003F7B 00                            DCB    0
LOAD:00003F7C 00                            DCB    0
LOAD:00003F7D 00                            DCB    0
LOAD:00003F7E 00                            DCB    0
LOAD:00003F7F 00                            DCB    0
LOAD:00003F80 00                            DCB    0
LOAD:00003F81 00                            DCB    0
LOAD:00003F82 00                            DCB    0
LOAD:00003F83 00                            DCB    0
LOAD:00003F84 00                            DCB    0
LOAD:00003F85 00                            DCB    0
LOAD:00003F86 00                            DCB    0
LOAD:00003F87 00                            DCB    0
LOAD:00003F88 00                            DCB    0
LOAD:00003F89 00                            DCB    0
LOAD:00003F8A 00                            DCB    0
LOAD:00003F8B 00                            DCB    0
LOAD:00003F8C 00                            DCB    0
LOAD:00003F8D 00                            DCB    0
LOAD:00003F8E 00                            DCB    0
LOAD:00003F8F 00                            DCB    0
LOAD:00003F8F                               ; LOAD ends
LOAD:00003F8F
.got:00003F90                               ; ===========================================================================
.got:00003F90
.got:00003F90                               ; Segment type: Pure data
.got:00003F90                               AREA .got, DATA
.got:00003F90 C8 40 00 00                   __stack_chk_guard_ptr DCD __stack_chk_guard
.got:00003F90                                                             ; DATA XREF: sub_A6C+8↑o
.got:00003F90                                                             ; sub_A6C+E↑o
.got:00003F90                                                             ; sub_A6C+12↑r
.got:00003F90                                                             ; sub_A6C:loc_CFA↑o
.got:00003F90                                                             ; sub_A6C+292↑o
.got:00003F90                                                             ; sub_A6C+294↑r
.got:00003F90                                                             ; .text:off_D14↑o
.got:00003F90                                                             ; .text:off_D18↑o
.got:00003F90                                                             ; sub_E4C+8↑o
.got:00003F90                                                             ; sub_E4C+E↑o
.got:00003F90                                                             ; sub_E4C+12↑r
.got:00003F90                                                             ; sub_E4C:loc_F38↑o
.got:00003F90                                                             ; sub_E4C+F0↑o
.got:00003F90                                                             ; sub_E4C+F2↑r
.got:00003F90                                                             ; .text:off_F78↑o ...
.got:00003F94 D4 40 00 00                   stderr_ptr DCD stderr         ; DATA XREF: sub_11CC+6↑o
.got:00003F94                                                             ; sub_11CC+A↑o
.got:00003F94                                                             ; sub_11CC+C↑r
.got:00003F94                                                             ; .text:off_11F0↑o
.got:00003F94                                                             ; sub_18B8+6↑o
.got:00003F94                                                             ; sub_18B8+C↑o
.got:00003F94                                                             ; sub_18B8+E↑r
.got:00003F94                                                             ; .text:off_18DC↑o
.got:00003F98 F5 0F 00 00                   off_3F98 DCD sub_FF4+1        ; DATA XREF: sub_1990:loc_1A5A↑o
.got:00003F98                                                             ; sub_1990+CC↑o
.got:00003F98                                                             ; sub_1990+CE↑r
.got:00003F98                                                             ; .text:off_1B0C↑o
.got:00003F9C ED 0F 00 00                   off_3F9C DCD sub_FEC+1        ; DATA XREF: sub_1990:loc_1A66↑o
.got:00003F9C                                                             ; sub_1990+D8↑o
.got:00003F9C                                                             ; sub_1990+DA↑r
.got:00003F9C                                                             ; .text:off_1B10↑o
.got:00003FA0 89 0F 00 00                   off_3FA0 DCD sub_F88+1        ; DATA XREF: sub_1990+B0↑o
.got:00003FA0                                                             ; sub_1990+C0↑o
.got:00003FA0                                                             ; sub_1990+C2↑r
.got:00003FA0                                                             ; .text:off_1B20↑o
.got:00003FA4 00 00 00 00                   _GLOBAL_OFFSET_TABLE_ DCD 0   ; DATA XREF: sub_758+4↑o
.got:00003FA4                                                             ; sub_758+8↑o
.got:00003FA4                                                             ; .plt:off_768↑o
.got:00003FA8 00 00 00 00                   DCD 0
.got:00003FAC 00 00 00 00                   off_3FAC DCD dword_0          ; DATA XREF: sub_758+C↑r
.got:00003FB0 8C 40 00 00                   __cxa_finalize_ptr DCD __imp___cxa_finalize
.got:00003FB0                                                             ; DATA XREF: __cxa_finalize+8↑r
.got:00003FB4 90 40 00 00                   __cxa_atexit_ptr DCD __imp___cxa_atexit
.got:00003FB4                                                             ; DATA XREF: __cxa_atexit+8↑r
.got:00003FB8 94 40 00 00                   __register_atfork_ptr DCD __imp___register_atfork
.got:00003FB8                                                             ; DATA XREF: __register_atfork+8↑r
.got:00003FBC B8 40 00 00                   malloc_ptr DCD __imp_malloc   ; DATA XREF: malloc+8↑r
.got:00003FC0 9C 40 00 00                   __aeabi_memclr4_ptr DCD __imp___aeabi_memclr4
.got:00003FC0                                                             ; DATA XREF: __aeabi_memclr4+8↑r
.got:00003FC4 A4 40 00 00                   __android_log_print_ptr DCD __imp___android_log_print
.got:00003FC4                                                             ; DATA XREF: __android_log_print+8↑r
.got:00003FC8 AC 40 00 00                   free_ptr DCD __imp_free       ; DATA XREF: free+8↑r
.got:00003FCC BC 40 00 00                   set_effect_ptr DCD __imp_set_effect
.got:00003FCC                                                             ; DATA XREF: set_effect+8↑r
.got:00003FD0 C0 40 00 00                   set_effect_current_level_ptr DCD __imp_set_effect_current_level
.got:00003FD0                                                             ; DATA XREF: set_effect_current_level+8↑r
.got:00003FD4 B0 40 00 00                   get_effect_current_level_ptr DCD __imp_get_effect_current_level
.got:00003FD4                                                             ; DATA XREF: get_effect_current_level+8↑r
.got:00003FD8 B4 40 00 00                   init_effect_ptr DCD __imp_init_effect
.got:00003FD8                                                             ; DATA XREF: init_effect+8↑r
.got:00003FDC A8 40 00 00                   deinit_effect_ptr DCD __imp_deinit_effect
.got:00003FDC                                                             ; DATA XREF: deinit_effect+8↑r
.got:00003FE0 C4 40 00 00                   __stack_chk_fail_ptr DCD __imp___stack_chk_fail
.got:00003FE0                                                             ; DATA XREF: __stack_chk_fail+8↑r
.got:00003FE4 CC 40 00 00                   abort_ptr DCD __imp_abort     ; DATA XREF: abort+8↑r
.got:00003FE8 D0 40 00 00                   fprintf_ptr DCD __imp_fprintf ; DATA XREF: fprintf+8↑r
.got:00003FEC D8 40 00 00                   __aeabi_memcpy_ptr DCD __imp___aeabi_memcpy
.got:00003FEC                                                             ; DATA XREF: __aeabi_memcpy+8↑r
.got:00003FF0 E0 40 00 00                   __aeabi_memclr8_ptr DCD __imp___aeabi_memclr8
.got:00003FF0                                                             ; DATA XREF: __aeabi_memclr8+8↑r
.got:00003FF4 98 40 00 00                   dladdr_ptr DCD __imp_dladdr   ; DATA XREF: dladdr+8↑r
.got:00003FF8 A0 40 00 00                   __snprintf_chk_ptr DCD __imp___snprintf_chk
.got:00003FF8                                                             ; DATA XREF: __snprintf_chk+8↑r
.got:00003FFC DC 40 00 00                   __gnu_Unwind_Find_exidx_ptr DCD __imp___gnu_Unwind_Find_exidx
.got:00003FFC                                                             ; DATA XREF: __gnu_Unwind_Find_exidx+8↑r
.got:00003FFC                               ; .got ends
.got:00003FFC
.data:00004000                               ; ===========================================================================
.data:00004000
.data:00004000                               ; Segment type: Pure data
.data:00004000                               AREA .data, DATA
.data:00004000 00 40 00 00                   off_4000 DCD off_4000         ; DATA XREF: sub_85C+8↑o
.data:00004000                                                             ; sub_85C+C↑o
.data:00004000                                                             ; .text:off_878↑o
.data:00004000                                                             ; sub_8A8+20↑o
.data:00004000                                                             ; sub_8A8+24↑o
.data:00004000                                                             ; .text:off_8F0↑o
.data:00004000                                                             ; sub_8F4+24↑o
.data:00004000                                                             ; sub_8F4+28↑o
.data:00004000                                                             ; .text:off_938↑o
.data:00004000                                                             ; .data:off_4000↓o
.data:00004004 3D 09 00 00                   off_4004 DCD sub_93C+1        ; DATA XREF: .data:0000401C↓o
.data:00004008                               EXPORT HMI
.data:00004008 54                            HMI DCB 0x54 ; T              ; DATA XREF: LOAD:00000330↑o
.data:00004009 4D                            DCB 0x4D ; M
.data:0000400A 57                            DCB 0x57 ; W
.data:0000400B 48                            DCB 0x48 ; H
.data:0000400C 01                            DCB    1
.data:0000400D 00                            DCB    0
.data:0000400E 00                            DCB    0
.data:0000400F 00                            DCB    0
.data:00004010 F8 21 00 00                   DCD aDisEffect                ; "dis_effect"
.data:00004014 03 22 00 00                   DCD aDisEffectModul           ; "dis effect Module"
.data:00004018 15 22 00 00                   DCD aMeizuBobo                ; "MEIZU, BOBO"
.data:0000401C 04 40 00 00                   DCD off_4004
.data:00004020 00                            DCB    0
.data:00004021 00                            DCB    0
.data:00004022 00                            DCB    0
.data:00004023 00                            DCB    0
.data:00004024 00                            DCB    0
.data:00004025 00                            DCB    0
.data:00004026 00                            DCB    0
.data:00004027 00                            DCB    0
.data:00004028 00                            DCB    0
.data:00004029 00                            DCB    0
.data:0000402A 00                            DCB    0
.data:0000402B 00                            DCB    0
.data:0000402C 00                            DCB    0
.data:0000402D 00                            DCB    0
.data:0000402E 00                            DCB    0
.data:0000402F 00                            DCB    0
.data:00004030 00                            DCB    0
.data:00004031 00                            DCB    0
.data:00004032 00                            DCB    0
.data:00004033 00                            DCB    0
.data:00004034 00                            DCB    0
.data:00004035 00                            DCB    0
.data:00004036 00                            DCB    0
.data:00004037 00                            DCB    0
.data:00004038 00                            DCB    0
.data:00004039 00                            DCB    0
.data:0000403A 00                            DCB    0
.data:0000403B 00                            DCB    0
.data:0000403C 00                            DCB    0
.data:0000403D 00                            DCB    0
.data:0000403E 00                            DCB    0
.data:0000403F 00                            DCB    0
.data:00004040 00                            DCB    0
.data:00004041 00                            DCB    0
.data:00004042 00                            DCB    0
.data:00004043 00                            DCB    0
.data:00004044 00                            DCB    0
.data:00004045 00                            DCB    0
.data:00004046 00                            DCB    0
.data:00004047 00                            DCB    0
.data:00004048 00                            DCB    0
.data:00004049 00                            DCB    0
.data:0000404A 00                            DCB    0
.data:0000404B 00                            DCB    0
.data:0000404C 00                            DCB    0
.data:0000404D 00                            DCB    0
.data:0000404E 00                            DCB    0
.data:0000404F 00                            DCB    0
.data:00004050 00                            DCB    0
.data:00004051 00                            DCB    0
.data:00004052 00                            DCB    0
.data:00004053 00                            DCB    0
.data:00004054 00                            DCB    0
.data:00004055 00                            DCB    0
.data:00004056 00                            DCB    0
.data:00004057 00                            DCB    0
.data:00004058 00                            DCB    0
.data:00004059 00                            DCB    0
.data:0000405A 00                            DCB    0
.data:0000405B 00                            DCB    0
.data:0000405C 00                            DCB    0
.data:0000405D 00                            DCB    0
.data:0000405E 00                            DCB    0
.data:0000405F 00                            DCB    0
.data:00004060 00                            DCB    0
.data:00004061 00                            DCB    0
.data:00004062 00                            DCB    0
.data:00004063 00                            DCB    0
.data:00004064 00                            DCB    0
.data:00004065 00                            DCB    0
.data:00004066 00                            DCB    0
.data:00004067 00                            DCB    0
.data:00004068 00                            DCB    0
.data:00004069 00                            DCB    0
.data:0000406A 00                            DCB    0
.data:0000406B 00                            DCB    0
.data:0000406C 00                            DCB    0
.data:0000406D 00                            DCB    0
.data:0000406E 00                            DCB    0
.data:0000406F 00                            DCB    0
.data:00004070 00                            DCB    0
.data:00004071 00                            DCB    0
.data:00004072 00                            DCB    0
.data:00004073 00                            DCB    0
.data:00004074 00                            DCB    0
.data:00004075 00                            DCB    0
.data:00004076 00                            DCB    0
.data:00004077 00                            DCB    0
.data:00004078 00                            DCB    0
.data:00004079 00                            DCB    0
.data:0000407A 00                            DCB    0
.data:0000407B 00                            DCB    0
.data:0000407C 00                            DCB    0
.data:0000407D 00                            DCB    0
.data:0000407E 00                            DCB    0
.data:0000407F 00                            DCB    0
.data:00004080 00                            DCB    0
.data:00004081 00                            DCB    0
.data:00004082 00                            DCB    0
.data:00004083 00                            DCB    0
.data:00004084 00                            DCB    0
.data:00004085 00                            DCB    0
.data:00004086 00                            DCB    0
.data:00004087 00                            DCB    0
.data:00004087                               ; .data ends
.data:00004087
.bss:00004088                               ; ===========================================================================
.bss:00004088
.bss:00004088                               ; Segment type: Uninitialized
.bss:00004088                               AREA .bss, DATA, ALIGN=0
.bss:00004088 ??                            unk_4088 % 1                  ; DATA XREF: LOAD:00000320↑o
.bss:00004088                                                             ; LOAD:00000340↑o
.bss:00004088                                                             ; sub_131C+E↑o
.bss:00004088                                                             ; sub_131C+10↑o
.bss:00004088                                                             ; .text:off_135C↑o
.bss:00004088                               ; .bss ends
.bss:00004088
extern:0000408C                               ; ===========================================================================
extern:0000408C
extern:0000408C                               ; Segment type: Externs
extern:0000408C                               ; int __fastcall __cxa_finalize(void *)
extern:0000408C 00 00 00 00                   IMPORT __imp___cxa_finalize   ; CODE XREF: __cxa_finalize+8↑j
extern:0000408C                                                             ; DATA XREF: .got:__cxa_finalize_ptr↑o
extern:00004090                               ; int __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)
extern:00004090 00 00 00 00                   IMPORT __imp___cxa_atexit     ; CODE XREF: __cxa_atexit+8↑j
extern:00004090                                                             ; DATA XREF: .got:__cxa_atexit_ptr↑o
extern:00004094 00 00 00 00                   IMPORT __imp___register_atfork
extern:00004094                                                             ; CODE XREF: __register_atfork+8↑j
extern:00004094                                                             ; DATA XREF: .got:__register_atfork_ptr↑o
extern:00004098 00 00 00 00                   IMPORT __imp_dladdr           ; CODE XREF: dladdr+8↑j
extern:00004098                                                             ; DATA XREF: .got:dladdr_ptr↑o
extern:0000409C 00 00 00 00                   IMPORT __imp___aeabi_memclr4  ; CODE XREF: __aeabi_memclr4+8↑j
extern:0000409C                                                             ; DATA XREF: .got:__aeabi_memclr4_ptr↑o
extern:000040A0 00 00 00 00                   IMPORT __imp___snprintf_chk   ; CODE XREF: __snprintf_chk+8↑j
extern:000040A0                                                             ; DATA XREF: .got:__snprintf_chk_ptr↑o
extern:000040A4 00 00 00 00                   IMPORT __imp___android_log_print
extern:000040A4                                                             ; CODE XREF: __android_log_print+8↑j
extern:000040A4                                                             ; DATA XREF: .got:__android_log_print_ptr↑o
extern:000040A8 00 00 00 00                   IMPORT __imp_deinit_effect    ; CODE XREF: deinit_effect+8↑j
extern:000040A8                                                             ; DATA XREF: .got:deinit_effect_ptr↑o
extern:000040AC                               ; void free(void *ptr)
extern:000040AC 00 00 00 00                   IMPORT __imp_free             ; CODE XREF: free+8↑j
extern:000040AC                                                             ; DATA XREF: .got:free_ptr↑o
extern:000040B0 00 00 00 00                   IMPORT __imp_get_effect_current_level
extern:000040B0                                                             ; CODE XREF: get_effect_current_level+8↑j
extern:000040B0                                                             ; DATA XREF: .got:get_effect_current_level_ptr↑o
extern:000040B4 00 00 00 00                   IMPORT __imp_init_effect      ; CODE XREF: init_effect+8↑j
extern:000040B4                                                             ; DATA XREF: .got:init_effect_ptr↑o
extern:000040B8                               ; void *malloc(size_t size)
extern:000040B8 00 00 00 00                   IMPORT __imp_malloc           ; CODE XREF: malloc+8↑j
extern:000040B8                                                             ; DATA XREF: .got:malloc_ptr↑o
extern:000040BC 00 00 00 00                   IMPORT __imp_set_effect       ; CODE XREF: set_effect+8↑j
extern:000040BC                                                             ; DATA XREF: .got:set_effect_ptr↑o
extern:000040C0 00 00 00 00                   IMPORT __imp_set_effect_current_level
extern:000040C0                                                             ; CODE XREF: set_effect_current_level+8↑j
extern:000040C0                                                             ; DATA XREF: .got:set_effect_current_level_ptr↑o
extern:000040C4 00 00 00 00                   IMPORT __imp___stack_chk_fail ; CODE XREF: __stack_chk_fail+8↑j
extern:000040C4                                                             ; DATA XREF: .got:__stack_chk_fail_ptr↑o
extern:000040C8 00 00 00 00                   IMPORT __stack_chk_guard      ; DATA XREF: sub_A6C+12↑o
extern:000040C8                                                             ; sub_A6C+16↑r
extern:000040C8                                                             ; sub_A6C+294↑o
extern:000040C8                                                             ; sub_A6C+296↑r
extern:000040C8                                                             ; sub_E4C+12↑o
extern:000040C8                                                             ; sub_E4C+16↑r
extern:000040C8                                                             ; sub_E4C+F2↑o
extern:000040C8                                                             ; sub_E4C+F4↑r
extern:000040C8                                                             ; sub_F88+16↑o
extern:000040C8                                                             ; sub_F88+18↑r
extern:000040C8                                                             ; sub_F88+4C↑o
extern:000040C8                                                             ; sub_F88+4E↑r
extern:000040C8                                                             ; sub_FFC+10↑o
extern:000040C8                                                             ; sub_FFC+12↑r
extern:000040C8                                                             ; sub_FFC+72↑o ...
extern:000040CC                               ; void abort(void)
extern:000040CC 00 00 00 00                   IMPORT __imp_abort            ; CODE XREF: abort+8↑j
extern:000040CC                                                             ; DATA XREF: .got:abort_ptr↑o
extern:000040D0                               ; int fprintf(FILE *stream, const char *format, ...)
extern:000040D0 00 00 00 00                   IMPORT __imp_fprintf          ; CODE XREF: fprintf+8↑j
extern:000040D0                                                             ; DATA XREF: .got:fprintf_ptr↑o
extern:000040D4                               ; struct _IO_FILE *stderr
extern:000040D4 00 00 00 00                   IMPORT stderr                 ; DATA XREF: sub_11CC+C↑o
extern:000040D4                                                             ; sub_11CC+10↑r
extern:000040D4                                                             ; sub_18B8+E↑o
extern:000040D4                                                             ; sub_18B8+12↑r
extern:000040D4                                                             ; .got:stderr_ptr↑o
extern:000040D8 00 00 00 00                   IMPORT __imp___aeabi_memcpy   ; CODE XREF: __aeabi_memcpy+8↑j
extern:000040D8                                                             ; DATA XREF: .got:__aeabi_memcpy_ptr↑o
extern:000040DC 00 00 00 00                   IMPORT __imp___gnu_Unwind_Find_exidx
extern:000040DC                                                             ; CODE XREF: __gnu_Unwind_Find_exidx+8↑j
extern:000040DC                                                             ; DATA XREF: .got:__gnu_Unwind_Find_exidx_ptr↑o
extern:000040E0 00 00 00 00                   IMPORT __imp___aeabi_memclr8  ; CODE XREF: __aeabi_memclr8+8↑j
extern:000040E0                                                             ; DATA XREF: .got:__aeabi_memclr8_ptr↑o
extern:000040E0
abs:000040E4                               ; ===========================================================================
abs:000040E4
abs:000040E4                               ; Segment type: Absolute symbols
abs:000040E4                               _end = 0x4089
abs:000040E8                               _edata = 0x4088
abs:000040EC                               __bss_start = 0x4088
abs:000040EC
abs:000040EC                               END
